{
    "version": "https://jsonfeed.org/version/1",
    "title": "Radish'blog",
    "subtitle": "",
    "icon": "http://rainyblue.cn/images/favicon.ico",
    "description": "Only studying is exalted.",
    "home_page_url": "http://rainyblue.cn",
    "items": [
        {
            "id": "http://rainyblue.cn/2024/07/04/Work/civil-service/Graphical-reasoning/",
            "url": "http://rainyblue.cn/2024/07/04/Work/civil-service/Graphical-reasoning/",
            "title": "推理判断-图形推理",
            "date_published": "2024-07-04T01:30:00.000Z",
            "content_html": "<h1 id=\"第一章-图形推理\"><a class=\"anchor\" href=\"#第一章-图形推理\">#</a> 第一章、图形推理</h1>\n<p>图形推理的出题形式：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240704145739550.png\" alt=\"image-20240704145739550\" /></p>\n<p>图形推理的考点：</p>\n<ol>\n<li>位置规律</li>\n<li>样式规律</li>\n<li>属性规律</li>\n<li>数量规律</li>\n<li>空间重构</li>\n</ol>\n<p>快速定位某个考点：<span class=\"red\">图形特征</span></p>\n<h2 id=\"1-位置规律\"><a class=\"anchor\" href=\"#1-位置规律\">#</a> 1、位置规律</h2>\n<p>“位置规律” 图形特征：元素组成相同</p>\n<blockquote>\n<p><span class=\"red\">元素组成相同考虑位置上的变化</span></p>\n</blockquote>\n<p>考点：</p>\n<ol>\n<li>平移</li>\n<li>翻转、旋转</li>\n</ol>\n<h3 id=\"考点1平移\"><a class=\"anchor\" href=\"#考点1平移\">#</a> 考点 1：平移</h3>\n<ul>\n<li>方向：直线（上下、左右、写对角线），绕圈（顺 / 逆时针）</li>\n<li>步数：恒定、递增 / 减（等差）、等比（没怎么考）</li>\n</ul>\n<p>【宫格类题目】（9 宫格、16 宫格）</p>\n<ul>\n<li>技巧：<span ,red=\"\">看中间，判方向</span>\n<ol>\n<li>绕圈走：中间黑块数量相同，优先考虑内、外圈分开看</li>\n<li>走直线：中间黑块数量不同，优先考虑上下左右\n<ul>\n<li>横行黑块数量相同 -- 左右</li>\n<li>竖行黑块数量相同 -- 上下</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"考点2翻转-旋转\"><a class=\"anchor\" href=\"#考点2翻转-旋转\">#</a> 考点 2：翻转、旋转</h3>\n<h4 id=\"翻转\"><a class=\"anchor\" href=\"#翻转\">#</a> 翻转</h4>\n<ol>\n<li>左右翻转：竖轴对称</li>\n<li>上下翻转：横轴对称</li>\n</ol>\n<h4 id=\"选择\"><a class=\"anchor\" href=\"#选择\">#</a> 选择</h4>\n<ol>\n<li>\n<p>方向：顺 / 逆时针</p>\n</li>\n<li>\n<p>常见角度：30°、45°、60°、90°、180° 等</p>\n</li>\n</ol>\n<blockquote>\n<p>重要思维：</p>\n<p>多个元素分开看，对比选项找差异</p>\n</blockquote>\n<h2 id=\"2-样式规律\"><a class=\"anchor\" href=\"#2-样式规律\">#</a> 2、样式规律</h2>\n<p>“样式规律” 图形特征：元素组成相似</p>\n<p>考点：</p>\n<ul>\n<li>加减同异</li>\n<li>黑白运算</li>\n</ul>\n<h3 id=\"考点1加-减-同-异\"><a class=\"anchor\" href=\"#考点1加-减-同-异\">#</a> 考点 1：加、减、同、异</h3>\n<ol>\n<li>图形相加、相减</li>\n<li>求同（保留相同）</li>\n<li>求异（保留不同）</li>\n</ol>\n<blockquote>\n<p>线条重复出现 -- 加减同异</p>\n</blockquote>\n<h3 id=\"考点2黑白运算\"><a class=\"anchor\" href=\"#考点2黑白运算\">#</a> 考点 2：“黑白” 运算</h3>\n<ol>\n<li>特征：图形轮廓和分割区域相同，内部的颜色不同</li>\n<li>方法：相同位置运算</li>\n</ol>\n<blockquote>\n<p>重难点：</p>\n<ol>\n<li>对比选项找差异</li>\n<li>大块面积一起看</li>\n</ol>\n</blockquote>\n<h2 id=\"3-属性规律\"><a class=\"anchor\" href=\"#3-属性规律\">#</a> 3、属性规律</h2>\n<p>“属性规律” 图形特征：元素组成不相同、不相似</p>\n<blockquote>\n<p>元素组成不同，优先考虑属性</p>\n</blockquote>\n<p>考点：</p>\n<ul>\n<li>对称性</li>\n<li>曲直性</li>\n<li>开闭性</li>\n</ul>\n<h3 id=\"考点1对称性\"><a class=\"anchor\" href=\"#考点1对称性\">#</a> 考点 1：对称性</h3>\n<ol>\n<li>轴对称：” 等腰 “元素出现</li>\n<li>中心对称：平行四边形、N、Z、S 变形图、相同图形正反</li>\n<li>轴对称 + 中心对称：存在相互垂直的对称轴</li>\n</ol>\n<blockquote>\n<p>识别题型 -- 画出对称轴 -- 考虑数量、反向 -- 对称轴与线、点、面的关系</p>\n</blockquote>\n<h4 id=\"对称性的考法\"><a class=\"anchor\" href=\"#对称性的考法\">#</a> 对称性的考法</h4>\n<ol>\n<li>区别对称轴类型：轴对称、中心对称、轴对称 + 中心对称</li>\n<li>对称轴的数量和方向</li>\n<li>对称轴与图形线、点、面的关系</li>\n</ol>\n<blockquote>\n<p>最” 火 “对称考法 -- 对称轴经过的部分</p>\n</blockquote>\n<h3 id=\"考点2曲直性\"><a class=\"anchor\" href=\"#考点2曲直性\">#</a> 考点 2：曲直性</h3>\n<ol>\n<li>全直性</li>\n<li>全曲性</li>\n<li>曲 + 直</li>\n</ol>\n<h3 id=\"考点3封闭性\"><a class=\"anchor\" href=\"#考点3封闭性\">#</a> 考点 3：封闭性</h3>\n<ol>\n<li>全封闭</li>\n<li>全开放</li>\n<li>半开半闭</li>\n</ol>\n<h2 id=\"4-数量规律\"><a class=\"anchor\" href=\"#4-数量规律\">#</a> 4、数量规律</h2>\n<p>” 数量规律 “图形特征：</p>\n<ul>\n<li>元素组成不同且属性无规律</li>\n<li>数量特征明显</li>\n</ul>\n<p>考点：面、线、点、素</p>\n<h3 id=\"考点1面数量\"><a class=\"anchor\" href=\"#考点1面数量\">#</a> 考点 1：面数量</h3>\n<blockquote>\n<p>面是白色的封闭区域</p>\n<p>注意：面是白的，黑的是不是面！</p>\n</blockquote>\n<p>考虑数面的情况：</p>\n<ol>\n<li>图形被分割、封闭面明显</li>\n<li>生活化图形、粗线图图形</li>\n</ol>\n<p>面的细化考法：</p>\n<ol>\n<li>所有面的形状（三角形、四边形）</li>\n<li>相同面的数量</li>\n<li>最大 / 最小面的形状、属性（对称、曲直）、与外框的关系（相似、相等）</li>\n</ol>\n<h3 id=\"考点2线数量\"><a class=\"anchor\" href=\"#考点2线数量\">#</a> 考点 2：线数量</h3>\n<blockquote>\n<ul>\n<li>直线</li>\n<li>曲线</li>\n</ul>\n</blockquote>\n<p>考虑数线的情况：</p>\n<ol>\n<li>直线特征图：多边形、单一直线</li>\n<li>曲线特征图：曲线图形（圆、弧、单一曲线）</li>\n</ol>\n<p>线的特殊考点：笔画数（不重复的情况下，能够一笔画成）</p>\n<p>笔画特征图：多端点、圆 / 相切 / 相交、日、田、五角星</p>\n<p>判断一笔画：</p>\n<ul>\n<li>线条之间连通</li>\n<li>奇点数量为 0 或 2（奇点：以一个点为中心，发射出奇数条线，注意端点也算）</li>\n<li>笔画数 = 奇点数 / 2（奇点数一定为偶数个）</li>\n</ul>\n<h3 id=\"考点3点数量\"><a class=\"anchor\" href=\"#考点3点数量\">#</a> 考点 3：点数量</h3>\n<blockquote>\n<p>线与线的交点为点</p>\n<p>注意：切点也算点，端点不算</p>\n</blockquote>\n<p>考虑数点的情况：</p>\n<p>点数量特征图：</p>\n<ol>\n<li>线条交叉明显（大树杈）</li>\n<li>多边形或者圆中叉出一些线条</li>\n<li>圆相切或者圆相交较多</li>\n</ol>\n<p>点的细软考法：</p>\n<ol>\n<li>切点：相切图较多，切点明显</li>\n<li>框上 / 框内交点：所有图形都有外框，且内部线条与外框存在相交的情况</li>\n</ol>\n<p>生活化、粗线条图形常见考法：</p>\n<ol>\n<li>属性（对称、开闭）</li>\n<li>部门数</li>\n<li>面</li>\n</ol>\n<h2 id=\"5空间重构\"><a class=\"anchor\" href=\"#5空间重构\">#</a> 5. 空间重构</h2>\n<blockquote>\n<p>折叠方向</p>\n<p>排除错误</p>\n</blockquote>\n<h3 id=\"方法1相对面\"><a class=\"anchor\" href=\"#方法1相对面\">#</a> 方法 1：相对面</h3>\n<p>应用：一组相对面同时出现的选项 -- 排除</p>\n<h3 id=\"方法2相邻面\"><a class=\"anchor\" href=\"#方法2相邻面\">#</a> 方法 2：相邻面</h3>\n<p>平面图中构成直角的两条边是同一条边</p>\n<p>一列 / 行连着 4 个面，两头的两条边是同一条边</p>\n<p>相邻三个面的公共点是唯一的</p>\n<ul>\n<li>三个面在一起 -- 优先公共点</li>\n<li>三个面没在一起 -- 优先公共边</li>\n</ul>\n",
            "tags": [
                "工作类",
                "公考",
                "公考"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/07/02/Work/civil-service/civil-service-list/",
            "url": "http://rainyblue.cn/2024/07/02/Work/civil-service/civil-service-list/",
            "title": "公考了解",
            "date_published": "2024-07-02T12:46:25.000Z",
            "content_html": "<hr />\n<h1 id=\"规划\"><a class=\"anchor\" href=\"#规划\">#</a> 规划</h1>\n<ol>\n<li>\n<p>了解什么是公务员，优劣势、薪资待遇、考试时间、考试内容、如何学习</p>\n<p><strong>公务员，是指依法履行公职、纳入国家行政编制、由国家财政负担工资福利的工作人员</strong>。</p>\n<p>国家公务员级别分为一级到二十七级 27 个级别。中华人民共和国公务员职务分为国家级正职到乡科级副职 10 级领导职务。公务员的职责是执行国家的法律、法规和政策，管理国家行政事务，提供公共服务，保障国家利益和人民的福祉。</p>\n<p><strong>公务员的薪资待遇由基本工资、津贴补贴和奖金三部分组成</strong>。</p>\n<ul>\n<li><strong>基本工资</strong>：公务员的基本工资由职务工资和级别工资构成，是工资结构的主体，也是确定公务员退休金、抚恤金等项目的主要依据。</li>\n<li><strong>津贴补贴</strong>：公务员的津贴补贴根据不同地区和岗位的实际情况而有所不同，通常包括地区附加津贴、岗位津贴等。</li>\n<li><strong>奖金</strong>：公务员的奖金是根据每年的考核结果来发放的，考核结果分为优秀、称职、基本称职和不称职四个等次，奖金发放也会有所差异。</li>\n</ul>\n</li>\n<li>\n<p>根据自身情况（专业，优势）确定职位</p>\n</li>\n<li>\n<p>开始复习</p>\n</li>\n<li>\n<p>各科提前做 1 套真题，了解考试内容，看看擅长和不擅长的版块规</p>\n</li>\n<li>\n<p>划重要阶段节点，一般把备考分成：基础 + 强化 + 巩固 + 冲刺 4 步</p>\n</li>\n<li>\n<p>提前想好如何分配工作、上学和备考之间的时间</p>\n</li>\n<li>\n<p>提前确定好各科用什么资料</p>\n</li>\n<li>\n<p>确定好各科需要用到的网课，可以多尝试一些机构试听课</p>\n</li>\n<li>\n<p>行测各模块备考顺序 (建议先资料、判断、言语，再常识、数量)</p>\n</li>\n<li>\n<p>申论小题在前，大作文先不学，没事半月谈看看文章提升下语感</p>\n</li>\n</ol>\n<h1 id=\"省考-国考-事业编\"><a class=\"anchor\" href=\"#省考-国考-事业编\">#</a> 省考、国考、事业编</h1>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>国考</th>\n<th>省考</th>\n<th>事业编</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>考试时间</td>\n<td>11 月底或 12 月初</td>\n<td>3 月份左右</td>\n<td>上半年在 5 月份 下半年在 10 月份</td>\n</tr>\n<tr>\n<td>报名方式</td>\n<td>国家公务员网</td>\n<td>各省公考网</td>\n<td>各省人事考试网</td>\n</tr>\n<tr>\n<td>考试难度</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi></mrow><annotation encoding=\"application/x-tex\">\\bigstar \\bigstar \\bigstar \\bigstar \\bigstar</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8866799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi></mrow><annotation encoding=\"application/x-tex\">\\bigstar \\bigstar \\bigstar \\bigstar \\bigstar</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8866799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span></span></span></span></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi><mi mathvariant=\"normal\">★</mi></mrow><annotation encoding=\"application/x-tex\">\\bigstar \\bigstar \\bigstar \\bigstar</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8866799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span><span class=\"mord amsrm\">★</span></span></span></span></td>\n</tr>\n<tr>\n<td>题目数量</td>\n<td>行测：135 道左右                申论：归纳概括、综 合分析、提出对策、 应用文、大作文共 5 道， 材料字数一般为 8000 字左右</td>\n<td>行测：120 道左右      申论：五道类似国考 材料字数一般为 5000 字左右</td>\n<td>公基： 100 题左右 - 100 分 职测： 100 题 - 150 分 综应： 4 道主观题 - 150 分</td>\n</tr>\n<tr>\n<td>分数</td>\n<td>行测、申论各 100 分</td>\n<td>行测、申论各 100 分</td>\n<td>100 分 / 150 分 / 150 分</td>\n</tr>\n<tr>\n<td>考试时长</td>\n<td>行测：120 分钟 申论：180 分钟</td>\n<td>行测：120 分钟 申论：150 分钟</td>\n<td>公基：90 分钟 职测：90 分钟 综应：120 分钟</td>\n</tr>\n<tr>\n<td>年龄</td>\n<td>35 岁以下，研究生、博士适当放宽</td>\n<td>35 岁以下，研究生、博士适当放宽</td>\n<td>35 岁以下，研究生、博士适当放宽</td>\n</tr>\n<tr>\n<td>学历</td>\n<td>专科及以上</td>\n<td></td>\n<td>专科及以上</td>\n</tr>\n<tr>\n<td>招考数量</td>\n<td>事业编＞省考＞国考</td>\n<td>事业编＞省考＞国考</td>\n<td>事业编＞省考＞国考</td>\n</tr>\n<tr>\n<td>编制</td>\n<td>行政编</td>\n<td>行政编</td>\n<td>事业编</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"国考重要时间节点\"><a class=\"anchor\" href=\"#国考重要时间节点\">#</a> 国考重要时间节点</h1>\n<ol>\n<li>\n<p>报名时间：2024 年 10 月 5 日 8:00-10 月 24 日 18:00</p>\n</li>\n<li>\n<p>资格审核时间：2024 年 10 月 15 日 8:00-10 月 26 日 18:00</p>\n</li>\n<li>\n<p>查询报名序号：2024 年 10 月 28 日 8:00 后</p>\n</li>\n<li>\n<p>网上报名确认缴费：2024 年 11 月 1 日 0:00-11 月 6 日 24:00</p>\n</li>\n<li>\n<p>准考证打印：2024 年 11 月 20 日 0:00-11 月 26 日 15:00</p>\n</li>\n<li>\n<p>笔试时间:</p>\n<ul>\n<li>\n<p>行测 2024 年 11 月 26 日上午 9:00-11:00</p>\n</li>\n<li>\n<p>申论 2024 年 11 月 26 日下午 14:00-17:00</p>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"24备考规划\"><a class=\"anchor\" href=\"#24备考规划\">#</a> 24 备考规划</h1>\n<p>【2024 年 4 月】</p>\n<ol>\n<li>先筛选岗位，下载往年的岗位表，根据专业学历、地区、政治面貌等条件筛选符合的岗位，岗位表虽然每年都会变动，但是差异不大完全可作为参考</li>\n<li>了解考公基本信息，包括时问、内容、难度；确定教材、网课、复习时长等</li>\n</ol>\n<p>【2024 年 5-6 月】</p>\n<ol>\n<li>行测五大模块开始刷网课，每天一节；看课前先做预习，听完一节课做一节课的思维导图，听课后把相关的习题做一遍，剩下的时间用来做复盘</li>\n<li>听不懂的部分，结合题目反复听，反复做</li>\n</ol>\n<p>【2024 年 7-9 月】</p>\n<ol>\n<li>行测申论几大模块，轮流刷题，一开始不要限制时间，重点把题理解透彻</li>\n<li>这期间可以听一些拔高类型的课程，资料分析全题型刷题，查漏补缺，申论素材积累、申论真题分析、常识口诀背诵</li>\n<li>高途考公提供相关资料，助教老师全程伴学，及时答疑解惑，还有高途考公直播试听课可以辅助着进行备考学习</li>\n</ol>\n<p>【2024 年 10 月】</p>\n<ol>\n<li>\n<p>下载近五年国考及省考的真题试卷，按照一周 3-4 套的标准来做，上午行测、下午申论，可以留一天的时间做复盘</p>\n</li>\n<li>\n<p>开始积累时政热点、常识口诀也可以背起来，继续刷真题，探索做题顺序和时间分配</p>\n</li>\n<li>\n<p>10 月国考公告岗位表发布，查询资格审查结果，准备报名事项筛选岗位。</p>\n</li>\n<li>\n<p>【2024 年 11 月】<br />\n到 11 月结束，所有的真题至少要刷三遍以上，一周五套的节奏</p>\n</li>\n<li>\n<p>11 月底国考笔试，上午行测，下午申论</p>\n</li>\n</ol>\n<p>【2024 年 12 月】</p>\n<ol>\n<li>国考结束后，不要懈怠，北上广深、 山东、江浙的省考也紧跟其后；</li>\n<li>联考省份的宝子们，也可以立马投入到省考的复习中</li>\n</ol>\n<p>【2025 年 1 月】</p>\n<ol>\n<li>国考成绩会出来，部分省份的省考公告也会出来</li>\n</ol>\n<p>【2025 年 2 月】</p>\n<ol>\n<li>大部分联考省份公告会出来，一定要选岗报名</li>\n</ol>\n",
            "tags": [
                "工作类",
                "公考",
                "公考"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/24/Educational/python/Data-analysis/Data-code/",
            "url": "http://rainyblue.cn/2024/06/24/Educational/python/Data-analysis/Data-code/",
            "title": "代码",
            "date_published": "2024-06-24T12:00:00.000Z",
            "content_html": "<p>代码题</p>\n <span id=\"more\"></span>\n<hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> warnings</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>warnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>user<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\3.homework\\大三下\\数据分析\\实验数据data\\某APP用户信息数据.csv'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 2. 将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 3. 将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 4. 将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># (2) 构建与用户使用信息相关的特征。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>user_clean<span class=\"token operator\">=</span>user</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 1. 自定义 to_code 函数，用于对用户名特征首字母进行编码。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>coding<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    coding<span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>i</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">to_code</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    code<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    s<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> s <span class=\"token keyword\">in</span> coding<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        code<span class=\"token operator\">=</span>coding<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> code</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 2. 对在线时长特征进行分段处理后生成分段在线时长新特征。</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'分组后在线时长'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>qcut<span class=\"token punctuation\">(</span>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'在线时长'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 3. 使用 apply 方法构建首字母编码新特征。</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户编码'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> to_code<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># (3) 构建 K-Means 聚类模型。</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>user_f<span class=\"token operator\">=</span>user_clean</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 1. 读取构建新特征后的数据集，区分标签和数据。</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>X<span class=\"token operator\">=</span>user_f<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'在线时长'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'在线时长占比'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'分组后在线时长'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>y<span class=\"token operator\">=</span>user_f<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> KMeans</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> fowlkes_mallows_score</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 2. 构建 K-Means 模型，且聚类数为 2。</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>model<span class=\"token operator\">=</span>KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 3. 使用 FMI 评价法评价聚类模型性能。</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>fmi<span class=\"token operator\">=</span>fowlkes_mallows_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>labels_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fmi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 使用用户在交易软件上的交易数据 (phone.csv)，预测回收二手手机的价格。</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 现需利用交易数据建立分类模型对二手手机价格进行预测，步骤如下。</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>data<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r\"F:\\3.homework\\大三下\\数据分析\\实验数据data\\phone.csv\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># (1) 删除有异常值的行 (手机厚度小于等于 0cm)。</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>phone_data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'m_dep'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>phone_data<span class=\"token operator\">=</span>phone_data1<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>phone_target<span class=\"token operator\">=</span>phone_data1<span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># (2) 建立随机森林分类模型对数据进行训练。</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 将数据划分为训练集测试集，其中测试集占总数据的 30%，随机种子设置为 22。</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>phone_data_train<span class=\"token punctuation\">,</span>phone_data_test<span class=\"token punctuation\">,</span>phone_target_train<span class=\"token punctuation\">,</span>phone_target_test<span class=\"token operator\">=</span>train_test_split<span class=\"token punctuation\">(</span>phone_data<span class=\"token punctuation\">,</span>phone_target<span class=\"token punctuation\">,</span>test_size<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># 数据标准化</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>stScaler<span class=\"token operator\">=</span>StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>phone_trainStd<span class=\"token operator\">=</span>stScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>phone_testStd<span class=\"token operator\">=</span>stScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># 建立 RandomForestClassifier 模型 (随机森林)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>rfc<span class=\"token operator\">=</span>RandomForestClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_trainStd<span class=\"token punctuation\">,</span>phone_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'建立的 rfc 模型为：\\n'</span><span class=\"token punctuation\">,</span> rfc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># (3) 计算模型准确率，评价分类模型效果。</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># 预测训练集结果</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>phone_target_pred<span class=\"token operator\">=</span>rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>phone_testStd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测的前 20 个结果为：\\n'</span><span class=\"token punctuation\">,</span> phone_target_pred<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># 计算准确率</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>true <span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>phone_target_pred <span class=\"token operator\">==</span> phone_target_test<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 预测正确量</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测对的结果数目为：'</span><span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测错的的结果数目为：'</span><span class=\"token punctuation\">,</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测结果准确率为：'</span><span class=\"token punctuation\">,</span> true <span class=\"token operator\">/</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>size_data<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\3.homework\\大三下\\数据分析\\实验数据data\\size_data.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>size_data<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>null<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>size_data<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>size_data<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>size_data<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>age_min<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>weight_min<span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age_min<span class=\"token punctuation\">,</span>weight_min<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># 构建 BML_ range 特征</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bmi_range</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">18.5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token number\">18.5</span><span class=\"token operator\">&lt;=</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token number\">24</span><span class=\"token operator\">&lt;=</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span><span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>bmi_range<span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>size_data_end<span class=\"token operator\">=</span>size_data</pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\"># 规划训练集和测试集</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>size_data<span class=\"token operator\">=</span>size_data_end<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>size_target<span class=\"token operator\">=</span>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>size_data_train<span class=\"token punctuation\">,</span>size_data_test<span class=\"token punctuation\">,</span>size_target_train<span class=\"token punctuation\">,</span>size_target_test<span class=\"token operator\">=</span>train_test_split<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    size_data<span class=\"token punctuation\">,</span>size_target<span class=\"token punctuation\">,</span>test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span>shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>stratify<span class=\"token operator\">=</span>size_target</pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># 标准化</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>scale<span class=\"token operator\">=</span>StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>size_train_scale<span class=\"token operator\">=</span>scale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 建模准备</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>size_test_scale<span class=\"token operator\">=</span>scale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_test<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 预测准备</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\"># 建模支持向量机 svm、决策树 dtc、随机森林分类模型 rfc</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\"># 支持向量机 svm</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> SVC</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>svn<span class=\"token operator\">=</span>SVC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_scale<span class=\"token punctuation\">,</span>size_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>svn_pred<span class=\"token operator\">=</span>svn<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_scale<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\"># 决策树 dtc</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span> DecisionTreeClassifier</pre></td></tr><tr><td data-num=\"145\"></td><td><pre>dtc<span class=\"token operator\">=</span>DecisionTreeClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_scale<span class=\"token punctuation\">,</span>size_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>dtc_pred<span class=\"token operator\">=</span>dtc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_scale<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token comment\"># 随机森林 rfc</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>rfc<span class=\"token operator\">=</span>RandomForestClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_scale<span class=\"token punctuation\">,</span>size_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>rfc_pred<span class=\"token operator\">=</span>rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_scale<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> confusion_matrix</pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> precision_score</pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> recall_score</pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> f1_score</pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_pre</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'混淆矩阵：\\n'</span><span class=\"token punctuation\">,</span>confusion_matrix<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'XL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'准确率：\\n'</span><span class=\"token punctuation\">,</span> precision_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'召回率：\\n'</span><span class=\"token punctuation\">,</span> recall_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'F1值：\\n'</span><span class=\"token punctuation\">,</span>f1_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SVM 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span> svn_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'决策树 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span> dtc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'随机森林 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span> rfc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token comment\"># (1) 读取钻石价格数据集 (diamond_price.csv)。</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"175\"></td><td><pre>diamond <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r\"F:\\3.homework\\大三下\\数据分析\\实验数据data\\diamond_price.csv\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token comment\"># (2) 经过观察数据发现，长度、宽度、高度特征存在 0 值，删除该 3 个特征中所有出现 0 值的行数据，并对其他数据进行重新索引。</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>diamond <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>                           <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'X(length)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>                           <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Y(width)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>                           <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Z(Depth)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token comment\"># 对其他数据进行重新索引。</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>diamond<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token comment\"># (3) 新增价格 (人民币) 特征，假定 1 美元等于 6.50 人民币。</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'price_RMB'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Price(in US dollars)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">6.50</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token comment\"># (4) 拆分特征数据和标签数据，特征数据为克拉、切工等级、色泽、净度、台宽比、长度、宽度、高度，标签数据为价格 (人民币) 特征。</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>diamond_data <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>diamond_target <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre><span class=\"token comment\"># (5) 划分训练集和测试集，并对训练集和测试集进行标准差标准化。</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token comment\"># 划分训练集和测试集</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"193\"></td><td><pre>diamond_data_train<span class=\"token punctuation\">,</span> diamond_data_test<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">,</span> diamond_target_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    diamond_data<span class=\"token punctuation\">,</span> diamond_target<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token comment\"># 标准差标准化</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"198\"></td><td><pre>scale <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span>diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>diamond_trainScaler <span class=\"token operator\">=</span> scale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>diamond_testScaler <span class=\"token operator\">=</span> scale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token comment\"># (6) 构建 SVR 等至少两种回归模型进行钻石价格预测，并输出回归模型评价指标，查看模型效果。</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token comment\"># 构建回归模型</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> LinearSVR</pre></td></tr><tr><td data-num=\"204\"></td><td><pre><span class=\"token comment\"># 支持向量回归</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>SVR_diamond <span class=\"token operator\">=</span> LinearSVR<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>y_pred1 <span class=\"token operator\">=</span> SVR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre><span class=\"token comment\">#梯度提升回归</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span>  GradientBoostingRegressor</pre></td></tr><tr><td data-num=\"210\"></td><td><pre>GBR_diamond <span class=\"token operator\">=</span> GradientBoostingRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>y_pred2 <span class=\"token operator\">=</span> GBR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre></pre></td></tr><tr><td data-num=\"213\"></td><td><pre><span class=\"token comment\">#回归决策树</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span>  DecisionTreeRegressor</pre></td></tr><tr><td data-num=\"215\"></td><td><pre>DTR_diamond <span class=\"token operator\">=</span>  DecisionTreeRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>y_pred3 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token comment\">#线性回归</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression</pre></td></tr><tr><td data-num=\"220\"></td><td><pre>LR_diamond <span class=\"token operator\">=</span>   LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>y_pred4 <span class=\"token operator\">=</span> LR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre></pre></td></tr><tr><td data-num=\"223\"></td><td><pre><span class=\"token comment\">#最近邻回归</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>neighbors <span class=\"token keyword\">import</span>  KNeighborsRegressor</pre></td></tr><tr><td data-num=\"225\"></td><td><pre>KNR_diamond <span class=\"token operator\">=</span>  KNeighborsRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>y_pred5 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token comment\">#定义评价函数</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> explained_variance_score<span class=\"token punctuation\">,</span>  r2_score</pre></td></tr><tr><td data-num=\"230\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的可解释方差值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>          explained_variance_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的R方值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>          r2_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre></pre></td></tr><tr><td data-num=\"236\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持向量回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"梯度提升回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"回归决策树:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线性回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最近邻回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred5<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions2/",
            "url": "http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions2/",
            "title": "数据分析模拟卷2",
            "date_published": "2024-06-23T07:30:00.000Z",
            "content_html": "<p>应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文章为本次模拟试卷！</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一-选择题-20分\"><a class=\"anchor\" href=\"#一-选择题-20分\">#</a> 一、选择题  20 分</h1>\n<p>1．以下哪个函数不属于 Pandas 的 DataFrame 对象？</p>\n<p>A. dropna()</p>\n<p>B. sort_values()</p>\n<p>C. mean()</p>\n<p>D. plot()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>2．在 Pandas 中，DataFrame 对象通常用来表示：</p>\n<p>A. 一维数组 B. 二维标签化数据结构 C. 图表 D. 统计模型</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>3. 以下哪个不是 Pandas DataFrame 的方法？</p>\n<p>A. head()     B. tail()     C. shape()     D. info()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>4. 下列关于 pandas 支持的数据结构的说法错误的是 (\t)</p>\n<p>A.pandas 只支持 Series 数据结构</p>\n<p>B.pandas 支持 Series 和 DataFrame</p>\n<p>C.DataFrame 可与带有标记轴 (行和列) 的二维数组一起使用</p>\n<p>D.Series 被定义为能够存储各种类型数据的一维数组</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>5. 下列对 DataFrame 的常用属性说法错误的是 (\t)。</p>\n<p>A.values 可以获取元素</p>\n<p>B.index 可查看索引情况</p>\n<p>C.column 可查看 DataFrame 的列名</p>\n<p>D.dtypes 可查看各列的数据类型</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>6. 在下列选项中可以进行横向堆叠的是 (\t)。</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. join()</p>\n<p>D. combine_first()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>7. 在下列选项中可以进行重叠合并的是 (\t)。</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. append()</p>\n<p>D. combine_first()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>8. 在下列选项中可以进行缺失值替换的是 (\t)。</p>\n<p>A.dropna0 方法  B.fllna () 方法</p>\n<p>C.isnull0 方法    D.notnull0 方法</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>9. 在下列选项中不属于检测与处理缺失值的方法的是 (\t)</p>\n<p>A. 插值法</p>\n<p>B. 替换法</p>\n<p>C. 哑变量处理</p>\n<p>D. 删除法</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>10. 下列代码中能够为图形添加图例的是 (\t)</p>\n<p>A. plt.xticks([0,1,2,3, 4])</p>\n<p>B. plt.plot(x,y)</p>\n<p>C,plt.legend('y = cos x’)</p>\n<p>D. pit.title (散点图”)</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>11. 下列说法不正确的是 (\t)</p>\n<p>A. 散点图可以用于查看数据中的离释值</p>\n<p>B. 折线图可以用于查看数据的数最差和变化趋势</p>\n<p>C. 柱形图可以用于查看整体数据的数量分布</p>\n<p>D. 箱线图可以用于查看特征间的相关关系</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>12. 下列不是系列配置项的是 (\t)。</p>\n<p>A. 标记点配置项</p>\n<p>B. 标签配置项</p>\n<p>C. 文本样式配置项</p>\n<p>D. 标题配置项</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>13. 下列说法正确的是 (\t)</p>\n<p>A. 基本散点图和 3D 散点图的绘制方法相同</p>\n<p>B. 热力图可用于了解数据集中的变量的相关关系</p>\n<p>C.stripplot 函数接收的数据只能是列表和数据框</p>\n<p>D. 使用 stripplot 函数可以绘制线性回归拟合图</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>14.classification_report 函数用于输出分类模型评价报告，其内容不包括 (\t)。</p>\n<p>A. precision</p>\n<p>B. recall</p>\n<p>C.fl-score</p>\n<p>D. true_postive_rate</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>15. 下列算法中属于分类方法的是 (\t)</p>\n<p>A.SVC 算法</p>\n<p>B.CLIOUE 算法</p>\n<p>C.CLARANS 算法</p>\n<p>D.K-MEDOIDS 算法</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>16.skleam 中用于对特征进行归一化的函数是 (\t)</p>\n<p>A.StandardScaler</p>\n<p>B, Normalizer</p>\n<p>C.Binarizer</p>\n<p>D.MinMaxScaler</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>17. 下列图形常用于分析各分组数据在总数据中所占比例的是（    )</p>\n<p>A. 折线图</p>\n<p>B. 饼图</p>\n<p>C. 柱形图</p>\n<p>D. 箱线图</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>18.skleam 中用于对特征进行归一化的函数是 (\t)</p>\n<p>A.StandardScaler</p>\n<p>B, Normalizer</p>\n<p>C.Binarizer</p>\n<p>D.MinMaxScaler</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>19. 下列关于回归模型评价指标说法不正确的是 (\t)</p>\n<p>A. 平均绝对误差的值越接近 0，模型性能越好</p>\n<p>B.R 值越接近 1，模型性能越好</p>\n<p>C. 可解释方差越接近 0，模型性能越差</p>\n<p>D. 均方误差越接近 0，模型性能越差</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>20.skleam 转换器的主要方法不包据 (\t)</p>\n<p>A. fit()</p>\n<p>B. transform()</p>\n<p>C:fa_transform()</p>\n<p>D, fit_transforms()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<h1 id=\"二-简答题-10分\"><a class=\"anchor\" href=\"#二-简答题-10分\">#</a> 二、简答题            10 分</h1>\n<p>1. 阐述 Pandas 的作用</p>\n<p>Pandas 是一个开源数据分析工具，它提供了高效、易用的数据结构 和数据分析工具。它主要引入了两种新的数据结构：DataFrame 和 Series，通过 Pandas，用户可以方便地进行数据导入、清洗、转 换、聚合等操作，支持多种数据类型和文件格式，并提供了丰富的数据分 析和可视化功能。</p>\n<p>2. 列出并解释 Pandas 中用于读写 CSV 数据的相关函数。</p>\n<p>Pandas 库提供了 **read_csv () 和 to_csv ()** 两个主要函数，分别用于读取和写入 CSV 数据。</p>\n<p>read_csv () 函数：</p>\n<ul>\n<li>这个函数用于从 CSV 文件中读取数据，将数据转换为 Pandas 的 DataFrame 对象。</li>\n</ul>\n<p>to_csv () 方法：</p>\n<ul>\n<li>此方法用于将 DataFrame 对象写入 CSV 文件</li>\n</ul>\n<h1 id=\"三-分析题-10分\"><a class=\"anchor\" href=\"#三-分析题-10分\">#</a> 三、分析题  10 分</h1>\n<p>1. 熟悉竞赛网站用户行为分析的步骤与流程<br />\n通过对竞赛网站用户访问数据进行分析，使用预处理后的数据构建特征，调用 skleam 库的 KMeans 类对用户进行聚类，以便网站运营商得出差异化服务的策略。画出竞赛网站用户行为分析流程：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623130851953.png\" alt=\"image-20240623130851953\" /></p>\n<p>2. 熟悉企业所得税预测的步骤与流程<br />\n画出总体流程，主要包括以下步骤：<br />\n(1) 对原始数据进行探索性分析，了解原始特征之间的相关性。<br />\n(2) 利用 Lasso 特征选择模型进行特征提取。<br />\n(3) 建立单个特征的灰色预测模型 (GM (1,1) 模型) 和支持向量回归预测模型 (SVR<br />\n 模型 )。<br />\n(4) 使用 SVR 预测模型得出 2020 年、2021 年企业所得税的预测值。<br />\n(5) 对建立的企业所得税预测模型进行评价。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623130831415.png\" alt=\"image-20240623130831415\" /></p>\n<h1 id=\"四-综合应用题-60分\"><a class=\"anchor\" href=\"#四-综合应用题-60分\">#</a> 四、综合应用题        60 分</h1>\n<p>1. 二手手机价格预测</p>\n<p>某回收二手手机的公司为了在公司的交易软件中显示预测的二手手机价格，使用用户在交易软件上的交易数据 (phone.csv)，预测回收二手手机的价格。交易数据的特征说明如表所示：</p>\n<table>\n<thead>\n<tr>\n<th>特征</th>\n<th>说明</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>用户编码</td>\n<td>1</td>\n</tr>\n<tr>\n<td>battery_power</td>\n<td>电池容量（单位：mA）</td>\n<td>1520</td>\n</tr>\n<tr>\n<td>blue_tooth</td>\n<td>蓝牙是否正常。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>clock_speed</td>\n<td>开机时间（单位：min）</td>\n<td>0.5</td>\n</tr>\n<tr>\n<td>dual_sim</td>\n<td>是否双卡双待。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>fc</td>\n<td>前置摄像头像素（单位：px）</td>\n<td>14</td>\n</tr>\n<tr>\n<td>four_g</td>\n<td>是否支持 4G。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>int_memory</td>\n<td>内存剩余大小（单位：GB）</td>\n<td>5</td>\n</tr>\n<tr>\n<td>m_dep</td>\n<td>手机厚度（单位：cm）</td>\n<td>0.5</td>\n</tr>\n<tr>\n<td>mobile_wt</td>\n<td>手机重量（单位：g）</td>\n<td>192</td>\n</tr>\n<tr>\n<td>n_cores</td>\n<td>处理器内核数</td>\n<td>4</td>\n</tr>\n<tr>\n<td>pc</td>\n<td>主摄像头像素（单位：px）</td>\n<td>16</td>\n</tr>\n<tr>\n<td>px_height</td>\n<td>像素分辨率高度（单位：px）</td>\n<td>1270</td>\n</tr>\n<tr>\n<td>px_width</td>\n<td>像素分辨率宽度（单位：px）</td>\n<td>1336</td>\n</tr>\n<tr>\n<td>ram</td>\n<td>运行内存（单位：MB）</td>\n<td>3506</td>\n</tr>\n<tr>\n<td>sc_h</td>\n<td>手机屏幕高度（单位：cm）</td>\n<td>12</td>\n</tr>\n<tr>\n<td>sc_w</td>\n<td>手机屏幕宽度（单位：cm）</td>\n<td>7</td>\n</tr>\n<tr>\n<td>talk_time</td>\n<td>充满电耗时（单位：h）</td>\n<td>2</td>\n</tr>\n<tr>\n<td>three_g</td>\n<td>是否支持 3G。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>touch_screen</td>\n<td>触摸屏是否正常。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>wifi</td>\n<td>Wi-Fi 连接是否正常。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>price range</td>\n<td>手机价格等级，其中 0 表示低，1 表示中，2 表示较高，3 表示高</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<p>现需利用交易数据建立分类模型对二手手机价格进行预测，步骤如下。<br />\n(1) 删除有异常值的行 (手机厚度小于等于 0cm)。<br />\n(2) 建立随机森林分类模型对数据进行训练。<br />\n(3) 计算模型准确率，评价分类模型效果。</p>\n<p>答案：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 加载所需的函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data/phone.csv'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 处理异常值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phone_data1 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'m_dep'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理手机厚度异常值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>phone_data <span class=\"token operator\">=</span> phone_data1<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>phone_target <span class=\"token operator\">=</span> phone_data1<span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 将数据划分为训练集测试集</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>phone_data_train<span class=\"token punctuation\">,</span> phone_data_test<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>phone_target_train<span class=\"token punctuation\">,</span> phone_target_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>phone_data<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                                           phone_target<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                                           test_size <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                                           random_state <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 数据标准化</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>stdScaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>phone_trainStd <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>phone_testStd <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 建立 RandomForestClassifier 模型 (随机森林)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>rfc <span class=\"token operator\">=</span> RandomForestClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_trainStd<span class=\"token punctuation\">,</span> phone_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'建立的 rfc 模型为：\\n'</span><span class=\"token punctuation\">,</span> rfc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 预测训练集结果</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>phone_target_pred <span class=\"token operator\">=</span> rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>phone_testStd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测的前 20 个结果为：\\n'</span><span class=\"token punctuation\">,</span> phone_target_pred<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 计算准确率</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>true <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>phone_target_pred <span class=\"token operator\">==</span> phone_target_test<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 求出预测和真实一样的数目</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测对的结果数目为：'</span><span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测错的的结果数目为：'</span><span class=\"token punctuation\">,</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测结果准确率为：'</span><span class=\"token punctuation\">,</span> true <span class=\"token operator\">/</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>2. 钻石价格预测</p>\n<p>某珠宝店新增钻石回收业务，为了对客户提供的钻石更好地进行估价，该店铺收集了行业内近期所售钻石的 4C 等级、尺寸和相应价格等数据，存为钻石价格数据集 (diamond_price.csv), 包括克拉、切工等级、色泽、净度等 9 个特征。钻石价格数据集的特征说明如表 2 所示。</p>\n<p>表 2 钻石价格数据集的特征说明:</p>\n<table>\n<thead>\n<tr>\n<th>特征各称</th>\n<th>特征含义</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>克拉</td>\n<td>钻石的重量</td>\n<td>0.23</td>\n</tr>\n<tr>\n<td>切工等级</td>\n<td>包括 5 个等级，其中 1 表示完美；2 表示十分珍贵；3 表示很好；4 表示好；5 表示一般</td>\n<td>1</td>\n</tr>\n<tr>\n<td>色泽</td>\n<td>钻石色泽从 D 到 J 分为 7 个级别，其中 1 表示 D 级，完全无色；2 表示 E 级，无色；3 表示 F 级，几乎无色；4 表示 G 级，接近无色；5 表示 H 级，接近无色；6 表示 1 级，肉眼可见少量黄色；7 表示 J 级，肉眼可见少量黄色</td>\n<td>2</td>\n</tr>\n<tr>\n<td>净度</td>\n<td>钻石净度由高到低分为 8 个级别，其中 1 表示 IF, 内无瑕级；2 表示 VVS1, 极轻微内含级 1;3 表示 VVs2, 极轻微内含级 2;4 表示  VS1, 轻微内含级 1; 5 表示 Vs2, 轻微内含级 2;6 表示 SI1, 微含级 1;7 表示 SI2, 微含级 2;8 表示 I1, 内含级</td>\n<td>7</td>\n</tr>\n<tr>\n<td>台宽比</td>\n<td>钻石桌面的宽度占其平均直径的百分比</td>\n<td>55</td>\n</tr>\n<tr>\n<td>长度</td>\n<td>钻石的长度</td>\n<td>3.96</td>\n</tr>\n<tr>\n<td>宽度</td>\n<td>钻石的宽度</td>\n<td>3.98</td>\n</tr>\n<tr>\n<td>高度</td>\n<td>钻石的高度</td>\n<td>2.43</td>\n</tr>\n<tr>\n<td>价格 (美元)</td>\n<td>钻石的价格</td>\n<td>326</td>\n</tr>\n</tbody>\n</table>\n<p>使用钻石价格数据集，构建回归模型预测回收的钻石价格，具体步骤如下。</p>\n<p>(1) 读取钻石价格数据集。</p>\n<p>(2) 经过观察数据发现，长度、宽度、高度特征存在 0 值，删除该 3 个特征中所有出现 0 值的行数据，并对其他数据进行重新索引。</p>\n<p>(3) 新增价格 (人民币) 特征，假定 1 美元等于 6.50 人民币。</p>\n<p>(4) 拆分特征数据和标签数据，特征数据为克拉、切工等级、色泽、净度、台宽比、长度、宽度、高度，标签数据为价格 (人民币) 特征。</p>\n<p>(5) 划分训练集和测试集，并对训练集和测试集进行标准差标准化。</p>\n<p>(6) 构建 SVR 等至少两种回归模型进行钻石价格预测，并输出回归模型评价指标，查看模型效果。</p>\n<p>答案：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 读取数据集</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>diamond <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data/diamond_price.csv'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#预处理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>diamond <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'X(length)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                              <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Y(width)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                              <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Z(Depth)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>diamond<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'price_RMB'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Price(in US dollars)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">6.50</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 拆分数据和标签</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>diamond_data <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>diamond_target <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 特征列选择</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># from  sklearn.linear_model import  Lasso</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># data_train = (diamond_data-diamond_data.mean())/diamond_data.std()</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># lasso = Lasso(alpha=1000).fit(data_train,diamond_target)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># print(lasso.coef_)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># diamond_data = diamond.iloc[:, [0,1,2,3]]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 划分训练集和测试集</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>diamond_data_train<span class=\"token punctuation\">,</span> diamond_data_test<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>diamond_target_train<span class=\"token punctuation\">,</span> diamond_target_test <span class=\"token operator\">=</span> \\</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>train_test_split<span class=\"token punctuation\">(</span>diamond_data<span class=\"token punctuation\">,</span> diamond_target<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># # 标准差标准化</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>stdScale <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span>diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>diamond_trainScaler <span class=\"token operator\">=</span> stdScale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>diamond_testScaler <span class=\"token operator\">=</span> stdScale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#定义评价函数</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> explained_variance_score<span class=\"token punctuation\">,</span>  r2_score</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的可解释方差值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          explained_variance_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的R方值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          r2_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 构建回归模型</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> LinearSVR</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 支持向量回归</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>SVR_diamond <span class=\"token operator\">=</span> LinearSVR<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>y_pred1 <span class=\"token operator\">=</span> SVR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持向量回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#梯度提升回归</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span>  GradientBoostingRegressor</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>GBR_diamond <span class=\"token operator\">=</span> GradientBoostingRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>y_pred2 <span class=\"token operator\">=</span> GBR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"梯度提升回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#回归决策树</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span>  DecisionTreeRegressor</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>DTR_diamond <span class=\"token operator\">=</span>  DecisionTreeRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>y_pred3 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"回归决策树:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">#线性回归</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>LR_diamond <span class=\"token operator\">=</span>   LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>y_pred4 <span class=\"token operator\">=</span> LR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线性回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">#最近邻回归</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>neighbors <span class=\"token keyword\">import</span>  KNeighborsRegressor</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>KNR_diamond <span class=\"token operator\">=</span>  KNeighborsRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>y_pred5 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最近邻回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred5<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions1/",
            "url": "http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions1/",
            "title": "数据分析模拟卷1",
            "date_published": "2024-06-23T07:00:00.000Z",
            "content_html": "<p>应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文章为本次模拟试卷！</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一-选择题-20分\"><a class=\"anchor\" href=\"#一-选择题-20分\">#</a> 一、选择题  20 分</h1>\n<p>1．NumPy 中可以获取数组长度的属性是以下的哪个答案（\t）。</p>\n<p>A．dtype</p>\n<p>B．shape</p>\n<p>C．ndim</p>\n<p>D．size</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>2．在 NumPy 中创建一个元素均为 0 的数组可以使用（\t）函数。</p>\n<p>A．zeros()    B．arange()</p>\n<p>C．linspace()   D．logspace()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>3. 下列用于横向组合数组的函数是 (\t)</p>\n<p>A. hstack</p>\n<p>B. hsplit</p>\n<p>C.vstack</p>\n<p>D.vsplit</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>4. 使用 Python 进行数据分析时，以下不属于数据可视化模块的是？<br />\nA.Matplotlib<br />\nB.sklearn<br />\nC.seaborn<br />\nD.pyecharts</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>5.Python 中用于数据分析和处理的库是： (\t)</p>\n<p>A. NumPy</p>\n<p>B. Pandas</p>\n<p>C. Matplotlib</p>\n<p>D. Scikit-learn</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>6. 以下哪个函数不属于 Pandas 的 DataFrame 对象？ (\t)</p>\n<p>A. dropna()   B. sort_values()    C. mean()   D. plot()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>7. 在 Pandas 中，读取 CSV 文件通常使用哪个函数？</p>\n<p>A. pd.read_sql()</p>\n<p>B. pd.read_excel()</p>\n<p>C. pd.read_csv()</p>\n<p>D. pd.read_table()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>8. 以下哪个函数可以实现画布的创建？（     ）</p>\n<p>A. subplots()</p>\n<p>B. add_subplot()</p>\n<p>C. figure()</p>\n<p>D. subplot2grid()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>9. 下列关于 apply () 方法说法正确的是 ( \t)</p>\n<p>A.apply () 方法无法应用于分组操作</p>\n<p>B.apply () 方法作用范围:pandas 中的 Series 和 DataFrame</p>\n<p>C.apply () 方法中不能自定义函数</p>\n<p>D.apply () 方法只能对行、列进行操作</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>10. 下列关于分组聚合的说法错误的是 (\t)</p>\n<p>A. 使用 pandas 的 groupby () 方法进行分组时，只能对列进行操作</p>\n<p>B.pandas 分组聚合操作能够实现组内标准化</p>\n<p>C.pandas 聚合时能够使用 agg ()、apply ()、transform () 方法</p>\n<p>D.pandas 分组方法只有一个 groupby () 方法</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>11. 使用 pivot_table 函数制作透视表时可用下列 ( ) 参数设置行分组键。</p>\n<p>A. Index</p>\n<p>B. raw</p>\n<p>C. values</p>\n<p>D. data</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>12. 在下列选项中可以进行主键合并的是 ( \t）</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. append()</p>\n<p>D. combine_first()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>13. 在下列选项中可以进行特征删除的是 (\t).</p>\n<p>A.dropna () 方法   B.fllna () 方法</p>\n<p>C.isnull0) 方法   D.notnull () 方法</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">A</span></p>\n<p>14. 下列关于插值法的说法错误的是 (\t)</p>\n<p>A. 常见的插值法有线性插值、多项式插值和样条插值</p>\n<p>B. 线性插值通过求解线性方程得到缺失值</p>\n<p>C. 常见的线性插值有拉格朗日插值和牛顿插值</p>\n<p>D.pandas 中的 interpolate () 法可进行插值操作</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">C</span></p>\n<p>15. 在下列选项中可以进行哑变量处理的是 (\t)</p>\n<p>A.cut 函数</p>\n<p>B. get_cut 函数</p>\n<p>C.dummies 函数</p>\n<p>D. get_dummies 函数</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>16.pyplot 使用 re 配置文件来自定义图形的各种默认属性，用于修改线条上点的形状的 rc 参数名称是 (\t)</p>\n<p>A.lines,linewidth</p>\n<p>B.lines.markersize</p>\n<p>C. lines.linestyle</p>\n<p>D. lines.marker</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>17. 下列图形常用于分析各分组数据在总数据中所占比例的是（    )</p>\n<p>A. 折线图</p>\n<p>B. 饼图</p>\n<p>C. 柱形图</p>\n<p>D. 箱线图</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>18.skleam 中用于对特征进行归一化的函数是 (\t)</p>\n<p>A.StandardScaler</p>\n<p>B, Normalizer</p>\n<p>C.Binarizer</p>\n<p>D.MinMaxScaler</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">B</span></p>\n<p>19. 下列关于回归模型评价指标说法不正确的是 (\t)</p>\n<p>A. 平均绝对误差的值越接近 0，模型性能越好</p>\n<p>B.R 值越接近 1，模型性能越好</p>\n<p>C. 可解释方差越接近 0，模型性能越差</p>\n<p>D. 均方误差越接近 0，模型性能越差</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<p>20.skleam 转换器的主要方法不包据 (\t)</p>\n<p>A. fit()</p>\n<p>B. transform()</p>\n<p>C:fa_transform()</p>\n<p>D, fit_transforms()</p>\n<p>答案： <span class=\"spoiler\" title=\"你知道得太多了\">D</span></p>\n<h1 id=\"二-简答题-10分\"><a class=\"anchor\" href=\"#二-简答题-10分\">#</a> 二、简答题            10 分</h1>\n<p>1. 阐述 Numpy 中的两大对象及其特点</p>\n<p>NumPy 提供了 两种基本的对象 red： ndarray 和 ufunc</p>\n<p>ndarray（N-dimensional Array Object）：存储单一数据类型的多维数组。</p>\n<p>特点：多维性、数据存储、维度和形状、向量化操作</p>\n<p>ufunc（Universal Function Object）：能够对数组进行处理的函数。</p>\n<p>特点：向量化操作、广播机制、支持多种数据类型</p>\n<p>2. 简述 Pandas 的数据结构及其特点。</p>\n<p>Pandas 的数据结构有 Series 和 DataFrame</p>\n<p>Series（一维数据）：是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。</p>\n<p>DataFrame 是 pandas 中的一个二维的、大小可变的、可以存储多种类型数据的表格型的数据结构，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。</p>\n<h1 id=\"三-分析题-10分\"><a class=\"anchor\" href=\"#三-分析题-10分\">#</a> 三、分析题  10 分</h1>\n<p>通过对某餐饮企业的数据进行分析，构建客户流失预测模型，对客户的流失进行预测，以便企业及时做出应对措施。画出餐饮企业客户流失预测流程：</p>\n<p>(1) 读取本案例所需的客户信息表和订单详情表。<br />\n(2) 探索客户信息表中年龄、性别与客户流失的关系。<br />\n(3) 查看数据中的重复值情况，并对异常值、缺失值进行处理。<br />\n(4) 构建总用餐次数、距观测窗口 (即以 2016 年 7 月 31 日为结束时间，宽度为两年的时间段) 结束时间的天数、人均销售额、总消费金额 4 个客户流失特征。<br />\n(5) 将数据划分为训练集和测试集，并使用决策树和支持向量机构建客户流失预测模型，对客户流失进行预测。<br />\n(6) 使用精确率、召回率、F1 值评价使用决策树和支持向量机构建的模型的效果</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623115704138.png\" alt=\"image-20240623115704138\" /></p>\n<h1 id=\"四-综合应用题-60分\"><a class=\"anchor\" href=\"#四-综合应用题-60分\">#</a> 四、综合应用题        60 分</h1>\n<p>1.APP 用户群体划分（聚类）</p>\n<p>在 App 上架前需要收集测试用户或人员的体验数据，分析反馈的数据，从而对 App 进行相应的调整。某研发团队为调查所设计的 App 是否可以上架，统计了 13 万左右测试用户的 App 使用数据，并存储于 “某 App 用户信息数据.csv” 数据集中，部分某 App 用户信息数据如表 1 所示。通过对数据进行聚类，以区分不同的用户群体，从而对不同的群体确定是否分享 App, 进而创造流量价值用户，同时将聚类结果与 “是否点击分享” 特征数据进行对比，评价聚类分析结果。</p>\n<p>表 1 部分某 App 用户信息数据:</p>\n<table>\n<thead>\n<tr>\n<th>用户名</th>\n<th>在线时  长 (分钟)</th>\n<th>时间所  占比例</th>\n<th>不愿分  享概率</th>\n<th>愿意分  享概率</th>\n<th>是否点  击分享</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>George</td>\n<td>1495736</td>\n<td>0.004093442</td>\n<td>NA</td>\n<td>0.02</td>\n<td>T</td>\n</tr>\n<tr>\n<td>Ruth</td>\n<td>832959</td>\n<td>0.002279593</td>\n<td>0</td>\n<td>0.85</td>\n<td>F</td>\n</tr>\n<tr>\n<td>Jack</td>\n<td>1124354</td>\n<td>0.003532150</td>\n<td>-0.50</td>\n<td>0.40</td>\n<td>F</td>\n</tr>\n<tr>\n<td>Joy</td>\n<td>342119</td>\n<td>0.00023350</td>\n<td>1.50</td>\n<td>-1.50</td>\n<td>T</td>\n</tr>\n<tr>\n<td>Jessica</td>\n<td>1173979</td>\n<td>0.003212876</td>\n<td>0.32</td>\n<td>1.00</td>\n<td>F</td>\n</tr>\n</tbody>\n</table>\n<p>(1)    处理某 App 用户信息数据集。</p>\n<ol>\n<li>使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。</li>\n<li>将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。</li>\n<li>将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。</li>\n<li>将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。</li>\n</ol>\n<p>(2) 构建与用户使用信息相关的特征。</p>\n<ol>\n<li>自定义 to_code 函数，用于对用户名特征首字母进行编码。</li>\n<li>对在线时长特征进行分段处理后生成分段在线时长新特征。</li>\n<li>使用 apply 方法构建首字母编码新特征。</li>\n</ol>\n<p>(3) 构建 K-Means 聚类模型。</p>\n<ol>\n<li>读取构建新特征后的数据集，区分标签和数据。</li>\n<li>构建 K-Means 模型，且聚类数为 2。</li>\n<li>使用 FMI 评价法评价聚类模型性能。</li>\n</ol>\n<p>答案：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># (1)    处理某 App 用户信息数据集。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1. 使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>user <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\3.homework\\大三下\\数据分析\\实验数据data\\某APP用户信息数据.csv'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 2. 将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 3. 将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 4. 将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># (2) 构建与用户使用信息相关的特征。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>user_clean <span class=\"token operator\">=</span> user</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 1. 自定义 to_code 函数，用于对用户名特征首字母进行编码。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>coding <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    coding<span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">to_code</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    code <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 名字全部小写</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span>  s <span class=\"token keyword\">in</span> coding<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        code <span class=\"token operator\">=</span> coding<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> code</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 2. 对在线时长特征进行分段处理后生成分段在线时长新特征。</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'分组后在线时长'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>qcut<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'在线时长'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 3. 使用 apply 方法构建首字母编码新特征。</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户编码'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> to_code<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># (3) 构建 K-Means 聚类模型。</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>user_feature <span class=\"token operator\">=</span> user_clean</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> KMeans</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> fowlkes_mallows_score</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 1. 读取构建新特征后的数据集，区分标签和数据。</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>X<span class=\"token operator\">=</span>user_feature<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"在线时长\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"在线时长占比\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"分组后在线时长\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>y<span class=\"token operator\">=</span>user_feature<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 2. 构建 K-Means 模型，且聚类数为 2。</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>model<span class=\"token operator\">=</span>KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 3. 使用 FMI 评价法评价聚类模型性能。</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fowlkes_mallows_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>labels_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>2. 客户服装尺寸预测</p>\n<p>某淘宝成年女装店铺为了能够给客户推荐合适的成年女装尺寸，构建了相应的尺寸预测模型。目前店铺利用已购买服装客户的数据集 (size_data.csv) 进行模型的训练，其中部分尺寸信息数据如表 1 所示。</p>\n<p>表 1 部分尺寸信息数据</p>\n<table>\n<thead>\n<tr>\n<th>体重 (kg)</th>\n<th>年龄 (岁)</th>\n<th>身高 (cm)</th>\n<th>尺寸</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>70</td>\n<td>28</td>\n<td>172.72</td>\n<td>XL</td>\n</tr>\n<tr>\n<td>65</td>\n<td>36</td>\n<td>167.64</td>\n<td>L</td>\n</tr>\n<tr>\n<td>61</td>\n<td>34</td>\n<td>165.1</td>\n<td>M</td>\n</tr>\n<tr>\n<td>71</td>\n<td>27</td>\n<td>175.26</td>\n<td>L</td>\n</tr>\n<tr>\n<td>62</td>\n<td>45</td>\n<td>160.02</td>\n<td>M</td>\n</tr>\n</tbody>\n</table>\n<p>(1) 处理尺码信息数据。</p>\n<ol>\n<li>利用 read_csv 函数读取 size_data.csv.</li>\n<li>查看数据集大小，并利用 dropna () 方法删除缺失值。</li>\n<li>删除年龄、体重异常值 (年龄小于 18 岁，体重低于 30kg)。</li>\n<li>查看数据异常值和缺失值是否删除成功。</li>\n</ol>\n<p>(2) 构建支持向量机、决策树、随机森林几种分类模型预测客户服装尺寸，为改善模型预测效果，根据原有特征构建新特征。使用实训 1 中预处理后的数据，计算 BMI 值并构建 BML_ range 特征。BMI 计算公式下面所示。</p>\n<ol>\n<li>BMI = 体重 (kg)/ 身高 (m2)</li>\n<li>BMI_range 特征的构建规则如下。</li>\n<li>当 BMI&lt;18.5 时，BMI_range 值为 0。</li>\n<li>当 18.5≤BMI&lt;24 时，BMI_range 值为 1。</li>\n<li>当 24≤BMI-28 时，BMI_range 值为 2。</li>\n<li>当 BMI≥28 时，BMI_range 值为 3。</li>\n</ol>\n<p>（3）为了提高客户满意度，需要基于客户基本信息为客户推荐合适的服装尺寸。因此需要使用处理后的数据调用支持向量机、决策树、随机森林分类算法构建模型，预测客户服装尺寸。</p>\n<ol>\n<li>构建 BMI_range 特征。</li>\n<li>构建支持向量机、决策树、随机森林分类模型预测服装尺寸。</li>\n<li>评估支持向量机、决策树、随机森林分类模型效果。</li>\n</ol>\n<p>答案：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  warnings</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>warnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>size_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/size_data.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看数据大小</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 删除缺失值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>size_data<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看是否存在缺失值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>size_data <span class=\"token operator\">=</span> size_data<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 删除缺失值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>size_data<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看缺失值是否删除成功</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 处理异常值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>size_data_age <span class=\"token operator\">=</span> size_data<span class=\"token punctuation\">[</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理年龄异常值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>size_data_weight <span class=\"token operator\">=</span> size_data_age<span class=\"token punctuation\">[</span>size_data_age<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理体重异常值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>size_data_weight <span class=\"token operator\">=</span> size_data_weight<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重新生成索引</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>size_data_end <span class=\"token operator\">=</span> size_data_weight</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看年龄异常值是否删除成功</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看体重异常值是否删除成功</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 构建 BMI 特征 (体重 / 身高 **2)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 自定义 BMI 段函数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bmi_range</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">18.5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">18.5</span> <span class=\"token keyword\">and</span>  data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">24</span> <span class=\"token keyword\">and</span>  data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 创建 BMI 分段特征列</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>bmi_range<span class=\"token punctuation\">(</span>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># data 与 target 划分</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>size_target <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>size_data <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 训练集与测试集划分</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>size_data_train<span class=\"token punctuation\">,</span> size_data_test<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">,</span> size_target_test <span class=\"token operator\">=</span> \\</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>train_test_split<span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">,</span> size_target<span class=\"token punctuation\">,</span> test_size <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> random_state <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>stratify<span class=\"token operator\">=</span>size_target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> confusion_matrix<span class=\"token punctuation\">,</span>precision_score<span class=\"token punctuation\">,</span>recall_score<span class=\"token punctuation\">,</span>f1_score</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 自定义评价函数</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_pre</span><span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'混淆矩阵：\\n'</span><span class=\"token punctuation\">,</span> confusion_matrix<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span> pred<span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'XL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 混淆矩阵</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'精确率：'</span><span class=\"token punctuation\">,</span> precision_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 精确率</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'召回率：'</span><span class=\"token punctuation\">,</span> recall_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 召回率</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'F1值：'</span><span class=\"token punctuation\">,</span> f1_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># F1 值</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 数据标准化</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>stdScaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>size_train_std <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>size_test_std <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 构建 SVM 模型</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> SVC</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>svm <span class=\"token operator\">=</span> SVC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 预测训练集结果</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>svc_pred <span class=\"token operator\">=</span> svm<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SVM 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>svc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># 构建 决策树 模型</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span> DecisionTreeClassifier <span class=\"token keyword\">as</span> DTC</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>dtc <span class=\"token operator\">=</span> DTC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 训练模型</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>dtc_pred <span class=\"token operator\">=</span> dtc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\"># 评价模型</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'决策树 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>dtc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># 构建 随机森林 模型</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier <span class=\"token keyword\">as</span> RFC</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>rfc <span class=\"token operator\">=</span> RFC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 训练模型</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>rfc_pred <span class=\"token operator\">=</span> rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># 评价模型</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'随机森林 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>rfc_pred<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions3/",
            "url": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions3/",
            "title": "微信小程序模拟题3",
            "date_published": "2024-06-23T04:30:51.000Z",
            "content_html": "<p>应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 3.</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一-单项选择题-8题216分\"><a class=\"anchor\" href=\"#一-单项选择题-8题216分\">#</a> 一、单项选择题 8 题 * 2=16 分</h1>\n<p>1. 下列选项中，关于微信开发者工具说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. 工具栏 “预览” 按钮用于在微信中进行预览</p>\n<p>B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等</p>\n<p>C. 模拟器可以模拟小程序在微信客户端的运行效果</p>\n<p>D. 编辑器中只能打开一个文件</p>\n<p>2. 下列选项中，不属于表单组件的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）</p>\n<p>A. input 组件</p>\n<p>B. checkbox 组件</p>\n<p>C. form 组件</p>\n<p>D. swiper 组件</p>\n<p>3. 下列选项中，用于监听页面初次渲染成功的回调函数是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. onHide             B. onLoad                C. onShow             D. onReady</p>\n<p>4. 下列选项中，用于实现非标签页之间的跳转的方法是（<span class=\"spoiler\" title=\"你知道得太多了\">A</span> ）。</p>\n<p>A.  wx.navigateTo()</p>\n<p>B.   wx.navigate()</p>\n<p>C.   wx.navigatorTo()</p>\n<p>D.  wx.navigator()</p>\n<p>5. 下列选项中，关于 map 组件属性说法错误的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.  longitude 为中心经度</p>\n<p>B.   scale 为缩放级别，取值范围为 1~20</p>\n<p>C.   latitude 为中心纬度</p>\n<p>D.  markers 为标记点数组</p>\n<p>6. 下列选项中，关于 openid 的说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  openid 是用户的唯一标识</p>\n<p>B.   openid 不等同于微信用户 id</p>\n<p>C.   同一个微信用户在不同 AppID 的微信小程序中的 openid 是不同的</p>\n<p>D.  openid 是微信小程序的唯一标识</p>\n<p>7. 下列选项中，关于 marker 对象的属性说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  title 标注点名称</p>\n<p>B.   zIndex 表示显示层级</p>\n<p>C.   alpha 表示标注的透明度</p>\n<p>D.  userInfo 表示用户信息对象</p>\n<p>8. 下列选项中，关于数据缓存说法错误的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.  wx.getStorage () 方法用于从本地缓存中异步获取指定 key 内容</p>\n<p>B.   wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key</p>\n<p>C.   wx.setStorage () 方法用于将数据异步存储在本地缓存指定的 key</p>\n<p>D.  在实现数据缓存的方法中，方法名以 Sync 结尾的都是同步方法</p>\n<h1 id=\"二-填空题-7题214分\"><a class=\"anchor\" href=\"#二-填空题-7题214分\">#</a> 二、填空题 7 题 * 2=14 分</h1>\n<p>1. 微信小程序是运行在______之上的应用。</p>\n<p>2.text 组件的 ____属性用于实现长按选中文本内容的效果。</p>\n<p>3. 在微信小程序中，页面加载完成后执行的生命周期函数为 ____。</p>\n<p>4. 微信小程序通过 ____ 方法获取登录凭证 code。</p>\n<p>5. 微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。</p>\n<p>6. 在 Animation 实例的常用方法中，  ____  用于导出动画队列。</p>\n<p>7. 微信小程序通过   ____ 方法创建一个 WebSocket 连接。</p>\n<p>8. 微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。</p>\n<h1 id=\"三-判断题-8题216分\"><a class=\"anchor\" href=\"#三-判断题-8题216分\">#</a> 三、判断题 8 题 * 2=16 分</h1>\n<p>1. 项目成员表示参与微信小程序开发、运行的成员。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<p>2. 给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>3. 在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<p>4. 通过调用 wx.request () 方法可以发起网络请求。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<p>5. 在 &lt;slider&gt; 组件上添加 bindchanging=&quot;sliderChanging&quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>6.canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span>  ）</p>\n<p>7. 同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>8. 使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span>  ）</p>\n<h1 id=\"四-程序题-6题424分\"><a class=\"anchor\" href=\"#四-程序题-6题424分\">#</a> 四、程序题 6 题 * 4=24 分</h1>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185111386.png\" alt=\"image-20240623185111386\" /></p>\n<pre><code>onPullDownRefresh:function()&#123;\n// 需要重置的数据\n    Tthis.setData(&#123;\n    shoplist:[]\n    &#125;)\n    this.listData.page = 1\n    this.listData.total =0// 重新发起数据请求\n    this.getshopList(()=&gt;&#123;\n        wx.stopPullDownRefresh()\n    &#125;)\n&#125;\n</code></pre>\n<pre><code>onLoad()&#123;\n    console.log('页面加载，开始获取数据')\n    this.getshopList()\n&#125;,\n// 上拉触底\nonReachBottom:function()&#123;\n    console.log('触发了上拉触底的事件')\nif(this.listData.page * this.listData.pagesize &gt;= this.listData.total)&#123;\n    // 没有下一页的数据了\n    return wx.showToast(&#123;\n        title:&quot;数据加载完毕!\n        icon:'none\n    if(this.isLoading)&#123;\n        return\n    &#125;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185147903.png\" alt=\"image-20240623185147903\" /></p>\n<pre><code>login: function()&#123;\n    wx.login(&#123;\n        success:res =&gt;&#123;\n            console.log('login code:'+ res.code)\n            wx.request(&#123;                               url:'http://127.0.0.1:3000/login',\n            method:'post'\n            data :\n            code: res.code\n            success:res =&gt;&#123;\n                        console.log('token:+ res.data.token)\n           // 将 token 保存为公共 数据，用于在所有页面中共享 token\n\n                        this.globalData.token = res.data.token\n                        // 将 token 保存到数据缓存\n\n                        wx.setStorage(&#123;\n                        key:'token\n                        data: res.data.token\n                       &#125;)\n        &#125;\n    &#125;)\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185203797.png\" alt=\"image-20240623185203797\" /></p>\n<pre><code>&lt;button class=&quot;avatar-wrapper&quot; open-type=&quot;chooseAvatar&quot; bindchooseavatar=&quot;onChooseAvatar&quot;&gt;\n    &lt;image class=&quot;avatar&quot;src=&quot;&quot;&gt;&lt;/image&gt;&lt;/button&gt;\n\n&lt;input type=&quot;nickname&quot; class='nickname&quot; placeholder=&quot;请输入昵称&quot;/&gt;\n                              \n&lt;button bindtap=&quot;credit&quot;&gt;获取用户的积分&lt;/button&gt;\n\n&lt;view style=&quot;text-align: center;&quot; wx:if=&quot;&quot;&gt;当前用户积分:&lt;/view&gt;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185219155.png\" alt=\"image-20240623185219155\" /></p>\n<pre><code>navigateTo:function()&#123;\n    wx .navigateTo(&#123;\n        url:&quot;/pages/target/target?id=1'\n        success:()=&gt;&#123;\n        console.log('跳转成功')\n    &#125;,\n        fail:()=&gt;&#123;\n            console.log('跳转失败')\n        &#125;\n        complete:()=&gt;&#123;\n                console.log('跳转完成')\n        &#125;\n&#125;)\n&#125;\n</code></pre>\n<pre><code>&lt;button bindtap=&quot;navigateTo&quot;&gt;路由&lt;/button&gt;\n</code></pre>\n<h1 id=\"五-简答题2题1530分\"><a class=\"anchor\" href=\"#五-简答题2题1530分\">#</a> 五、简答题 2 题 * 15=30 分</h1>\n<p>1. 请简述微信小程序项目的创建过程。</p>\n<p>①打开微信开发者工具时，使用微信扫码登录微信开发者工具</p>\n<p>②进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。</p>\n<p>③将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成</p>\n<p>④单击 “确定” 按钮创建微信小程序项</p>\n<p>2. 简述页面生命周期函数包括哪些。</p>\n<p>页面生命周期回调函数包含以下 5 个。</p>\n<p>①  onLoad () 函数用于监听页面加载，且一个页面只会在创建完成后触发一次。</p>\n<p>②  onShow () 函数用于监听页面显示，只要页面显示就会触发此函数。</p>\n<p>③  onReady () 函数用于监听页面初次渲染完成，一个页面只会调用一次。</p>\n<p>④  onHide () 函数用于监听页面隐藏，只要页面隐藏就会触发此函数。</p>\n<p>⑤  onUnload () 函数用于监听页面卸载，只要页面被释放就会触发此函数。</p>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions2/",
            "url": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions2/",
            "title": "微信小程序模拟题2",
            "date_published": "2024-06-23T04:25:51.000Z",
            "content_html": "<p>应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 2.</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一-单项选择题-8题216分\"><a class=\"anchor\" href=\"#一-单项选择题-8题216分\">#</a> 一、单项选择题 8 题 * 2=16 分</h1>\n<p>1. 下列选项中，关于微信小程序项目目录结构说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）。</p>\n<p>A.pages 目录用于存放所有微信小程序的页面</p>\n<p>B.app.wxss 文件定义了微信小程序项目的全局样式</p>\n<p>C.sitemap.json 文件是微信小程序项目的全局配置文件</p>\n<p>D.app.js 文件是微信小程序项目的入口文件</p>\n<p>2. 下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ <span class=\"spoiler\" title=\"你知道得太多了\">C</span>）。</p>\n<p>A. 3              B. 4                  C. 5                    D. 6</p>\n<p>3. 下列选项中，用于监听页面初次渲染成功的回调函数是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. onHide             B. onLoad                C. onShow             D. onReady</p>\n<p>4. 下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ <span class=\"spoiler\" title=\"你知道得太多了\">A</span>）。</p>\n<p>A.  <code>&#123;&#123; &#125;&#125;</code>              B.   <code>[]</code>           C.  <code>&#123; &#125;</code>        D.  <code>[[]]</code></p>\n<p>5. 下列选项中，用于滑动选择某一个值的组件是（<span class=\"spoiler\" title=\"你知道得太多了\">B</span> ）。</p>\n<p>A. view</p>\n<p>B. slider</p>\n<p>C. input</p>\n<p>D. audio</p>\n<p>6. 下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. start () 方法表示开始录音</p>\n<p>B. pause () 方法表示暂停录音<br />\n C. resume () 方法表示继续录音</p>\n<p>D. onError () 方法表示停止录音，点击开始录音后会从中断的地方接着继续录音</p>\n<p>7. 下列选项中，用于实现非标签页之间的跳转的方法是（<span class=\"spoiler\" title=\"你知道得太多了\">A</span> ）。</p>\n<p>A.  wx.navigateTo()</p>\n<p>B.   wx.navigate()</p>\n<p>C.   wx.navigatorTo()</p>\n<p>D.  wx.navigator()</p>\n<p>8. 下列选项中，关于 marker 对象的属性说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  title 标注点名称</p>\n<p>B.   zIndex 表示显示层级</p>\n<p>C.   alpha 表示标注的透明度</p>\n<p>D.  userInfo 表示用户信息对象</p>\n<h1 id=\"二-填空题-7题214分\"><a class=\"anchor\" href=\"#二-填空题-7题214分\">#</a> 二、填空题 7 题 * 2=14 分</h1>\n<p>1. 微信小程序项目中的______文件是全局配置文件。</p>\n<p>2. 微信开发者工具中用于保存文件的快捷键是______。</p>\n<p>3.image 组件的____属性用于设置图片的展示模式。</p>\n<p>4.swiper 组件内部只可以放置____组件。</p>\n<p>5. 在列表渲染中，使用____可以指定当前项的变量名。</p>\n<p>6. 下载文件的 API 是 ___。 上传文件的 API 是   ____。</p>\n<p>7.map 组件中地图视野发生变化时触发  ____  事件。</p>\n<p>8. 微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件</p>\n<h1 id=\"三-判断题-8题216分\"><a class=\"anchor\" href=\"#三-判断题-8题216分\">#</a> 三、判断题 8 题 * 2=16 分</h1>\n<p>1. 微信小程序项目中 app.js 文件是全局样式文件。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>2. 微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>3.video 组件专门用于播放音频。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>4. 所有绑定的数据都必须在 data 中进行初始化。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>5. 通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>6.openid 是微信小程序的唯一标识。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>7.animation.export () 方法每次调用后仍保留之前的动画操作。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>8. 同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<h1 id=\"四-程序题-6题424分\"><a class=\"anchor\" href=\"#四-程序题-6题424分\">#</a> 四、程序题 6 题 * 4=24 分</h1>\n<p>1. 重点：掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184225084.png\" alt=\"image-20240623184225084\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240623184422.png%7D\" alt=\"image-20240623184244138\" /></p>\n<pre><code>&lt;view class=&quot;container&quot;&gt;\n&#123;&#123;mes&#125;&#125;  //数据绑定&#123;&#123;&#125;&#125;\n&lt;view&gt;\n    // 绑定事件test()，bind:tap=&quot;test()&quot;\n    &lt;button bind:tap=&quot;test()&quot;&gt;按钮1-1&lt;/button&gt;\n    &lt;button bind:tap=&quot;test&quot;&gt;按钮1-2&lt;/button\n    &lt;button bindtap=&quot;test()&quot;&gt;按钮2-1&lt;/button&gt;\n    &lt;button bindtap=&quot;test&quot;&gt;按钮2-2&lt;/button&gt;\n    &lt;button bind:tap=&quot;changetext&quot;&gt;按钮&lt;/button&gt;\n&lt;/view&gt;\n    \n&lt;view bind:tap=&quot;viewtap&quot; id=&quot;out&quot;&gt;out \n    &lt;view id=&quot;inner&quot; &gt;inner&lt;/view&gt;\n&lt;/view&gt;\n    \n&lt;view wx:if=&quot;false&quot;&gt;单独view1&lt;/view&gt;\n&lt;view wx:elif=&quot;false&quot;&gt;单独view2&lt;/view&gt;\n&lt;view wx:else&gt;单独view3&lt;/view&gt;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184458196.png\" alt=\"image-20240623184458196\" /></p>\n<pre><code>Page(\n    data:&#123;\n    msg:'hello' // 数据绑定\n    flag:1,\n    hid:1,\n&#125;,\nnum1:0,// 保存第 1 个数字\nonLoad:function()&#123;\n    console.log(this.num1);\n    console.log(this.data.msg);\n    //console.log (this.msg);\n    // 报错 \n    console.log('onload');\n&#125;，\n\nonPullDownRefresh:function()&#123;\n    console.log('onPullDownRefresh');\n    this.setData(&#123; \n    msg:'hello world'\n      //num1:42 无效\n&#125;);\n    console.log(this.num1);\n&#125;,\ntest()&#123;\n    console.log('test');\n&#125;,\ntest()&#123;\n    console.log('test');\n&#125;,\nviewtap:function(e)&#123;\n    console.log(e);\n    [console.log(___(补充触发事件组件的一些属性组合)+'/'+ ___(当前组件的一些属性组合));]&#123;.red&#125;\n&#125;,\nchangetext()&#123;\n    this.setData(&#123;\n        msg:'新标题'\n    &#125;,this.test());\n&#125;\n</code></pre>\n<p>2.data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184700710.png\" alt=\"image-20240623184700710\" /></p>\n<pre><code>var hello = require('../../examplejs/hello')\n\nPage(&#123;\n    data:&#123;\n        [name:'初始值'，]&#123;.red&#125;\n        [age:0]&#123;.red&#125;\n    &#125;,\n    onLoad:function()&#123;\n        console.log(hello.msg);\n    demo(e)&#123;\n        this.setData(&#123;\n            [name:e.target.dataset.name,]&#123;.red&#125;\n            [age:e.target.dataset.infoAge]&#123;.red&#125;\n        &#125;);\n    &#125;\n&#125;)\n</code></pre>\n<pre><code>&lt;navigation-bar title=&quot;Weixin&quot; back=&quot;false&quot;color=&quot;black&quot; background=&quot;#FFF&quot;&gt;\n&lt;/navigation-bar&gt;\n&lt;scroll-view class=&quot;scrollarea&quot; scroll-y type=&quot;list&quot;&gt;\n    &lt;view class=&quot;container&quot;\n          Weixin\n    &lt;view&gt;\n    [&lt;button bind:tap=&quot;demo&quot; data-name=&quot;小程序&quot;\n            data-info-age=&quot;16&quot;&gt;单击更新数据&lt;/button&gt;]&#123;.red&#125;\n    &lt;view&gt;&lt;/view&gt;&lt;view&gt;&lt;/view&gt;\n    &lt;/view&gt;\n    &lt;/view&gt;\n&lt;/scroll-view&gt;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184824204.png\" alt=\"image-20240623184824204\" /></p>\n<pre><code>numBtn:function(e) &#123;\n// 点击数字按钮，获取对应的数字，将其值赋给 num\n    [var num = .target.dataset.val]&#123;.red&#125;\nif(this.resultFlag)&#123; \n    // 如果当前使用 = 计算了，则重置\n    this.reset()\nconsole.log('numbtn1',this.numChangeFlag,this.targetnum,this.numl,this.num2);\n    if(this.numChangeFlag)&#123;\n        this.numChangeFlag = false\n        this.execFlag= true \n        // 代表已输入第 2 个数字\n        this.data.num ='0’\n        // 将 num 设为 0，避免数字进行拼接\n        this.targetnum ='num2'\n        // 将 target 切换到第 2 个数\n    &#125;\n</code></pre>\n<p>3. 重点：条件渲染</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184952264.png\" alt=\"image-20240623184952264\" /></p>\n<pre><code>&lt;view wx:if=&quot;false&quot;&gt;单独view1&lt;/view&gt;\n&lt;view wx:elif=&quot;false&quot;&gt;单独view2&lt;/view&gt;\n&lt;view wx:else&gt;单独view3&lt;/view&gt;\n\n&lt;block wx:if=&quot;&#123;&#123;flag&#125;&#125;&quot;&gt;\n&lt;view&gt;第1个&lt;/view&gt;\n&lt;view&gt;第2个&lt;/view&gt;\n&lt;/block&gt;\n\n&lt;text hidden=&quot;&#123;&#123;hid&#125;&#125;&quot;&gt;文本hidden&lt;/text&gt;\n</code></pre>\n<pre><code>Page(&#123;\n    data:&#123;\n        msg:'hello',\n        [flag:1,]&#123;.red&#125;\n        hid:1,\n    &#125;\nnum1:0，// 保存第 1 个数字\n    onLoad:function()&#123;\n       console.log(this.num1);console.log(this.data.msg);\n       //console.log (this.msg);   // 报错\n       console.log('onload');\n&#125;,\n    onPullDownRefresh:function()&#123;\n        console.log('onPullDownRefresh');\n        this.setData(&#123;\n            msg:'hello world'\n            //num1:42 无效\n        &#125;);\n</code></pre>\n<p>4. 重点：列表渲染</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185011924.png\" alt=\"image-20240623185011924\" /></p>\n<pre><code>&lt;view wx:for=&quot;&quot;wx: key=&quot;*this&quot;&gt;     \n&#123;&#123;index&#125;&#125;&#123;&#123;item&#125;&#125;    \n&lt;/view&gt;\n\n&lt;viel&gt;-----------&lt;/view&gt;\n&lt;view wx:for=&quot;&quot; wx:key=&quot;id&quot;&gt;\n&#123;&#123;index&#125;&#125;--&#123;&#123;item.message&#125;&#125;--&#123;&#123;item.id&#125;&#125;\n&lt;/view&gt;\n\n&lt;viel&gt;-----------&lt;/view&gt;\n&lt;view wx:for=&quot;&#123;&#123;list&#125;&#125;&quot; wx:for-item=&quot;item2&quot;\n      wx : for-index=&quot;index2&quot; wx:key=&quot;id&quot;&gt;\n      &#123;&#123;index2&#125;&#125;--&#123;&#123;item2.message&#125;&#125;--&#123;&#123;item.id&#125;&#125;\n&lt;/view&gt;\n\n&lt;view&gt;--------&lt;/view&gt;\n&lt;view wx:for=&quot;&#123;&#123;contract&#125;&#125;&quot; wx:key=&quot;id&quot;&gt;\n  &#123;&#123;item.id&#125;&#125;,&#123;&#123;item.name&#125;&#125;,&#123;&#123;item.phone&#125;&#125;\n&lt;/view&gt;\n\n&lt;view&gt;\n&lt;button bind:tap=&quot;sload&quot;&gt;showLoading--持续1秒&lt;/button&gt;&lt;button bind:tap=&quot;sload2&quot;&gt;showLoading--持续3秒&lt;/button&gt;\n&lt;/view&gt;\n</code></pre>\n<pre><code>Page(&#123;\n    data:&#123;\n        arr:['a\n        list:[\n             &#123;message:'梅',id:1&#125;,\n             &#123;message:'兰',id: 2&#125;,\n             &#123;message:'竹',id:3&#125;,\n             &#123;message:'菊',id:4&#125;\n     &#125;,\n     contract:[]\nonLoad:function()&#123;\n    console.log('页面加载')\n    this.getContract()\n&#125;,\ngetContract:function()&#123;\n    wx.request(&#123;\n        url:&quot;http://127.0.0.1:3000/data2'\n        method:'GET'\n        data:&#123;&#125;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623185035258.png\" alt=\"image-20240623185035258\" /></p>\n<pre><code>sload()&#123;\n    wx.showLoading(&#123;\n        title:'加载框'\n        duration:1000 // 默认 1500 毫秒\n    &#125;)\n&#125;\nsload2()&#123;\n    wx.showLoading(&#123;\n        title:'加载框'                   \n        setTimeout(function()&#123;\n        wx.hideLoading()\n    &#125;，3000)\n&#125;,\nstoast()&#123;\n    wx.showToast(&#123;\n        title:'提示框'\n        duration:3000，// 默认 1500 毫秒\n        icon:&quot;error&quot;// 默认为 successicon:\n    &#125;)\n&#125;,\n</code></pre>\n<pre><code>&lt;view&gt;\n&lt;button bind:tap=&quot;sload&quot;&gt;showLoading--持续1秒&lt;/button&gt;&lt;button bind:tap=&quot;sload2&quot;&gt;showLoading--持续3秒&lt;/button&gt;&lt;button bind:tap=&quot;stoast&quot;&gt;wx.showToast&lt;/button&gt;\n&lt;/view&gt;\n</code></pre>\n<h1 id=\"五-简答题2题1530分\"><a class=\"anchor\" href=\"#五-简答题2题1530分\">#</a> 五、简答题 2 题 * 15=30 分</h1>\n<p>1. 简述微信小程序如何实现上拉触底。</p>\n<p>2. 简述 BackgroundAudioManager 实例的属性和方法。</p>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions1/",
            "url": "http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions1/",
            "title": "微信小程序模拟题1",
            "date_published": "2024-06-23T04:22:51.000Z",
            "content_html": "<p>应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 1.</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一单项选择题-8题216分\"><a class=\"anchor\" href=\"#一单项选择题-8题216分\">#</a> 一。单项选择题 8 题 * 2=16 分</h1>\n<p>1. 下列选项中，关于微信小程序说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）。</p>\n<p>A. 微信小程序是运行在微信之中应用</p>\n<p>B. 微信小程序的体积非常小</p>\n<p>C. 微信小程序不可以跨平台</p>\n<p>D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序</p>\n<p>2. 下列选项中，用于在微信开发者工具中输出调试信息的面板是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.Wxml</p>\n<p>B.Console</p>\n<p>C.Sources</p>\n<p>D.Network</p>\n<p>3. 下列选项中，用于配置微信小程序所有的页面地址的文件是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）</p>\n<p>A. app.js</p>\n<p>B. app.json</p>\n<p>C. app.wxss</p>\n<p>D. project.config.json</p>\n<p>4. 下列选项中，不属于 Flex 布局的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）</p>\n<p>A.  display:flex;</p>\n<p>B.   flex:1;</p>\n<p>C.   float:left;</p>\n<p>D.  flex-flow:column nowrap;</p>\n<p>5. 下列选项中，关于列表渲染说法正确的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.   wx:for-index 可以用于重新定义当前项的变量名</p>\n<p>B.   在列表渲染中，可以使用 item 变量获取当前项的值</p>\n<p>C.   wx:for 可以用于实现页面中的列表渲染</p>\n<p>D.   wx:for-item 可以用于设置当前索引变量的属性名</p>\n<p>6. 下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ <span class=\"spoiler\" title=\"你知道得太多了\">D</span>）。</p>\n<p>A. wx:for-i</p>\n<p>B.  wx:for-j</p>\n<p>C.  wx:for-item</p>\n<p>D.  wx:for-index</p>\n<p>7. 下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A. stop()</p>\n<p>B. seek()</p>\n<p>C. pause()</p>\n<p>D. play()</p>\n<h1 id=\"二填空题-7题214分\"><a class=\"anchor\" href=\"#二填空题-7题214分\">#</a> 二。填空题 7 题 * 2=14 分</h1>\n<p>1. 微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。</p>\n<p>2. 微信开发者工具中用于保存文件的快捷键是______。</p>\n<p>3. 在 Flex 布局中， ____属性能够设置项目在主轴方向的排列方式。</p>\n<p>4. 在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。</p>\n<p>5. 在 JS 文件中，通过____ 获取 data-* 自定义属性的值。</p>\n<p>6. 在微信小程序中，页面加载完成后执行的生命周期函数为 ____。</p>\n<p>7. 在 scroll-view 组件中，用  ___ 属性用于设置横向滚动条的位置。</p>\n<p>8. 从本地缓存中异步获取指定 key 的内容使用 ____ 方法。</p>\n<h1 id=\"三判断题-8题216分\"><a class=\"anchor\" href=\"#三判断题-8题216分\">#</a> 三。判断题 8 题 * 2=16 分</h1>\n<p>1. 在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>2. 通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<p>3.video 组件专门用于播放音频。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>4. 设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>5. 在 canvas 组件中，canvas-id 属性是其唯一标识符。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<p>6. 通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>7.openid 是微信小程序的唯一标识。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<p>8.animation.export () 方法每次调用后仍保留之前的动画操作。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<h1 id=\"四程序题-6题424分\"><a class=\"anchor\" href=\"#四程序题-6题424分\">#</a> 四。程序题 6 题 * 4=24 分</h1>\n<p>1. 组件的概念及常用组件</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618220146963.png\" alt=\"\" /></p>\n<pre><code>&lt;!--index.wxml--&gt;\n\n&lt;!--配置状态栏--&gt;\n&lt;_____(1.补充导航栏配置) title=&quot;我的主页&quot; back=&quot;&#123;&#123;false&#125;&#125;&quot; color=&quot;blue&quot; background=&quot;#bbf&quot;&gt;\n&lt;/navigation-bar&gt;\n\n&lt;!-- 头像区域 --&gt;\n&lt;view&gt;\n    &lt;view class='container'&gt;    \n        &lt;view class=&quot;top&quot;&gt;        \n            &lt;_____(2.补充图片组件) src=&quot;/images/avatar.png&quot; _____(3.补充图片组件属性)='aspectFit'/&gt;\n        &lt;/view&gt;\n    &lt;/view&gt;        \n\n\n&lt;!-- 详细信息区域 --&gt;\n&lt;view class=&quot;menu&quot;&gt;\n\t&lt;view class=&quot;item&quot;&gt;姓名：小丽&lt;/view&gt;\n\t&lt;view class=&quot;item&quot;&gt;年龄：20&lt;/view&gt;\n\t&lt;view class=&quot;item&quot;&gt;性别：女&lt;/view&gt;\n\t&lt;view class=&quot;item&quot;&gt;特长：绘画、书法&lt;/view&gt;\n\t&lt;view class=&quot;item&quot;&gt;爱好：编程&lt;/view&gt;\n\t&lt;/view&gt; 16 &lt;/view&gt;\n&lt;/view&gt;\n\n&lt;!-- 配置页脚 --&gt;\n&lt;view class=&quot;footer&quot; hover-class='bgc' hover-start-time=&quot;1000&quot; hover-stay-time=&quot;3000&quot;&gt;\n    &lt;_____(3.补充文本组件)&gt;想联系我吗？&lt;_____(补充文本组件)&gt;&lt;br/&gt;\n    &lt;_____(4.补充单选按钮) value=&quot;&quot;/&gt;发邮箱给我dd@qq.com\n    &lt;_____(5.补充按钮组件)&gt;发送&lt;/_____(补充按钮组件)&gt;\n&lt;/view&gt;\n&lt;/view&gt;\n</code></pre>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623183927882.png\" alt=\"image-20240623183927882\" /></p>\n<pre><code>&lt;text&gt;pages/life/life.wxml&lt;/text&gt;\n&lt;view class=&quot;vd&quot;\n      &lt;view classs=&quot;item&quot;\n         &lt;_____(1.补充视频组件) src=&quot;http://127.0.0.1:3000/01.mp4“ poster=&quot;http://127.0.0.1:3000/st2.png” controls=&quot;true&quot; loop=&quot;true&quot; /&gt;\n&lt;!-- autoplay=&quot;true--&gt;\n        &lt;/view&gt;\n&lt;/view&gt;\n</code></pre>\n<p>2. 页面路径、标签栏、导航栏的配置</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184043675.png\" alt=\"image-20240623184043675\" /></p>\n<pre><code>pages&quot;:[\n   //1.配置页面路径\n   &quot;_____(补充index路径) &quot;\n   &quot;_____(补充info路径) &quot;\n   &quot;_____(补充life路径)&quot;\n],\n&quot;window&quot;:&#123;\n  // 2.配置设置导航栏\n&quot;_____(补充导航栏标题颜色类型) &quot;:&quot;black&quot;,\n&quot;_____(补充背景文本颜色类型) &quot;:&quot;light&quot;. \n&quot;____(补充导航栏背景颜色) &quot;:&quot;#fff&quot;,\n&quot;____(补充导航栏文字内容) &quot;:&quot;app.json&quot;\n&#125;,\n&quot;tabBar&quot;:&#123;\n // 3.配置标签栏\n&quot;color&quot;:&quot;#000”，\n&quot;_____(补充标签栏选择颜色)&quot;:&quot;blue&quot;,\n&quot;_____(补充标签栏边框颜色)&quot;: &quot;black&quot;,\n&quot;backgroundColor&quot;:&quot;#eee&quot;,\n&quot;list&quot;:[&#123;\n&quot;pagePath&quot;:&quot;pages/index/index&quot;\n&quot;text&quot;:&quot;首页”，\n&quot;iconPath&quot;:&quot;images/invite.png&quot;,\n&quot;selectedIconPath&quot;:&quot;images/invite.png'\n&#125;.\n&#123;\n&quot;pagePath&quot;:&quot;pages/info/info&quot;,\n&quot;text&quot;:&quot;个人信息” ,\n&quot;iconPath&quot;:&quot;images/guest.png&quot;,\n&#125;\n</code></pre>\n<p>3. 重点：swiper 和 swiper-item 组件的使用方法</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184115709.png\" alt=\"image-20240623184115709\" /></p>\n<pre><code>&lt;view style=&quot;height:50px; text-align: center, padding-top:30px;&quot;&gt;本地生活&lt;/view&gt;\n\n&lt;!--轮播图区域的页面结构--&gt;\n// 轮播图\n&lt;_____(1.补充滑块视图组件) _____(2.补充是否自动切换)=&quot;true&quot; _____(补充是否面板显示指示点)=&quot;true&quot; _____(补充切换时间间隔)=&quot;3000&quot;&gt;\n    &lt;_____(补充滑块内容1)&gt;\n        &lt;image src=&quot;/images/swiper00.jpg&quot; /&gt;\n    &lt;_____(补充滑块内容1)&gt;  \n    \n    &lt;_____(补充滑块内容2)&gt;\n        &lt;image src=&quot;/images/swiper01.jpg&quot; /&gt;\n    &lt;_____(补充滑块内容2)&gt;\n    \n    &lt;_____(补充滑块内容3)&gt;\n        &lt;image src=&quot;/images/swiper02.jpg&quot; /&gt;\n    &lt;_____(补充滑块内容3)&gt;\n    \n&lt;_____(补充滑块视图组件)&gt;\n</code></pre>\n<pre><code>swiper&#123;\n    height: 350rpx;\n&#125;\nswiper image&#123;\n    width: 100%;      \n    height: 100%;\n    &#125;\n\n/* 九宫格 */\n.grids&#123;\n    display:_____(补充flex布局);\n    _____(补充是否项目换行): wrap;\n    _____(补充主轴方向): column;\n    height:760rpx;\n&#125;\n.grids .item image &#123;\n    width: 70rpx;\n    height: 70rpx;\n&#125;\n.grids .item text &#123; \n    color: #999;\n    font-size: 28rpx;\n    margin-top: 20rpx; 9 \n&#125;\n</code></pre>\n<p>4. 表单组件</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623184149442.png\" alt=\"image-20240623184149442\" /></p>\n<pre><code>&lt;____(补充表单容器) bindsubmit=&quot;&quot;&gt;\n    &lt;text&gt;1 输入文本&lt;/text&gt;\n    &lt;____(补充输入框1) type=&quot;____(文本输出)&quot;/&gt;\n    &lt;text&gt;2 输入数字&lt;/text&gt;\n    &lt;____(补充输入框2) type=&quot;____(数字输出)&quot; placeholder=&quot;数字键盘&quot;/&gt;\n    &lt;text&gt;3 输入身份证号码&lt;/text&gt;\n    &lt;____(补充输入框3) type=&quot;____(身份证输出)&quot;/&gt;\n    &lt;text &gt;4 带小数点的数字键盘&lt;/text&gt;\n    &lt;____(补充输入框4) type=&quot;____(小数点输出)&quot;/&gt;\n    &lt;text&gt;6 密码&lt;/text&gt;\n    &lt;____(补充输入框5) type=&quot;text&quot; password=&quot;true&quot;/&gt;\n&lt;/form&gt;\n\n&lt;____(补充)&gt;普通按钮&lt;/button&gt;\n&lt;button size=&quot;mini&quot;&gt;mini普通按钮&lt;/button&gt;\n&lt;button type=&quot;primary&quot;&gt;primary主色调按钮&lt;/button&gt;\n&lt;button type=&quot;warn&quot;&gt;warn警告按钮&lt;/button)\n&lt;____(单选按钮) value=&quot;&quot;/&gt;单个单选按钮\n    &lt;view&gt;互斥按钮&lt;/view&gt;\n&lt;____(互斥按钮) bindchange=&quot;&quot;&gt;\n    &lt;radio value=&quot;0&quot;/&gt;选择1\n    &lt;radio value=&quot;1&quot; checked=&quot;true&quot;/&gt;选择2\n&lt;/radio-group&gt;\n</code></pre>\n<h1 id=\"五简答题2题1530分\"><a class=\"anchor\" href=\"#五简答题2题1530分\">#</a> 五。简答题 2 题 * 15=30 分</h1>\n<p>1. 简述 BackgroundAudioManager 实例的属性和方法。</p>\n<p>2. 简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。</p>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/22/Educational/python/Data-analysis/Data_analysis_review/",
            "url": "http://rainyblue.cn/2024/06/22/Educational/python/Data-analysis/Data_analysis_review/",
            "title": "数据分析试题复习",
            "date_published": "2024-06-22T04:00:00.000Z",
            "content_html": "<p>应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文件为本次考试内容</p>\n<p>选择题为课本习题（熟悉题型使用）</p>\n<p>简答题为预测</p>\n<p>代码题（4 选 2）</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"一-考试题型\"><a class=\"anchor\" href=\"#一-考试题型\">#</a> 一、考试题型</h1>\n<p>1、选择题（不定项，Numpy、Pandas、可视化、Sklearn）  20 分</p>\n<p>2、简答题（Numpy、Pandas）             10 分</p>\n<p>3、分析题（根据题目要求绘制项目聚类或分类流程图）  10 分</p>\n<p>读取 &gt; 预处理（缺）&gt; 划分（横、纵）&gt; 标准化 &gt; 分聚回 &gt; 评价</p>\n<p>4、综合应用题（分类、聚类、回归）          60 分</p>\n<h1 id=\"二-考试内容\"><a class=\"anchor\" href=\"#二-考试内容\">#</a> 二、考试内容</h1>\n<h2 id=\"1-numpy\"><a class=\"anchor\" href=\"#1-numpy\">#</a> 1、Numpy</h2>\n<p>（1）Numpy 两大对象及特点</p>\n<p>（2）Series 组成</p>\n<p>（3）Numpy 数组的属性</p>\n<p>（4）Numpy 生成数组、矩阵的常用函数、矩阵转置</p>\n<h2 id=\"2-pandas\"><a class=\"anchor\" href=\"#2-pandas\">#</a> 2、Pandas</h2>\n<p>（1）Pandas 作用</p>\n<p>（2）重复值、缺失值处理函数及方法</p>\n<p>（3）Pandas 数据结构及特点</p>\n<p>（4）读写 CSV 数据的相关函数</p>\n<p>（5）数据合并</p>\n<h2 id=\"3-可视化库\"><a class=\"anchor\" href=\"#3-可视化库\">#</a> 3、可视化库</h2>\n<p>绘制画布、常用图表、坐标轴的函数。</p>\n<h2 id=\"4-sklearn应用\"><a class=\"anchor\" href=\"#4-sklearn应用\">#</a> 4、Sklearn 应用</h2>\n<p>APP 用户群体划分、二手手机价格预测、客户服装尺寸预测、钻石价格预测。</p>\n<h1 id=\"选择题不定项numpy-pandas-可视化-sklearn\"><a class=\"anchor\" href=\"#选择题不定项numpy-pandas-可视化-sklearn\">#</a> 选择题：不定项，Numpy、Pandas、可视化、Sklearn</h1>\n<h2 id=\"第1章-python-数据分析概述\"><a class=\"anchor\" href=\"#第1章-python-数据分析概述\">#</a> 第 1 章 Python 数据分析概述</h2>\n<p>课后习题</p>\n<p>(1) 下面关于数据分析说法正确的是 (     )</p>\n<p>A. 数据分析是数学、统计学理论结合科学的统计分析方法</p>\n<p>B. 数据分析是一种数学分析方法</p>\n<p>C. 数据分析是统计学分析方法</p>\n<p>D. 数据分析是大数据分析方法</p>\n<blockquote>\n<p>【解析】 本题考查数据分析的概念。</p>\n<p>数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，提取有用信息和形成结论而对数据加以详细研究和概括总结的过程。这一过程也是质量管理体系的支持过程。在实用中，数据分析可帮助人们作出判断，以便采取适当行动。</p>\n<p>【答案】 A</p>\n</blockquote>\n<p>(2) 下列关于数据分析的描述，说法错误的是 (     )</p>\n<p>A. 模型优化步骤可以与分析和建模步骤同步进行</p>\n<p>B. 数据分析过程中最核心的步骤是分析与建模</p>\n<p>C. 数据分析时只能够使用数值型数据</p>\n<p>D. 广义的数据分析包括狭义数据分析和数据挖掘</p>\n<blockquote>\n<p>【解析】 本题考查数据分析。</p>\n<p>数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，提取有用信息和形成结论而对数据加以详细研究和概括总结的过程。这一过程也是质量管理体系的支持过程。在实用中，数据分析可帮助人们作出判断，以便采取适当行动。</p>\n<p>A 项，模型优化步骤可以与分析和建模步骤同步进行，说法正确。</p>\n<p>B 项，数据分析过程中最核心的步骤是分析与建模，说法正确。</p>\n<p>C 项，数据分析时只能够使用数值型数据，说法错误。数据分析可以使用分类数据、顺序数据和数值型数据等。</p>\n<p>D 项，广义的数据分析包括狭义数据分析和数据挖掘，说法正确。 本题要求选择说法错误选项。</p>\n<p>【答案】 C</p>\n</blockquote>\n<p>(3) 下列关于 NumPy 的说法错误的是 (     )</p>\n<p>A.NumPy 可快速高效处理多维数组</p>\n<p>B.NumPy 可提供在算法之间传递数据的容器</p>\n<p>C.NumPy 可实现线性代数运算、傅里叶变换和随机数生成</p>\n<p>D.NumPy 不具备将 C++ 代码继承到 Python 的功能</p>\n<blockquote>\n<p>【解析】 本题考查 NumPy。</p>\n<p>NumPy 是 Python 的一个库，提供了大量的数学函数和数据结构（特别是数组），用于快速操作数据。</p>\n<p>它支持高级大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。</p>\n<p>A 项，表述正确，NumPy 可快速高效处理多维数组。</p>\n<p>B 项，表述正确，NumPy 可提供在算法之间传递数据的容器。</p>\n<p>C 项，表述正确，NumPy 可实现线性代数运算、傅里叶变换和随机数生成。</p>\n<p>D 项，表述错误，NumPy 具备将 C++ 代码继承到 Python 的功能。 本题要求选择说法错误选项。</p>\n<p>【答案】 D</p>\n</blockquote>\n<p>(4) 下列关于 pandas 说法错误的是 (    )</p>\n<p>A.pandas 是 Python 的数据分析核心库</p>\n<p>B.pandas 能够快捷处理结构化数据</p>\n<p>C.pandas 没有 NumPy 的高性能数字计算功能</p>\n<p>D.pandas 提供复杂精细的索引功能</p>\n<blockquote>\n<p>【解析】</p>\n<p>pandas 是基于 NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。pandas 提供了大量能使我们快速便捷地处理数据的函数和方法，使 Python 成为强大而高效的数据分析环境。</p>\n<p>【答案】 C</p>\n</blockquote>\n<p>(5) 下列不属于数据分析的应用场景的是 (    )</p>\n<p>A. 一周天气预测</p>\n<p>C. 为用户提供个性化服务</p>\n<p>B. 合理预测航班座位需求数量</p>\n<p>D. 某人一生的命运预测</p>\n<blockquote>\n<p>【答案】 D</p>\n</blockquote>\n<p>(6) 下列不属于 Python 优势的是 ( \t )。</p>\n<p>A. 语法简洁，程序开发速度快</p>\n<p>B. 入门简单，功能强大</p>\n<p>C. 程序的运行速度在所有计算机语言的程序中最快</p>\n<p>D. 开源，可以自由阅读源代码并对其进行改动</p>\n<blockquote>\n<p>【答案】 C</p>\n</blockquote>\n<p>(7) 下列关于 Jupyter Notebook 界面构成说法错误的是 ( \t )</p>\n<p>A.Notebook 主要由两种形式的单元构成</p>\n<p>B.Jupyter Notebook 中的代码单元是读者编写代码的地方</p>\n<p>C.Jupyter Notebook 编辑界面有两种编辑模式</p>\n<p>D.Jupyter Notebook 可以将文件分享给他人</p>\n<blockquote>\n<p>【解析】</p>\n<p>Notebook 主要由两种形式的单元构成，分别是代码单元和 Markdown 单元。</p>\n<p>代码单元是读者编写代码的地方，而 Markdown 单元可以用来添加注释或者说明。</p>\n<p>Jupyter Notebook 编辑界面有两种编辑模式，分别是编辑模式和命令模式。在编辑模式下，可以对单元中的代码或者文本进行编辑；而在命令模式下，可以在键盘上输入一些命令来对整个文件或者单元进行操作。</p>\n<p>Jupyter Notebook 可以将文件保存为 ipynb 格式，并分享给他人。他人通过 Jupyter Notebook 打开该文件后，不仅可以看到整个分析过程的代码，还可以看到每段代码运行后的结果。</p>\n<p>【答案】 ？？答案有待考虑</p>\n</blockquote>\n<p>(8) 下列关于 Python 数据分析常用库的描述错误的是 ( A )</p>\n<p>A.NumPy 的在线安装不需要其他任何辅助工具</p>\n<p>B.SciPy 主要用于解决科学计算中的各种标准问题</p>\n<p>C.pandas 能够实现对数据的整理工作</p>\n<p>D.scikit-learn 是复杂有效的数据分析工具</p>\n<blockquote>\n<p>【解析】</p>\n<p>选项 A “NumPy 的在线安装不需要其他任何辅助工具” 是错误的描述。实际上，</p>\n<p>虽然 NumPy 库本身支持在线安装，但在实际操作中，通常需要其他辅助工具如包管理工具 pip 来进行安装。</p>\n<p>【答案】 A</p>\n</blockquote>\n<p>(9) 以下选项中关于 Anaconda 描述错误的是 ( C )</p>\n<p>A.Anaconda 支持 Linux、Windows 系统</p>\n<p>B.Anaconda 支持并集成了 800 多个第三方库</p>\n<p>C.Anaconda 是一个集成开发工具</p>\n<p>D.Anaconda 是免费的，适合数据分析相关工作人员安装使用</p>\n<blockquote>\n<p>【解析】</p>\n<p>Anaconda 是一个强大的 Python 发行版和包管理工具，但它本身不是一个集成开发环境。它提供了丰富的科学计算和数据分析库，以及多种工具和环境管理器，是 Python 开发者和数据科学家的重要工具。</p>\n</blockquote>\n<h2 id=\"第2章-numpy数组计算基础\"><a class=\"anchor\" href=\"#第2章-numpy数组计算基础\">#</a> 第 2 章 NumPy 数组计算基础</h2>\n<p>1. 选择题</p>\n<p>(1) 下列对 Python 中的 NumPy 描述不正确的是 (    )</p>\n<p>A.NumPy 是用于数据科学计算的基础模块</p>\n<p>B.NumPy 的数据容器能够保存任意类型的数据</p>\n<p>C.NumPy 提供了 ndarray 和 array 两种基本的对象</p>\n<p>D.NumPy 能够对多维数组进行数值运算</p>\n<blockquote>\n<p>【解析】</p>\n<p>NumPy 是 Python 中用于科学计算的一个基础库，它提供了高效的多维数组对象和工具。</p>\n<p>A. 正确。NumPy 确实是用于数据科学计算的基础模块。</p>\n<p>B. 正确。NumPy 的主要数据结构是 ndarray，它是一个多维数组对象，设计用于存储和处理数值数据。</p>\n<p>C. 不正确。NumPy 确实提供了 ndarray 和 ufunc 两种基本的对象，在 NumPy 中， <code>ndarray</code>  是一个多维数组对象，而 <code>array</code>  实际上是 <code>ndarray</code>  的一个别名或者是创建 <code>ndarray</code>  的一种方式。因此，实际上它们指的是同一个概念</p>\n<p>D. 正确。NumPy 能够对多维数组进行数值运算，包括基本的算术运算、统计运算等。</p>\n<p>【答案】 C</p>\n</blockquote>\n<p>(2) 下列选项中表示数组维度的是 (   ）</p>\n<p>A. ndim</p>\n<p>B. shape</p>\n<p>C. size</p>\n<p>D. dtype</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>ndim</strong>：此属性表示数组的维度数量，即轴数。它返回一个整数，表示数组有多少个维度。</p>\n<p>B. <strong>shape</strong>：此属性返回一个元组，描述每个维度中数组的大小。它并不直接给出维度的数量，而是提供了每个维度的长度信息。</p>\n<p>C. <strong>size</strong>：这个属性用于获取数组中元素的总数量，是所有维度大小的乘积。因此，它也不直接代表数组的维度。</p>\n<p>D. <strong>dtype</strong>：这是 NumPy 数组中数据的类型，例如 int、float 等。与数组的维度无关。</p>\n<p>综上所述，选项 A 的<strong> ndim</strong> 是表示数组维度的属性。</p>\n<p>【答案】A</p>\n</blockquote>\n<p>(3) 代码 “np.arange (0,1,0.2)” 的运行结果为 ( A）</p>\n<p>A. [0,0.2,0.4,0.6,0.8]</p>\n<p>C. [0.2,0.4, 0.6, 0.8]</p>\n<p>B. [0,0.2,0.4,0.6,0.8, 1.0]</p>\n<p>D. [0.2,0.4,0.6, 0.8, 1.0]</p>\n<p>(4) 代码 “np.linspace (0,10,5)” 的运行结果为 (  D）</p>\n<p>A. [0 , 2.5 , 5 , 7.5]</p>\n<p>B. [0,  2.5 ,  5 , 7.5 , 10]</p>\n<p>C. [0. , 2.5. , 5. , 7.5.]</p>\n<p>D.[0. ,2.5. , 5. , 7.5. , 10.]</p>\n<p>(5) 下列用于横向组合数组的函数是 ( \t）</p>\n<p>A. hstack</p>\n<p>B. hsplit</p>\n<p>C.vstack</p>\n<p>D.vsplit</p>\n<blockquote>\n<p>【解析】</p>\n<p>在 NumPy 中， <code>hstack</code>  函数用于横向堆叠数组，即沿水平方向合并数组。这里的 “h” 代表水平（horizontal）。因此，如果你想将几个数组水平组合在一起，你应该使用 <code>hstack</code>  函数。</p>\n<p>B.  <code>hsplit</code>  是用来沿着水平方向分割数组的函数，而不是组合。</p>\n<p>C.  <code>vstack</code>  用于垂直堆叠数组，即沿竖直方向合并数组。</p>\n<p>D.  <code>vsplit</code>  是用来沿着垂直方向分割数组的函数。</p>\n<p>【答案】 A</p>\n</blockquote>\n<h2 id=\"第3章pandas统计分析基础\"><a class=\"anchor\" href=\"#第3章pandas统计分析基础\">#</a> 第 3 章 pandas 统计分析基础</h2>\n<p>1. 选择题</p>\n<p>(1) 下列关于 pandas 数据读 / 写说正确的是 ( \t)</p>\n<p>A.read_csv 函数无法读取文本文档的数据</p>\n<p>B.read_sql 函数能够读取所有数据库的数据</p>\n<p>C.to_csv () 方法能够将结构化数据写入 CSV 文件</p>\n<p>D.to_csv () 方法能够将结构化数据写入 Excel 文件</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 该选项说法错误， <code>read_csv</code>  函数不仅可以读取 CSV 文件，也能通过设置适当的参数读取文本格式的数据，只要数据的结构符合 CSV 格式。</p>\n<p>B. 该选项说法过于绝对，错误。 <code>read_sql</code>  函数需要与特定的数据库连接一起使用，并且只能读取支持 SQL 查询的数据源，不是所有数据库。</p>\n<p>C. 该选项说法正确， <code>to_csv()</code>  方法确实能够将 DataFrame 等结构化数据写入 CSV 文件中，是 Pandas 中常用的数据导出功能之一。 D. 该选项说法错误，虽然名字类似，但 <code>to_csv()</code>  并不直接支持写入 Excel 文件，要写入 Excel 文件应使用 <code>to_excel()</code>  方法。</p>\n<p>【答案】C</p>\n</blockquote>\n<p>(2) 下列关于 pandas 基本操作说法错误的是 (  \t)</p>\n<p>A.drop () 方法可以删除某列的数据</p>\n<p>B. 使用 describe () 方法可以对 DataFrame 进行描述性统计</p>\n<p>C. 在创建 DataFrame 的过程中可同时设置索引</p>\n<p>D. 在创建 DataFrame 后可设置索引</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 该选项说法正确， <code>drop()</code>  方法确实可以用来删除 DataFrame 中的指定列或行。</p>\n<p>B. 该选项说法正确， <code>describe()</code>  方法会对 DataFrame 进行基本的描述性统计，包括计数、平均值、标准差、最小值、四分位数、最大值等（对于数值型列）。</p>\n<p>C. 该选项说法正确，在创建 DataFrame 时，可以通过指定 index 参数来设置初始索引。</p>\n<p>D. 该选项说法也是正确的，即使在 DataFrame 创建之后，也可以使用 <code>set_index()</code>  方法重新设置新的索引。</p>\n<p>【答案】按照解析所有选项 A、B、C、D 均为正确描述</p>\n</blockquote>\n<p>(3) 下列关于 pandas 支持的数据结构的说法错误的是 ( \t)</p>\n<p>A.pandas 只支持 Series 数据结构</p>\n<p>B.pandas 支持 Series 和 DataFrame</p>\n<p>C.DataFrame 可与带有标记轴 (行和列) 的二维数组一起使用</p>\n<p>D.Series 被定义为能够存储各种类型数据的一维数组</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 该选项说法错误，pandas 不仅仅支持 Series 数据结构，还支持其他数据结构，最主要的是 Series 和 DataFrame。</p>\n<p>B. 该选项说法正确，明确指出了 pandas 支持 Series 和 DataFrame 这两种主要数据结构。</p>\n<p>C. 该选项说法正确，DataFrame 是一种二维数据结构，它包含行列标签，可以看作是带有标记轴（行标签和列标签）的二维数组。</p>\n<p>D. 该选项说法正确，Series 是 pandas 中一种一维的数据结构，它可以存储任何数据类型（整数、字符串、浮点数等），并且每个元素都有一个唯一的标签（即索引）。</p>\n<p>根据以上解析，选项 A 表述错误。</p>\n<p>【答案】A</p>\n</blockquote>\n<p>(4) 以下分组操作中不涉及原始对象的是 (\t )</p>\n<p>A. 分割对象</p>\n<p>B. 应用一个函数</p>\n<p>C. 结合结果</p>\n<p>D. 聚合数据</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>分割对象</strong>：根据一个或多个列的值将数据分割成不同的组。这一步直接作用于原始对象，但并不改变原始对象，而是创建了按组划分的新视图。</p>\n<p>B. <strong>应用一个函数</strong>：对每个分组应用某个函数，比如求和、平均、计数等。这一步确实涉及原始对象的数据，但操作是在分组后的视图上进行的。</p>\n<p>C. <strong>结合结果</strong>：将各分组应用函数后得到的结果合并成一个新的数据结构。这意味着最终产出一个新的对象，而不是修改原始对象。</p>\n<p>D. <strong>聚合数据</strong>：这是分组操作的目的之一，通过应用函数来汇总每个组的数据，例如计算每组的平均值、最大值等。此步骤同样生成新的汇总信息，并不直接修改原始数据。</p>\n<p>【答案】D</p>\n</blockquote>\n<p>(5) 下列关于 apply () 方法说法正确的是 ( \t)</p>\n<p>A.apply () 方法无法应用于分组操作</p>\n<p>B.apply () 方法作用范围:pandas 中的 Series 和 DataFrame</p>\n<p>C.apply () 方法中不能自定义函数</p>\n<p>D.apply () 方法只能对行、列进行操作</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 该选项说法错误。实际上， <code>apply()</code>  方法可以非常灵活地应用于分组操作中，是对 DataFrame 或 Series 中的数据进行变换的一种方式，可以在分组后对每个组应用函数。</p>\n<p>B. 该选项说法正确。 <code>apply()</code>  方法广泛应用于 pandas 的两种主要数据结构 ——Series 和 DataFrame 中，可以对这些结构中的数据执行自定义函数或内置函数。</p>\n<p>C. 该选项说法错误。 <code>apply()</code>  方法的一个强大之处就在于能够接受自定义函数作为参数，这使得用户可以对数据执行复杂或特定的转换。</p>\n<p>D. 该选项说法错误。 <code>apply()</code>  方法不仅限于对行或列进行操作，其灵活性在于可以根据需要作用于整个对象、单列、单行，甚至是更复杂的操作，具体取决于函数的定义和传入的参数（如 axis 参数用于指定操作的轴）。</p>\n<p>【答案】B</p>\n</blockquote>\n<p>(6) 下列关于分组聚合的说法错误的是 ( \t)</p>\n<p>A. 使用 pandas 的 groupby () 方法进行分组时，只能对列进行操作</p>\n<p>B.pandas 分组聚合操作能够实现组内标准化</p>\n<p>C.pandas 聚合时能够使用 agg ()、apply ()、transform () 方法</p>\n<p>D.pandas 分组方法只有一个 groupby () 方法</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 该选项说法错误。 <code>groupby()</code>  方法不仅仅能对列进行操作，它可以根据一个或多个列进行分组，也可以根据行索引进行分组，甚至可以使用函数或映射进行更复杂的分组逻辑。</p>\n<p>B. 该选项说法正确。Pandas 的分组聚合功能十分强大，能够实现多种统计分析，包括组内标准化，即在每个组内减去平均值并除以标准差等操作。</p>\n<p>C. 该选项说法正确。在 pandas 中，进行分组后的聚合操作确实可以使用  <code>agg()</code> 、 <code>apply()</code>  和  <code>transform()</code>  等方法。 <code>agg()</code>  用于应用汇总统计函数， <code>apply()</code>  提供了更多定制化操作的空间，而  <code>transform()</code>  则会返回一个与原数据形状相同的 DataFrame 或 Series，常用于计算每个分组内部相对值。</p>\n<p>D. 该选项说法错误。虽然  <code>groupby()</code>  是 pandas 中最常用的分组方法，但并不是唯一的分组方法。例如，在某些特定场景下，也可以使用  <code>pivot_table()</code>  实现类似分组聚合的功能，尽管它的侧重点在于创建交叉表。</p>\n<p>【答案】A 和 D 都是错误的描述。但是，根据题目要求选择一个错误的说法，A 和 D 都符合题意。如果必须选择一个最直接错误的描述，考虑到 D 选项直接说 “只有一个  <code>groupby()</code>  方法” 这种绝对化的表述更容易被识别为错误，因此更倾向于选择 <strong>D</strong> 作为最终答案。</p>\n</blockquote>\n<p>(7) 使用 pivot_table 函数制作透视表时可用下列 (      ) 参数设置行分组键。</p>\n<p>A. Index</p>\n<p>B. raw</p>\n<p>C. values</p>\n<p>D. data</p>\n<blockquote>\n<p>【解析】  <code>pivot_table</code>  是 pandas 库中用于创建透视表的一个强大函数，它允许用户以灵活的方式对数据进行分组、聚合和重塑。根据题目要求，我们需要找出用于设置行分组键的参数。</p>\n<p>A. <strong>Index</strong> - 这个选项正确。在  <code>pivot_table</code>  函数中， <code>index</code>  参数用于指定用作行分组键的列名或列名列表。它是创建透视表时定义行结构的关键参数。(columns 表示列分组键)</p>\n<p>B. <strong>raw</strong> - 这个选项与行分组键无关。 <code>raw</code>  参数是一个布尔值，决定聚合函数是接收原始数据还是经过转化的数据。默认为  <code>False</code> ，意味着聚合函数接收到的是已经经过转化的数据。</p>\n<p>C. <strong>values</strong> - 此参数用于指定要聚合的值的列名。它并不直接控制行分组，而是与聚合计算相关。</p>\n<p>D. <strong>data</strong> - 这是  <code>pivot_table</code>  函数的第一个参数，用于指定要进行透视操作的数据集（DataFrame）。它不直接定义行分组键。</p>\n<p>【答案】A</p>\n</blockquote>\n<p>(8) 下列对 DataFrame 的常用属性说法错误的是 (\t)。</p>\n<p>A.values 可以获取元素</p>\n<p>B.index 可查看索引情况</p>\n<p>C.column 可查看 DataFrame 的列名</p>\n<p>D.dtypes 可查看各列的数据类型</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>values</strong> - 该选项说法正确。 <code>values</code>  属性可以用来获取 DataFrame 中的所有元素，以 NumPy 数组的形式返回。</p>\n<p>B. <strong>index</strong> - 该选项说法正确。 <code>index</code>  属性用于查看 DataFrame 的行索引。</p>\n<p>C. <strong>column</strong> - 该选项说法错误。正确的属性名称应为  <code>columns</code> （复数形式），用于查看 DataFrame 的列名。因此，这里提到的 &quot;column&quot; 是错误的表述。</p>\n<p>D. <strong>dtypes</strong> - 该选项说法正确。 <code>dtypes</code>  属性可以查看 DataFrame 每一列的数据类型。</p>\n<p>【答案】C</p>\n</blockquote>\n<h2 id=\"第4章-使用-pandas-进行数据预处理\"><a class=\"anchor\" href=\"#第4章-使用-pandas-进行数据预处理\">#</a> 第 4 章 使用 pandas 进行数据预处理</h2>\n<p>1、选择题</p>\n<p>(1) 在下列选项中可以进行主键合并的是 ( \t）</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. append()</p>\n<p>D. combine_first()</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>merge</strong> - 这个选项是正确的。 <code>merge</code>  函数可以用来根据一个或多个键（通常包括主键）来合并两个 DataFrame。这是进行主键合并的典型方法。</p>\n<p>B. <strong>concat</strong> - 这个选项主要用于纵向或横向堆叠 DataFrame，而不是根据主键进行合并。</p>\n<p>C. <strong>append</strong> - 虽然  <code>append</code>  方法可以将一个 DataFrame 添加到另一个 DataFrame 的底部，进行竖直方向上的合并，但它并不根据主键进行合并，也不会解决重复的行问题。</p>\n<p>D. <strong>combine_first</strong> - 这个方法用于填充缺失值，其中一个对象的缺失值由另一个对象对应的值填充，而不是用于基于主键的合并。</p>\n<p>【答案】A</p>\n</blockquote>\n<p>(2) 在下列选项中可以进行横向堆叠的是 (\t)。</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. join()</p>\n<p>D. combine_first()</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>merge</strong> - 这个选项主要用于根据一个或多个键合并 DataFrame，虽然可以实现某种程度上的横向扩展（通过设置 <code>suffixes</code>  处理列名冲突），但其主要目的不是横向堆叠。</p>\n<p>B. <strong>concat</strong> - 正确。 <code>concat</code>  函数是进行 DataFrame 横向或纵向堆叠的主要工具。通过设置参数  <code>axis=1</code> ，可以实现 DataFrame 的横向堆叠，即将多个 DataFrame 的列并置在一起。</p>\n<p>C. <strong>join</strong> - 这个选项在 pandas 中通常指的是 DataFrame 或 Series 的 join 方法，它可以根据索引进行合并，但直接说 “join ()” 不够精确，因为 join 操作本身可以有多种方式，并且通常不是指横向堆叠的直接操作。</p>\n<p>D. <strong>combine_first</strong> - 这个方法用于用一个对象中的非 NaN 值填补另一个对象中的 NaN 值，与横向堆叠无关。</p>\n<p>【答案】B</p>\n</blockquote>\n<p>(3) 在下列选项中可以进行重叠合并的是 ( \t)。</p>\n<p>A. merge</p>\n<p>B.concat</p>\n<p>C. append()</p>\n<p>D. combine_first()</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>merge</strong> - 虽然 merge 可以合并具有共同列（键）的 DataFrame，但它通常涉及到列的匹配和可能的行对行合并，并不专门指重叠合并或数据填补。</p>\n<p>B. <strong>concat</strong> - concat 主要用于简单地堆叠或拼接 DataFrame，而不是重叠合并数据以处理缺失值。</p>\n<p>C. <strong>append</strong> - 类似于 concat，append 主要是进行垂直堆叠，不涉及数据的智能重叠或填补缺失值。</p>\n<p>D. <strong>combine_first</strong> - 正确。 <code>combine_first()</code>  方法允许一个对象中的非空值替换另一个对象中对应位置的空值，实现了数据的重叠合并，特别适用于处理缺失数据的情况。</p>\n<p>【答案】D</p>\n</blockquote>\n<p>(4) 下列关于 pandas 中 drop_duplicates () 方法的说法正确的是 (\t)</p>\n<p>A.drop_duplicates0) 是常用的主键合并方法，能够实现左连接和右连接</p>\n<p>B.drop_duplicates () 方法只对 DataFrame 有效</p>\n<p>C.drop_duplicatesO 方法仅支持单一特征数据去重</p>\n<p>D.drop_duplicatesO 方法不会改变原数据的排列</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>drop_duplicates () 是常用的主键合并方法，能够实现左连接和右连接</strong> - 不正确。 <code>drop_duplicates()</code>  方法主要用于删除数据中的重复行，并不是用于数据合并的操作，更不会实现左连接或右连接。</p>\n<p>B. <strong>drop_duplicates () 方法只对 DataFrame 有效</strong> - 不完全正确。实际上， <code>drop_duplicates()</code>  方法既可以用在 DataFrame 上，也可以用在 Series 上，用于删除其中的重复值。</p>\n<p>C. <strong>drop_duplicates () 方法仅支持单一特征数据去重</strong> - 不正确。此方法可以基于所有列或特定列进行去重，默认情况下会考虑所有列，也可以通过设置参数  <code>subset</code>  指定根据哪些列进行去重。</p>\n<p>D. <strong>drop_duplicates () 方法不会改变原数据的排列</strong> - 部分正确。 <code>drop_duplicates()</code>  本身不会改变原数据的排列顺序，但默认情况下它会返回一个新的对象，其中重复项已被删除，而原始数据保持不变。不过，如果设置  <code>inplace=True</code> ，则会在原地修改 DataFrame，但这也并不改变非重复项的原有排列顺序。</p>\n<p>【答案】A</p>\n</blockquote>\n<p>(5) 下列关于特征去重的说法错误的是 (\t)。</p>\n<p>A.cor () 方法可通过相似度矩阵去重</p>\n<p>B. 可通过 equals () 方法进行特征去重</p>\n<p>C. 相似度矩阵去重可对任意类型的重复特征去重</p>\n<p>D. 相似度矩阵去重只能对数值型的重复特征去重</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. <strong>cor () 方法可通过相似度矩阵去重</strong> - 这个说法不准确。 <code>cor()</code>  方法在 pandas 中并不存在，但如果你是指计算相关系数的函数（如  <code>corr()</code> ），它主要用于衡量变量之间的线性关系强度，并不适合直接用于特征去重。特征去重一般涉及到比较特征值是否完全相同或几乎相同，而不是计算它们之间的相关性。</p>\n<p>B. <strong>可通过 equals () 方法进行特征去重</strong> - 这个说法也不太准确。 <code>equals()</code>  方法是用来比较两个 DataFrame 或 Series 是否完全相等（包括数据和结构），通常不直接用于特征去重。特征去重更多是针对 DataFrame 内部的重复行或列，而不是比较两个独立的 DataFrame 是否相等。</p>\n<p>C. <strong>相似度矩阵去重可对任意类型的重复特征去重</strong> - 这个说法错误。相似度矩阵通常用于量化不同特征或样本间的相似程度，它基于数值计算，因此主要用于数值型数据的比较。对于非数值型数据（如分类数据），直接应用相似度矩阵去重并不合适，除非先进行合适的编码转换。</p>\n<p>D. <strong>相似度矩阵去重只能对数值型的重复特征去重</strong> - 相比之下，这个说法更接近实际情况。相似度计算确实主要适用于数值型数据，因为非数值数据需要转换为可以量化的形式才能进行相似度计算。然而，这个选项表述也存在一定的误导性，因为它暗示了 “相似度矩阵去重” 是一个标准操作，实际上在常规的数据处理中，我们通常不直接使用相似度矩阵进行特征去重，而是利用其他方法，如直接比较或利用 pandas 的  <code>drop_duplicates()</code>  方法。</p>\n<p>【答案】考虑到所有选项的表述都不够准确或存在误导，如果必须选择一个最不符合实际情况的选项，D 选项尽管在概念上部分正确</p>\n</blockquote>\n<p>(6) 在下列选项中可以进行特征删除的是 ( \t).</p>\n<p>A.dropna () 方法   B.fllna () 方法</p>\n<p>C.isnull0) 方法   D.notnull () 方法</p>\n<blockquote>\n<p>【解析】：</p>\n<p>A.  <code>dropna()</code>  方法：这个方法用于删除包含缺失值（NaN）的行或列，因此它确实可以间接用于特征删除，尤其是当我们基于缺失数据来剔除某些特征时。</p>\n<p>B.  <code>fillna()</code>  方法：这个方法是用来填充缺失值的，而不是删除特征，因此它不适用于特征删除。</p>\n<p>C.  <code>isnull()</code>  方法：此方法用于检测数据中的缺失值，返回一个布尔值的数组，指示每个元素是否为 NaN。它不直接进行特征删除。</p>\n<p>D.  <code>notnull()</code>  方法：与 <code>isnull()</code>  相反，这个方法用于标识非缺失值的位置，同样不执行特征删除操作。</p>\n<p>【答案】 A. dropna () 方法</p>\n</blockquote>\n<p>(7) 在下列选项中可以进行缺失值替换的是 (\t)。</p>\n<p>A.dropna0 方法  B.fllna () 方法</p>\n<p>C.isnull0 方法    D.notnull0 方法</p>\n<blockquote>\n<p>【解析】：</p>\n<p>A.  <code>dropna()</code>  方法：这个方法是用来删除包含缺失值（NaN）的行或列，并非用来替换缺失值。</p>\n<p>B.  <code>fillna()</code>  方法：此方法正是用来填充或替换数据中的缺失值。可以指定一个具体值、使用前一个或后一个有效值填充，或者使用一系列值（如列的均值）进行填充，因此是进行缺失值替换的正确选项。</p>\n<p>C.  <code>isnull()</code>  方法：此方法用于检查 DataFrame 或 Series 中的值是否为 NaN，返回一个布尔型的 Series 或 DataFrame，指示每个值是否为缺失值，并不做任何替换操作。</p>\n<p>D.  <code>notnull()</code>  方法：与 <code>isnull()</code>  相反，用于检查值是否非 NaN，同样不做任何缺失值的替换。</p>\n<p>【答案】 B.  <code>fillna()</code>  方法</p>\n</blockquote>\n<p>(8) 下列关于插值法的说法错误的是 (\t )</p>\n<p>A. 常见的插值法有线性插值、多项式插值和样条插值</p>\n<p>B. 线性插值通过求解线性方程得到缺失值</p>\n<p>C. 常见的线性插值有拉格朗日插值和牛顿插值</p>\n<p>D.pandas 中的 interpolate () 法可进行插值操作</p>\n<blockquote>\n<p>【解析】：</p>\n<p>A. 描述了常见的几种插值方法类型，包括线性插值、多项式插值和样条插值，这是正确的。</p>\n<p>B. 线性插值确实涉及到通过线性方程来估算数据点之间的缺失值或未知值，通常基于最邻近的两个已知数据点进行简单线性拟合，所以这个描述也是准确的。</p>\n<p>C. 这里存在一个误区。拉格朗日插值和牛顿插值实际上都是多项式插值的具体形式，而非线性插值。线性插值更简单的形式可能是指两点之间直线的插值，而拉格朗日插值和牛顿插值允许使用更高阶的多项式通过多个数据点来进行插值，因此这个选项说法错误。</p>\n<p>D. pandas 库中的 <code>interpolate()</code>  函数确实提供了多种插值方法，包括线性插值、多项式插值等，用于处理时间序列或其它序列数据中的缺失值，描述正确。</p>\n<p>答案： C. 常见的线性插值有拉格朗日插值和牛顿插值 (这个说法是错误的，因为拉格朗日插值和牛顿插值属于多项式插值，不是线性插值。)</p>\n</blockquote>\n<p>(9) 在下列选项中可以进行哑变量处理的是 ( \t)</p>\n<p>A.cut 函数</p>\n<p>B. get_cut 函数</p>\n<p>C.dummies 函数</p>\n<p>D. get_dummies 函数</p>\n<blockquote>\n<p>【解析】</p>\n<p>哑变量处理通常是指将分类变量转换为数值形式，以便在统计分析或机器学习模型中使用。这种转换允许模型理解不同的类别并为它们分配不同的权重。在 Python 的数据分析库 pandas 中，有一个常用的功能就是将分类变量转换为哑变量（又称虚拟变量）。</p>\n<p>A.  <code>cut</code>  函数主要用于将连续变量离散化，即将连续范围切分成几个区间，不适用于哑变量处理。 B.  <code>get_cut</code>  函数并不是 pandas 或任何常见数据分析库中的标准函数，因此它不是用于哑变量处理的。 C.  <code>dummies</code>  函数同样并非标准函数，至少不是广泛认知中用于哑变量处理的函数名。 D.  <code>get_dummies</code>  函数是 pandas 库中的一个函数，专门用于将分类变量转换成哑变量形式，非常适合于本题目的需求。</p>\n<p>【答案】 D. get_dummies 函数</p>\n</blockquote>\n<p>(10) 在下列选项中不属于检测与处理缺失值的方法的是 ( \t)</p>\n<p>A. 插值法</p>\n<p>B. 替换法</p>\n<p>C. 哑变量处理</p>\n<p>D. 删除法</p>\n<blockquote>\n<p>【解析】 处理数据集中缺失值的方法多种多样，但核心目标都是为了应对数据不完整的情况，确保分析或模型构建的有效性。下面是各个选项的简要说明：</p>\n<p>A. <strong>插值法</strong>：这是一种常见的处理缺失值技术，通过在缺失值处估算一个合适的数值来填补空缺。插值方法有很多种，如线性插值、多项式插值、最近邻插值等。</p>\n<p>B. <strong>替换法</strong>：也称为 “填补法”，可以直接用一个固定值（如平均值、中位数、众数等）、数据集中的其他值或者基于模型预测的值来替换缺失值。</p>\n<p>C. <strong>哑变量处理</strong>：这不是用来直接处理缺失值的方法。哑变量（或虚拟变量）处理是用来编码分类特征的一种技巧，以便能在统计模型中使用。它并不涉及填补或删除缺失数据。</p>\n<p>D. <strong>删除法</strong>：即直接删除含有缺失值的观测记录。这是最直接但可能也是最不理想的处理方式，因为它会导致信息丢失，特别是当缺失值较多时。</p>\n<p>【答案】 C. 哑变量处理</p>\n</blockquote>\n<h2 id=\"第5章-matplotib-seaborn-pyecharts-数据可视化基础\"><a class=\"anchor\" href=\"#第5章-matplotib-seaborn-pyecharts-数据可视化基础\">#</a> 第 5 章 Matplotib、seaborn、pyecharts 数据可视化基础</h2>\n<p>1. 选择题</p>\n<p>(1) 下列关于绘图的标准流程说法错误的是 (\t)</p>\n<p>A. 绘图之前必须先创建画布，不可省略</p>\n<p>B. 加图例必须在绘制图形之后进行</p>\n<p>C. 图流程的最后部分是保存和显示图形</p>\n<p>D. 添加标题、坐标轴标签，绘制图形等步骤没有先后顺序</p>\n<blockquote>\n<p>【解析】：</p>\n<p>A. 绘图之前确实必须先创建画布，这是绘图的基础，不可省略。</p>\n<p>B. 图例通常是在绘制图形之后添加的，因为图例是对图表中元素的解释，需要在图表内容完成后添加，以便准确对应。</p>\n<p>C. 在完成所有绘图元素的设置后，最后一步通常是保存图形到文件以及 / 或者在屏幕上显示图形，这的确是流程的一部分。</p>\n<p>D. 虽然在某些灵活的绘图环境中，添加标题、坐标轴标签等操作的先后顺序可能不会影响最终图形的显示，但从标准流程和清晰组织代码的角度考虑，一般建议先设定图形的整体布局（如标题、坐标轴标签），再进行具体图形元素的绘制。这样有利于逻辑清晰和后续的代码维护。</p>\n<p>因此，虽然 D 选项不一定在所有情况下都错，但在强调标准流程和良好实践的情境下，它表述得不够准确。</p>\n<p>【答案】 D</p>\n</blockquote>\n<p>(2) pyplot 使用 re 配置文件来自定义图形的各种默认属性，用于修改线条上点的形状的 rc 参数名称是 ( \t)</p>\n<p>A.lines,linewidth</p>\n<p>B.lines.markersize</p>\n<p>C. lines.linestyle</p>\n<p>D. lines.marker</p>\n<blockquote>\n<p>【解析】：</p>\n<p>A. <strong>lines.linewidth</strong>：这个参数用于设置线条的宽度，与点的样式无关。</p>\n<p>B. <strong>lines.markersize</strong>：这个参数用于设置点的大小，虽然涉及点，但并不改变点的形状。</p>\n<p>C. <strong>lines.linestyle</strong>：这个参数用于设置线条的样式，例如实线、虚线等，同样与点的样式无关。</p>\n<p>D. <strong>lines.marker</strong>：这个参数直接决定了点的形状，如圆形、方形、菱形等。</p>\n<p>【答案】 D</p>\n</blockquote>\n<p>(3) 下列代码中能够为图形添加图例的是 ( \t)</p>\n<p>A. plt.xticks([0,1,2,3, 4])</p>\n<p>B. plt.plot(x,y)</p>\n<p>C,plt.legend('y = cos x’)</p>\n<p>D. pit.title (散点图”)</p>\n<blockquote>\n<p>【解析】：</p>\n<p>C.  <code>plt.legend('y = cos x')</code>  能够为图形添加图例。这一行代码的作用是添加一个图例到图表中，其中  <code>'y = cos x'</code>  是图例的文本，表明对应的图形代表什么。在 Matplotlib 库中， <code>plt.legend()</code>  函数用于此目的。</p>\n<p>A.  <code>plt.xticks([0,1,2,3,4])</code>  用来设置 x 轴刻度标记的位置。</p>\n<p>B.  <code>plt.plot(x,y)</code>  用来在图表中绘制线或者点，其中  <code>x</code>  和  <code>y</code>  是数据点的坐标。</p>\n<p>D.  <code>pit.title('散点图')</code>  这里有一个拼写错误，应该是  <code>plt.title('散点图')</code> ，该代码是用于给图表添加标题，而非图例。正确的函数名应该是  <code>plt</code>  而非  <code>pit</code> 。</p>\n<p>【答案】 C</p>\n</blockquote>\n<p>(4) 下列图形常用于分析各分组数据在总数据中所占比例的是（\t)</p>\n<p>A. 折线图</p>\n<p>B. 饼图</p>\n<p>C. 柱形图</p>\n<p>D. 箱线图</p>\n<blockquote>\n<p>【解析】 要分析各分组数据在总数据中所占的比例，最适合的图表类型是能够直观展示各部分占比关系的图形。选项中：</p>\n<p>A. 折线图通常用来展示数据随时间变化的趋势；</p>\n<p>B. 饼图用于展示各部分所占总体的比例，每个部分的大小代表其在整体中的比例，非常适合回答这类问题；</p>\n<p>C. 柱形图显示各个类别之间的比较，虽然也可以通过高度看出比例，但不如饼图直观；</p>\n<p>D. 箱线图则主要用于显示一组数据分散情况，特别是异常值、中位数等统计信息，不适合展示比例。</p>\n<p>【答案】 B. 饼图</p>\n</blockquote>\n<p>(5) 下列说法不正确的是 (\t)</p>\n<p>A. 散点图可以用于查看数据中的离释值</p>\n<p>B. 折线图可以用于查看数据的数最差和变化趋势</p>\n<p>C. 柱形图可以用于查看整体数据的数量分布</p>\n<p>D. 箱线图可以用于查看特征间的相关关系</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 散点图确实可以帮助识别数据中的离群点，因为它们会显示出与其他数据点不同的模式或位置，这一点是正确的。</p>\n<p>B. 折线图非常适合展示数据随时间的变化趋势以及观察最大值和最小值（即数量差异），因此这个描述也是正确的。</p>\n<p>C. 柱形图能够有效地展示不同类别的数据量大小，从而反映整体数据的数量分布，这同样是正确的。</p>\n<p>D. 箱线图（又称为盒须图）主要用来展示数据的五数概括（最小值、下四分位数、中位数、上四分位数、最大值）以及识别潜在的异常值，但它并不直接用于查看特征间的相关性。相关性通常通过散点图来分析，因此此选项说法不正确。</p>\n<p>【答案】 D. 箱线图可以用于查看特征间的关系（不正确）</p>\n</blockquote>\n<p>(6) 下列有关 seabom 库说法正确的是 ( \t)</p>\n<p>A. 在 seabomn 库的主题样式中 dankgrid 表示黑色背最</p>\n<p>B. 使用 set_context 函数可以设置主题样式</p>\n<p>C. 使用 despine 函数可以设置图形的边框</p>\n<p>D.seabom 库是 Matplotlib 库的替代者</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. Seaborn 库提供了一系列预设的主题样式，用以改变图表的外观，包括背景颜色。&quot;darkgrid&quot; 是其中一个主题，它确实提供了带有网格线的深色背景，所以此说法是正确的。</p>\n<p>B.  <code>set_context</code>  函数是用来设置 Seaborn 绘图的上下文 (context)，它会影响图表元素的大小，如文字大小、线条宽度等，以适应不同的展示场景（如论文、演讲或笔记）。虽然它间接影响图表的视觉风格，但直接说它可以 “设置主题样式” 可能不够准确，因为它主要不是用来切换颜色方案或背景风格的。Seaborn 中用于改变主题样式的函数主要是 <code>set_style</code> 。</p>\n<p>C.  <code>despine</code>  函数用于移除图表中的轴脊（spines），即图表边框的部分，默认通常是顶部和右侧的边框，使得图表看起来更加现代化和简洁。因此，此说法是正确的，尽管它的表述没有提及是移除哪些边框或如何移除，但基于 Seaborn 中 despine 的功能，该描述基本正确。</p>\n<p>D. Seaborn 库并不是 Matplotlib 的替代者，而是建立在 Matplotlib 之上的一个高级数据可视化库，它提供了更易于使用的接口来创建统计图形，并且与 Matplotlib 高度兼容，可以用来增强 Matplotlib 的功能。因此，说 Seaborn 是 Matplotlib 的替代者是不准确的，它们更多是互补关系。</p>\n<p>【答案】 A 和 C 的描述是正确的。</p>\n</blockquote>\n<p>(7) HS 颜色空间中的 H 表示为 (\t)</p>\n<p>A. 亮度</p>\n<p>B. 色调</p>\n<p>C. 饱和度</p>\n<p>D. 空间大小</p>\n<blockquote>\n<p>HS 颜色空间通常指的是 HSV（Hue, Saturation, Value）或 HSL（Hue, Saturation, Lightness）颜色空间的误写。在这些颜色空间中，各字母代表的意义为：</p>\n<ul>\n<li><strong>H</strong>（Hue）：色调，表示色彩种类，如红、绿、蓝等。</li>\n<li><strong>S</strong>（Saturation）：饱和度，表示颜色的纯度或者强度，饱和度越高颜色越鲜明，低饱和度则偏向灰色。</li>\n<li><strong>V</strong> 或 <strong>L</strong>（Value/Lightness）：明度 / 亮度，表示颜色的明暗程度。</li>\n</ul>\n<p>根据这一解释，HS 中的 &quot;S&quot; 代表的是：</p>\n<p>C. 饱和度</p>\n</blockquote>\n<p>(8) 下列不是系列配置项的是 (\t)。</p>\n<p>A. 标记点配置项</p>\n<p>B. 标签配置项</p>\n<p>C. 文本样式配置项</p>\n<p>D. 标题配置项</p>\n<blockquote>\n<p>A. 标记点配置项 - 通常指图表中数据点的样式设定，如颜色、形状、大小等，是常见的配置项。 B. 标签配置项 - 包括轴标签、图例标签等，用于定义图表中各种标签的显示方式，也是一个标准配置选项。 C. 文本样式配置项 - 涉及图表中所有文本的样式，比如字体、大小、颜色等，属于常见的配置范畴。 D. 标题配置项 - 虽然每个选项看起来都合理，但如果必须选出一个 “不是系列配置项” 的，从字面上理解，“系列” 可能指向数据系列（如柱状图中的不同分类、折线图的不同线条等），标题配置项（如图表的大标题）通常不直接关联到数据系列的展示细节，而是整个图表的高级设置。</p>\n<p>基于上述分析，如果问题旨在区分那些直接关联到数据表现形式的配置项与图表整体设置的话，那么：</p>\n<p>【答案】 D. 标题配置项（如果这里的 “系列配置项” 特指针对数据系列的详细配置，标题则更多关乎整个图表而非特定数据系列。）</p>\n</blockquote>\n<p>(9) 下列有关全局配置项说法错误的是 ( C</p>\n<p>A. 全局配置项可以对标题、图例、坐标轴等的配置项进行配置</p>\n<p>B. 使用 TitleOpts 类配置标题配置项</p>\n<p>C.TitleOpts 类和 AxisOpts 类的参数设置完全相同</p>\n<p>D. 使用 LegendOpts 类配置图例配置项</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 全局配置项确实可以用来设置图表的多个基础元素，如标题、图例、坐标轴等的外观和行为，这是正确的描述。</p>\n<p>B.  <code>TitleOpts</code>  类通常用于配置图表的标题，包括标题文本、位置、字体样式等，符合全局配置项的用途，此描述正确。</p>\n<p>C.  <code>TitleOpts</code>  类和  <code>AxisOpts</code>  类虽然都是配置项的类，但是它们设置的参数并不完全相同。 <code>TitleOpts</code>  主要关注标题的配置，如文本、位置、样式等；而  <code>AxisOpts</code>  则侧重于坐标轴的配置，包括刻度、标签、标题、网格线等。因此，这个说法是错误的。</p>\n<p>D.  <code>LegendOpts</code>  类用于配置图表的图例，包括图例的位置、是否显示、图例项的样式等，这也是正确的描述。</p>\n<p>【答案】 C. TitleOpts 类和 AxisOpts 类的参数设置完全相同（错误）</p>\n</blockquote>\n<p>(10) 下列说法正确的是 (  \t)</p>\n<p>A. 基本散点图和 3D 散点图的绘制方法相同</p>\n<p>B. 热力图可用于了解数据集中的变量的相关关系</p>\n<p>C.stripplot 函数接收的数据只能是列表和数据框</p>\n<p>D. 使用 stripplot 函数可以绘制线性回归拟合图</p>\n<blockquote>\n<p>【解析】</p>\n<p>A. 基本散点图和 3D 散点图的绘制方法不相同。基本散点图一般在二维平面上展示，而 3D 散点图则是在三维空间中展示，两者需要不同的函数或者参数来实现，比如在 Matplotlib 中，基本散点图使用 <code>scatter()</code>  函数，而 3D 散点图则使用 <code>scatter3D()</code>  或 <code>Axes3D.scatter()</code>  方法，故该选项错误。</p>\n<p>B. 热力图（Heatmap）通过颜色的深浅变化展示数据矩阵，常用于展示数据集中变量间相关性，颜色越深通常表示相关性越强（正相关或负相关），是探索变量间关系的有效工具，故此选项正确。</p>\n<p>C.  <code>stripplot</code>  是 Seaborn 库中的一个函数，用于创建简单的散点图，可以接收多种类型的数据输入，包括 Pandas 的 DataFrame、Series 以及 NumPy 数组等，并不仅限于列表和数据框，因此该选项错误。</p>\n<p>D.  <code>stripplot</code>  函数主要用于创建分组散点图，并不直接用于绘制线性回归拟合图。在 Seaborn 中，通常使用 <code>regplot()</code>  或 <code>lmplot()</code>  函数来绘制带有线性回归线的图表，故此选项错误。</p>\n<p>【答案】 B. 热力图可用于了解数据集中的变量的相关关系（正确）</p>\n</blockquote>\n<h2 id=\"第6章-使用-scikit-learn-构建模型\"><a class=\"anchor\" href=\"#第6章-使用-scikit-learn-构建模型\">#</a> 第 6 章 使用 scikit-learn 构建模型</h2>\n<p>(1) skleam 转换器的主要方法不包据 ( \t)</p>\n<p>A. fit()</p>\n<p>B. transform()</p>\n<p>C:fa_transform()</p>\n<p>D, fit_transforms()</p>\n<blockquote>\n<p>答案是</p>\n<p>D,  <code>fit_transforms()</code> 。在 Scikit-learn 库中，转换器（Transformer）的主要方法包括：</p>\n<p>A.  <code>fit()</code> : 用于学习数据的统计属性（如均值、方差），该方法不会改变数据，只是拟合模型。</p>\n<p>B.  <code>transform()</code> : 应用 <code>fit()</code>  所学到的统计属性对数据进行转换或处理。</p>\n<p>C.  <code>fit_transform()</code> : 这是一个组合方法，先调用 <code>fit()</code>  学习数据特性，然后立即调用 <code>transform()</code>  对同一数据应用变换。这个方法常用于训练阶段。</p>\n<p>但是，没有名为 <code>fit_transforms()</code>  的方法。因此，选项 D 是不正确的。</p>\n</blockquote>\n<p>(2) skleam 中用于对特征进行归一化的函数是 ( \t)</p>\n<p>A.StandardScaler</p>\n<p>B, Normalizer</p>\n<p>C.Binarizer</p>\n<p>D.MinMaxScaler</p>\n<blockquote>\n<p>答案是</p>\n<p>B,  <code>Normalizer</code> 。在 Scikit-learn 库中，用于对特征进行归一化的函数确实包括 <code>Normalizer</code> 。它通过将每个样本的各个特征缩放到单位范数来实现归一化，这意味着每个样本的欧几里得范式（即各特征值的平方和的平方根）将会变为 1，这通常用于文本数据或任何其他需要向量规范化的情况。</p>\n<p>而其他选项： A.  <code>StandardScaler</code>  是用于标准化特征，即将特征调整为具有零均值和单位方差的高斯分布，而不是简单的归一化。 C.  <code>Binarizer</code>  用于二值化特征，根据阈值将连续型特征离散化为二元状态。 D.  <code>MinMaxScaler</code>  用于缩放特征到一个指定的最小值和最大值之间，通常是 0 和 1，这也是一种归一化方法，但更具体的是最小 - 最大缩放。</p>\n<p>如果问题是特指 “归一化” 到单位范数，那么正确答案是 B,  <code>Normalizer</code> 。但如果问题意图更广泛地指 “标准化 / 归一化”，则 D,  <code>MinMaxScaler</code>  也是一个常见的选择，尽管它不符合严格的数学定义下的 “归一化”。因此，请根据上下文判断题目意图。</p>\n</blockquote>\n<p>(3) 下列算法中属于分类方法的是 (\t)</p>\n<p>A.SVC 算法</p>\n<p>B.CLIOUE 算法</p>\n<p>D.K-MEDOIDS 算法</p>\n<blockquote>\n<p>A. SVC 算法 —— 支持向量机（Support Vector Classifier）是一种常用的分类方法，它能够处理线性和非线性可分数据，通过寻找最优超平面来完成分类任务。</p>\n<p>B. CLIOUE 算法 —— 此选项可能指的是 CLIQUE 算法，通常用于图的社区结构发现，不是一种标准的分类方法，但若为笔误或特殊上下文中的分类应用，则需具体分析。然而，直接从名称看，它不直接对应于典型的分类算法。</p>\n<p>D. K-MEDOIDS 算法 —— 是聚类算法的一种，用于将数据集划分成 K 个簇，每个簇由一个中心对象（medoid）代表，与 K-Means 算法相似，但选择实际数据点作为中心，而不是均值点。这不属于分类方法，而是无监督学习中的聚类方法。</p>\n<p>基于上述分析，如果仅从分类方法的角度考虑，正确答案应是 A.SVC 算法。但请注意，选项列表似乎缺少了 C 选项，且 B 选项的描述可能需要具体情境来精确解读其是否涉及分类。</p>\n</blockquote>\n<p>(4) classification_report 函数用于输出分类模型评价报告，其内容不包括 ( \t)。</p>\n<p>A. precision</p>\n<p>B. recall</p>\n<p>C.fl-score</p>\n<p>D. true postive rate</p>\n<blockquote>\n<p>答案是 D. true positive rate（真正率 / 灵敏度）</p>\n<p><code>classification_report</code>  函数是 Scikit-learn 库中的一个功能，用于输出多类分类模型的性能评估报告。这个报告通常包含以下指标：</p>\n<p>A. Precision（精确率）：衡量被分类器预测为正例的样本中实际为正例的比例。 B. Recall（召回率）：衡量所有实际正例中被分类器正确识别出来的比例，也就是真正率。 C. F1-score（F 分数）：是 Precision 和 Recall 的调和平均值，用于综合评估模型的精确度和召回率。</p>\n<p>而 D. True Positive Rate（真正率）实际上是 Recall 的另一种说法，所以在 <code>classification_report</code>  中是直接提供的，并不意味着它不被包含在内。</p>\n</blockquote>\n<p>(5) 下列关于回归模型评价指标说法不正确的是 ( D</p>\n<p>A. 平均绝对误差的值越接近 0，模型性能越好</p>\n<p>B.R 值越接近 1，模型性能越好</p>\n<p>C. 可解释方差越接近 0，模型性能越差</p>\n<p>D. 均方误差越接近 0，模型性能越差</p>\n<blockquote>\n<p>答案是 D. 均方误差越接近 0，模型性能越差</p>\n<p>这是不正确的说法。实际上，均方误差（Mean Squared Error, MSE）越接近 0，表示模型预测值与真实值之间的差距越小，也就是说模型的性能越好。因此，正确的描述应该是均方误差越接近 0，模型性能越好。</p>\n</blockquote>\n<h1 id=\"分析题根据题目要求绘制项目聚类或分类流程图\"><a class=\"anchor\" href=\"#分析题根据题目要求绘制项目聚类或分类流程图\">#</a> 分析题：根据题目要求绘制项目聚类或分类流程图</h1>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/4e51ba49091c481fbed4dfc7a23be5d.jpg\" alt=\"4e51ba49091c481fbed4dfc7a23be5d\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/f261e966cada56fb4a6663378821c71.jpg\" alt=\"f261e966cada56fb4a6663378821c71\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/1fdd8a4002ca1c5b768f527483eec13.jpg\" alt=\"1fdd8a4002ca1c5b768f527483eec13\" /></p>\n<h1 id=\"简答题numpy-pandas\"><a class=\"anchor\" href=\"#简答题numpy-pandas\">#</a> 简答题：Numpy、Pandas</h1>\n<h2 id=\"1阐述numpy中的两大对象及其特点\"><a class=\"anchor\" href=\"#1阐述numpy中的两大对象及其特点\">#</a> 1：阐述 Numpy 中的两大对象及其特点</h2>\n<p>NumPy 提供了 <span class=\"red\">两种基本的对象</span>： ndarray 和 ufunc</p>\n<ul>\n<li>ndarray：存储单一数据类型的多维数组。</li>\n<li>特点：多维数组，内存连续，数据同质，支持广播和高效数学运算</li>\n<li>ufunc：能够对数组进行处理的函数。</li>\n<li>特点：执行元素级操作，矢量化处理，具备广播能力，优化计算效率</li>\n</ul>\n<h2 id=\"2阐述pandas的作用\"><a class=\"anchor\" href=\"#2阐述pandas的作用\">#</a> 2：阐述 Pandas 的作用</h2>\n<p>pandas 是 Python 的核心数据分析支持库，提供了快速、灵活、明确的数据结构，旨在简单、直观地处理关系型、标记型数据。</p>\n<p>在 Python 中，pandas 库的功能十分强大，它可提供高性能的矩阵运算。</p>\n<ul>\n<li>可用于数据挖掘和数据分析，同时也提供数据清洗功能；</li>\n<li>支持类似 SQL 的数据增、删、查、改，并且带有丰富的数据处理函数；</li>\n<li>支持时间序列分析功能；支持灵活处理缺失数据等。</li>\n</ul>\n<h2 id=\"3介绍pandas的数据结构及其特点\"><a class=\"anchor\" href=\"#3介绍pandas的数据结构及其特点\">#</a> 3：介绍 Pandas 的数据结构及其特点。</h2>\n<p>pandas 有两个强大的利器</p>\n<ul>\n<li>\n<p><span class=\"red\">Series（一维数据）</span>是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。</p>\n</li>\n<li>\n<p><span class=\"red\">DataFrame 是 pandas 中的一个表格型的数据结构</span>，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。</p>\n</li>\n<li>\n<p>特点：支持异构数据类型，提供强大索引机制，实现数据对齐与自动广播，无缝整合 NumPy，高效处理表格型数据，为复杂数据分析任务提供便利。</p>\n</li>\n</ul>\n<h2 id=\"4列出并解释pandas中用于读写csv数据的相关函数\"><a class=\"anchor\" href=\"#4列出并解释pandas中用于读写csv数据的相关函数\">#</a> 4：列出并解释 Pandas 中用于读写 CSV 数据的相关函数。</h2>\n<p>Pandas 库提供了 read_csv () 和 to_csv () 两个主要函数，分别用于读取和写入 CSV 数据。</p>\n<p>read_csv () 函数：</p>\n<ul>\n<li>这个函数用于从 CSV 文件中读取数据，将数据转换为 Pandas 的 DataFrame 对象。</li>\n</ul>\n<p>to_csv () 方法：</p>\n<ul>\n<li>此方法用于将 DataFrame 对象写入 CSV 文件</li>\n</ul>\n<h1 id=\"代码题sklearn-应用\"><a class=\"anchor\" href=\"#代码题sklearn-应用\">#</a> 代码题：Sklearn 应用</h1>\n<h2 id=\"app-用户群体划分\"><a class=\"anchor\" href=\"#app-用户群体划分\">#</a> APP 用户群体划分</h2>\n<p>在 App 上架前需要收集测试用户或人员的体验数据，分析反馈的数据，从而对 App 进行相应的调整。某研发团队为调查所设计的 App 是否可以上架，统计了 13 万左右测试用户的 App 使用数据，并存储于 “某 App 用户信息数据.csv” 数据集中，部分某 App 用户信息数据如表 1 所示。通过对数据进行聚类，以区分不同的用户群体，从而对不同的群体确定是否分享 App, 进而创造流量价值用户，同时将聚类结果与 “是否点击分享” 特征数据进行对比，评价聚类分析结果。</p>\n<p>表 1 部分某 App 用户信息数据:</p>\n<table>\n<thead>\n<tr>\n<th>用户名</th>\n<th>在线时  长 (分钟)</th>\n<th>时间所  占比例</th>\n<th>不愿分  享概率</th>\n<th>愿意分  享概率</th>\n<th>是否点  击分享</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>George</td>\n<td>1495736</td>\n<td>0.004093442</td>\n<td>NA</td>\n<td>0.02</td>\n<td>T</td>\n</tr>\n<tr>\n<td>Ruth</td>\n<td>832959</td>\n<td>0.002279593</td>\n<td>0</td>\n<td>0.85</td>\n<td>F</td>\n</tr>\n<tr>\n<td>Jack</td>\n<td>1124354</td>\n<td>0.003532150</td>\n<td>-0.50</td>\n<td>0.40</td>\n<td>F</td>\n</tr>\n<tr>\n<td>Joy</td>\n<td>342119</td>\n<td>0.00023350</td>\n<td>1.50</td>\n<td>-1.50</td>\n<td>T</td>\n</tr>\n<tr>\n<td>Jessica</td>\n<td>1173979</td>\n<td>0.003212876</td>\n<td>0.32</td>\n<td>1.00</td>\n<td>F</td>\n</tr>\n</tbody>\n</table>\n<p>(1)    处理某 App 用户信息数据集。</p>\n<ol>\n<li>使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。</li>\n<li>将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。</li>\n<li>将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 0 的值改为 1。</li>\n<li>将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。</li>\n</ol>\n<p>(2) 构建与用户使用信息相关的特征。</p>\n<ol>\n<li>自定义 to_code 函数，用于对用户名特征首字母进行编码。</li>\n<li>对在线时长特征进行分段处理后生成分段在线时长新特征。</li>\n<li>使用 apply 方法构建首字母编码新特征。</li>\n</ol>\n<p>(3) 构建 K-Means 聚类模型。</p>\n<ol>\n<li>读取构建新特征后的数据集，区分标签和数据。</li>\n<li>构建 K-Means 模型，且聚类数为 2。</li>\n<li>使用 FMI 评价法评价聚类模型性能。</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># (1)    处理某 App 用户信息数据集。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1. 使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>user <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\3.homework\\大三下\\数据分析\\实验数据data\\某APP用户信息数据.csv'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 2. 将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 3. 将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 4. 将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># (2) 构建与用户使用信息相关的特征。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>user_clean <span class=\"token operator\">=</span> user</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 1. 自定义 to_code 函数，用于对用户名特征首字母进行编码。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>coding <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    coding<span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># coding = &#123;'a':0, 'b':1, 'c':2, 'd':3, 'e':4, 'f':5,'g':6,'h':7,'i':8,'j':9,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#           'k':10,'l':11, 'T':12,'n':13,'o':14,'p':15,'q':16,'r':17,'s':18,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#           't':19,'u':20,'v':21,'w':22, 'x':23,'y':24,'z':25&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">to_code</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    code <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 名字全部小写</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span>  s <span class=\"token keyword\">in</span> coding<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        code <span class=\"token operator\">=</span> coding<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> code</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 2. 对在线时长特征进行分段处理后生成分段在线时长新特征。</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'分组后在线时长'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>qcut<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'在线时长'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 3. 使用 apply 方法构建首字母编码新特征。</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户编码'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_clean<span class=\"token punctuation\">[</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> to_code<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># (3) 构建 K-Means 聚类模型。</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>user_feature <span class=\"token operator\">=</span> user_clean</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> KMeans</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> fowlkes_mallows_score</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 1. 读取构建新特征后的数据集，区分标签和数据。</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>X<span class=\"token operator\">=</span>user_feature<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'不愿分享概率'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'愿意分享概率'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"在线时长\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"在线时长占比\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"分组后在线时长\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>y<span class=\"token operator\">=</span>user_feature<span class=\"token punctuation\">[</span><span class=\"token string\">'是否点击分享'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 2. 构建 K-Means 模型，且聚类数为 2。</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>model<span class=\"token operator\">=</span>KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># 3. 使用 FMI 评价法评价聚类模型性能。</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fowlkes_mallows_score<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>labels_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"二手手机价格预测\"><a class=\"anchor\" href=\"#二手手机价格预测\">#</a> 二手手机价格预测</h2>\n<p>某回收二手手机的公司为了在公司的交易软件中显示预测的二手手机价格，使用用户在交易软件上的交易数据 (phone.csv)，预测回收二手手机的价格。交易数据的特征说明如表所示：</p>\n<table>\n<thead>\n<tr>\n<th>特征</th>\n<th>说明</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>用户编码</td>\n<td>1</td>\n</tr>\n<tr>\n<td>battery_power</td>\n<td>电池容量（单位：mA）</td>\n<td>1520</td>\n</tr>\n<tr>\n<td>blue_tooth</td>\n<td>蓝牙是否正常。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>clock_speed</td>\n<td>开机时间（单位：min）</td>\n<td>0.5</td>\n</tr>\n<tr>\n<td>dual_sim</td>\n<td>是否双卡双待。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>fc</td>\n<td>前置摄像头像素（单位：px）</td>\n<td>14</td>\n</tr>\n<tr>\n<td>four_g</td>\n<td>是否支持 4G。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>int_memory</td>\n<td>内存剩余大小（单位：GB）</td>\n<td>5</td>\n</tr>\n<tr>\n<td>m_dep</td>\n<td>手机厚度（单位：cm）</td>\n<td>0.5</td>\n</tr>\n<tr>\n<td>mobile_wt</td>\n<td>手机重量（单位：g）</td>\n<td>192</td>\n</tr>\n<tr>\n<td>n_cores</td>\n<td>处理器内核数</td>\n<td>4</td>\n</tr>\n<tr>\n<td>pc</td>\n<td>主摄像头像素（单位：px）</td>\n<td>16</td>\n</tr>\n<tr>\n<td>px_height</td>\n<td>像素分辨率高度（单位：px）</td>\n<td>1270</td>\n</tr>\n<tr>\n<td>px_width</td>\n<td>像素分辨率宽度（单位：px）</td>\n<td>1336</td>\n</tr>\n<tr>\n<td>ram</td>\n<td>运行内存（单位：MB）</td>\n<td>3506</td>\n</tr>\n<tr>\n<td>sc_h</td>\n<td>手机屏幕高度（单位：cm）</td>\n<td>12</td>\n</tr>\n<tr>\n<td>sc_w</td>\n<td>手机屏幕宽度（单位：cm）</td>\n<td>7</td>\n</tr>\n<tr>\n<td>talk_time</td>\n<td>充满电耗时（单位：h）</td>\n<td>2</td>\n</tr>\n<tr>\n<td>three_g</td>\n<td>是否支持 3G。其中 0 表示否，1 表示是</td>\n<td>0</td>\n</tr>\n<tr>\n<td>touch_screen</td>\n<td>触摸屏是否正常。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>wifi</td>\n<td>Wi-Fi 连接是否正常。其中 0 表示否，1 表示是</td>\n<td>1</td>\n</tr>\n<tr>\n<td>price range</td>\n<td>手机价格等级，其中 0 表示低，1 表示中，2 表示较高，3 表示高</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<p>现需利用交易数据建立分类模型对二手手机价格进行预测，步骤如下。<br />\n(1) 删除有异常值的行 (手机厚度小于等于 0cm)。<br />\n(2) 建立随机森林分类模型对数据进行训练。<br />\n(3) 计算模型准确率，评价分类模型效果。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 加载所需的函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data/phone.csv'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 处理异常值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>phone_data1 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'m_dep'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理手机厚度异常值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>phone_data <span class=\"token operator\">=</span> phone_data1<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>phone_target <span class=\"token operator\">=</span> phone_data1<span class=\"token punctuation\">[</span><span class=\"token string\">'price_range'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 将数据划分为训练集测试集</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>phone_data_train<span class=\"token punctuation\">,</span> phone_data_test<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>phone_target_train<span class=\"token punctuation\">,</span> phone_target_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>phone_data<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                                           phone_target<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                                           test_size <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                                           random_state <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 数据标准化</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>stdScaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>phone_trainStd <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>phone_testStd <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>phone_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 建立 RandomForestClassifier 模型 (随机森林)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>rfc <span class=\"token operator\">=</span> RandomForestClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>phone_trainStd<span class=\"token punctuation\">,</span> phone_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'建立的 rfc 模型为：\\n'</span><span class=\"token punctuation\">,</span> rfc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 预测训练集结果</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>phone_target_pred <span class=\"token operator\">=</span> rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>phone_testStd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测的前 20 个结果为：\\n'</span><span class=\"token punctuation\">,</span> phone_target_pred<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 计算准确率</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>true <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>phone_target_pred <span class=\"token operator\">==</span> phone_target_test<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 求出预测和真实一样的数目</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测对的结果数目为：'</span><span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测错的的结果数目为：'</span><span class=\"token punctuation\">,</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> true<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'预测结果准确率为：'</span><span class=\"token punctuation\">,</span> true <span class=\"token operator\">/</span> phone_target_test<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"客户服装尺寸预测\"><a class=\"anchor\" href=\"#客户服装尺寸预测\">#</a> 客户服装尺寸预测</h2>\n<p>某淘宝成年女装店铺为了能够给客户推荐合适的成年女装尺寸，构建了相应的尺寸预测模型。目前店铺利用已购买服装客户的数据集 (size_data.csv) 进行模型的训练，其中部分尺寸信息数据如表 1 所示。</p>\n<p>表 1 部分尺寸信息数据</p>\n<table>\n<thead>\n<tr>\n<th>体重 (kg)</th>\n<th>年龄 (岁)</th>\n<th>身高 (cm)</th>\n<th>尺寸</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>70</td>\n<td>28</td>\n<td>172.72</td>\n<td>XL</td>\n</tr>\n<tr>\n<td>65</td>\n<td>36</td>\n<td>167.64</td>\n<td>L</td>\n</tr>\n<tr>\n<td>61</td>\n<td>34</td>\n<td>165.1</td>\n<td>M</td>\n</tr>\n<tr>\n<td>71</td>\n<td>27</td>\n<td>175.26</td>\n<td>L</td>\n</tr>\n<tr>\n<td>62</td>\n<td>45</td>\n<td>160.02</td>\n<td>M</td>\n</tr>\n</tbody>\n</table>\n<p>(1) 处理尺码信息数据。</p>\n<ol>\n<li>利用 read_csv 函数读取 size_data.csv.</li>\n<li>查看数据集大小，并利用 dropna () 方法删除缺失值。</li>\n<li>删除年龄、体重异常值 (年龄小于 18 岁，体重低于 30kg)。</li>\n<li>查看数据异常值和缺失值是否删除成功。</li>\n</ol>\n<p>(2) 构建支持向量机、决策树、随机森林几种分类模型预测客户服装尺寸为改善模型预测效果，根据原有特征构建新特征。使用实训 1 中预处理后的数据，计算 BMI 值并构建 BML_ range 特征。BMI 计算公式下面所示。</p>\n<ol>\n<li>BMI = 体重 (kg)/ 身高 (m2)</li>\n<li>BMI_range 特征的构建规则如下。</li>\n<li>当 BMI&lt;18.5 时，BMI_range 值为 0。</li>\n<li>当 18.5≤BMI&lt;24 时，BMI_range 值为 1。</li>\n<li>当 24≤BMI-28 时，BMI_range 值为 2。</li>\n<li>当 BMI≥28 时，BMI_range 值为 3。</li>\n</ol>\n<p>为了提高客户满意度，需要基于客户基本信息为客户推荐合适的服装尺寸。因此需要</p>\n<p>使用处理后的数据调用支持向量机、决策树、随机森林分类算法构建模型，预测客户服装尺寸。</p>\n<ol>\n<li>构建 BMI_range 特征。</li>\n<li>构建支持向量机、决策树、随机森林分类模型预测服装尺寸。</li>\n<li>评估支持向量机、决策树、随机森林分类模型效果。</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  warnings</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>warnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 读取数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>size_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/size_data.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看数据大小</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 删除缺失值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>size_data<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看是否存在缺失值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>size_data <span class=\"token operator\">=</span> size_data<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 删除缺失值</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>size_data<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看缺失值是否删除成功</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 处理异常值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>size_data_age <span class=\"token operator\">=</span> size_data<span class=\"token punctuation\">[</span>size_data<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理年龄异常值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>size_data_weight <span class=\"token operator\">=</span> size_data_age<span class=\"token punctuation\">[</span>size_data_age<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 处理体重异常值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>size_data_weight <span class=\"token operator\">=</span> size_data_weight<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重新生成索引</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>size_data_end <span class=\"token operator\">=</span> size_data_weight</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看年龄异常值是否删除成功</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 查看体重异常值是否删除成功</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 构建 BMI 特征 (体重 / 身高 **2)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 自定义 BMI 段函数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bmi_range</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">18.5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">18.5</span> <span class=\"token keyword\">and</span>  data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">24</span> <span class=\"token keyword\">and</span>  data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">elif</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 创建 BMI 分段特征列</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>bmi_range<span class=\"token punctuation\">(</span>size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'BMI_range'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># data 与 target 划分</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>size_target <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>size_data <span class=\"token operator\">=</span> size_data_end<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 训练集与测试集划分</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>size_data_train<span class=\"token punctuation\">,</span> size_data_test<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">,</span> size_target_test <span class=\"token operator\">=</span> \\</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>train_test_split<span class=\"token punctuation\">(</span>size_data<span class=\"token punctuation\">,</span> size_target<span class=\"token punctuation\">,</span> test_size <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> random_state <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>stratify<span class=\"token operator\">=</span>size_target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> confusion_matrix<span class=\"token punctuation\">,</span>precision_score<span class=\"token punctuation\">,</span>recall_score<span class=\"token punctuation\">,</span>f1_score</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 自定义评价函数</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_pre</span><span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'混淆矩阵：\\n'</span><span class=\"token punctuation\">,</span> confusion_matrix<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span> pred<span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'XL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 混淆矩阵</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'精确率：'</span><span class=\"token punctuation\">,</span> precision_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 精确率</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'召回率：'</span><span class=\"token punctuation\">,</span> recall_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 召回率</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'F1值：'</span><span class=\"token punctuation\">,</span> f1_score<span class=\"token punctuation\">(</span>y_te<span class=\"token punctuation\">,</span>pred<span class=\"token punctuation\">,</span>average<span class=\"token operator\">=</span><span class=\"token string\">'macro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># F1 值</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 数据标准化</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>stdScaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>size_train_std <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>size_test_std <span class=\"token operator\">=</span> stdScaler<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>size_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 构建 SVM 模型</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> SVC</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>svm <span class=\"token operator\">=</span> SVC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 预测训练集结果</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>svc_pred <span class=\"token operator\">=</span> svm<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SVM 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>svc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># 构建 决策树 模型</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span> DecisionTreeClassifier <span class=\"token keyword\">as</span> DTC</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>dtc <span class=\"token operator\">=</span> DTC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 训练模型</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>dtc_pred <span class=\"token operator\">=</span> dtc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\"># 评价模型</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'决策树 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>dtc_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># 构建 随机森林 模型</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier <span class=\"token keyword\">as</span> RFC</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>rfc <span class=\"token operator\">=</span> RFC<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>size_train_std<span class=\"token punctuation\">,</span> size_target_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 训练模型</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>rfc_pred <span class=\"token operator\">=</span> rfc<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>size_test_std<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># 评价模型</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'随机森林 模型预测结果：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>test_pre<span class=\"token punctuation\">(</span>size_target_test<span class=\"token punctuation\">,</span>rfc_pred<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"钻石价格预测\"><a class=\"anchor\" href=\"#钻石价格预测\">#</a> 钻石价格预测</h2>\n<p>某珠宝店新增钻石回收业务，为了对客户提供的钻石更好地进行估价，该店铺收集了行业内近期所售钻石的 4C 等级、尺寸和相应价格等数据，存为钻石价格数据集 (diamond_price.csv), 包括克拉、切工等级、色泽、净度等 9 个特征。钻石价格数据集的特征说明如表 2 所示。</p>\n<p>表 2 钻石价格数据集的特征说明:</p>\n<table>\n<thead>\n<tr>\n<th>特征各称</th>\n<th>特征含义</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>克拉</td>\n<td>钻石的重量</td>\n<td>0.23</td>\n</tr>\n<tr>\n<td>切工等级</td>\n<td>包括 5 个等级，其中 1 表示完美；2 表示十分珍贵；3 表示很好；4 表示好；5 表示一般</td>\n<td>1</td>\n</tr>\n<tr>\n<td>色泽</td>\n<td>钻石色泽从 D 到 J 分为 7 个级别，其中 1 表示 D 级，完全无色；2 表示 E 级，无色；3 表示 F 级，几乎无色；4 表示 G 级，接近无色；5 表示 H 级，接近无色；6 表示 1 级，肉眼可见少量黄色；7 表示 J 级，肉眼可见少量黄色</td>\n<td>2</td>\n</tr>\n<tr>\n<td>净度</td>\n<td>钻石净度由高到低分为 8 个级别，其中 1 表示 IF, 内无瑕级；2 表示 VVS1, 极轻微内含级 1;3 表示 VVs2, 极轻微内含级 2;4 表示  VS1, 轻微内含级 1; 5 表示 Vs2, 轻微内含级 2;6 表示 SI1, 微含级 1;7 表示 SI2, 微含级 2;8 表示 I1, 内含级</td>\n<td>7</td>\n</tr>\n<tr>\n<td>台宽比</td>\n<td>钻石桌面的宽度占其平均直径的百分比</td>\n<td>55</td>\n</tr>\n<tr>\n<td>长度</td>\n<td>钻石的长度</td>\n<td>3.96</td>\n</tr>\n<tr>\n<td>宽度</td>\n<td>钻石的宽度</td>\n<td>3.98</td>\n</tr>\n<tr>\n<td>高度</td>\n<td>钻石的高度</td>\n<td>2.43</td>\n</tr>\n<tr>\n<td>价格 (美元)</td>\n<td>钻石的价格</td>\n<td>326</td>\n</tr>\n</tbody>\n</table>\n<p>使用钻石价格数据集，构建回归模型预测回收的钻石价格，具体步骤如下。</p>\n<p>(1) 读取钻石价格数据集。</p>\n<p>(2) 经过观察数据发现，长度、宽度、高度特征存在 0 值，删除该 3 个特征中所有出现 0 值的行数据，并对其他数据进行重新索引。</p>\n<p>(3) 新增价格 (人民币) 特征，假定 1 美元等于 6.50 人民币。</p>\n<p>(4) 拆分特征数据和标签数据，特征数据为克拉、切工等级、色泽、净度、台宽比、长度、宽度、高度，标签数据为价格 (人民币) 特征。</p>\n<p>(5) 划分训练集和测试集，并对训练集和测试集进行标准差标准化。</p>\n<p>(6) 构建 SVR 等至少两种回归模型进行钻石价格预测，并输出回归模型评价指标，查看模型效果。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 读取数据集</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>diamond <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data/diamond_price.csv'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#预处理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>diamond <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'X(length)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                              <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Y(width)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                              <span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Z(Depth)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>diamond<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'price_RMB'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  diamond<span class=\"token punctuation\">[</span><span class=\"token string\">'Price(in US dollars)'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">6.50</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>diamond<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 拆分数据和标签</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>diamond_data <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>diamond_target <span class=\"token operator\">=</span> diamond<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 特征列选择</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># from  sklearn.linear_model import  Lasso</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># data_train = (diamond_data-diamond_data.mean())/diamond_data.std()</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># lasso = Lasso(alpha=1000).fit(data_train,diamond_target)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># print(lasso.coef_)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># diamond_data = diamond.iloc[:, [0,1,2,3]]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 划分训练集和测试集</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>diamond_data_train<span class=\"token punctuation\">,</span> diamond_data_test<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>diamond_target_train<span class=\"token punctuation\">,</span> diamond_target_test <span class=\"token operator\">=</span> \\</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>train_test_split<span class=\"token punctuation\">(</span>diamond_data<span class=\"token punctuation\">,</span> diamond_target<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># # 标准差标准化</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>stdScale <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span>diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>diamond_trainScaler <span class=\"token operator\">=</span> stdScale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>diamond_testScaler <span class=\"token operator\">=</span> stdScale<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#定义评价函数</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> explained_variance_score<span class=\"token punctuation\">,</span>  r2_score</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的可解释方差值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          explained_variance_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回归模型的R方值为：'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          r2_score<span class=\"token punctuation\">(</span>y0<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 构建回归模型</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> LinearSVR</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 支持向量回归</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>SVR_diamond <span class=\"token operator\">=</span> LinearSVR<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_data_train<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>y_pred1 <span class=\"token operator\">=</span> SVR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_data_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支持向量回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#梯度提升回归</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span>  GradientBoostingRegressor</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>GBR_diamond <span class=\"token operator\">=</span> GradientBoostingRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>y_pred2 <span class=\"token operator\">=</span> GBR_diamond<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"梯度提升回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#回归决策树</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span>  DecisionTreeRegressor</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>DTR_diamond <span class=\"token operator\">=</span>  DecisionTreeRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>y_pred3 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"回归决策树:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">#线性回归</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LinearRegression</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>LR_diamond <span class=\"token operator\">=</span>   LinearRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>y_pred4 <span class=\"token operator\">=</span> LR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线性回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">#最近邻回归</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>neighbors <span class=\"token keyword\">import</span>  KNeighborsRegressor</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>KNR_diamond <span class=\"token operator\">=</span>  KNeighborsRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>diamond_trainScaler<span class=\"token punctuation\">,</span> diamond_target_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>y_pred5 <span class=\"token operator\">=</span> DTR_diamond <span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>diamond_testScaler<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最近邻回归:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>test<span class=\"token punctuation\">(</span>diamond_target_test<span class=\"token punctuation\">,</span> y_pred5<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/21/Educational/Software/software-project-review/",
            "url": "http://rainyblue.cn/2024/06/21/Educational/Software/software-project-review/",
            "title": "软件项目管理复习大纲",
            "date_published": "2024-06-21T06:09:27.000Z",
            "content_html": "<p>一、题型主要有选择 10*2=20 分、</p>\n<p>二、填空 10*1=10 分、</p>\n<p>三、判断题 10*1=10 分。</p>\n<p>计算题占 30 分主要集中在进度管理和成本管理这两个章节里面。包括网络图计算。挣值管理，三点估算。</p>\n<p>论述题：10*3=30-- 主要集中在范围、质量。风险管理三个章节</p>\n<p>四、论述题 3*10=30</p>\n<p>范围管理、质量管理、风险管理</p>\n<p>五、计算题 2*15=30</p>\n<p>进度管理、成本管理</p>\n<p>算涉及范围：网络图计算、挣值管理、三点估算、机会成本计算</p>\n<h1 id=\"1-复习大纲\"><a class=\"anchor\" href=\"#1-复习大纲\">#</a> 1、复习大纲</h1>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003000837.png\" alt=\"image-20240619003000837\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003014165.png\" alt=\"image-20240619003014165\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003026170.png\" alt=\"image-20240619003026170\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003036673.png\" alt=\"image-20240619003036673\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003051584.png\" alt=\"image-20240619003051584\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003101908.png\" alt=\"image-20240619003101908\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003112563.png\" alt=\"image-20240619003112563\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003131956.png\" alt=\"image-20240619003131956\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003148262.png\" alt=\"image-20240619003148262\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003200143.png\" alt=\"image-20240619003200143\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003208539.png\" alt=\"image-20240619003208539\" /></p>\n<h1 id=\"2-计算题\"><a class=\"anchor\" href=\"#2-计算题\">#</a> 2、计算题</h1>\n<p>挣值分析：</p>\n<ul>\n<li>AC=ActualCost---- 实际成本：截止到某时间点实际已经发生的成本，即实际花了多少钱。</li>\n<li>EV=Earned Value---- 挣值：截止到某时间点实际已经完成工作量的价值，即实际做的事的价值。</li>\n<li>PV=Planned Value---- 计划价值：截止到某时间点计划完成工作量的价值，即计划要做的事。</li>\n</ul>\n<p>挣值分析的 4 个绩效指标：</p>\n<p>CV=Cost Variance---- 成本偏差</p>\n<ul>\n<li>CV=EV-AC：表示挣值与实际成本只差</li>\n<li>它是某个给定的时间点，项目预算的亏空 / 盈余</li>\n<li>CV=EV-AC&gt;0：成本节约</li>\n<li>CV=EV-AC&lt;0：成本超支</li>\n</ul>\n<p>SV=Schedule Variance---- 进度偏差</p>\n<ul>\n<li>SV=EV-PV : 表示挣值与计划价值之差</li>\n<li>它是某个给定的时间点，项目提前 / 落后的进度</li>\n<li>SV=EV-PV &gt; 0 ，项目进度超前</li>\n<li>SV=EV-PV  &lt; 0 ，项目进度落后</li>\n</ul>\n<p>CPl=Cost Performance Index---- 成本绩效指数</p>\n<ul>\n<li>CPI=EA/AC，挣值与实际成本之比</li>\n<li>CPI=EA/AC&lt;1：说明成本超支</li>\n<li>CPI=EA/AC&gt;1：说明成本节约</li>\n</ul>\n<p>SPl=Schedule Performance lndex---- 进度绩效指数</p>\n<ul>\n<li>CPI=EV/AC：挣值与计划价值之比</li>\n<li>CPI=EV/AC&lt;1：项目进度落后</li>\n<li>CPI=EV/AC&gt;1：项目进度超前</li>\n</ul>\n<p>采取措施</p>\n<p>进度落后，成本超支:</p>\n<ol>\n<li>用高效人员代替低效人员</li>\n<li>在预防风险的情况下对活动进行并行施工</li>\n<li>减小活动范围或降低活动要求</li>\n<li>通过改进方法或技术提高生产政率</li>\n<li>加强质量管理，及时发现问题，减少返工，从而缩短工期</li>\n</ol>\n<p>进度落后，成本节约</p>\n<ol>\n<li>赶工加快进度</li>\n<li>使用高效资源来替换低效资源加快进度</li>\n<li>改进方法，提高工作效率</li>\n</ol>\n<p>进度超前，成本节约：</p>\n<ol>\n<li>抽调部分人员用手其他项目</li>\n<li>加强质量控制，密切监控项目</li>\n<li>必要时调整计划或基准等方法改进，或者改变相关计划</li>\n</ol>\n<p>进度超前，成本超支</p>\n<ol>\n<li>抽出部分人员，放慢工作进度了</li>\n<li>控制成本</li>\n<li>区分不同任务，采取不同成本及进度措施</li>\n<li>调整成本基准</li>\n<li>优化施工方案、提高效率、加强质量管理、减少返工、加强沟通，降低成本</li>\n<li>确保进度按期完成的基础上，可以降低进度以节约成本。</li>\n</ol>\n<p>预测技手指标：</p>\n<p>BAC=Budget at Completion---- 完工预算：对完成该项目的计划预算 ，也就是完成整个项目计划多少预算 (完工时的 PV 总和)<span class=\"red\">(BC 宝面方包含写理了诸备)</span></p>\n<p>ETC=Estimate to Complete---- 完工尚需估算：在某个时点，预测完成剩余工作还需多少成本。<br />\n报据剩乐部分工作 CPI (成本统效指数) 的变化情况</p>\n<p>按照预算单价 (CPI=1) 完成 ETC 工作 (剩余工作);</p>\n<p>非典型 (纠偏): 当前的偏差被视为一种特并且项目团队以为将来不会发生类似偏差。ETC:BAC-EV<br />\n (2) 按照当前 CPI (挣值 EV / 实际成本 AC) 完成 ETC 工作 (剩余工作)</p>\n<p>典型 (不纠偏): 当前出现的偏差被视为具有典型性，可以代表来来的偏差。ETC=(BAC-EV)/CPI</p>\n<p>VAC= Variance at Completion---- 完工偏差</p>\n<ul>\n<li>VAC=BAC-EAC</li>\n<li>完工时成本偏差</li>\n</ul>\n<p>完工总时间预测：计划总工期 / SPI</p>\n<p>原计划工期 10 个月，目前 SPI 为 0.5, 则预测完工工期 = 10/0.5 =20</p>\n<p>TCPl=To-Complete Performance Index---- 完工尚需绩效指数</p>\n<p>在某个时点，预测如果要在计划的预赞内完成项目，则未来的工作必须要达到的绩效水平。</p>\n<ol>\n<li>\n<p>未来的项目绩效技照原定预算 BAC 完成 TCPI=(BAC-EV)/（EAC-AC)</p>\n<p>还有多少钱的活 / 手里剩下的钱</p>\n</li>\n<li>\n<p>未来的项目绩效技新的 EAC 完成</p>\n<p>TCPI=（BAC-EV）/（EAC-AC）</p>\n</li>\n</ol>\n<p>EAC=Estimate at Completion---- 完工估算</p>\n<p>EAC=AC+ETC</p>\n",
            "tags": [
                "学习类",
                "软件项目管理"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/20/Educational/Software/2023-Software-project-review/",
            "url": "http://rainyblue.cn/2024/06/20/Educational/Software/2023-Software-project-review/",
            "title": "2023年软件项目管理复习提纲",
            "date_published": "2024-06-20T06:09:27.000Z",
            "content_html": "<h1 id=\"第一章-it项目管理概述\"><a class=\"anchor\" href=\"#第一章-it项目管理概述\">#</a> <strong>第一章 IT 项目管理概述</strong></h1>\n<h2 id=\"一-项目的概念\"><a class=\"anchor\" href=\"#一-项目的概念\">#</a> <strong>一、项目的概念</strong></h2>\n<h3 id=\"1-项目的定义\"><a class=\"anchor\" href=\"#1-项目的定义\">#</a> <strong>1、项目的定义</strong></h3>\n<ul>\n<li>\n<p>项目是一个特殊的将被完成的有限任务。它是在一定时间内，满足一系列特定目标的多项相关工作的总称。—— 中国项目管理研究委员会</p>\n</li>\n<li>\n<p>为提供一项独特产品、服务或成果所做的临时性努力。—— PMI 项目管理知识体系指南（PMBOK）</p>\n</li>\n</ul>\n<h3 id=\"2-项目的特点\"><a class=\"anchor\" href=\"#2-项目的特点\">#</a> <strong>2、项目的特点</strong></h3>\n<ul>\n<li>\n<p>明确的目标，其结果只可能是一种期望的产品或服务。</p>\n</li>\n<li>\n<p>独特性，每一个项目都是唯一的。</p>\n</li>\n<li>\n<p>时限性，有确定的开始时间和结束时间。</p>\n</li>\n<li>\n<p>约束性，每个项目的资源、成本和时间都是有限的。</p>\n</li>\n<li>\n<p>目标的渐进性，目标逐步完善，需求逐渐明晰。</p>\n</li>\n<li>\n<p>创新性，方法、技术、管理模式、信息化成果创新。</p>\n</li>\n<li>\n<p>高风险性，需求模糊性、执行可见度低，项目的过程和结果都存在很多不确定因素。</p>\n</li>\n<li>\n<p>智力密集型，高素质人力资源需求。</p>\n</li>\n</ul>\n<h3 id=\"3-项目与运作的区别\"><a class=\"anchor\" href=\"#3-项目与运作的区别\">#</a> <strong>3、项目与运作的区别</strong></h3>\n<ul>\n<li>\n<p>项目：提供一项独特产品、服务或成果所做的临时性努力。</p>\n</li>\n<li>\n<p>运作：连续不断周而复始的活动</p>\n</li>\n</ul>\n<h2 id=\"二-项目管理概述\"><a class=\"anchor\" href=\"#二-项目管理概述\">#</a> <strong>二、项目管理概述</strong></h2>\n<h3 id=\"1-项目管理的定义\"><a class=\"anchor\" href=\"#1-项目管理的定义\">#</a> <strong>1、项目管理的定义</strong></h3>\n<ul>\n<li>\n<p>项目管理是为了满足甚至超越项目相关方对项目的需求和期望而将知识、技能、工具和技术应用到项目的活动中去。</p>\n</li>\n<li>\n<p>项目管理是以项目为对象的系统管理方法，它通过一个临时性的、专门的柔性组织，对项目进行高效率的计划、组织、指导和控制，以实现对项目全过程的动态管理和对项目目标的综合协调与优化。</p>\n</li>\n</ul>\n<h3 id=\"2-项目管理的特征\"><a class=\"anchor\" href=\"#2-项目管理的特征\">#</a> <strong>2、项目管理的特征</strong></h3>\n<ul>\n<li>\n<p>项目管理的对象是项目：针对项目特点形成的一种管理方法</p>\n</li>\n<li>\n<p>系统工程思想贯穿项目管理的全过程：将项目看成是一个完整的、有生命周期的系统</p>\n</li>\n<li>\n<p>项目管理组织具有一定的特殊性：以项目本身作为一个组织单元；临时性；柔性；协调、控制和沟通</p>\n</li>\n<li>\n<p>项目管理的方式是目标管理：多层次的目标管理方式</p>\n</li>\n<li>\n<p>基于团队的项目经理负责制：项目经理是组织法定代表人在项目上的代表人</p>\n</li>\n<li>\n<p>项目管理具有创造性：继承积累性 + 综合性</p>\n</li>\n</ul>\n<h3 id=\"3-项目管理的知识体系\"><a class=\"anchor\" href=\"#3-项目管理的知识体系\">#</a> <strong>3、项目管理的知识体系</strong></h3>\n<p>PMBOK 把项目管理过程组分为 5 类。</p>\n<ul>\n<li>（1）启动过程组。</li>\n<li>（2）规划过程组。</li>\n<li>（3）执行过程组。</li>\n<li>（4）监控过程组。</li>\n<li>（5）收尾过程组。</li>\n</ul>\n<h2 id=\"三-软件项目管理\"><a class=\"anchor\" href=\"#三-软件项目管理\">#</a> <strong>三、软件项目管理</strong></h2>\n<h3 id=\"1-软件项目管理的特点\"><a class=\"anchor\" href=\"#1-软件项目管理的特点\">#</a> <strong>1、软件项目管理的特点</strong></h3>\n<ul>\n<li>\n<p>软件项目是设计型项目：需要创造和创新，需要技术人员</p>\n</li>\n<li>\n<p>软件过程模型：选用瀑布模型、原型模型、迭代模型、螺旋模型等</p>\n</li>\n<li>\n<p>需求变化频繁：软件需求的不确定性或变化频繁</p>\n</li>\n<li>\n<p>工作量估算困难：缺乏有效的软件工作量度量方法和手段</p>\n</li>\n<li>\n<p>以人为本的管理：人性化管理，主要成本是人力成本</p>\n</li>\n</ul>\n<h3 id=\"2-软件项目管理与软件工程的不同\"><a class=\"anchor\" href=\"#2-软件项目管理与软件工程的不同\">#</a> 2、<strong>软件项目管理与软件工程的不同</strong></h3>\n<p>在软件项目管理中，项目的启动、规划、执行、控制和收尾等管理过程 (组) 则属于项目管理的范畴。</p>\n<p>软件工程是：将系统化的、严格约束的、可量化的方法应用于软件的开发、运行和维护，即将工程化应用于软件；以及对上述方法的研究。在软件开发项目中，需求分析、概要设计、详细设计测试等工作，都属于软件工程的范畴。</p>\n<h4 id=\"3-软件项目管理的成功\"><a class=\"anchor\" href=\"#3-软件项目管理的成功\">#</a> <strong>3、软件项目管理的成功</strong></h4>\n<p>项目成功的表现主要包括以下几个方面：</p>\n<ul>\n<li>\n<p>在规定的时间内完成项目。</p>\n</li>\n<li>\n<p>项目成本控制在预算之内。</p>\n</li>\n<li>\n<p>产品功能特性达到规格说明书所要求的水平。</p>\n</li>\n<li>\n<p>项目通过客户的验收。</p>\n</li>\n<li>\n<p>项目范围变化最小或是可控的。</p>\n</li>\n<li>\n<p>没有干扰或严重影响整个开发组织的主要工作流程。</p>\n</li>\n<li>\n<p>没有改变企业文化或改进了企业的文化等。</p>\n</li>\n</ul>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619114241018.png\" alt=\"image-20240619114241018\" /></p>\n<h1 id=\"第二章-组织环境与项目管理过程\"><a class=\"anchor\" href=\"#第二章-组织环境与项目管理过程\">#</a> <strong>第二章 组织环境与项目管理过程</strong></h1>\n<h2 id=\"一-it项目管理的环境\"><a class=\"anchor\" href=\"#一-it项目管理的环境\">#</a> <strong>一、IT 项目管理的环境</strong></h2>\n<h3 id=\"1-项目环境\"><a class=\"anchor\" href=\"#1-项目环境\">#</a> <strong>1、项目环境</strong></h3>\n<p>（1）经济环境对 IT 项目的影响</p>\n<ul>\n<li>IT 项目组织的运行机制、工作内容及范围、方法体系、投资与运行等方面</li>\n</ul>\n<p>（2）社会人文、政策法律对 IT 项目的影响</p>\n<ul>\n<li>\n<p>知识产权的界定、识别、运用和纠纷</p>\n</li>\n<li>\n<p>社会伦理、文化价值取向；职业道德规范</p>\n</li>\n<li>\n<p>社会信用体系、社会公信力要求、社会福利水平</p>\n</li>\n</ul>\n<p>（3）企业文化对 IT 项目的影响</p>\n<ul>\n<li>组织的价值观、行为准则、信仰、期望、组织的政策程序、上下级关系的观点等</li>\n</ul>\n<h3 id=\"2-组织结构\"><a class=\"anchor\" href=\"#2-组织结构\">#</a> <strong>2、组织结构</strong></h3>\n<p>组织结构是组织中的成员以怎样的形式组织起来，使他们在组织的不同位置上发挥作用。</p>\n<p>职能型组织结构缺点与优点：</p>\n<p>（1）职能型组织结构具有以下优点。</p>\n<ul>\n<li>\n<p>在人员使用上具有较大的灵活性。</p>\n</li>\n<li>\n<p>技术专家可以同时为几个项目服务。</p>\n</li>\n<li>\n<p>同一部门的专业人员在一起易于交流知识和经验，这可使项目获得部门内所有的知识和技术支持，对创造性地解决项目的技术问题非常有利。</p>\n</li>\n<li>\n<p>当有成员离开项目组时，职能部门可作为保持项目技术连续性的基础。</p>\n</li>\n<li>\n<p>职能部门可以为本部门的专业人员提供一条正常的晋升途径。</p>\n</li>\n</ul>\n<p>（2）职能型组织结构具有以下缺点。</p>\n<ul>\n<li>\n<p>这种组织结构使得客户不是活动和关心的焦点。</p>\n</li>\n<li>\n<p>这种结构导致没有一个人承担项目的全部责任（责任淡化）。</p>\n</li>\n<li>\n<p>项目常常得不到很好的支持。</p>\n</li>\n<li>\n<p>调配给项目的人员其积极性往往不是很高，也不把项目看成是他的主要工作。</p>\n</li>\n<li>\n<p>技术复杂的项目通常需要多个职能部门的共同合作，但他们往往更注重本领域，而忽略整个项目的目标，并且跨部门的交流沟通也比较困难。</p>\n</li>\n</ul>\n<p>项目型组织结构缺点与优点：</p>\n<p>（1）项目型组织结构具有以下优点。</p>\n<ul>\n<li>\n<p>项目经理有充分的权力调动项目内外资源，对项目全权负责。</p>\n</li>\n<li>\n<p>权力的集中使决策的速度可以加快，整个项目的目标单一，项目组能够对客户的需要做出更快的响应。在进度、成本、质量等方面的控制也较为灵活。</p>\n</li>\n<li>\n<p>这种结构有利于使命令协调一致，每个成员只有一个领导，排除了多重领导的可能。</p>\n</li>\n<li>\n<p>项目组内部的沟通更加顺畅、快捷。</p>\n</li>\n</ul>\n<p>（2）项目型组织结构具有以下缺点。</p>\n<ul>\n<li>\n<p>由于项目组对资源具有独占的权力，在项目与项目之间的资源共享方面会存在一些问题，可能在成本方面效率低下。</p>\n</li>\n<li>\n<p>项目经理与项目成员之间有着很强的依赖关系，而与项目外的其他部门之间的沟通比较困难。</p>\n</li>\n<li>\n<p>在相对封闭的项目环境中，容易造成对公司的规章制度执行的不一致。</p>\n</li>\n<li>\n<p>项目成员缺乏归属感，不利于职业生涯的发展。</p>\n</li>\n</ul>\n<p>矩阵型组织结构缺点与优点：</p>\n<p>（1）矩阵型组织结构具有以下优点。</p>\n<ul>\n<li>\n<p>项目是工作的重点，项目经理负责管理整个项目，矩阵型组织具有项目型组织的长处。</p>\n</li>\n<li>\n<p>可以有效地利用资源，项目可以分享各个部门的技术、人才和设备。</p>\n</li>\n<li>\n<p>这种结构更加注重客户的需求和促进项目成员之间的学习和知识交流。</p>\n</li>\n</ul>\n<p>（2）矩阵型组织结构具有以下缺点。</p>\n<ul>\n<li>\n<p>矩阵型组织通常是多个或多重领导，存在双层或多层汇报关系。</p>\n</li>\n<li>\n<p>多个项目在进度、费用和质量方面能够取得平衡，工作受到影响，这既是矩阵型组织的优点也是它的缺点。</p>\n</li>\n<li>\n<p>许多因素使矩阵项目团队非常难以管理。</p>\n</li>\n<li>\n<p>项目与职能部门的责权不清。</p>\n</li>\n</ul>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619114421648.png\" alt=\"image-20240619114421648\" /></p>\n<h2 id=\"二-it项目生命周期\"><a class=\"anchor\" href=\"#二-it项目生命周期\">#</a> 二、IT 项目生命周期</h2>\n<p>IT 项目生命周期分为 IT 项目前期、IT 项目建设期和 IT 项目运营期</p>\n<ul>\n<li>\n<p>检查点：是指在规定的时间间隔内对项目进行检查，比较实际与计划之间的差异，并根据差异进行调整。一般每周一次，项目经理通过召开项目例会或上交周报等方式来检查项目进展情况。</p>\n</li>\n<li>\n<p>里程碑：里程碑是项目中完成阶段性工作的标志。里程碑的建立必须连带（中间）交付物，交付物必须让客户确认。</p>\n</li>\n</ul>\n<p><strong>三、项目经理的责任和权力</strong></p>\n<h3 id=\"1-项目经理的职责\"><a class=\"anchor\" href=\"#1-项目经理的职责\">#</a> 1、项目经理的职责</h3>\n<ul>\n<li>\n<p>确保项目目标实现。项目经理运用合同把项目各方统一到项目目标和合同条款上。</p>\n</li>\n<li>\n<p>确定开发计划。制定项目阶段性目标和项目总体控制计划。计划、计划、再计划。</p>\n</li>\n<li>\n<p>组织实施。设计团队组织结构，安排合适人选，合理分配任务，营造高效环境。</p>\n</li>\n<li>\n<p>项目控制。时刻监控项目的运行。对项目进行全方位全过程管理监控。</p>\n</li>\n</ul>\n<h3 id=\"2-项目经理的权利\"><a class=\"anchor\" href=\"#2-项目经理的权利\">#</a> 2、项目经理的权利</h3>\n<ul>\n<li>\n<p>生产指挥权。根据资源变化情况进行指挥调度（资源调配），对组织计划进行优化调整。</p>\n</li>\n<li>\n<p>项目团队的组建权。项目经理管理班子的组建权，项目团队成员的选拔权。</p>\n</li>\n<li>\n<p>财权。承包范围内的财务决策权：利益分配权，制定奖惩制度，费用控制权。</p>\n</li>\n<li>\n<p>技术决策权。审查和批准重大技术措施和技术方案。</p>\n</li>\n</ul>\n<h3 id=\"3-项目经理的能力\"><a class=\"anchor\" href=\"#3-项目经理的能力\">#</a> 3、项目经理的能力</h3>\n<ul>\n<li>\n<p>获得项目资源的能力。获得符合质量和数量要求的资源和人员，确保项目有恰当等级的资源。</p>\n</li>\n<li>\n<p>消除障碍和解决问题的能力。处理各种纠纷、冲突和矛盾。</p>\n</li>\n<li>\n<p>领导能力和权衡能力。领导团队的每一个人。权衡项目的成本、进度、质量和绩效。</p>\n</li>\n<li>\n<p>沟通能力。良好的人际交往能力。</p>\n</li>\n<li>\n<p>管理时间的能力。时间管理，辨明先后主次。</p>\n</li>\n<li>\n<p>灵敏性。敏锐的政治触角，对冲突有灵敏的感觉，IT 技术敏感，具有应变能力，灵活性和创造性。</p>\n</li>\n</ul>\n<h1 id=\"第三章-it项目整体管理\"><a class=\"anchor\" href=\"#第三章-it项目整体管理\">#</a> <strong>第三章 IT 项目整体管理</strong></h1>\n<h2 id=\"一-项目启动和可行性分析\"><a class=\"anchor\" href=\"#一-项目启动和可行性分析\">#</a> <strong>一、项目启动和可行性分析</strong></h2>\n<h3 id=\"1-准备和启动过程\"><a class=\"anchor\" href=\"#1-准备和启动过程\">#</a> <strong>1、准备和启动过程</strong></h3>\n<p>在项目管理中，启动阶段是识别和启动一个新项目或项目新阶段的过程。</p>\n<p>完整的项目启动过程是指从项目的产生、项目概念的开发、机会研究，然后通过可行性分析、选择、优化，确定所要进行的项目，直到最后项目的正式启动。</p>\n<p>（1）项目建议书</p>\n<ul>\n<li>\n<p>项目的背景。</p>\n</li>\n<li>\n<p>项目的意义和必要性。</p>\n</li>\n<li>\n<p>项目产品或服务的市场预测。</p>\n</li>\n<li>\n<p>项目规模项目建设的必要条件，已具备和尚不具备的条件分析。</p>\n</li>\n<li>\n<p>投资估算和资金筹措的设想。</p>\n</li>\n<li>\n<p>项目经济效益、市场前景初步分析。</p>\n</li>\n<li>\n<p>其他需要说明的情况等。</p>\n</li>\n</ul>\n<p>（2）项目的核准和立项</p>\n<ul>\n<li>\n<p>IT 项目只有在可行性研究或初步计划完成之后才能正式启动，一般包括编写立项报告，在通过审批后召开启动会议，项目正式启动。</p>\n</li>\n<li>\n<p>对于一个小项目，只要可行、合法，不必经过有关部门的批准就可以实施。</p>\n</li>\n<li>\n<p>对于大项目一般需要申报到有关部门进行核准，审批通过后才能启动。这一过程称为项目立项。</p>\n</li>\n<li>\n<p>这个阶段需要决定项目是自己开发还是采购。采购的话会进入招标环节，自己开发则开始筹备项目启动。</p>\n</li>\n</ul>\n<p>（3）招标投标</p>\n<ul>\n<li>招标投标是在市场经济条件下进行大宗货物的买卖、工程建设项目有发包与承包，以及服务项目的采购与提供时，所采用的一种交易方式。</li>\n</ul>\n<p>（4）项目启动</p>\n<ol>\n<li>\n<p>立项启动准备</p>\n<p>项目考核管理制度。</p>\n<p>项目费用管理制度。</p>\n<p>项目例会管理制度。</p>\n<p>项目通报制度。</p>\n<p>项目计划管理制度：明确各级项目计划的制订、检查流程，如整体计划、阶段计划、周计划。</p>\n<p>项目文件管理流程：明确各种文件名称的管理和制定文件的标准模板，如汇报模板、例会模板、日志、问题列表等。</p>\n</li>\n<li>\n<p>召开项目启动会议</p>\n<p>项目开工的正式宣告，参加人应该包括项目组织机构中的关键角色，如管理层、项目经理、供应商代表、客户代表、项目监理、技术人员代表等。项目启动会的任务包括下面几项内容。</p>\n<p>阐述项目背景、价值、目标。</p>\n<p>项目交付物介绍。</p>\n<p>项目组织机构及主要成员职责介绍。</p>\n<p>使双方人员彼此认识，明确各个层次的接口。</p>\n<p>项目初步计划与风险分析。</p>\n<p>项目管理制度。</p>\n<p>项目将要使用的工作方式。</p>\n</li>\n</ol>\n<p>（5）制定项目章程</p>\n<ul>\n<li>\n<p>编写一份正式批准项目，并授权项目经理在项目活动中使用组织资源的文件的过程。</p>\n</li>\n<li>\n<p>明确地给出了项目的定义，说明了它的特点和最终结果，规定了项目的发起人、项目经理和团队领导。</p>\n</li>\n<li>\n<p>主要作用是正式宣布项目的存在，粗略规定项目的范围，并任命项目经理等。项目章程应当由项目团队之外的、适当级别的、并为项目出资的项目发起人或投资人发布。</p>\n</li>\n</ul>\n<h3 id=\"2-可行性研究\"><a class=\"anchor\" href=\"#2-可行性研究\">#</a> <strong>2、可行性研究</strong></h3>\n<p>可行性研究是对拟选的技术方案、项目需求进行先期的调查和研究，分析投资收益比，研究项目的可行性，提出初步的系统目标和项目计划，必要时提出对用户业务流程等进行重组等改进建议。</p>\n<p>可行性分析一般包括初步可行性分析、详细可行性分析和提交可行性研究报告 3 个阶段。根据项目情况可以跨越阶段进行。</p>\n<p>（1）初步可行性研究</p>\n<ul>\n<li>\n<p>分析项目的前途，从而决定是否应该继续深入调查研究。</p>\n</li>\n<li>\n<p>初步估计和确定项目中的关键技术核心问题，以确定是否有可能解决。</p>\n</li>\n<li>\n<p>初步估计必须进行的辅助研究，以解决项目的核心问题，并判断是否具备必要的技术、实验、人力条件作为支持。</p>\n</li>\n</ul>\n<p>（2）详细可行性研究</p>\n<ul>\n<li>\n<p>详细可行性研究是项目决策前进行详尽的、系统的、全面的调查、研究、分析和论证，对可能的技术方案进行详细的论证、比较，对项目建设完成后可能产生的经济、社会效益进行预测和评价，最终提交的可行性研究报告将作为进行项目决策和评估的依据。</p>\n</li>\n<li>\n<p>可行性研究的内容一般包括技术可行性分析、经济可行性、运行环境可行性和可行性研究报告。</p>\n</li>\n</ul>\n<p>（1）技术可行性分析</p>\n<ul>\n<li>\n<p>在现有的技术条件下，能否达到用户所提出的要求，所需要的各种资源是否具备、是否能得到。</p>\n<ul>\n<li>\n<p>① 项目开发的技术风险。限制范围和时间期限内，能否设计出逾期的系统。</p>\n</li>\n<li>\n<p>② 人力资源的有效性。技术人员队伍的建立、数量和能力。</p>\n</li>\n<li>\n<p>③ 技术能力的可能性。相关技术的发展趋势和当前所掌握的技术是否支持。</p>\n</li>\n<li>\n<p>④ 设备（产品）的可用性。用于建立系统的其他资源。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>（2）经济可行性</p>\n<ul>\n<li>\n<p>估计项目的成本和效益，分析项目在经济上是否合理。</p>\n<ul>\n<li>\n<p>① 成本分析</p>\n<ul>\n<li>\n<p>开发成本：设备、机房及附属设施费用、软件开发费用等</p>\n</li>\n<li>\n<p>维护成本：系统维护费、系统运行费等</p>\n</li>\n</ul>\n</li>\n<li>\n<p>② 直接经济效益分析。</p>\n<ul>\n<li>\n<p>资金折现公式为：资金折现值 = 资金未来值 /(1 + t) T 其中，t 是银行利率，T 是年份。</p>\n</li>\n<li>\n<p>衡量经济效益的指标主要有以下几项。</p>\n</li>\n<li>\n<p>纯收入。资金收益折现值 - 成本。</p>\n</li>\n<li>\n<p>投资回收期。资金收益折现值 = 成本时所需要的时间。</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>（3）运行环境可行性。</p>\n<ul>\n<li>从管理制度、管理方法、规章制度、人员素质、数据资源、硬件平台等评估，重点评估是否可以建立系统顺利运行所需要的环境，以及建立这个环境所需要进行的工作，以便可以纳入项目计划中。</li>\n</ul>\n<p>（4）可行性研究报告。</p>\n<ul>\n<li>\n<p>结论需要明确：</p>\n<ul>\n<li>\n<p>项目各方面条件已经基本具备，可以立即开发。</p>\n</li>\n<li>\n<p>项目实施的基本条件不具备，可建议终止项目或推迟到具备某些条件后再进行（资金缺口大，技术难突破等）。</p>\n</li>\n<li>\n<p>某些条件准备不充分，可建议修改调整原来的系统目标，使其成为可行。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二-项目管理计划\"><a class=\"anchor\" href=\"#二-项目管理计划\">#</a> <strong>二、项目管理计划</strong></h2>\n<p>项目管理计划包括项目整体介绍、如何组织开展项目的描述、项目运用的管理技术与方法、时间进度表和预算等。</p>\n<p>（1）项目管理计划的内容</p>\n<ul>\n<li>\n<p>1）项目名称。</p>\n</li>\n<li>\n<p>2）项目需求的简要描述。项目的目标和组织项目的原因，以及大致的时间和成本估算。</p>\n</li>\n<li>\n<p>3）发起人的名称。</p>\n</li>\n<li>\n<p>4）项目经理与主要成员的简介。</p>\n</li>\n<li>\n<p>5）项目可交付成果。软件、硬件设备、技术报告、培训材料、维护手册等。</p>\n</li>\n<li>\n<p>6）重要资料清单。前期项目形成的过程、范围管理计划、进度管理计划、成本管理计划、质量管理计划、人员管理计划、沟通管理计划、风险管理计划、采购管理计划等。</p>\n</li>\n<li>\n<p>7）有关定义和缩写词的说明。</p>\n</li>\n</ul>\n<p>（2）项目管理计划的作用</p>\n<ul>\n<li>\n<p>确定项目的工作规范、遵循标准，成为项目实施的依据和指南。</p>\n</li>\n<li>\n<p>明确项目组各成员及其工作责任范围，以及相应的职权。</p>\n</li>\n<li>\n<p>使项目组成员明确自己的工作目标、工作方法、工作途径、工作期限要求。</p>\n</li>\n<li>\n<p>保证项目进行过程中项目组成员和项目干系人之间的交流、沟通与协作，使得项目各项工作协调一致，增加客户满意度。</p>\n</li>\n<li>\n<p>为项目的跟踪控制提供基础。</p>\n</li>\n<li>\n<p>项目计划在项目中起到承上启下的作用，计划批准后应当作为项目的工作指南。</p>\n</li>\n</ul>\n<p>（3）编制项目管理计划的注意事项</p>\n<ul>\n<li>\n<p>1）注意项目计划的弹性。滚动计划方法按照 “近细远粗” 的原则调整和修订。</p>\n</li>\n<li>\n<p>2）注意项目计划的层次性。按照高级、分阶段、详细等层次制定。</p>\n</li>\n<li>\n<p>3）注意计划的现实有用。</p>\n<ul>\n<li>\n<p>充分鼓励、积极接纳项目干系人来参与项目计划的制订。</p>\n</li>\n<li>\n<p>充分利用历史数据。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>4）重视与客户的沟通。</p>\n</li>\n</ul>\n<h2 id=\"三-项目计划执行-监控与变更控制\"><a class=\"anchor\" href=\"#三-项目计划执行-监控与变更控制\">#</a> <strong>三、项目计划执行、监控与变更控制</strong></h2>\n<h3 id=\"1-指导与管理项目执行\"><a class=\"anchor\" href=\"#1-指导与管理项目执行\">#</a> <strong>1、指导与管理项目执行</strong></h3>\n<p>项目计划执行是执行项目计划的主要过程，项目产品是在这个过程中产生的，管理团队需要协调、管理各种技术和组织间的接口，花费大部分的资源。</p>\n<h3 id=\"2-监控项目工作\"><a class=\"anchor\" href=\"#2-监控项目工作\">#</a> <strong>2、监控项目工作</strong></h3>\n<p>监控项目工作监视和控制启动、规划、执行和结束项目所需的各个过程。贯穿项目始终。</p>\n<p>主要监控对象包括如下几方面。</p>\n<ul>\n<li>\n<p>对照项目管理计划比较项目的实际表现。</p>\n</li>\n<li>\n<p>评价项目的绩效，判断是否出现需要采取纠正或预防措施的迹象，并在必要时提出采取行动的建议。</p>\n</li>\n<li>\n<p>分析、跟踪并监视项目风险，执行适当的风险应对计划。</p>\n</li>\n<li>\n<p>建立有关项目产品及有关文件的准确和及时的信息库。</p>\n</li>\n<li>\n<p>为状态报告、绩效测量和预测提供信息支持。</p>\n</li>\n<li>\n<p>为更新当前的成本和进度信息提供预测。</p>\n</li>\n</ul>\n<p><strong>3、项目整体变更控制</strong></p>\n<p>项目整体变更控制是在项目声明周期的整个过程中对变更进行识别、评价和管理。</p>\n<p>主要目标包括如下几方面。</p>\n<ul>\n<li>\n<p>对引起变更的各种因素施加影响，以保证这些变更是征得同意的。</p>\n</li>\n<li>\n<p>确认变更是否已经发生。</p>\n</li>\n<li>\n<p>当变更发生时，对实际变更进行管理。</p>\n</li>\n<li>\n<p>维护绩效测量基准计划的完整性。</p>\n</li>\n<li>\n<p>确保产品范围的变更反映在项目范围定义中。</p>\n</li>\n<li>\n<p>在各个知识域中协调变更。</p>\n</li>\n</ul>\n<h2 id=\"四-项目收尾与验收\"><a class=\"anchor\" href=\"#四-项目收尾与验收\">#</a> <strong>四、项目收尾与验收</strong></h2>\n<p>（1）结束项目或阶段</p>\n<ul>\n<li>项目收尾工作是项目全过程的最后阶段，包括验收、正式移交运行、项目评价等工作。</li>\n</ul>\n<p>（2）项目验收</p>\n<ul>\n<li>项目范围确认、质量验收、项目资料验收</li>\n</ul>\n<p>（3）项目移交与清算</p>\n<ul>\n<li>\n<p>项目移交是在项目收尾后，将全部的产品和服务交付给客户和用户。</p>\n</li>\n<li>\n<p>项目验收是项目移交的前提，移交是项目收尾阶段的最后工作内容。</p>\n</li>\n<li>\n<p>项目清算是不能成功结束的项目，需要尽快终止项目并清算。</p>\n</li>\n</ul>\n<h1 id=\"第四章-it项目范围管理\"><a class=\"anchor\" href=\"#第四章-it项目范围管理\">#</a> <strong>第四章 IT 项目范围管理</strong></h1>\n<h2 id=\"一-项目范围与范围管理\"><a class=\"anchor\" href=\"#一-项目范围与范围管理\">#</a> <strong>一、项目范围与范围管理</strong></h2>\n<p>项目范围管理包括确保项目做且只做所需的全部工作，以成功完成项目的各个过程。</p>\n<p>管理项目范围主要在于定义和控制哪些工作应该包括在项目内，哪些不应该包括在项目内。</p>\n<p>项目范围管理的过程包括以下内容。</p>\n<ul>\n<li>\n<p>（1）规划范围管理。</p>\n</li>\n<li>\n<p>（2）收集需求。</p>\n</li>\n<li>\n<p>（3）范围定义。</p>\n</li>\n<li>\n<p>（4）创建工作分解结构（Work Breakdown Structure，WBS）。</p>\n</li>\n<li>\n<p>（5）范围核实。</p>\n</li>\n<li>\n<p>（6）范围变更控制。</p>\n</li>\n</ul>\n<p>IT 项目范围管理的重要性：</p>\n<ul>\n<li>（1）提高费用、时间和资源估算的准确性。</li>\n<li>（2）确定进行测量和控制的基准。</li>\n<li>（3）有助于项目分工。</li>\n</ul>\n<h2 id=\"二-规划范围管理\"><a class=\"anchor\" href=\"#二-规划范围管理\">#</a> <strong>二、规划范围管理</strong></h2>\n<p>规划范围管理是为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。在整个项目期间对如何管理范围提供指南和方向。</p>\n<ul>\n<li>\n<p>范围管理计划：如何管理项目范围以及如何将变更纳入到项目范围之内，项目范围稳定性评价，包括项目范围变化的可能原因、频率和幅度。</p>\n</li>\n<li>\n<p>需求管理计划：项目管理计划的部分，包含如何规划、跟踪和报告各项需求活动，配置管理活动、需求优先级排序、测量指标等。</p>\n</li>\n</ul>\n<h2 id=\"三-收集需求\"><a class=\"anchor\" href=\"#三-收集需求\">#</a> <strong>三、收集需求</strong></h2>\n<h3 id=\"1-收集需求\"><a class=\"anchor\" href=\"#1-收集需求\">#</a> <strong>1、收集需求</strong></h3>\n<p>收集需求是为实现目标而确定、记录并管理干系人的需要和需求的过程。为定义产品范围和项目范围奠定基础。需求收集活动出现大的误差将是方向性的重大错误。</p>\n<p>收集需求 —— 工具与技术</p>\n<p>访谈：与干系人直接交谈。</p>\n<p>焦点小组会议：把预先选定的干系人和主题专家集中在一起，了解他们对所提议产品、服务或成果的期望和态度。由一位受过训练的主持人引导大家进行互动式讨论。</p>\n<p>引导式研讨会：邀请主要的跨职能干系人一起参加会议，对产品需求进行集中讨论与定义。</p>\n<p>名义小组法。小组成员独立思考，写下自己的备选方案和意见。再按次序陈述自己的方案和意见。由小组成员对全部备选方案进行投票，根据投票结果，赞成人数最多的备选方案即为所要的方案，当然，管理者最后仍有权决定是接受还是拒绝这一方案。</p>\n<p>群体决策技术。一致同意、大多数原则、相对多数原则、独裁。</p>\n<p>观察法。核对清单法、级别量表法、记叙性描述。</p>\n<p>原型法。在实际制造预期产品之前，先造出该产品的模型，并据此征求对需求的早期反馈。</p>\n<p>需求文件：描述各种单一需求将如何满足与项目相关的业务需求。包含业务需求、可跟踪业务目标和项目目标、功能需求、非功能要求、质量要求、验收标准、体现组织指导原则的业务原则、对组织内部和外部团队的影响、对支持和培训的需求、与需求有关的假设条件和制约因素。</p>\n<p>需求跟踪矩阵：把产品需求从其来源连接到能满足需求的可交付成果的一种表格。</p>\n<h3 id=\"2-软件项目的需求管理\"><a class=\"anchor\" href=\"#2-软件项目的需求管理\">#</a> <strong>2、软件项目的需求管理</strong></h3>\n<p>需求管理过程是保证软件需求以一种技术性是描述一个产品应该具有的功能、性能、性质等。从需求获取开始贯穿于整个项目生命周期。保证开发过程的一致性。</p>\n<ul>\n<li>\n<p>（1）定义需求：形成经过评审的书面文档《需求规格说明书》</p>\n</li>\n<li>\n<p>（2）需求确认：沟通对不一致的需求剔除；双方承诺共同理解或用户认可的部分。</p>\n</li>\n<li>\n<p>（3）建立需求状态：用户需求的一种状态变换过程。</p>\n</li>\n<li>\n<p>（4）需求评审：正式的技术评审（开发方和客户方组成）；非正式技术评审（开发方内部）。正确性、清晰性、无二义性、一致性、必要性、完整性、可实现性、可验证性、可测性。</p>\n</li>\n<li>\n<p>（5）需求承诺：开发方和客户方的责任人对通过了同行评审的需求阶段的工作产品做出承诺。</p>\n</li>\n<li>\n<p>（6）需求跟踪：建立和维护从用户需求开始到测试之间的一致性与完整性。正向跟踪（检查《需求规格说明书》的每个需求是否在后续工作产品中找到对应点）和逆向跟踪（检查设计文档、代码、测试用例等工作产品是否在《需求规格说明书》中找到）。</p>\n</li>\n<li>\n<p>（7）需求变更控制：正确判断内在或外在原因的变更所带来的影响，并且调整开发过程以控制和适应这些变化。</p>\n</li>\n</ul>\n<h2 id=\"四-范围定义\"><a class=\"anchor\" href=\"#四-范围定义\">#</a> <strong>四、范围定义</strong></h2>\n<p>定义范围是制定项目和产品详细描述的过程。描述产品、服务或成果的边界和验收标准。</p>\n<p>项目范围定义是根据范围管理计划，采取一定的办法，逐步得到精确的项目范围的过程。</p>\n<p>项目范围说明书：项目目标与项目范围指标、产品描述、项目可交付成果的规定、验收标准、约束条件、假定、项目配置关系及其管理要求。</p>\n<h2 id=\"五-创建工作分解结构\"><a class=\"anchor\" href=\"#五-创建工作分解结构\">#</a> <strong>五、创建工作分解结构</strong></h2>\n<p>工作分解结构是以项目的可交付成果为中心，为了完成项目的目标和创造项目的可交付成果，由项目团队进行的一种对项目工作有层次的分解。</p>\n<p>要把整个项目工作分解为工作包，通常需要开展以下活动：</p>\n<p>・识别和分析可交付成果及相关工作</p>\n<p>・确定 WBS 的结构和编排方法</p>\n<p>・自上而下逐层细化分解</p>\n<p>・为 WBS 组成部分制定和分配标识编码</p>\n<p>・核实可交付成果分解的程度是否恰当</p>\n<p>分解注意事项：</p>\n<ul>\n<li>\n<p>(1) WBS 必须是面向可交付成果的。</p>\n</li>\n<li>\n<p>(2) WBS 必须符合项目的范围。WBS 必须包括，也仅包括为了完成项目的可交付成果的活动。</p>\n</li>\n<li>\n<p>(3) WBS 的底层应该支持计划和控制。</p>\n</li>\n<li>\n<p>(4) WBS 中的元素必须有人负责，而且只由一个人负责，尽管实际上可能需要多个人参与。</p>\n</li>\n<li>\n<p>(5) WBS 的指导。作为指导而不是原则，WBS 应控制在 4~6 层。当然，大项目可以超过 6 层。一个工作单元只能从属于某个上层单元，避免交叉从属。</p>\n</li>\n<li>\n<p>(6) WBS 应包括项目管理工作也要包括分包出去的工作。</p>\n</li>\n<li>\n<p>(7) WBS 的编制需要所有 (主要) 项目干系人的参与，需要项目团队成员的参与。</p>\n</li>\n<li>\n<p>(8) WBS 并非是一成不变的，在完成了 WBS 之后的工作中，仍然有可能需要对 WBS 进行修改。</p>\n</li>\n</ul>\n<p>范围基准是由批准的项目范围说明书、WBS、和 WBS 词典组成。</p>\n<p>WBS 词典：对每一工作包包括的详细内容进行表述，包括：编号、名称、如何做、投入资源、结果、完成的标准 / 质量、由谁做...</p>\n<h2 id=\"六-项目范围核实\"><a class=\"anchor\" href=\"#六-项目范围核实\">#</a> <strong>六、项目范围核实</strong></h2>\n<p>检查。开展测量、审查与确认等活动，来判断工作和可交付成果是否符合需求和产品验收标准。检査有时也被称为审查、产品审查、审计、走查和巡检等。在某些应用领域，这些术语具有独特和具体的含义。</p>\n<p>决策。可用于本过程的决策技术包括 (但不限于) 投票。当由项目团队和其他相关方进行验收时，使用投票来形成结论。</p>\n<p>可交付成果。指的是在某一过程、阶段或项目完成时，经过 “指导与管理项目工作” 过程产出的任何独特并可核实的产品、成果或服务【研发完成】</p>\n<p>核实的可交付成果。是指已经完成，并经过 “控制质量” 过程检查为正确的可交付成果。【内测通过】</p>\n<p>验收的可交付成果。是指对核实的可交付成果，经过 “确认范围” 过程由客户或发起人确认为满足既定验收标准的产品、结果或服务。【甲方试用通过】</p>\n<p>最终的成果、产品或服务的移交。是指对验收的可交付成果，经过 “结束项目或阶段” 过程，最终移交给客户的产品、结果或服务。</p>\n<h2 id=\"七-项目范围控制\"><a class=\"anchor\" href=\"#七-项目范围控制\">#</a> <strong>七、项目范围控制</strong></h2>\n<p>项目范围控制是监督项目和产品的范围状态，管理范围基准变更的过程。在整个项目期间保持对范围基准的维护，且需要在整个项目期间开展。</p>\n<p>IT 项目范围变更控制过程：</p>\n<p>提交变更请求：变更请求应被记录，并提交给 CCB。</p>\n<p>复审变更请求：在 CCB 复审会议中对变更请求进行初始复审，以确定是否为有效请求。</p>\n<p>安排或分配工作：对于确认并批准的变更请求，实施工作分配和安排。</p>\n<p>进行变更：对需要采取措施的地方确定应采取的具体措施。</p>\n<p>核实或测试工作版本中的变更。</p>\n<p>发布工作版本中的变更。</p>\n<p>估计所采取的纠正措施的效果，如果所采取的纠正措施仍无法获得满意的范围调整，则重复以上步骤。</p>\n<p><strong>第五章 IT 项目进度管理</strong></p>\n<p><strong>一、规划进度管理</strong></p>\n<p>规划进度管理是为规划、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。</p>\n<p>本过程的主要作用是，为如何在整个项目期间管理项目进度提供指南和方向。</p>\n<p><strong>二、定义活动</strong></p>\n<p>定义活动是识别和记录为完成项目可交付成果而须采取的具体行动的过程。</p>\n<p>本过程的主要作用是，将工作包分解为进度活动，作为对项目工作进行进度估算、规划、执行、监督和控制的基础。</p>\n<p><strong>三、排列活动顺序</strong></p>\n<p>排列活动顺序是识别和记录项目活动之间的关系的过程。</p>\n<p><img data-src=\"media/1f425af2c2bf9dc1749d93b27cd9800d.png\" alt=\"\" />本过程的主要作用是定义工作之间的逻辑顺序，以便在既定的所有项目制约因素下获得最高的效率。</p>\n<p><strong>1、紧前关系绘图法（PDM）的活动关系类型</strong></p>\n<p><strong>2、前导图法 (Precedence Diagramming Method , PDM)</strong></p>\n<p><img data-src=\"media/85dc2aac05210379651d90328b6237bc.png\" alt=\"\" />也称紧前关系绘图法，也被称作单代号网络图 (只有节点需要编号) 或活动节点图 ( Active On Node,AON)，是用于编制项目进度网络图的一种方法，它使用方框或者长方形 (被称作节点) 代表活动，节点之间用箭头连接，以显示节点之间的逻辑关系。</p>\n<p><img data-src=\"media/f352861b956b1585fa46041ec609777a.png\" alt=\"\" /><img data-src=\"media/18a79cb6ba0545d2dee74f9ac924479a.png\" alt=\"\" /></p>\n<p>编制前导图时要注意以下几个问题：</p>\n<p> 一个网络图只有一个开始点和一个结束点。</p>\n<p> 网络图是有方向的，不应该出现循环回路。</p>\n<p> 网络图中不能出现无箭头箭线和双箭头箭线。</p>\n<p> 网络图中不能出现无节点的箭线。</p>\n<p> 在同一个网络图中的所有节点，不能出现相同的编号。</p>\n<p><strong>3、箭线图法（Arrow Diagramming Method,ADM）</strong></p>\n<p>用箭线表示活动、节点表示事件的一种网络图绘制方法。也称为双代号网络图（节点和箭线都要编号）或活动箭线图（Active On the Arrow,AOA）。</p>\n<p>虚活动不消耗时间，也不消耗资源，只是为了弥补箭线图在表达活动依赖关系方面的不足。在复杂的网络图中，为避免多个起点或终点引起的混淆，我们可以用虚活动来解，借助虚活动，我们可以更好地、更清楚地表达活动之间的关系。</p>\n<p>编制双代号网络图时要注意以下几个问题。</p>\n<p>在一个图中的所有节点，不能出现相同的编号。</p>\n<p>任意两项活动的紧前事件和紧后事件至少有一个不相同，节点序号沿箭线方向越来越大。</p>\n<p>流入（流出）同一节点的活动，均有共同的紧后活动（或紧前活动）。</p>\n<p><strong><img data-src=\"media/9ac6111b70d578fc357bbbdc7d6f1b65.png\" alt=\"\" />4、提前量与滞后量</strong></p>\n<p>提前量 (Lead) 是相对于紧前活动，紧后活动可以提前的时间量。提前量往往表示负数。</p>\n<p>滞后量 (Lag) 是相对于紧前活动，紧后活动需要推迟的时间量。滞后量往往表示正数。</p>\n<p><strong>四、估算活动资源</strong></p>\n<p>估算活动资源是对执行项目所需的团队人力资源，以及材料、设备和用品的类型和数量进行估算的过程.</p>\n<p>主要作用：确定出完成项目所需的资源种类、数量和特性。</p>\n<p><strong>1、估算活动持续时间 —— 工具与技术</strong></p>\n<p>专家判断。具备团队和物质资源的规划和估算方面的专业知识或接受过相关培训的个人或小组。</p>\n<p>类比估算。将以往类似项目的资源相关信息作为估算未来项目的基础。</p>\n<p>参数估算。基于历史数据和项目参数，使用某种算法或历史数据与其他变量之间的统计关系，来计算活动所需的资源数量。</p>\n<p>自下而上估算。团队和实物资源首先在活动级别上进行估算，然后汇总成工作包、控制账户和总体项目层级上的估算。</p>\n<p>数据分析。本过程建议使用：备选方案分析和储备分析。</p>\n<p>项目管理信息系统。可以包括资源管理软件，这些软件有助于规划、组织与管理资源库，以及编制资源估算。</p>\n<p>会议。项目团队可能会召开会议来估算活动资源。</p>\n<p><strong>2、估算活动持续时间 —— 输出</strong></p>\n<p>资源需求。识别了各个工作包或工作包中每个活动所需的资源类型和数量</p>\n<p>估算资源</p>\n<p>・对资源估算时所需的支持信息，它的数量和种类因应用领域的不同而不同。</p>\n<p>・支持信息可以包括：估算方法；用于估算的资源；与估算有关的假设条件；已知的制约因素；估算范围；</p>\n<p>资源分解结构。是资源按照类别和类型的层级展现。</p>\n<p><strong><img data-src=\"media/e9e34dcc2c76da402efb0da21bc93280.png\" alt=\"\" />五、估算活动持续时间</strong></p>\n<p>估算活动持续时间是根据资源估算的结果，估算完成单项活动所需工作时段数的过程。</p>\n<p>本过程的主要作用是，确定完成每个活动所需花费的时间量。</p>\n<p><img data-src=\"media/35df2013beb048924c8211918daf8bad.png\" alt=\"\" /><strong>六、制定进度计划</strong></p>\n<p>制定进度计划是分析活动顺序、持续时间、资源需求和进度制约因素，创建进度模型，从而落实项目执行和监控的过程。</p>\n<p>本过程的主要作用是，为完成项目活动而制定具有计划日期的进度模型。</p>\n<p><strong>1、关键路径法</strong></p>\n<p>用于在进度模型中估算项目最短工期，确定逻辑网络路径的进度灵活性大小。</p>\n<p>这种进度网络分析技术在不考虑任何资源限制的情况下，沿进度网络路径使用顺推与逆推法，计算出所有活动的最早开始 ES 最早结束 EF、最晚开始 LS 和最晚完成 LF 日期。</p>\n<p>（1）关键路径</p>\n<p>关键路径决定了项目完成的最短时间。</p>\n<p>是时间浮动为 0（Float=0）的路径。</p>\n<p>网络图中最长的路径。</p>\n<p><img data-src=\"media/8146dd0aa3d29ed01cafd3882f259c4b.png\" alt=\"\" />关键路径上的任何活动延迟，都会导致整个项目完成时间的延迟。关键路径上的活动称为关键活动。</p>\n<p>明确关键路径后，可以合理安排进度。</p>\n<p>关键路径可能不止一条，在项目的进行过程中，关键路径可能会改变。</p>\n<p>（2）自由浮动和总浮动时间</p>\n<p>自由浮动 (Free Float)：在不影响紧后活动最早开始时间的情况下本活动可以延迟的时间。</p>\n<p>计算方法：紧后活动最早开始时间的最小值减去本活动的最早完成时间。</p>\n<p>总浮动 (Total Float)：在不影响项目最早完成时间的情况下本活动可以延迟的时间。</p>\n<p>计算方法：本活动的最迟完成时间减去本活动的最早完成时间，或本活动的最迟开始时间减去本活动的最早开始时间。正常情况下，关键活动的总浮动时间为 0。</p>\n<p>（3）正推法和逆推法</p>\n<ol>\n<li>正推法</li>\n</ol>\n<p>按照时间顺序来计算路径中每项活动的最早开始时间和最早完成时间。</p>\n<p>建立项目的开始时间。</p>\n<p>项目的开始时间就是网络图中第一个活动的最早开始时间。</p>\n<p>按网络图从左到右，从上到下的顺序进行计算。所用公式为：</p>\n<p>ES + 工期（Duration）=EF</p>\n<p>EF + 滞后量（Lag）=ESs 或 EF - 提前量（Lead）=ESs</p>\n<p>当一个活动有多个前置时，选择其中最大的最早完成时间 (加上滞后量 Lag 或减去提前量 Lead) 作为其后置任务的最早开始时间。</p>\n<ol>\n<li><img data-src=\"media/17967f3d5855b8f03667fc143787b170.png\" alt=\"\" />逆推法</li>\n</ol>\n<p>按照逆时间顺序计算路径中每项活动的最晚开始时间和最晚完成时间。</p>\n<p>首先建立项目的结束时间。</p>\n<p>项目的结束时间就是网络图中最后一个活动的最晚完成时间。</p>\n<p>从右到左，从上到下进行计算。所用公式为：</p>\n<p>LF - 工期（Duration）=LS</p>\n<p>LS - 滞后量（Lag）=LFp 或 LS + 提前量（Lead）=LFp</p>\n<p>当一个任务有多个后置任务时，选择其中最小的最晚开始时间 (减去滞后量 Lag 或加上提前量 Lead) 作为其前置任务的最晚完成时间。</p>\n<p><img data-src=\"media/e019bf07e4543da03ed90794d8021b00.png\" alt=\"\" /></p>\n<p><strong>2、关键链法</strong></p>\n<p>是一种进度规划方法，允许项目团队在任何项目进度路径上设置缓冲，以应对资源限制和项目的不确定性。这种方法建立在关键路径法之上，考虑了资源分配、资源优化、资源平衡和活动历时不确定性对关键路径的影响。</p>\n<p>关键链法增加了作为 “非工作活动” 的持续时间缓冲，用来应对不确定性。如图，放置在关键链末端的缓冲称为项目缓冲，用来保证项目不因关键链的延误而延误。其他缓冲，即接驳缓冲，则放置在非关键链与关键链的接合点，用来保护关键链不受非关键链延误的影响。</p>\n<p><img data-src=\"media/af074b84710deb6d97c32f3d447f39a7.png\" alt=\"\" /></p>\n<p><strong>3、资源优化技术</strong></p>\n<p>（1）资源平衡，为了在资源需求与资源供给之前取得平衡，根据资源制约对开始日期和结束日期进行调整的一种技术。如果共享资源或关键资源只在特定时间可用，数量有限，或被过度分配，如一个资源在同一时间内被分配至两个或多个活动，就需要进行资源平衡。也可以为保持资源使用量处于均衡水平而进行资源平衡。资源平衡往往导致关键路径改变，通常是延长。</p>\n<p>（2）资源平滑，对进度模型中的活动进行调整，从而使项目资源需求不超过预定的资源限制的一种技术。相对资源平衡而言，资源平滑不会改变项目关键路径，完工日期也不会延迟。也就是说，活动只在其自由浮动时间和总浮动时间内延迟。因此，资源平滑技术可能无法实现所有资源的优化。</p>\n<p><strong>4、甘特图</strong></p>\n<p>甘特图（Gantt Chart 或 Bar Chart）是表示项目各阶段任务开始时间与结束时间的图形，它把计划和进度安排组织在一起。</p>\n<p>甘特图用水平线段表示阶段任务，线段的起点和终点分别对应于任务的开始时间和结束时间，线段的长度表示完成任务所需要的时间。</p>\n<p>甘特图的优点是表明了任务的进度计划和当前进度，能直观反映项目的进展情况。</p>\n<p>甘特图的缺点是不能反映某一项任务的进度变化对整体项目的影响，它把各项任务看成是独立的工作，没有考虑项目之间存在着因果和逻辑关系。</p>\n<p><img data-src=\"media/9369a29a219ae22d90412f28e2551762.png\" alt=\"\" />5**、计划评审技术（PERT）**</p>\n<p>与三点估算的计算方法相同，三点估算用于估算单个活动历时，是活动历时估算过程中用到的技术；而 PERT 是一种进度表编制技术，用于制订进度表的过程中。</p>\n<p>在 PERT 图中，用箭号表示事件，即要完成的任务。箭头旁给出子任务的名称和完成该子任务所需要的时间。用圆圈节点表示事件的起点和终点。</p>\n<p><strong><img data-src=\"media/77ccb29c31652543ec289d86087e3fb3.png\" alt=\"\" /><img data-src=\"media/791000a08d5ebc99ae2d5fff63517ef3.png\" alt=\"\" />6、进度压缩</strong></p>\n<p>赶工：通过增加资源，以最小的成本代价来压缩进度工期的一种技术。</p>\n<p>快速跟进：一种进度压缩技术，将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。</p>\n<ol>\n<li><strong>进度控制</strong></li>\n</ol>\n<p>控制进度是监督项目状态，以更新项目进度和管理进度基准变更的过程。</p>\n<p>本过程的主要作用是在整个项目期间保持对进度基准的维护，且需要在整个项目期间开展。</p>\n<p><strong>第六章 IT 项目成本管理</strong></p>\n<p><strong>一、项目成本管理概述</strong></p>\n<p><strong>1、项目成本管理</strong></p>\n<p>项目成本管理包括为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程，从而确保项目在批准的预算内完工。</p>\n<p><strong>2、软件项目成本</strong></p>\n<p>（1）软件产品的生产不是一个重复的制造过程，项目成本是以 “一次性” 开发过程中所花费的代价来计算的。</p>\n<p>从系统生命周期构成的开发阶段和维护阶段看，IT 项目的成本由开发成本和维护成本构成。</p>\n<p>其中开发成本由软件开发成本、硬件成本和其他成本组成，包括软件的分析 / 设计费用（包含系统调研、需求分析、系统设计）、实施费用（包含编程 / 测试、硬件购买与安装、系统软件购置、数据收集、人员培训）及系统切换等方面的费用。</p>\n<p>维护成本包括运行费用（包含人工费、材料费、固定资产折旧费、专有技术及技术资料购置费）、管理费（包含审计费、系统服务费、行政管理费）及维护费（包含纠错性维护费用及适应性维护费用等）。</p>\n<p>（2）在产品或系统的整个使用生命期内，在获得阶段（设计、生产、安装和测试等活动，即项目存续期间）、运营与维护及生命周期结束时对产品的处置所发生的全部成本。</p>\n<p>直接成本是与开发的具体项目直接相关的成本，例如人员的工资，材料费，外包外购成本等，包括开发成本，管理成本，质量成本等。</p>\n<p>间接成本不能归属于一个具体的项目，是企业的运营成本，可以分摊到各个项目中。例如房租，水电，保安，员工福利，保险，税收，行政管理，市场费用。</p>\n<p>成本基准是经批准的按时间安排的成本支出计划，并随时反映了经批准的项目变更（所增加或减少的资金项目），被用于度量和监督项目的实际执行成本。</p>\n<ol>\n<li><img data-src=\"media/67db47e8ac2d9a063d10ff2d4742fda6.png\" alt=\"\" /><strong>规划成本管理</strong></li>\n</ol>\n<p>规划成本管理是为规划、管理、花费和控制项目成本而制定政策、程序和文档的过程。</p>\n<p>本过程的主要作用是在整个项目中为如何管理项目成本提供指南和方向。</p>\n<p>成本管理计划：项目管理计划的组成部分，描述将如何规划、安排和控制项目成本。包括计量单位、精确度、准确度、控制临界值、绩效测量规则、报告格式、其他细节。</p>\n<p><strong>三、估算成本</strong></p>\n<p>估算成本是对完成项目工作所需资源成本进行近似估算的过程。</p>\n<p>本过程的主要作用是确定完成项目所需的成本数额。</p>\n<p>・估算成本步骤</p>\n<p>（1）识别并分析成本的构成科目。</p>\n<p>（2）根据已识别的项目成本构成，估算每一科目的成本大小。</p>\n<p>（3）分析成本估算结果，找出各种可以相互替代的成本，协调各种成本之间的比例关系。</p>\n<p>・软件项目规模度量单位：</p>\n<p>LOC (Lines of Code)：源代码程序长度的测量</p>\n<p>FP (Function Point)：系统功能数量的测量</p>\n<p>・软件项目工作量是指为了提供软件的功能而必须完成的软件工程任务量。其度量单位为：人月、人天、人年：人在单位时间内完成的任务量</p>\n<p>为了确定工作量度量单位，可设定一个 “标准程序员”，例如具有 15~18 个月开发经验的程序员。</p>\n<p>・工作量是成本的主要考虑因素，项目的工作量估算和成本估算常常同时进行。</p>\n<p>・如果确定了单位工作量的成本，则可根据项目工作量直接计算出项目成本。</p>\n<p>例如：如果一个软件项目的工作量是 20 人月，而企业的人力成本参数是 2 万元 / 人月，则项目的成本是 40 万元。</p>\n<p>・代码行估算</p>\n<p>某软件公司统计发现该公司每一万行 C 语言源代码形成的源文件（.c 和.h 文件）约为 250K。某项目的源文件大小为 3.75M，则可估计该项目源代码大约为 15 万行，该项目累计投入工作量为 240 人月，每人月费用为 10000 元（包括人均工资、福利、办公费用等）</p>\n<p>则该项目中 1LOC 的价值为：（240×10000）/150000＝16 元 / L</p>\n<p>1、类比估算</p>\n<p>使用场景：</p>\n<p>（1）类比方法常在项目详细信息有限的情况下使用；</p>\n<p>（2）通常在项目早期计划编制阶段使用；</p>\n<p>（3）类比估算的费用较低，精确度通常也差。</p>\n<p>2、自下而上估算</p>\n<p>（1）估算具体活动或工作包括的成本；</p>\n<p>（2）将它们汇总得出项目总成本；</p>\n<p>（3）比其他估算法更为准确 — 当所有人都能如实估算其负责的工作包成本时；</p>\n<p>（4）各项目组进行估算时可能发生 “虚报” 现象。</p>\n<p>3、参数估算</p>\n<p>（1）以数学模型为特征；</p>\n<p>（2）需要准确的历史信息；</p>\n<p>（3）可以根据参数的不同赋予不同的权重；</p>\n<p>（4）准确度取决于模型的复杂性等因素。</p>\n<p>4、三点估算</p>\n<p><img data-src=\"media/800b879beb9f1eb5d3dfe0955e81360e.png\" alt=\"\" /></p>\n<p><strong>四、制定成本预算</strong></p>\n<p>制定成本预算是汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。</p>\n<p>本过程的主要作用是，确定可据以监督和控制项目绩效的成本基准。</p>\n<p>・制定成本预算步骤</p>\n<p>（1）将项目总成本分摊到项目工作分解结构的各个工作包。</p>\n<p>（2）将各个工作包成本再分配到该工作包所包含的各项活动上。</p>\n<p>（3）确定各项成本预算支出的时间计划及项目成本预算计划。</p>\n<p>储备分析 - 准备金分析</p>\n<p>（1）应急储备应对 “已知的未知” 包含在成本基线当中，根据定量风险分析的结果；</p>\n<p>（2）管理储备应对 “未知的未知” 花费前需获得批准，不是成本基线的一部分，但是包含在预算之内。</p>\n<p>资金限制平衡</p>\n<p>（1）在资金支出的界限内平衡；</p>\n<p>（2）可以作为限制条件；</p>\n<p>（3）有时需要对工作进度进行调整。</p>\n<p>成本基准：经过批准的、按时间段分配的项目预算，不包括任何管理储备，只有通过正式的变更控制程序才能变更，用作与实际结果进行比较的依据。成本基准是不同进度活动经批准的预算的总和。</p>\n<p><img data-src=\"media/6b25f49591e6cceaef2e6346f456c9fe.png\" alt=\"\" /></p>\n<p>项目资金需求：</p>\n<p>根据成本基准，确定总资金需求和阶段性（如季度或年度）资金需求。成本基准中既包括预计</p>\n<p>支出及预计债务。项目资金通常以增量的方式投入，并且可能是非均衡的，如果有管理储备，</p>\n<p>则总资金需求等于成本基准加管理储备。</p>\n<p><strong>五、控制成本</strong></p>\n<p>控制成本是监督项目状态，以更新项目成本和管理成本基准变更的过程。</p>\n<p>本过程的主要作用是，在整个项目期间保持对成本基准的维护。</p>\n<p><strong>1、挣值管理 (Earned Value Management)</strong></p>\n<p>(1) 是一种测量项目绩效的客观方法，综合考虑了项目的范围、时间和成本；</p>\n<p>(2) 能够有效地测量项目的健康状况和项目的执行绩效；</p>\n<p>(3) 并且能够预测项目的未来绩效和完成情况</p>\n<p>(4) 在某一时间点进行评估。</p>\n<p>计划工作的预算成本 PV (Planned value),BCWS ( budgeted cost of workscheduled) 按预算价格和预算工作量计算。</p>\n<p>PV = 预算价格 × 预算工作量</p>\n<p>已完成工作的实际成本 AC (Actual cost), 也称 ACWP ( actual cost of workperformed), 按实际价格和实际已完成工作量计算。</p>\n<p>AC = 实际价格 × 已完成工作量</p>\n<p>已完成工作的预算成本 EV (Earned Value)), 也称 BCWP ( budgeted cost of work performed), 按预算价格和实际已完成工作量计算。</p>\n<p>EV = 预算价格 × 已完成工作量</p>\n<p><strong>成本绩效分析</strong></p>\n<p>成本偏差 CV (Cost variance)，CV=EV-AC</p>\n<p>CV&gt;0, 结余；C&lt;0, 超支；CV=0, 实际成本与预算相符。</p>\n<p>成本绩效指数 CPl (Cost Performed Index)，CPl=EV/AC</p>\n<p>CPI&gt;1, 实际成本低于预算成本，效益好；CPI&lt;1, 效益不好；CPI=1, 实际成本与预算成本吻合，效益达到预定目标。</p>\n<p><strong>进度绩效分析</strong></p>\n<p>进度偏差值 SV (Schedule variance)，SV=EV-PV</p>\n<p>SV&gt;0, 进度提前；SV&lt;0, 进度延误；SV=0, 实际进度与计划相符。</p>\n<p>进度绩效指数 SPI (Schedule performed index)，SPI=EV/PV</p>\n<p>**<img data-src=\"media/5ed7f4fdbd1324e9ce9fc3b6dfa12a24.png\" alt=\"\" />**SPI&gt;1, 进度提前；SPI&lt;1, 进度延误；SPI=1, 实际进度与计划进度吻合。</p>\n<p><strong>项目绩效评估 - 预测技术：</strong></p>\n<p>(1) 假定项目未完成部分将按照目前的效率去进行的预测方法</p>\n<p>EAC =AC+(BAC-EV)/CPI=BAC/CPI，ETC=(BAC-EV)/CPI（典型偏差）</p>\n<p>(2) 假定项目未完成部分将按计划规定的效率进行的预测方法</p>\n<p>EAC =AC+(BAC-EV)，ETC=BAC-EV（非典型偏差）</p>\n<p>(3) 用重估所有剩余工作量的成本作出预测的方法</p>\n<p>EAC=AC + 重估剩余工作量</p>\n<p>** 练习 1：** 项目进行到第 8 周末，利用成本绩效分析和进度绩效分析方法分析成本、进度情况。</p>\n<p>项目进行到第 8 周末，计算剩余工作量。</p>\n<p><img data-src=\"media/5d17539ffc13dcff3cc059b8455ded8b.png\" alt=\"\" /><img data-src=\"media/08422513e0d785cf68f38669f1f8e051.png\" alt=\"\" /><img data-src=\"media/7e62ca5bb4406fe4acef8e0ff00e5478.png\" alt=\"\" />成本绩效分析：成本超支</p>\n<p>CV=EV-AC=27000-34000=-7000&lt;0</p>\n<p>CPI=EV/AC=27000/34000=0.79&lt;1</p>\n<p>进度绩效分析：进度滞后</p>\n<p>SV=EV-PV==27000−32000=−5000&lt;0</p>\n<p>SPI=EV/PV=27000/32000=0.84&lt;1</p>\n<p>剩余工作按现在的效率 0.79 进行</p>\n<p>EAC =BAC/CPI=50000/0.79=63290</p>\n<p>剩余工作按计划效率进行</p>\n<p>EAC =AC+(BAC-EV)=34000+(50000-27000)=57000</p>\n<p>剩余工作重新评估后进行 (项目实际与计划严重背离时使用)</p>\n<p>EAC=AC + 重估剩余工作量</p>\n<p><strong>练习 2：</strong></p>\n<p><img data-src=\"media/d30fe1abf94b945f8ed06da8e26e952e.png\" alt=\"\" /></p>\n<p><img data-src=\"media/19042d29e90a526c564aadadd636c337.png\" alt=\"\" /></p>\n<p><strong>第七章 IT 项目质量管理</strong></p>\n<p><strong>一、项目质量管理概述</strong></p>\n<p><strong>1、质量标准</strong></p>\n<p>ISO9000 系列质量标准是国际标准化组织颁布的在全世界范围内通用的关于质量管理方面的系列标准。8 项基本原则：</p>\n<p>（1）以顾客为中心（2）领导作用（3）全员参与（4）过程方法</p>\n<p>（5）管理的系统方法（6）持续改进（7）基于事实的决策方法（8）与供方互利的关系</p>\n<p><strong>2、软件质量属性</strong></p>\n<p>正确性：系统满足规格说明和用户的程度，即在预定环境下能正确地完成预期功能的程度；</p>\n<p>健壮性：在硬件发生故障、输入的数据无效或操作错误等意外环境下，系统能够做出适当响应的程度；</p>\n<p>效率：为了完成预定的功能，系统需要的计算资源的多少；</p>\n<p>完整性：对未经授权的人使用软件或数据的企图，系统能够控制的程度；</p>\n<p>可用性：系统在完成预定应该完成的功能时令人满意的概率；</p>\n<p>风险性：按预定的成本和进度把系统开发出来，并且使用户感到满意；</p>\n<p>可理解性：理解和使用该系统的容易程度；</p>\n<p>可维修性：诊断和改正在运行现场发生的错误所需要的概率；</p>\n<p>灵活性：修改或改正在运行的系统需要的工作量的多少；</p>\n<p>可测试性：软件容易测试的程度；</p>\n<p>可移植性：把程序从一种硬件配置和（或）软件环境转移到另一种配置和环境时，需要的工作量多少；</p>\n<p>可重用性：在其他应用中该程序可以被再次使用的程度（或范围）；</p>\n<p>可运行性：把该系统和另外一个系统结合起来的工作量的多少。</p>\n<p><strong>二、规划质量管理</strong></p>\n<p>规划质量管理识别项目及其可交付成果的质量要求和 / 或标准，并书面描述项目将如何证明符合质量要求或标准的过程。</p>\n<p>本过程的主要作用是，为在整个项目期间如何管理和核实质量提供指南和方向。</p>\n<p><strong>1、成本效益分析</strong></p>\n<p>对每个质量活动进行成本效益分析，就是要比较其可能成本与预期效益。减少返工、提高生产率、降低成本、提升干系人满意度及提升盈利能力等。</p>\n<p><strong>2、标杆对照</strong></p>\n<p>将待实施的项目实践与可比项目（标杆项目）的实践进行对照，以便识别最佳质量实践，形成改进意见，并为质量绩效考核提供依据。标杆对照也允许用不同应用领域的项目做类比。</p>\n<p><strong>3、实验设计</strong></p>\n<p>用来识别哪些因素会对正在生产的产品或正在开发流程的特定变量产生影响。</p>\n<p><strong>4、质量成本法</strong></p>\n<p>质量成本指在产品生命周期中发生的所有成本，包括为预防不符合要求、为评价产品或服务是否符合要求，以及因未达到要求而发生的成本。</p>\n<p><img data-src=\"media/db17f60c65e6f7ec849c4b6a66982553.png\" alt=\"\" />质量成本包含一致性成本和非一致性成本。一致性成本包含预防成本和评估成本，非一致性成本包含内部失败成本和外部失败成本。</p>\n<p><strong>5、七种基本质量工具</strong></p>\n<p>老七工具：包括因果图、流程图、核查表、直方图、帕累托图、控制图、散点图</p>\n<p>新七工具：包括亲和图、过程决策程序图、关联图、树形图、优先矩阵、活动网络图和矩阵图</p>\n<p>老七工具</p>\n<p>（1） 因果图 (shikawa 图，石川图或鱼骨图)</p>\n<p>因果图，又称 “鱼骨图” 和 “石川图”, 将问题陈述的原因分解为离散的分支，有助于识别问题的主要原因或根本原因。</p>\n<p><img data-src=\"media/1f34776cd824b95bf9f3c13f9e2d026c.png\" alt=\"\" />（2）流程图</p>\n<p>流程图展示了引发缺陷的一系列步骤。</p>\n<p><img data-src=\"media/a5cde764338744c41993a1b2352918ce.png\" alt=\"\" />（3）核查表（经常用于质量控制）</p>\n<p>用于收集数据的核对清单，合理排列各种事项，以便有效地收集关于潜在质量问题的有用数据。</p>\n<p><img data-src=\"media/d9b9f109617312fcb767600dcd15df3e.png\" alt=\"\" />（4）直方图</p>\n<p>直方图是一种展示数字数据的条形图，可以展示每个可交付成果的缺陷数量、缺陷成因的排列、各个过程的不合规次数，或项目或产品缺陷的其他表现形式。用于描述集中趋势、分散程度和统计分布形状。</p>\n<p><img data-src=\"media/fc612e4df21bce33127b0083f8b72bad.png\" alt=\"\" />（5）帕累托图</p>\n<p>用于识别造成大多数问题的少数重要原因。在帕累托图中，通常按类别排列条形，以测量频率或后果。</p>\n<p><img data-src=\"media/b97efa37b18dc720f29bb697a7d37440.png\" alt=\"\" />一般 80% 的问题是由 20% 的原因（帕累托法则 80/20 原则）造成的。从而可以知悉问题的主要原因或找出事情发生的主要矛盾。</p>\n<p>（6）控制图</p>\n<p><img data-src=\"media/854f09c16ae4a0e895381b4a629d20e8.png\" alt=\"\" /> 用于确定一个过程是否稳定，或者是否具有可预测的绩效。规格上限和下限是根据要求制定的，反映了可允许的最大值和最小值。</p>\n<p>（7）散点图</p>\n<p>散点图是一种展示两个变量之间的关系的图形，它能够展示两支轴的关系，一支轴表示过程、环境或活动的任何要素，另一支轴表示质量缺陷。</p>\n<p><img data-src=\"media/313d4aded5a049169ce5979045c02f2e.png\" alt=\"\" />新七工具</p>\n<p>（1）亲和图</p>\n<p>亲和图与心智图相似。针对某个问题，产生出可联成有组织的想法模式的各种创意。</p>\n<p>亲和图的核心是头脑风暴法，属于根据结果找原因。通过将大量创意进行分类，以便审查和分析。分类依据是创意之间的相似性。</p>\n<p>（2）过程决策程序图（PDPC）</p>\n<p>用于理解一个目标与达成此目标的步骤之间的关系。PDPC 有助于制订应急计划，因为它能帮助团队预测那些可能破坏目标实现的中间环节。</p>\n<p>（3）关联图</p>\n<p>用来分析事物之间 “原因与结果”、“目的与手段” 等复杂关系的一种图表，它能够帮助人们从事物之间的逻辑关系中，寻找出解决问题的办法。适合中等复杂情形中创新性地解决问题。</p>\n<p>（4）树形图</p>\n<p>也称系统图，可用于表现诸如 WBS、RBS（风险分解结构）和 OBS（组织分解结构）的层次分解结构。</p>\n<p>（5）优先矩阵</p>\n<p>用来识别关键事项和合适的备选方案，并通过一系列决策，排列出备选方案的优先顺序。先对标准排序和加权，再应用于所有备选方案，计算出数学得分，对备选方案排序。</p>\n<p>（6）活动网络图</p>\n<p>包括两种格式的网络图：AOA（活动箭线图）和最常用的 AON（活动节点图）。活动网络图连同项目进度计划编制方法一起使用，如计划评审技术 (PERT)、关键路径法 (CPM) 和紧前关系绘图法 (PDM)。</p>\n<p>（7）矩阵图</p>\n<p>从多维问题的事件中，找出成对的因素，排列成矩阵图，然后根据矩阵图来分析问题，确定关键点的方法，它是一种通过多因素综合思考，探索问题的好方法。在行列交叉的位置展示因素、原因和目标之间的关系强弱。</p>\n<p>在复杂的质量问题中，往往存在许多成对的质量因素，将这些成对因素找出来，分别排列成行和列，其交点就是其相互关联的程度，在此基础上再找出存在的问题及问题的形态，从而找到解决问题的思路。</p>\n<p><strong>4、质量管理计划：</strong></p>\n<p>质量管理计划包括（但不限于）以下组成部分：</p>\n<p>项目采用的质量标准；项目的质量目标；质量角色与职责；需要质量审查的项目可交付成果和过程；为项目规划的质量控制和质量管理活动；项目使用的质量工具；与项目有关的主要程序，例如处理不符合要求的情况、纠正措施程序，以及持续改进程序。</p>\n<p><strong>5、质量测量指标</strong></p>\n<p>质量测量指标专用于描述项目或产品属性，以及控制质量过程将如何验证符合程度。</p>\n<p>质量测量指标包括：按时完成的任务的百分比、以 CI 测量的成本绩效、故障率、识别的日缺陷数量、每月总停机时间、每个代码行的错误、客户满意度分数，以及测试计划所涵盖的需求的百分比即测试覆盖度。</p>\n<p><strong>6、质量核对单</strong></p>\n<p>核对单是一种结构化工具，通常列出特定组成部分，用来核实所要求的一系列步骤是否已得到执行或检查需求列表是否已得到满足。基于项目需求和实践，核对单可简可繁。许多组织都有标准化的核对单，用来规范地执行经常性任务。在某些应用领域，核对单也可从专业协会或商业性服务机构获取。质量核对单应该涵盖在范围基准中定义的验收标准。</p>\n<p><strong>三、实施质量保证</strong></p>\n<p>实施质量保证是审计质量要求和质量控制测量结果，确保采用合理的质量标准和操作性定义的过程。</p>\n<p>本过程的主要作用是，促进质量过程改进。</p>\n<p>质量保证旨在建立对未来输出或未完输出（也称正在进行的工作）将在完工时满足特定的需求和期望的信心。质量保证部门或类似部门经常要对质量保证活动进行监督。</p>\n<p><strong>1、软件质量保证思想</strong></p>\n<p>（1）在产品开发的同时进行产品测试</p>\n<p>测试工作提前，可以有效地防止 “失之毫厘，谬以千里” 的严重后果。</p>\n<p>（2）在项目的各个阶段保证质量的稳定性</p>\n<p>每隔一段时期，项目组织就应花费相应的时间对当期完成的产品特性进行测试、稳定和集成。</p>\n<p>（3）尽可能早地使项目质量测试自动化</p>\n<p>利用自动化测试平台不仅可以降低测试成本，而且可以提高测试效率。自动化测试工具：IBM Rational Quality Manager</p>\n<p>（4）确保项目成员和企业文化都重视质量</p>\n<p>产品质量是每个人的事情，而不仅是测试人员的事情</p>\n<p><strong>2、质量保证体系的总体要求</strong></p>\n<p>对于软件项目来说，质量保证体系需要负责调整所有影响产品质量的因素，例如：</p>\n<p> 使用的方法和工具；</p>\n<p> 在开发和维护过程中应用的标准；</p>\n<p> 对开发和维护过程所进行的组织管理；</p>\n<p> 软件生产环境；</p>\n<p> 软件开发中人员的组织和管理；</p>\n<p> 工作人员的熟练程度；</p>\n<p> 对工作人员的奖励和工作条件的改善情况；</p>\n<p> 对外部项目转包商交付的产品的质量控制。</p>\n<p><strong>3、质量审计</strong></p>\n<p>又称质量保证体系审核，是对具体质量管理活动的结构性的评审。</p>\n<p>质量审计的目标是：</p>\n<p>（1）识别全部正在实施的良好及最佳实践</p>\n<p>（2）识别全部违规做法、差距及不足</p>\n<p>（3）分享所在组织或行业中类似项目的良好实践</p>\n<p>（4）积极、主动地提供协助，以改进过程的执行，从而帮助团队提高生产效率</p>\n<p>（5）强调每次审计都应对组织经验教训的积累做出贡献</p>\n<p>质量审计可以是事先安排，也可以随机进行。在具体领域中有专长的内部审计师或第三方组织都可以实施质量审计，可以由内部或外部审计师进行。</p>\n<p><strong>4、过程分析</strong></p>\n<p>过程分析是指按照过程改进计划中概括的步骤来识别所需的改进。</p>\n<p>过程分析包括根本原因分析 —— 用于识别问题、探究根本原因，并制定预防措施的一种具体技术。</p>\n<p><strong>四、控制质量</strong></p>\n<p>控制质量是为了评估绩效，确保项目输出完整、正确且满足客户期望，而监督和记录质量管理活动执行结果的过程。</p>\n<p>本过程的主要作用是，核实项目可交付成果和工作已经达到主要干系人的质量要求，可供最终验收。</p>\n<p>质量控制是监督并记录质量活动执行结果，以便评估绩效，并推荐必要的变更的过程。</p>\n<p><strong>1. 软件项目常见的质量问题</strong></p>\n<p>（1）违背软件项目规律：如未经可行性论证；任意修改设计；不经过必要的测试；……</p>\n<p>（2）技术方案本身的缺陷</p>\n<p>（3）基本部件不合格（选购的软件组件、中间件、硬件设备等）</p>\n<p>（4）实施中的管理问题（计划、监控、沟通障碍……）</p>\n<p><strong>2、控制质量过程的目的和方法</strong></p>\n<p>控制质量过程的目的是在用户验收和最终交付之前测量产品或服务的完整性、合规性和适用性。本过程通过测量所有步骤、属性和变量，来核实与规划阶段所描述规范的一致性和合规性。</p>\n<p>软件项目质量控制采用的主要方法是技术评审、代码走查、代码会审、单元测试、集成测试、系统测试、验收测试、缺陷追踪等。</p>\n<p>（1）技术评审（技术评审会议）</p>\n<p>软件项目中主要的评审对象有：软件需求规格说明书、软件设计方案、测试计划、用户手册、维护手册、系统开发规程、产品发布说明等</p>\n<p>（2）代码走查</p>\n<p>代码走查的第一个目的是通过人工模拟执行源程序的过程，特别是一些关键算法和控制过程，检查软件设计的正确性。第二个目的是检查程序书写的规范性。</p>\n<p>（3）代码会审</p>\n<p>代码会审是由一组人通过阅读、讨论和争议对程序进行静态分析的过程。会审小组由组长、2～3 名程序设计和测试人员及程序员组成。</p>\n<p>（4）软件测试</p>\n<p>软件测试所处的阶段（单元 / 集成 / 验收测试）不同，测试的目的和方法也不同。例如，单元测试是指对软件中的最小可测试单元进行检查和验证。</p>\n<p>（5）缺陷跟踪</p>\n<p>从缺陷发现开始，一直到缺陷改正为止的全过程为缺陷追踪。</p>\n<p><strong>3、质量保证与质量控制的区别</strong></p>\n<p>实施质量保证是针对过程改进和设计的，强调的是过程改进和信心保证。</p>\n<p>实施质量控制是按照质量要求，检查具体可交付成果的质量，强调的是具体的可交付成果。</p>\n<p>质量保证（QA）是针对项目实施过程的管理手段，质量控制（QC）是针对项目产品的技术手段。</p>\n<p>QA 只要检查项目按照过程进行了某项活动没有，产出了某个产品没有；而 QC 来检查产品是否符合质量要求。</p>\n<p><strong>第八章 IT 项目人力资源管理</strong></p>\n<p><strong>一、项目人力资源管理的概念</strong></p>\n<p><strong>1、项目人力资源管理</strong></p>\n<p>项目人力资源管理就是根据项目的目标、项目活动进展情况和外部环境的变化，采取科学的方法，对项目团队成员的思想、心理和行为进行有效的管理，充分发挥他们的主观能动性，实现项目的最终目标。</p>\n<p><strong>2、软件项目人力资源的特点</strong></p>\n<p>知识型员工具有较高的知识、能力，具有相对稀缺性和难以替代性。</p>\n<p>知识型员工工作自主性要求高。</p>\n<p>知识型员工大多崇尚智能，蔑视权威。</p>\n<p>知识型员工成就动机强，追求卓越。</p>\n<p>知识型员工的能力与贡献之间差异较大，内在需求具有较多的不确定性和多样性，会出现交替混合的需求模式。</p>\n<p>知识型员工工作中的定性成分较大，工作过程一般难以量化，因而不易控制。</p>\n<p>对于知识型员工，更需要新型的管理方式，员工希望：</p>\n<p>（1）“以人为本” 给予知识型员工充分的尊重与认可。</p>\n<p>（2）创造一种自由、民主、公平的工作氛围，提倡民主参与的决策方式要更优于高度集权。</p>\n<p>（3）在完成任务的同时，员工不断进步，其知识、能力、素质不断提高，实现全面发展。</p>\n<p><strong>二、规划人力资源管理</strong></p>\n<p>规划人力资源管理是识别和记录项目角色、职责、所需技能、报告关系，并编制人员配备管理计划的过程。</p>\n<p>本过程的主要作用是，为在整个项目期间如何管理人力资源提供指南和方向。</p>\n<p><strong>1、团队角色和职责的确定</strong></p>\n<p>软件项目团队中常见的角色包括：项目经理、系统分析人员、架构师、开发人员、测试人员、质量保证人员、项目管理和支持人员、市场人员、用户支持人员等。</p>\n<p>项目经理的权利</p>\n<ol>\n<li>职位权力，来源于管理者在组织中的职位和职权</li>\n<li>惩罚权力，使用降职、扣薪、惩罚、批评、威胁等负面手段的能力</li>\n<li>奖励权力，给予下属奖励的能力</li>\n<li>专家权力，来源于个人的专业技能</li>\n<li>参照权力，由于成为别人学习参照榜样所拥有的力量</li>\n</ol>\n<p>职位权力、惩罚权力、奖励权力来自于组织的授权，专家权力和参照权力来自于管理者自身</p>\n<p>可釆用多种格式来记录团队成员的角色与职责。大多数格式属于以下三类 (如图所示): 层级型、矩阵型和文本型。通常，层级型可用于规定高层级角色，而文本型更适合用于记录详细职责。</p>\n<p><strong>2、责任分配分配矩阵 (RAM)</strong>: 将所分解的工作任务落实到项目有关部门或个人，并明确表示出他们在组织工作中的关系、责任和地位的一种方法和工具。通过责任分配矩阵可以显示工作包或活动与项目团队成员之间的关系，可以确保任何一项任务都只有一个人负责，从而避免职权不清造成的混乱。</p>\n<p><strong>3、项目组织图的确定</strong></p>\n<p>在大型软件项目中，通常根据软件的功能模块将从事开发的人员划分为若干小组 (Team)，每个小组负责一个功能模块的开发。</p>\n<p><strong>4、人员配置管理计划的编制</strong></p>\n<p>人员配置管理计划描述何时以何种方式满足项目的人力资源需求。包括：人员招募、资源日历（每种资源可用工作日和工作班次等信息）、人员遣散计划、培训需要、认可与奖励、合规性、安全等。</p>\n<p><strong>三、组建项目团队</strong></p>\n<p>组建项目团队是根据项目团队的角色和职责、项目组织结构图和人员配备管理计划，获取完成项目工作所需的人力资源。</p>\n<p>本过程的主要作用是概述和指导人力资源的选择，并将其分配给相应的活动</p>\n<p>预分派：在某些情况下，一些成员已预先分派到项目中工作，例如在竞标过程中承诺分配特定人员到项目中，或项目的成功依赖于特定人员的专有技能。</p>\n<p>谈判：大多数人员的获取需要经过谈判。例如项目经理需要与职能部门经理或其他部门负责人谈判，以获得所需要的人员。在谈判时，项目的影响力会起作用。</p>\n<p>招募：当企业缺少完成项目所需的内部人才时，就需要从外部获得所需服务，包括招聘和分包。在获取和任用项目团队人员时，除考虑人员的专业技能外，最好能结合人员的性格特征和兴趣，做到 “知人善任”。。</p>\n<p>虚拟团队：具有共同目标、在完成角色任务的过程中很少或没有时间面对面工作的一群人。</p>\n<p>多标准决策分析：使用多标准决策分析工具制定出标准，用于对潜在人员进行评级或打分。</p>\n<p><strong>四、建设项目团队</strong></p>\n<p>建设项目团队是是提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。</p>\n<p>本过程的主要作用是，改进团队协作、增强人际关系技能、激励员工、减少摩擦以及提升整体项目绩效。</p>\n<p><strong>1、塔克曼阶梯理论</strong></p>\n<p>（1）形成阶段</p>\n<p>在本阶段，团队成员相互认识，并了解项目情况及他们在项目中的正式角色与职责。团队成员倾向于相互独立，不一定开诚布公。有疑问和焦虑的情绪。</p>\n<p>为减轻人们的焦虑，项目经理领导风格应该是指导型的，让团队成员着手参与一些具体工作，如制订项目计划。</p>\n<p>（2）震荡阶段</p>\n<p>在本阶段，团队开始从事项目工作，制定技术决策和讨论项目管理方法，一般会遇到超出预想的困难，希望被现实打破。个体之间开始争执，互相指责，并且开始怀疑项目经理的能力。</p>\n<p>这是项目经理创造一个充满理解和支持的工作环境的好时机，要允许成员表达他们所关注的问题，项目经理要致力于解决矛盾。在这个阶段，项目经理的领导风格应该是影响型的。</p>\n<p>（3）规范阶段</p>\n<p>在规范阶段，团队成员开始协同工作，并调整各自的工作习惯和行为来支持团队，团队成员开始相互信任，项目经理能够得到团队的认可。</p>\n<p>在本阶段，项目经理应尽量减少指导性工作，经常对项目团队所取得的进步给予公开的表扬，培育团队文化，注重培养成员对团队的认同感、归属感、努力营造出相互协作、相互帮助、相互关爱、勇于奉献的精神氛围。在这个阶段，项目经理的领导风格应该是参与型的。</p>\n<p>（4）成熟阶段</p>\n<p>进入这一阶段后，团队就像一个组织有序的单位那样工作。团队成员之间相互依靠，平稳高效地解决问题。项目团队能开放、坦诚、及时地进行沟通。对项目经理的信任加强。这时团队成员的集体荣誉感会非常强。</p>\n<p>在本阶段，项目经理应完全授权，赋予团队成员权力。在这个阶段，项目经理的领导风格应该是授权型的。</p>\n<p>（5）解散阶段</p>\n<p>在解散阶段，团队完成所有工作，团队成员离开项目。</p>\n<p><strong>2、激励理论</strong></p>\n<p>（1）马洛斯的需求层次理论</p>\n<p>人的需要可按等级层次向上或向下移动，当一个层次的需要被满足之后，这一需要就不再是激励的因素了，而更高层次的需要就成为新的激励因素。</p>\n<ol>\n<li>\n<p><img data-src=\"media/832148aa6a3d504d4d5ca724f4a8e546.png\" alt=\"\" />双因素理论（心理学家赫茨伯格）</p>\n<p><img data-src=\"media/1a68d1034c655b9f8f530d4e5f6adad6.png\" alt=\"\" /></p>\n</li>\n</ol>\n<p><img data-src=\"media/d804fdf0fc9283ecfaa45fdd92b5555a.png\" alt=\"\" /><img data-src=\"media/87bf6d5db1c19bed7d92a8b342acb9a4.png\" alt=\"\" /> （3）X 理论和 Y 理论（对激励问题研究比较全面）</p>\n<p><img data-src=\"media/2fdff9b04a0817212e3b1c2519fb47ea.png\" alt=\"\" />（4）期望理论（对激励问题研究比较全面）</p>\n<p>动力（激励力量）= 效价 × 期望值</p>\n<p>其中，效价是个人对于某一成果的价值估计，期望值是指通过某种行为会导致一个预期成果的概率和可能性。</p>\n<p>当人们有需要，又有达到这个需要的可能，其积极性才高。</p>\n<ol>\n<li>\n<p><strong><img data-src=\"media/649c631ef4958a8c48377bb2ecaea80e.png\" alt=\"\" />团队绩效评价</strong></p>\n<p>对项目团队的有效性进行正式或非正式的评价。</p>\n</li>\n</ol>\n<p>实际上是对你已经进行的团队建设活动成果的评价，目的是为了了解我们已经使用的团队建设工具和方法的有效性，以便决定是否要继续进行团队建设活动。</p>\n<p>指标包括：</p>\n<p>・个人技能的改进；</p>\n<p>・团队能力的改进；</p>\n<p>・团队成员离职率的降低；</p>\n<p>・团队凝聚力的加强。</p>\n<p><strong>五、管理项目团队</strong></p>\n<p>管理项目团队是跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。</p>\n<p>本过程的主要作用是，影响团队行为、管理冲突以及解决问题。本过程需要在整个项目期间开展。</p>\n<p>**1、观察和交谈：** 可通过观察和交谈，随时了解项目团队成员的工作和态度。</p>\n<p>**2、项目绩效评估：** 包括澄清角色与职责，向团队成员提供建设性反馈，发现未知或未决问题，制定个人培训计划，以及确立未来目标。</p>\n<p>软件团队绩效考核指标</p>\n<p>（1）定性指标。</p>\n<p> 工作态度：如责任心、敬业精神、工作热情等。</p>\n<p> 工作氛围：如团队士气如何，精神状态如何等。</p>\n<p> 工作经验：如工作方法高效与否，知识的传递正确、及时与否。</p>\n<p> 应变能力：对于变更的控制、计划、实施和监督的效果如何。</p>\n<p> 处理问题的能力：对于出现的问题能否及时、正确地解决。</p>\n<p>（2）定量指标。</p>\n<p> 工作量</p>\n<p> 工作效率</p>\n<p> 工作质量</p>\n<p> 按时完成</p>\n<p><strong>3、冲突管理</strong>：撤退 / 回避，缓和 / 包容，妥协 / 调解，强迫 / 命令，合作 / 解决问题。</p>\n<p>**4、人际关系技能：** 恰当地使用人际关系技能，可充分发挥全体团队成员的优势。</p>\n<p>项目经理常见的人际关系技能有：</p>\n<ul>\n<li>领导力（成功的项目需要强有力的领导技能，例如，项目不同阶段，领导风格不一样）</li>\n<li>影响力（具有一定影响项目干系人的能力，对保证项目成功非常关键）</li>\n<li>有效决策力（包括判断能力等）</li>\n<li>激励</li>\n<li>冲突管理</li>\n</ul>\n<p><strong>第九章 IT 项目沟通管理</strong></p>\n<p><strong>一、项目沟通管理概述</strong></p>\n<p>项目沟通管理就是通过开发工件以及执行用于有效交换信息的各种活动，来确保项目及其相关方的信息需求得以满足的各个过程。也就是为了确保信息及时且恰当地规划、收集、生成、发布、存储、检索、管理、控制、监督和最终处置所需的各个过程。</p>\n<p><strong>1、项目经理在沟通中的作用</strong></p>\n<p>项目经理 75%-90% 的时间用于沟通，沟通是项目经理成功领导的重要手段</p>\n<p>项目经理必须熟练掌握与高层管理者、项目团队、客户及项目以外的干系人的沟通技巧</p>\n<p><strong>2、项目经理在沟通中的角色</strong></p>\n<p>项目沟通的中枢，必须掌握沟通的主动权</p>\n<p>冲突的解决者和谈判者</p>\n<p>计划的制定者，过程的监控者，渠道的建立者</p>\n<p>沟通的聆听者、解释者</p>\n<p>沟通的协调者和促进者</p>\n<p>信息的综合者，障碍的消除者</p>\n<p><strong>3、沟通活动</strong></p>\n<p>内部 / 外部：内部沟通活动针对项目内部或组织内部的干系人。外部沟通活动针对外部干系人，如客户、供应商、其他项组织、政府、公众和环保倡导者等。</p>\n<p>正式 / 非正式：正式沟通可以采用报告、正式会议 (定期及临时)、会议议程和记录、干系人简报和演示等。而非正式沟通可以采用电子邮件、社交媒体、网站以及非正式临时讨论的一般沟通活动。</p>\n<p>向上 / 向下 / 横向的层级沟通：这是根据干系人或干系人群体相对于项目团队的位置来进行划分的。如果是针对高层干系人，就是向上沟通；如果针对承担项目工作的团队和其他人员，就是向下沟通；横向沟通就是针对项目经理或团队的同级人员。</p>\n<p>官方 / 非官方沟通：比如说年报、呈交监管机构或政府部门的报告就是官方沟通，而非官方沟通就是采用灵活的手段，往往是非正式的手段，来建立和维护项目团队及其干系人对项目情况的了解和认可，并在他们之间建立强有力的关系。</p>\n<p>书面 / 口头沟通：口头及非口头，社交媒体和网站、媒体发布等。</p>\n<p><strong>二、规划沟通管理</strong></p>\n<p>规划沟通管理是基于每个干系人或干系人群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。</p>\n<p>本过程的主要作用是为及时向干系人提供相关信息，引导干系人有效参与项目而编制书面沟通计划。</p>\n<ol>\n<li><strong>沟通需求分析</strong></li>\n</ol>\n<p>分析沟通需求，确定项目干系人的信息需求，包括所需信息的类型和格式以及信息对干系人的价值。</p>\n<p>（1）需要给哪些干系人发信息；</p>\n<p>（2）谁需要什么样的信息；</p>\n<p>（3）谁什么时候需要何种信息；</p>\n<p>（4）如何将信息发送给不同的干系人。</p>\n<p><strong>2、沟通技术</strong></p>\n<p>在沟通过程中使用的具体手段和工具，如谈话、会议、书面文件、在线资料查询等。</p>\n<p>（1）会议沟通</p>\n<p>成本较高，沟通的时间一般比较长，因此常用于解决较重大、较复杂的问题。</p>\n<p>（2）Email 沟通</p>\n<p>成本低，方便快捷，小范围沟通，有时间思考斟酌等；</p>\n<p>（3）口头沟通</p>\n<p>是一种自然、亲近的沟通技术。加深彼此之间的友谊、加速问题的解决。几种应用场景：办公距离近；存有误会，采用 Email 无效等</p>\n<p>（4）电话沟通</p>\n<p>成本较低，距离远无法当面沟通，问题相对简单，采用 Email 无效等情况下适用。</p>\n<p>（5）即时通讯</p>\n<p>QQ/MSN/ 微信（群），快捷，方便，可以群讨论，但是闲聊可能会影响工作。</p>\n<p><strong>3、沟通模型</strong></p>\n<p>可以是最基本的线性（发送方和接收方）沟通过程，也可以是增加了反馈元素（发送方、接收方和反馈）、更具互动性的沟通形式，甚至可以是融合了发送方或接收方的人性因素、试图考虑沟通复杂性的更加复杂的沟通模型。</p>\n<p>沟通模型的关键要素</p>\n<p>(1) 编码。把思想或想法转化为他人能理解的语言。</p>\n<p><img data-src=\"media/5b1e28b7a21f18f3175d7c4f64b79c14.png\" alt=\"\" />(2) 信息和反馈信息。编码过程所得到的结果</p>\n<p>(3) 媒介。用来传递信息的方法。</p>\n<p>(4) 噪声。干扰信息传输和理解的一切因素 (如距离、新技术、缺乏背景信息等)。</p>\n<p>(5) 解码。把信息还原成有意义的思想或想法。</p>\n<p><strong>4、沟通方法</strong></p>\n<p>・交互式沟通：在两方或多方之间进行多向信息交换，确保全体参与者对特定话题达成共识的最有效的方法，如会议、电话，即时通讯、视频会议等。</p>\n<p>・推式沟通：把信息发送给需要接收这些信息的特定接收方，可以确保信息的发送，但不能确保信息送达受众或被目标受众理解，如新闻、公告、电子邮件、报告、日志等。</p>\n<p>・拉式沟通：用于信息量很大或受众很多的情况，要求接收者自主自行地访问信息内容，如企业内网、电子在线资源、经验教训数据库、知识库等。</p>\n<p><strong>二、管理沟通</strong></p>\n<p>管理沟通是确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。</p>\n<p>本过程的主要作用是促成项目团队与干系人之间的有效信息流动。</p>\n<p>报告绩效：收集和发布绩效信息，包括状况报告、进展测量结果及预测结果。应该定期收集基准数据与实际数据，进行对比分析，以便了解和沟通项目进展与绩效，并对项目结果做出预测。</p>\n<p>项目管理信息系统（PMIS）：项目管理信息系统能够确保干系人及时便利地获取所需信息。用来管理和分发项目信息的工具主要包括电子项目管理工具、电子沟通管理工具和社交媒体管理工具。</p>\n<p><strong>三、控制沟通</strong></p>\n<p>控制沟通是在整个项目生命周期中对沟通进行监督和控制的过程，以确保满足项目干系人对信息的需求。</p>\n<p>本过程的主要作用是，随时确保所有沟通参与者之间的信息流动的最优化。</p>\n<p><strong>1、沟通障碍</strong></p>\n<p>在项目管理工作中，存在信息的沟通，也就必然存在沟通障碍。项目经理的任务在于正视这些障碍，采取一切可能的方法来消除这些障碍，为有效的信息沟通创造条件。有三类沟通障碍：</p>\n<p>（1）主观障碍</p>\n<p>个人的性格、气质、态度、情绪、见解等的差别，使信息在沟通过程中受个人素质、心理因素的制约。</p>\n<p>知觉选择偏差所造成的障碍。</p>\n<p>经理人员和下级之间相互不信任，这主要是由于经理人员考虑不周，伤害了员工的自尊心，或决策错误所造成的，而相互不信任则会影响沟通的顺利进行。</p>\n<p>沟通者的畏惧感以及个人心理品质也会造成沟通障碍。</p>\n<p>信息传递者在团队中的地位、信息传递链、团队规模等因素也都会影响有效的沟通。许多研究表明，地位的高低对沟通的方向和频率有很大的影响。</p>\n<p>（2）客观障碍</p>\n<p>信息的发送者和接收者如果空间距离太远、接触机会少，就会造成沟通障碍。社会文化背景不同、种族不同，而形成的社会距离也会影响信息沟通。</p>\n<p>信息沟通往往是依据组织系统分层次逐渐传递的。</p>\n<p>（3）沟通联络方式的障碍</p>\n<p>语言系统所造成的障碍。</p>\n<p>沟通方式选择不当，原则、方法使用不当所造成的障碍。</p>\n<p><strong>2、冲突管理的技巧</strong></p>\n<p>做好团队的思想工作</p>\n<p>有意识地培养心理相容</p>\n<p>公平竞争，减少冲突</p>\n<p>冲突发生，迅速解决</p>\n<p>帮助双方学习提高</p>\n<p>运用权威</p>\n<p>制定预警方案</p>\n<p>引发建设性冲突</p>\n<p>（1）鼓励冲突。</p>\n<p>（2）引进冲突机制。</p>\n<p><strong>3、有效沟通的方法和技巧</strong></p>\n<p>（1）沟通要有明确目的</p>\n<p>（2）提高沟通的心理水平</p>\n<p>要克服沟通的障碍必须注意以下心理因素的作用。</p>\n<ol>\n<li>在沟通过程中要认真感知，集中注意力，以便信息准确而又及时地传递和接受，避免信息错传和接受时减少信息的损失。</li>\n<li>增强记忆的准确性是消除沟通障碍的有效心理措施，记忆准确性水平高的人，传递信息可靠，接受信息也准确。</li>\n<li>提高思维能力和水平是提高沟通效果的重要心理因素，较高的思维能力和水平对于正确地传递、接受和理解信息，起着重要的作用。</li>\n<li>培养镇定情绪和良好的心理气氛，创造一个相互信任、有利于沟通的小环境，有助于人们真实地传递信息和正确地判断信息，避免因偏激而歪曲信息。</li>\n</ol>\n<p>（3）沟通中 “听、说、问” 交替出现</p>\n<p>（4）避免无休止的争论</p>\n<p>（5）保持畅通的沟通渠道</p>\n<p>（6）充分利用信息技术加强沟通</p>\n<p><strong>四、识别干系人</strong></p>\n<p>识别干系人是定期识别项目干系人，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。</p>\n<p>本过程的主要作用是使项目团队能够建立对每个干系人或干系人群体的适度关注。</p>\n<p><strong>1、干系人分析</strong></p>\n<p>系统的收集和分析各种定量与定性信息，以便确定在整个项目中应该考虑哪些人的利益。通过干系人分析，识别出干系人的利益、期望和影响，并把他们与项目的目的联系起来。干系人分析也有助于了解干系人之间的关系，以便利用这些关系来建立联盟或者伙伴合作，从而提高项目成功的可能性。在项目的不同阶段应该对干系人施加不同的影响。</p>\n<p>干系人分析的步骤：</p>\n<p>(1) 识别干系人及其相关信息</p>\n<p>(2) 分析干系人可能的影响并把他们分类和排序</p>\n<p>(3) 评估干系人对不同情况可能做岀的反应，以便制定相应策略对他们施加正面影响。</p>\n<p>干系人的参与程度可按照如下标准分类。(1) 不知晓。(2) 抵制。(3) 中立。(4) 支持。(5) 领导。</p>\n<p>权利 / 利益方格</p>\n<p><strong>2、干系人登记册</strong></p>\n<p>应包括如下内容：</p>\n<p>（1）基本信息，如姓名、在组织中的职位、地点、在项目中的角色、联系方式等；</p>\n<p>（2）评估信息，如主要要求、主要期望、对项目的潜在影响、与项目生命周期的哪个阶段最密切；</p>\n<p>（3）干系人分类，如内部 / 外部，支持者 / 中立者 / 反对者等。</p>\n<p>应定期查看并更新干系人登记册，因为在整个项目生命周期中干系人可能发生变化，也可能识别出新的干系人。</p>\n<p><strong>第十章 IT 项目风险管理</strong></p>\n<p><strong>一、项目风险管理概述</strong></p>\n<p><strong>1、风险概念</strong></p>\n<p>风险是不确定的事件，一旦发生，将会造成消极影响。</p>\n<p>风险的三要素：一个未来的事件、事件发生的概率、事件的影响</p>\n<p>风险发生的概率越高，造成的影响越大，就越是高风险，否则就是中等风险或低风险。</p>\n<p><strong>2、风险分类</strong></p>\n<p>从风险的范围角度上看，可将软件项目的风险分为若干类型：</p>\n<p>管理风险：潜在的预算、进度、资源、用户和需求等方面的问题。</p>\n<p>技术风险：实现和交付产品过程中所应用的各种技术所包含的风险。技术的正确性、不确定性、复杂性、技术陈旧等因素都可带来技术风险。</p>\n<p>商业风险：与市场、企业产品策略等因素有关的风险。</p>\n<p>人员风险：与参与项目的软件人员的稳定性、总体技术水平及项目经验相关的风险。</p>\n<p>开发环境风险：与用以开发产品的工具的可用性和质量相关的风险。</p>\n<p>客户风险：与客户的素质以及开发者与客户的定期沟通相关的风险。</p>\n<p>过程风险：与软件过程被定义的程度以及它们被开发组织所遵守的程度相关的风险。</p>\n<p>从风险可预测的程度来看，可将风险分为以下三种类型：</p>\n<p>已知风险：通过评估项目计划、项目的商业和技术环境以及其它可靠的信息来源之后可以发现的那些风险。</p>\n<p>可预测风险：能够从过去的项目经验中推测出的风险。</p>\n<p>不可预测风险：事先很难识别出来的风险。</p>\n<p><strong>3、风险的基本性质</strong></p>\n<p>客观性：首先表现在风险的存在是不以人的意志为转移的。不管风险主体是否意识到风险的存在，在一定条件下风险都可能变为现实。其次，风险的客观性还表现在它无时不有、无所不在，它潜在于各种活动之中。</p>\n<p>不确定性：风险何时何地有可能变为现实是不能确定的。由于人们对客观世界的认识受到各种条件的限制，不可能准确预测风险的发生。</p>\n<p>不利性：风险一旦发生，就会给风险主体带来挫折、失败、甚至损失，对风险主体不利。</p>\n<p>可变性：在一定条件下风险可以转化，风险可以转化为非风险，非风险的事件也可转化为风险事件。</p>\n<p>相对性：对于相同的风险，不同的风险主体的承受能力不同，不同的组织和个人往往对风险有着不同的容忍限度。</p>\n<p>风险和利益的对称性：风险和利益总是同时存在的，风险是利益的代价，利益是风险的报酬。</p>\n<p><strong>4、IT 项目的风险主要表现</strong></p>\n<p>（1）用户需求不一致、变化大。</p>\n<p>（2）技术变革。</p>\n<p>（3）系统部署风险。</p>\n<p>（4）流程重组风险。</p>\n<p>（5）组织与人力资源变动。</p>\n<p>（6）开发方式风险。</p>\n<p><strong>5、风险管理的力度（4 个层次）</strong></p>\n<p>危机管理：风险已经造成麻烦后才着手处理。</p>\n<p>风险缓解：事先制定好风险发生后的补救措施，但不制定任何防范措施。</p>\n<p>着力预防：将风险防范作为项目的一部分加以规划和执行。</p>\n<p>消灭根源：识别和消灭可能产生风险的根源。</p>\n<p><strong>6、项目风险管理的作用</strong></p>\n<p>有效的风险管理可以提高项目的成功率。</p>\n<p>提前对风险制定对策，就可以在风险发生时迅速做出反应，避免忙中出错造成更大损失。</p>\n<p>风险管理可以增加团队的健壮性。</p>\n<p>有效的风险管理可以帮助项目经理抓住工作重点，将主要精力集中于重大风险，将工作方式从被动救火转变为主动防范。</p>\n<p><strong>二、规划风险管理</strong></p>\n<p>规划风险管理是定义如何实施项目风险管理活动的过程。</p>\n<p>确保风险管理的水平、方法和可见度与项目风险程度，以及项目对组织和其它干系人的重要程度相匹配。</p>\n<p>本过程仅开展一次或仅在项目的预定义点开展。</p>\n<p><strong>1、风险管理计划</strong></p>\n<p>（1）风险管理战略。管理项目风险的一般方法。</p>\n<p>（2）角色与职责。确定风险管理计划中每个活动的领导者和支持者，以及风险管理团队的成员，并明确其职责。</p>\n<p>（3）预算。制定应急储备和管理储备的使用方案。</p>\n<p>（4）时间安排。确定风险管理的时间和频率，风险管理活动并纳入项目进度计划中。</p>\n<p>（5）风险类别。通常借助风险分解结构 (Risk Breakdown Structure，RBS) 来构建风险类别。</p>\n<p>（6）干系人风险偏好。可把干系人的风险偏好表述成可测量的风险临界值。</p>\n<p>（7）风险概率和影响的定义。</p>\n<p><strong>三、识别风险</strong></p>\n<p>识别单个项目风险以及整体项目风险的来源，并记录风险特征的过程。</p>\n<p>记录现有的单个项目风险，以及整体项目风险的来源；同时，汇集相关信息，以便项目团队能够恰当应对已识别的风险。</p>\n<p><strong>1、识别风险的过程</strong></p>\n<p>识别并确定项目有哪些潜在的风险</p>\n<p>识别引起这些风险的主要影响因素</p>\n<p>识别项目风险可能引起的后果</p>\n<p><strong>2、软件项目风险</strong></p>\n<p>（1）需求风险（IT 项目最大的风险是所完成的产品不能让用户满意）</p>\n<p>识别需求风险时，重点分析以下因素：</p>\n<p>用户是否充分参与需求分析。</p>\n<p>优先需求是否得到满足。</p>\n<p>需求变化的程度。</p>\n<p>有无有效的需求变化管理过程。</p>\n<p>（2）技术风险（信息技术的发展和更新速度极快）</p>\n<p>识别技术风险时，可以分析以下因素：</p>\n<p>对方法、工具和新技术的理解程度。</p>\n<p>应用领域经验。</p>\n<p>产品需求是否要求采用特殊的功能和接口。</p>\n<p>需求中是否有过分的产品性能要求和约束。</p>\n<p>客户所要求的功能是否技术可行。</p>\n<p>是否有恰当的技术培训。</p>\n<p>（3）商业风险</p>\n<p>与商业风险有关的因素有：</p>\n<p>本产品是否得到应有的高管层重视与支持。</p>\n<p>交付期限的合理性如何。</p>\n<p>本产品是否满足了用户的需求。</p>\n<p>最终用户的水平如何。</p>\n<p>延迟交付所造成的成本消耗如何。</p>\n<p>产品缺陷所造成的成本消耗如何。</p>\n<p>（4）开发方式的风险</p>\n<p>自主开发往往面临技术实力不足的问题；外包可能存在合作和沟通的问题。采用多方合作方式时，风险就可能来自合作伙伴、技术及设备供应商等方面。</p>\n<p>（5）数据迁移风险</p>\n<p>系统集成环境复杂，需要迁移的数据量庞大，而且数据迁移对数据的准确性和完整性有着很高的要求。数据质量风险也不可忽视。</p>\n<p>（6）进度风险</p>\n<p>进度风险是指由于种种不确定性因素的存在而导致项目完工期拖延的风险。</p>\n<p>（7）组织与人力资源风险</p>\n<p>软件行业的人员流动性大、沟通难度大。</p>\n<p><strong>3、风险登记册</strong></p>\n<p>风险登记册：风险登记册记录已识别单个项目风险的详细信息。随着实施定性风险分析、规划风险应对、实施风险应对和监督风险等过程的开展，这些过程的结果也要记进风险登记册。取决于具体的项目变量（如规模和复杂性），风险登记册可能包含有限或广泛的风险信息。当完成识别风险过程时，风险登记册的内容可能包括（但不限于）：</p>\n<p>・已识别风险的清单。在风险登记册中，每项单个项目风险都被赋予一个独特的标识号。要以所需的详细程度对已识别风险进行描述，确保明确理解。可以使用结构化的风险描述，来把风险本身与风险原因及风险影响区分开来。</p>\n<p>・潜在风险责任人。如果已在识别风险过程中识别出潜在的风险责任人，就要把该责任人记录到风险登记册中。随后将由实施定性风险分析过程进行确认。</p>\n<p>・潜在风险应对措施清单。如果已在识别风险过程中识别出某种潜在的风险应对措施，就要把它记录到风险登记册中。随后将由规划风险应对过程进行确认。</p>\n<p>根据风险管理计划规定的风险登记册格式，可能还要记录关于每项已识别风险的其它数据，包括：简短的风险名称、风险类别、当前风险状态、一项或多项原因、一项或多项对目标的影响、风险触发条件（显示风险即将发生的事件或条件）、受影响的 WBS 组件，以及时间信息（风险何时识 别、可能何时发生、何时可能不再相关，以及采取行动的最后期限）。</p>\n<p><strong>四、实施定性风险分析</strong></p>\n<p>实施定性风险分析是通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。</p>\n<p>本过程的作用重点关注高优先级的风险。</p>\n<p><strong>1、风险数据质量评估</strong></p>\n<p>风险数据是开展定性风险分析的基础。风险数据质量评估旨在评价关于单个项目风险的数据的准确性和可靠性。</p>\n<p><strong>2、风险概率和影响评估</strong></p>\n<p>风险概率评估考虑的是特定风险发生的可能性，而风险影响评估考虑的是风险对一项或多项项目目标的潜在影响，如进度、成本、质量或绩效。威胁将产生负面的影响，机会将产生正面的影响。要对每个已识别的单个项目风险进行概率和影响评估。</p>\n<p><strong>3、概率和影响矩阵</strong></p>\n<p>概率和影响矩阵：把每个风险发生的概率和一旦发生对项目目标的影响映射起来的表格。基于风险的概率和影响，对风险进行优先级排序，以便未来进一步分析并制定应对措施。采用风险管理计划中规定的风险概率和影响定义，逐一对单个项目风险的发生概率及其对一项或多项项目目标的影响（若发生）进行评估。然后，基于所得到的概率和影响的组合，使用概率和影响矩阵，来为单个项目风险分配优先级别。</p>\n<p><strong>4、风险紧迫性评估</strong></p>\n<p>可以把近期就需要应对的风险确定为更紧迫的风险。此外，风险的可监测性、风险应对的时间要求、风险征兆和预警信号，以及风险等级等，都是确定风险优先级应考虑的指标。</p>\n<p><strong>5、风险分类</strong></p>\n<p>项目风险可依据风险来源（如采用风险分解结构 [RBS]）、受影响的项目领域（如采用 工作分解结构 [WBS]），以及其他实用类别（如项目阶段、项目预算、角色 和职责）来分类，确定哪些项目领域最容易被不确定性影响；风险还可以根据共同的根本原因进行分类。应该在风险管理计划中规定可用于项目的风险分类方法。</p>\n<p><strong>五、实施定量风险分析</strong></p>\n<p>实施定量风险分析是就已识别的单个项目风险和不确定性的其他来源对整体项目目标的影响进行定量分析的过程。</p>\n<p>本过程的作用量化整体项目风险敞口，并提供额外的定量风险信息，以支持风险应对规划。</p>\n<p><strong>1、敏感性分析</strong></p>\n<p>把所有其他不确定因素固定在基准值，考察每个因素的变化会对目标产生多大程度的影响，有助于确定哪些风险对项目具有最大的潜在影响。</p>\n<p><strong>2、决策树分析</strong></p>\n<p>预期货币价值分析（EMV) 用以计算在将来某种情况发生或不发生情况下的平均结果（即不确定状态下的分析）。</p>\n<p><strong>3、模拟</strong></p>\n<p>项目模拟一般采用蒙特卡洛技术。在模拟中，项目模型经过多次计算 (叠加), 其随杋依据值来自于根据毎项变量的概率分布，为每个迭加过程选择的概率分布函数 (例如，项目元素的成本或进度活动的持续时间)。据此计算概率分布 (例如，总成本或完成日期。</p>\n<p><strong>六、规划风险应对</strong></p>\n<p>规划风险应对是针对项目目标，制定提高机会、降低威胁的方案和措施的过程。</p>\n<p>本过程的作用制定应对整体项目风险和单个项目风险的适当方法；本过程还将分配资源，并根据需要将相关活动添加进项目文件和项目管理计划。</p>\n<p><strong>1、消极风险或威胁的应对策略</strong></p>\n<p>规避和减轻策略通常适用于高影响的严重风险，而转移和接受则更适用于低影响的不太严重威胁。</p>\n<p>规避。风险规避是指项目团队釆取行动来消除威胁，或保护项目免受威胁的影响。</p>\n<p>转移。转移涉及到将应对威胁的责仼转移给第三方，让第三方管理风险并承担威胁发生的影响。</p>\n<p>减轻。风险减轻是指采取措施来降低威胁发生的概率和 (或) 影响。</p>\n<p>接受。风险接受是指承认威胁的存在，但不主动采取措施。</p>\n<p><strong>2、积极风险或机会的应对策略</strong></p>\n<p>开拓。如果组织想确保把握住高优先级的机会，就可以选择开拓策略。</p>\n<p>分享。分享涉及到将应对机会的责任转移给第三方，使其享有机会所带来的部分收益。</p>\n<p>提高。提高策略用于提高机会出现的概率和（或）影响。</p>\n<p>接受。接受机会是指当机会发生时乐于利用，但不主动追求机会。</p>\n<p><strong>3、应急应对策略</strong></p>\n<p>可以针对某些特定事件，专门设计一些应对措施。对于有些风险，比如不可预测的风险，项目团队可以制定应急应对策略，即只有在某些预定（触发）条件发生时才能实施的应对计划。</p>\n<p><strong>七、监控风险</strong></p>\n<p>监控风险是在整个项目中规划风险应对、跟踪已识别风险、监督残余风险、识别新风险，以及评估风险过程有效性的过程。</p>\n<p>本过程的主要作用是使项目决策都基于关于整体项目风险和单个项目风险的当前信息。</p>\n<p>・实施的风险应对是否有效；</p>\n<p>・整体项目风险级别是否已改变；</p>\n<p>・已识别单个项目风险的状态是否已改变；</p>\n<p>・是否出现新的单个项目风险；</p>\n<p>・风险管理方法是否依然适用；</p>\n<p>・项目假设条件是否仍然成立；</p>\n<p>・风险管理政策和程序是否已得到遵守；</p>\n<p>・成本或进度应急储备是否需要修改；</p>\n<p>・项目策略是否仍然有效……</p>\n<p>风险再评估。对新风险进行识别并对风险进行重新评估。</p>\n<p>风险审计。是检查并记录风险应对措施在处理已识别风险及其根源方面的有效性，以及风险管理过程的有效性。</p>\n<p>技术绩效测量。把执行期间所取得的技术成果与关于取得技术成果的计划进行比较。</p>\n<p><strong>第十一章 IT 项目采购管理</strong></p>\n<p><strong>一、项目采购管理概述</strong></p>\n<p>项目采购管理包括从项目团队外部采购或获得所需产品、服务或成果的各个过程。</p>\n<p>项目组织既可以是项目产品、服务或成果的买方，也可以是卖方。项目采购管理过程围绕包括合同在内的协议来进行。</p>\n<p><strong>1、项目采购的方式</strong></p>\n<p>（1）公开竞争性招标。</p>\n<p>（2）有限竞争性招标。</p>\n<p>（3）竞争性谈判。</p>\n<p>（4）询价采购。</p>\n<p>（5）直接签订合同。</p>\n<p>（6）自制或自己提供服务。</p>\n<p><strong>2、项目采购的重要性</strong></p>\n<p>（1）降低成本。</p>\n<p>（2）可以把主要精力放在核心业务上。</p>\n<p>（3）可以从外界获得专门的技能和技术。</p>\n<p>（4）提高灵活性。</p>\n<p>（5）提高责任性。</p>\n<p>（6）能有效减少贪污、浪费等现象的发生。</p>\n<p><strong>二、规划采购管理</strong></p>\n<p>规划采购管理是记录项目采购决策、明确采购方法，及识别潜在卖方的过程。</p>\n<p>本过程的主要作用是，确定是否从项目外部获取货物和服务；如果是，则还要确定将在什么时间、以什么方式获取什么货物和服务。货物和服务可从执行组织的其他部门采购，或者从外部渠道采购。</p>\n<p><strong>1、自制或外购分析</strong></p>\n<p>制定自制或外购決策时应考虑的因素包括；组织当前的资源配置及其技能和能力，对专业技术的需求，不愿承担永久雇用的义务，以及对独特技术专长的需求；还要评估与每个自制或外购决策相关的风险。</p>\n<p>在自制或外购分析中，可以使用回收期、投资回报率 (ROI)、内部报酬率 (IRR)、现金流贴现、浄现值 (NPV)、收益成本 (BCA) 或其他分析技术，来确定某种货物或服务是应该在项目内部自制，还是从外部购买。</p>\n<p><strong>2、合同类型选择</strong></p>\n<p>（1）总价合同</p>\n<ol>\n<li>工作任务和范围、目标和验收标准很明确，且项目设计已具备详细细节</li>\n<li>工程量小、工期短（1 年内），施工环境因素变化小，工程条件稳定</li>\n<li>如果卖方承担成本风险</li>\n</ol>\n<p>（2）成本补偿合同</p>\n<ol>\n<li>工作性质、工作范围都不清楚或项目存在较高风险</li>\n<li>如果买方承担成本风险</li>\n</ol>\n<p>（3）工料合同</p>\n<ol>\n<li>工作性质清楚，但范围不是很清楚，工作不复杂，又需要快速签订合同</li>\n<li>如果双方分担风险</li>\n</ol>\n<p>（4）单边合同（订购单）</p>\n<p>购买标准产品，且数量不大</p>\n<p><strong>3、采购管理计划</strong></p>\n<p>包含要在采购过程中开展的各种活动。它应该记录是否要开展国际竞争性招标、国内竞争性招标、当地招标等。如果项目由外部资助，资金的来源和可用性应符合采购管理计划和项目进度计划的规定。</p>\n<p><strong>4、供方选择标准</strong></p>\n<p>在确定评估标准时，买方要努力确保选岀的建议书将提供最佳质量的所需服务。这个标准用于从潜在的卖方中选中符合要求的、合格的卖方。</p>\n<p>它包括：能力和潜能、产品成本和生命周期成本、交付日期、技术专长和方法、具体的相关经验、用于响应工作说明书的工作方法和工作计划、关键员工的资质、可用性和胜任力、公司的财务稳定性、管理经验、知识转移计划，包括培训计划。</p>\n<p><strong>5、采购工作说明书</strong></p>\n<p>对所购买的产品、成果或服务来说，采购工作说明书定义了与合同相关的那部分项目范围。每个采购工作说明书来自于项目范围基准。</p>\n<p>采购工作说明书会充分详细地描述拟采购的产品、服务或成果，以便潜在卖方确定是否有能力提供此类产品、服务或成果。根据采购品的性质、买方的需求，或拟采用的合同形式，工作说明书的详细程度会有较大不同。工作说明书的内容包括：规格、所需数量、质量水平、绩效数据、履约期间、工作地点和其他要求。</p>\n<p><strong>三、实施采购</strong></p>\n<p>实施采购是获取卖方应答、选择卖方并授予合同的过程。</p>\n<p>本过程的主要作用是，选定合格卖方并签署关于货物或服务交付的法律协议。本过程的最后成果是签订的协议，包括正式合同。</p>\n<p><strong>1、采购实施过程</strong></p>\n<p>有如下过程，它们可能相互重叠。</p>\n<p>（1）采购计划编制。包括确定采购产品需求，自制或外购决策，合同类型，编制采购管理计划和采购工作说明书等。</p>\n<p>（2）招标计划编制。包括：编写并发布采购文件，制定招标评审标准。</p>\n<p>（3）招标。包括：发布采购广告；召开投标会议；获得标书或建议书。</p>\n<p>（4）选择承包商或供应商。</p>\n<p>（5）合同管理。包括监督合同的履行，支付及合同的修改等</p>\n<p>（6）合同收尾。包括产品检验、结束合同、文件归档等</p>\n<p><strong>2、招标书的主要内容</strong></p>\n<p>招标书主要分为 3 大部分：程序条款、技术条款、商务条款。</p>\n<p>一般包含下列主要内容：招标公告（邀请函）；投标人须知；招标项目的技术要求及附件；投标书格式；投标保证文件；合同条件（合同的一般条款及特殊条款）；设计规范与标准；投标企业资格文件；合同格式等。</p>\n<p><strong>3、投标决策</strong></p>\n<p>企业要进行投标决策时主要考虑以下几个方面的内容。</p>\n<p> 竞争对手分析。</p>\n<p> 风险分析。</p>\n<p> 目标分析。</p>\n<p> 声誉与经验分析。</p>\n<p> 客户资金分析。</p>\n<p> 项目所需资源分析。</p>\n<p> 客户本身的资信问题。</p>\n<p><strong>4、采购谈判</strong></p>\n<p>采购谈判是指在合同签署之前，对合同的结构、要求及其他条款加以澄清，以取得一致意见。</p>\n<p>谈判的内容应包括责任、进行变更的权限、适用的条款和法律、技术和商务管理方法、所有权、合同融资、技术解决方案、总体进度计划、付款和价格等。</p>\n<p><strong>5、合同管理</strong></p>\n<p>一旦卖方选定，接下来就应该签订采购合同。采购合同中包括条款和条件，也可包括其他条目，如买方就卖方应实施的工作或应交付的产品所做的规定。 签订软件项目采购合同时应注意：</p>\n<p>（1）规定项目实施的有效范围。经验表明，软件项目合同范围定义不当而导致管理失控是项目成本超支、时间延迟及质量低劣的主要原因。</p>\n<p>（2）合同的付款方式。对于软件项目的合同而言，很少有一次性付清合同款的做法。付款条件是一个比较敏感的问题，签订合同时在付款条件上规定得越详细、越清楚越好。</p>\n<p>（3）合同变更索赔带来的风险。在软件的设计与开发过程中，存在着很多不确定因素，因此，变更和索赔通常是合同执行过程中必然要发生的事情。</p>\n<p>（4）系统验收的方式。从严格意义上说，成果一经客户认可，便不再有返工之说，只有索赔或变更之理。因此，客户必须高度重视系统验收这道手续。</p>\n<p>（5）维护期问题。系统最终验收通过之后，一般都有一个较长的系统维护期，这期间客户通常保留着 5%～10% 的合同费用。</p>\n<ul>\n<li>需方（甲方）合同管理</li>\n</ul>\n<p>验收过程是需方对供方的产品或服务进行验收检验，以保证它满足合同条款的要求。</p>\n<p>违约事件处理。</p>\n<ul>\n<li>供方（乙方）合同管理</li>\n</ul>\n<p>项目计划的执行，用以授权软件提供商在适当的时候进行工作。</p>\n<p>执行报告，监控合同方的成本、进度和技术绩效。</p>\n<p>质量控制，检验合同方的产品是否合格。</p>\n<p>变更控制，确保变更被正确地批准，以及需要了解情况的人知晓变更的发生。</p>\n<p><strong>四、控制采购</strong></p>\n<p>控制采购是管理采购关系，监督合同绩效，实施必要的变更和纠偏，以及关闭合同的过程。</p>\n<p>本过程的主要作用是，确保买卖双方履行法律协议，满足项目需求。</p>\n<p><strong>1、索赔管理</strong></p>\n<p>如果买卖双方不能就变更补偿达成一致意见，或对变更是否发生存在分歧，那么被请求的变更就成为有争议的变更或潜在的推定变更。此类有争议的变更称为索赔。</p>\n<p>在整个合同生命周期中，通常应该按照合同规定对索赔进行记录、处理、监督和管理。谈判是解决所有索赔和争议的首选方法。</p>\n<p><strong>2、检查与审计</strong></p>\n<p>检查是指对承包商正在执行的工作进行结构化审查，可能涉及对可交付成果的简单审查，或对工作本身的实地审查。</p>\n<p>审计是对采购过程的结构化审查。应该在采购合同中明确规定与审计有关的权利和义务。</p>\n<p><strong>3、数据分析（绩效审查）</strong></p>\n<p>依据合同来审查卖方在规定的成本和进度内完成项目范围和达到质量要求的情况。绩效审查的目标在于发现履约情况的好坏。</p>\n<p><strong>五、结束采购</strong></p>\n<p>采购结束管理的一个重要工作就是采购审计，采购审计是指对从采购管理规划过程到采购控制过程的所有采购过程进行结构化审查。其目的是找出合同准备或管理方面的成功经验与失败教训，供本项目其他采购合同或执行组织内其他项目的采购合同借鉴。</p>\n",
            "tags": [
                "学习类",
                "软件项目管理"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/20/Educational/WeChat/WX_Exercises/",
            "url": "http://rainyblue.cn/2024/06/20/Educational/WeChat/WX_Exercises/",
            "title": "微信小程序试题复习",
            "date_published": "2024-06-20T04:22:51.000Z",
            "content_html": "<p>应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习。</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"第一章-微信小程序入门\"><a class=\"anchor\" href=\"#第一章-微信小程序入门\">#</a> 第一章、微信小程序入门</h1>\n<p>一、填空题</p>\n<ol>\n<li>\n<p>微信小程序是运行在______之上的应用。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">微信</span></p>\n<p>微信小程序是运行在<span class=\"red\">微信</span>中的应用，是一种不需要下载即可使用的应用</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">小程序管理后台</span></p>\n<p>微信小程序开发完成后，需要通过 “上传” 按钮将代码上传到微信小程序的开发者平台，即<span class=\"red\">小程序管理后台</span></p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序项目中的______文件是全局配置文件。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">app.json</span></p>\n<p>app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。</p>\n</blockquote>\n</li>\n<li>\n<p>微信开发者工具中用于保存文件的快捷键是______。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">Ctrl+S</span></p>\n<p>快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">S</span>         表示<span class=\"kbd\">保存</span></p>\n</blockquote>\n</li>\n<li>\n<p>在微信小程序中，每个页面由 4 个文件组成，分别是______文件、______文件、______文件和 JS 文件</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">WXML WXSS JSON</span></p>\n<p>JS：用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。</p>\n<p>JSON：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。</p>\n<p>WXML：用于构建页面结构，文件扩展名为.wxml。</p>\n<p>WXSS：用于设置页面样式，文件扩展名为.wxss。</p>\n</blockquote>\n</li>\n</ol>\n<p>二、判断题</p>\n<ol>\n<li>\n<p>在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>AppID 又称为小程序 ID，是每个小程序的<span class=\"red\">唯一</span>标识，每个小程序账号只有一个 AppID</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序项目中 app.js 文件是全局样式文件。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。</p>\n<p>app.wxss：微信小程序的全局样式文件，文件可以为空。</p>\n</blockquote>\n</li>\n<li>\n<p>通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>微信小程序是运行在<span class=\"red\">微信客户端上的应用</span>。微信客户端给微信小程序提供的环境就是微信小程序的宿主环境。</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强</p>\n</blockquote>\n</li>\n<li>\n<p>项目成员表示参与微信小程序开发、运行的成员。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>项目成员：表示参与微信小程序开发、运行的成员，可登录微信小程序管理后台，包括运营者、开发者及和数据分析者。</p>\n</blockquote>\n</li>\n</ol>\n<p>三、选择题</p>\n<ol>\n<li>\n<p>下列选项中，关于微信小程序说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）。</p>\n<p>A. 微信小程序是运行在微信之中应用</p>\n<p>B. 微信小程序的体积非常小</p>\n<p><strong>C. 微信小程序不可以跨平台</strong></p>\n<p>D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序</p>\n<blockquote>\n<p>这一说法是错误的，因为微信小序本身是基于微信平台的，但通过跨平台开发工具如 uni-app，可以实现代码一次编写，多端运行，从而达到跨平台的效果。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，不属于微信小程序特点的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）。</p>\n<p>A. 无须安装            B. 无须卸载              <strong>C. 体积大</strong>              D. 入口丰富</p>\n<blockquote>\n<p>特点：无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，用于在微信开发者工具中输出调试信息的面板是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.Wxml</p>\n<p><strong>B.Console</strong></p>\n<p>C.Sources</p>\n<p>D.Network</p>\n<blockquote>\n<p>Wxml：Wxml 面板，用于查看和调试 WXML 和 WXSS。</p>\n<p>Console：控制台面板，用于输出调试信息，也可以直接编写代码执行。</p>\n<p>Sources：源代码面板，用于显示当前项目的脚本文件，在该面板中开发者看到的文件是经过处理之后的脚本文件。</p>\n<p>Network：网络面板，用于记录网络请求和响应信息，根据它可以进行网络性能优化。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于微信小程序项目目录结构说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）。</p>\n<p>A.pages 目录用于存放所有微信小程序的页面</p>\n<p>B.app.wxss 文件定义了微信小程序项目的全局样式</p>\n<p><strong>C.sitemap.json 文件是微信小程序项目的全局配置文件</strong></p>\n<p>D.app.js 文件是微信小程序项目的入口文件</p>\n<blockquote>\n<p>微信小程序的全局配置文件是<strong> app.json</strong>，而不是<strong> sitemap.json</strong>。</p>\n<p>app.json 是<strong>全局配置文件</strong>，主要用于配置小程序的全局属性、页面路径、窗口样式等。</p>\n<p>sitemap.json 是<strong>页面配置文件</strong>，用于配置小程序的页面路径、页面的标题、页面是否允许分享等。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于微信开发者工具说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. 工具栏 “预览” 按钮用于在微信中进行预览</p>\n<p>B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等</p>\n<p>C. 模拟器可以模拟小程序在微信客户端的运行效果</p>\n<p><strong>D. 编辑器中只能打开一个文件</strong></p>\n<blockquote>\n<p>微信开发者工具的编辑器支持同时打开和切换多个文件，以便于开发者进行多任务编辑和查看。</p>\n</blockquote>\n</li>\n</ol>\n<p>四、简答题</p>\n<ol>\n<li>\n<p>请简述微信小程序的特点。</p>\n<p>①微信小程序具有无须安装、触手可及、用完即走、无须卸载</p>\n<p>②体积小，加载速度快，不占用存储空间。</p>\n<p>③名称唯一、入口丰富和传播能力强</p>\n</li>\n<li>\n<p>请简述微信小程序项目的创建过程。</p>\n<p>①打开微信开发者工具时，使用微信扫码登录微信开发者工具</p>\n<p>②进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。</p>\n<p>③将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成</p>\n<p>④单击 “确定” 按钮创建微信小程序项</p>\n</li>\n</ol>\n<h1 id=\"第二章-微信小程序页面制作\"><a class=\"anchor\" href=\"#第二章-微信小程序页面制作\">#</a> 第二章、微信小程序页面制作</h1>\n<p>一、填空题</p>\n<ol>\n<li>\n<p>image 组件的____属性用于设置图片的展示模式。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">mode</span></p>\n<p><span class=\"red\">image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式</span></p>\n</blockquote>\n</li>\n<li>\n<p>swiper 组件内部只可以放置____组件。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">swiper-item</span></p>\n<p>swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容</p>\n</blockquote>\n</li>\n<li>\n<p>在 Flex 布局中， ____属性能够设置项目在主轴方向的排列方式。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">justify-content</span></p>\n<p>justify-content 设置排列方式</p>\n<p>flex-direction 设置主轴方向</p>\n<p>justify-content 定义了项目在主轴上的对齐方式，默认值为 flex-start，即项目在主轴方向上，与主轴起始位置对齐</p>\n</blockquote>\n</li>\n<li>\n<p>text 组件的 ____属性用于实现长按选中文本内容的效果。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">user-select</span></p>\n<p>user-select 文本是否可选，该属性会使文本节点显示为 inline-block</p>\n</blockquote>\n</li>\n<li>\n<p>在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">app.json</span></p>\n<p><span class=\"red\">在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。</span></p>\n</blockquote>\n</li>\n</ol>\n<p>二、判断题</p>\n<ol>\n<li>\n<p>给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>flex-direction 决定主轴的方向（即项目的排列方向），默认值为 row，即主轴为从左到右的水平方向，项目按照主轴方向排列</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>微信小程序中的样式文件是 WXSS 文件，但是支持多种尺寸单位，包括 rpx、px、vw、vh 等</p>\n<p>rpx（Responsive Pixel，自适应像素）。</p>\n</blockquote>\n</li>\n<li>\n<p>swiper 组件可以实现页面的轮播图效果。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。</p>\n</blockquote>\n</li>\n<li>\n<p>video 组件专门用于播放音频。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>video    视频</p>\n<p>audio   音频</p>\n</blockquote>\n</li>\n</ol>\n<p>三、选择题</p>\n<ol>\n<li>\n<p>下列选项中，用于配置微信小程序所有的页面地址的文件是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）</p>\n<p>A. app.js</p>\n<p><strong>B. app.json</strong></p>\n<p>C. app.wxss</p>\n<p>D. project.config.json</p>\n<blockquote>\n<p>在微信小程序中可以通过<span class=\"red\"> app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。</span></p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，不属于表单组件的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）</p>\n<p>A. input 组件</p>\n<p>B. checkbox 组件</p>\n<p>C. form 组件</p>\n<p><strong>D. swiper 组件</strong></p>\n<blockquote>\n<p>常见表单组件如下：</p>\n<table>\n<thead>\n<tr>\n<th><strong>组件</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>form</td>\n<td>表单</td>\n</tr>\n<tr>\n<td>checkbox-group</td>\n<td>多项选择器</td>\n</tr>\n<tr>\n<td>radio-group</td>\n<td>单项选择器</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>多行输入框</td>\n</tr>\n<tr>\n<td>button</td>\n<td>按钮</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>多选项目</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>单选项目</td>\n</tr>\n<tr>\n<td>input</td>\n<td>输入框</td>\n</tr>\n</tbody>\n</table>\n<p>swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，不属于 Flex 布局的是（<span class=\"spoiler\" title=\"你知道得太多了\">C</span> ）</p>\n<p>A.  display:flex;</p>\n<p>B.   flex:1;</p>\n<p><strong>C.   float:left;</strong></p>\n<p>D.  flex-flow:column nowrap;</p>\n<blockquote>\n<p>Flex 布局允许开发者沿着主轴（main axis）和交叉轴（cross axis）这两个维度来控制元素的布局，其中主轴是由 <code>flex-direction</code>  属性决定的，可以是水平或垂直方向。</p>\n<p>选项 A  <code>display:flex;</code>  是启用 Flex 布局的基本属性，它指定了某个元素作为 Flex 容器。</p>\n<p>选项 B 中的 <code>flex:1;</code>  则是在 Flex 容器的子项上定义的，表示该项目相对于其他项目的扩展比例。</p>\n<p>C 中的 <code>float:left;</code> , <code>float</code>  属性在某些布局场景下仍然有其应用，但它并不属于 Flex 布局的属性范畴</p>\n<p>选项 D 中的 <code>flex-flow:column nowrap;</code>  是一个简写属性，结合了 <code>flex-direction</code>  和 <code>flex-wrap</code>  两个属性的值，用于控制项目的排列方向和是否换行。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ <span class=\"spoiler\" title=\"你知道得太多了\">C</span>）。</p>\n<p>A. 3              B. 4                  <strong>C. 5</strong>                    D. 6</p>\n<blockquote>\n<p>在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。</p>\n<p><span class=\"red\"> 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。</span></p>\n</blockquote>\n</li>\n</ol>\n<p>四、简答题</p>\n<ol>\n<li>\n<p>简述 WXML 和 HTML 的区别。</p>\n<p>①  HTML 和 WXML 使用的标签不同。例如，HTML 经常使用 &lt;div&gt; 标签搭建页面结构，而 WXML 则使用 &lt; view &gt; 标签搭建页面结构；HTML 经常使用 &lt; span &gt; 标签定义行内文本 ，而 WXML 则使用 &lt; text &gt; 标签定义行内文本 。</p>\n<p>②  WXML 提供了和 Vue.js 中模板语法类似的模板语法，例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。</p>\n<p>③  HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。</p>\n<p>④  WXML 中的单标签必须在结尾 “&gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&gt;” 前面的 “/”。</p>\n<p>⑤  WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。</p>\n</li>\n<li>\n<p>简述 WXSS 和 CSS 的区别。</p>\n<p>①  不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。</p>\n<p>②  在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。</p>\n<p>③  在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url ('/images/1.png');” 是无效的，而 CSS 可以使用本地图片来设置背景图片。</p>\n</li>\n<li>\n<p>简述 Flex 布局的概念。</p>\n<p>Flex 布局又称为弹性盒（Flexible Box）布局，它为盒子模型提供了很强的灵活性，任何一个容器都可以指定为 Flex 布局。采用 Flex 布局的元素，称为 Flex 容器（简称容器）。 它的所有子元素自动成为容器成员，称为 Flex 项目（简称项目）。容器内有两根轴：主轴（Main Axis）和交叉轴（Cross Axis）, 默认情况下主轴为水平方向，交叉轴为垂直方向，项目默认沿主轴排列，根据实际需要可以更改项目的排列方式。</p>\n</li>\n</ol>\n<h1 id=\"第三章-微信小程序页面交互\"><a class=\"anchor\" href=\"#第三章-微信小程序页面交互\">#</a> 第三章、微信小程序页面交互</h1>\n<p>一、填空题</p>\n<ol>\n<li>\n<p>在页面结构渲染过程中，通过____控制属性完成页面的条件渲染。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx:if</span></p>\n<p>条件渲染通过标签的 wx:if 控制属性来完成</p>\n</blockquote>\n</li>\n<li>\n<p>在列表渲染中，通过____控制属性可以循环数组中的每一项。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx:for</span></p>\n<p>列表渲染通过 wx:for 控制属性来实现。</p>\n</blockquote>\n</li>\n<li>\n<p>在列表渲染中，使用____可以指定当前项的变量名。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx:for-item</span></p>\n<p>在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。</p>\n</blockquote>\n</li>\n<li>\n<p>在 JS 文件中，通过____ 获取 data-* 自定义属性的值。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">e.target.dataset</span></p>\n<p>data-* 自定义属性的属性值表示要传参的数据。</p>\n<p>在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。</p>\n</blockquote>\n</li>\n<li>\n<p>在微信小程序中，页面加载完成后执行的生命周期函数为 ____。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">onReady()</span></p>\n<p>onLoad () : 监听页面加载，且一个页面只会在创建完成后触发一次</p>\n<p>onShow (): 监听页面显示，只要页面显示就会触发此函数</p>\n<p>onReady (): 监听页面初次渲染完成，一个页面只会调用一次</p>\n<p>onHide (): 监听页面隐藏，只要页面隐藏就会触发此函数</p>\n<p>onUnload (): 监听页面卸载，只要页面被释放就会触发此函数</p>\n</blockquote>\n</li>\n</ol>\n<p>二、判断题</p>\n<ol>\n<li>\n<p>在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>微信小程序可以通过自定义属性来进行传参。</p>\n<p>data-* 自定义属性的属性值表示要传参的数据。</p>\n</blockquote>\n</li>\n<li>\n<p>‌所有绑定的数据都必须在 data 中进行初始化。（<span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>绝大多数情况下，页面上需要动态显示或操作的数据确实需要在对应的 JavaScript 文件中的 page 实例的 data 属性里定义和初始化，但也存在一些特例情况</p>\n<p>对于那些不经常变化或者不需要动态响应式更新的数据，可能会选择直接在 WXML 文件中硬编码，而不是在 data 中定义</p>\n</blockquote>\n</li>\n<li>\n<p>设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>onPullDownRefresh () : 监听用户下拉刷新事件</p>\n<p>启用下拉刷新的方式:</p>\n<p>①全局开启下拉刷新：在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。</p>\n<p>②局部开启下拉刷新：在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。</p>\n</blockquote>\n</li>\n<li>\n<p>通过调用 wx.request () 方法可以发起网络请求。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。</p>\n<p>在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。</p>\n</blockquote>\n</li>\n<li>\n<p>通过调用 wx.showLoading () 方法可以弹出加载提示框。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span>）</p>\n<blockquote>\n<p>在微信小程序中，如果想实现点击一个按钮弹出一个提示框的效果，可以使用以下 2 种方式。</p>\n<p>①wx.showLoading () 方法</p>\n<p>②wx.showToast () 方法</p>\n</blockquote>\n</li>\n</ol>\n<p>三、选择题</p>\n<ol>\n<li>\n<p>下列选项中，关于列表渲染说法正确的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.   wx:for-index 可以用于重新定义当前项的变量名</p>\n<p>B.   在列表渲染中，可以使用 item 变量获取当前项的值</p>\n<p><strong>C.   wx:for 可以用于实现页面中的列表渲染</strong></p>\n<p>D.   wx:for-item 可以用于设置当前索引变量的属性名</p>\n<blockquote>\n<p>答案 BC 应该都是对的，但老师给的答案是选 B</p>\n<p>A. 错误：wx:for-index 确实用于重新定义当前项索引变量的名字，默认情况下是 index，例如 wx:for-index=&quot;idx&quot;，但题目描述的是 “当前项的变量名”，这是错误的，应为 item。</p>\n<p>B. 正确：在列表渲染中，使用 wx:for-item=&quot;item&quot; 可以定义一个变量来获取当前项的值，然后在 wxml 模板中通过访问当前项的内容。</p>\n<p>C. 正确：wx:for 指令可以用于实现页面中的列表渲染，其基本语法格式是 wx:for=&quot;&quot;。</p>\n<p>D. 错误：wx:for-item 用于设置当前数据项的变量名，默认是 item，例如 wx:for-item=&quot;itemName&quot;，而不是用于设置当前索引变量的属性名。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，用于监听页面初次渲染成功的回调函数是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. onHide             B. onLoad                C. onShow             <strong>D. onReady</strong></p>\n<blockquote>\n<p>onLoad () : 监听页面加载，且一个页面只会在创建完成后触发一次</p>\n<p>onShow (): 监听页面显示，只要页面显示就会触发此函数</p>\n<p>onReady (): 监听页面初次渲染完成，一个页面只会调用一次</p>\n<p>onHide (): 监听页面隐藏，只要页面隐藏就会触发此函数</p>\n<p>onUnload (): 监听页面卸载，只要页面被释放就会触发此函数</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ <span class=\"spoiler\" title=\"你知道得太多了\">D</span>）。</p>\n<p>A. wx:for-i</p>\n<p>B.  wx:for-j</p>\n<p>C.  wx:for-item</p>\n<p><strong>D.  wx:for-index</strong></p>\n<blockquote>\n<p>在微信小程序开发中， <code>wx:for</code>  是一种控制属性，它允许开发者通过绑定一个数组到组件上，从而使用数组中的每一项数据重复渲染该组件</p>\n<p><code>wx:for-index</code>  属性允许开发者为当前元素的下标指定一个自定义的变量名</p>\n<p><code>wx:for-item</code>  属性，用于指定当前元素的变量名</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，wx.showToast () 函数的参数属性中包含的回调函数有（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  title、icon 和 mask</p>\n<p>B.  success、fail 和 title</p>\n<p>C.  duration、mask 和 success</p>\n<p><strong>D.  success、fail 和 complete</strong></p>\n<blockquote>\n<p>注意：老师答案为 A</p>\n<p><code>wx.showToast()</code>  函数是一个常用的 API，用于向用户显示一个简单的提示消息</p>\n<p>该函数的参数属性：</p>\n<p><strong>title</strong>：这是提示的内容，是 <code>wx.showToast()</code>  函数的必填参数。</p>\n<p><strong>icon</strong>：这是一个可选参数，用于设置提示框的图标类型。支持的图标类型包括'success'、'loading' 等。</p>\n<p><strong>duration</strong>：这也是一个可选参数，定义了提示框显示的持续时间，以毫秒为单位。</p>\n<p><strong>mask</strong>：一个布尔值，表示是否显示透明蒙层以防止触摸穿透，默认为 false。</p>\n<p><strong>success</strong>：这是接口调用成功的回调函数，它是一个可选参数。</p>\n<p><strong>fail</strong>：这是接口调用失败的回调函数，同样是一个可选参数。</p>\n<p><strong>complete</strong>：无论接口调用成功还是失败，这个回调函数都会被执行。它也属于可选参数</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ <span class=\"spoiler\" title=\"你知道得太多了\">A</span>）。</p>\n<p><strong>A.  <code>&#123;&#123; &#125;&#125;</code> </strong>             B.   <code>[]</code>           C.  <code>&#123; &#125;</code>        D.  <code>[[]]</code></p>\n<blockquote>\n<p>微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定，可将 data 中的数据通过 Mustache 语法输出到页面上。</p>\n</blockquote>\n</li>\n</ol>\n<p>四、简答题</p>\n<ol>\n<li>\n<p>简述页面生命周期函数包括哪些。</p>\n<p>页面生命周期回调函数包含以下 5 个。</p>\n<p>①  onLoad () 函数用于监听页面加载，且一个页面只会在创建完成后触发一次。</p>\n<p>②  onShow () 函数用于监听页面显示，只要页面显示就会触发此函数。</p>\n<p>③  onReady () 函数用于监听页面初次渲染完成，一个页面只会调用一次。</p>\n<p>④  onHide () 函数用于监听页面隐藏，只要页面隐藏就会触发此函数。</p>\n<p>⑤  onUnload () 函数用于监听页面卸载，只要页面被释放就会触发此函数。</p>\n</li>\n<li>\n<p>简述 wx:if 控制属性和 hidden 属性的区别。</p>\n<p>wx:if 和 hidden 不同之处在于，wx:if 初始渲染条件为 false，只有条件第一次变为 true 的时候才开始渲染，而 hidden 所在的组件始终会被渲染，只是简单的控制显示与隐藏。</p>\n<p>一般来说，wx:if 有更大的切换开销而 hidden 有更高的初次渲染开销。因此，在需要频繁切换的情境下，用 hidden 更好，而如果运行时条件不太可能会改变，用 wx:if 更好。</p>\n</li>\n<li>\n<p>简述微信小程序如何实现下拉刷新。</p>\n<p>微信小程序实现下拉刷新分为 2 个步骤。</p>\n<p>①  开启下拉刷新。在 app.json 的 window 节点中或在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。</p>\n<p>②  调用 onPullDownRefresh () 事件处理函数实现下拉操作执行时的操作。</p>\n</li>\n<li>\n<p>简述微信小程序如何实现上拉触底。</p>\n<p>微信小程序提供 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。</p>\n<p>在默认情况下触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，可以根据实际需求修改默认值。可以在全局或页面的 JSON 配置文件中，通过 onReachBottomDistance 属性来修改上拉触底的距离。</p>\n</li>\n</ol>\n<h1 id=\"第四章-微信小程序常用api上\"><a class=\"anchor\" href=\"#第四章-微信小程序常用api上\">#</a> 第四章、微信小程序常用 API（上）</h1>\n<p>一、 填空题</p>\n<ol>\n<li>\n<p>上传文件的 API 是  ____。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx.uploadFile()</span></p>\n<p>微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。</p>\n</blockquote>\n</li>\n<li>\n<p>下载文件的 API 是 ___。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx.downloadFile()</span></p>\n<p>微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。</p>\n</blockquote>\n</li>\n<li>\n<p>scroll-view 组件可以实现 ___ 效果。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">滚动</span></p>\n<p>在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动，默认是不滚动的，需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。</p>\n</blockquote>\n</li>\n<li>\n<p>在 scroll-view 组件中，用  ___ 属性用于设置横向滚动条的位置。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">scroll-left</span></p>\n<p>scroll-x: 允许横向滚动，默认值为 false<br />\nscroll-y: 允许纵向滚动，默认值为 false<br />\nscroll-top: 设置竖向滚动条的位置，默认值为空，类型：number/string<br />\nscroll-left：设置横向滚动条的位置，默认值为空，类型：number/string<br />\nscroll-into-view：当前可在哪个方向滚动，则在哪个方向滚动到该元素。值为某子元素 id (id 不能以数字开头)，类型：string<br />\nscroll-with-animation: 在设置滚动条位置时是否使用动画过渡，默认值为 false</p>\n</blockquote>\n</li>\n<li>\n<p>在 slider 组件的属性中，___ 属性用于设置进度条的最大值。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">max</span></p>\n<p>在微信小程序中，通过 slider 组件可以定义一个滑动选择器。</p>\n<p>slider 组件的常用属性:</p>\n<p>min: 进度条的最小值，默认值为 0</p>\n<p>max: 进度条的最大值，默认值为 100</p>\n<p>step：步长，取值大于 0，可被 max-min 整除，默认值为 1</p>\n<p>value：当前取值，默认为 0</p>\n<p>activeColor：已选择的颜色，默认值为 #1aad19</p>\n<p>backgroundColor  ：背景条的颜色，默认值为 #e9e9e9</p>\n<p>block-size：滑块大小，取值范围为 12∼2812∼28 , 默认值为 28</p>\n<p>block-color： 滑块颜色，默认值为 #ffffff</p>\n</blockquote>\n</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>\n<p>在 canvas 组件中，canvas-id 属性是其唯一标识符。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>canvas 组件可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。</p>\n<p>canvas 组件的常用属性如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>指定 canvas 组件的类型，支持 2D 和 WebGL</td>\n</tr>\n<tr>\n<td>canvas-id</td>\n<td>string</td>\n<td>canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性</td>\n</tr>\n<tr>\n<td>disable-scroll</td>\n<td>boolean</td>\n<td>当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false</td>\n</tr>\n<tr>\n<td>bindtouchstart</td>\n<td>eventhandle</td>\n<td>手指触摸动作开始</td>\n</tr>\n<tr>\n<td>bindtouchmove</td>\n<td>eventhandle</td>\n<td>手指触摸后移动</td>\n</tr>\n<tr>\n<td>bindtouchend</td>\n<td>eventhandle</td>\n<td>手指触摸动作结束</td>\n</tr>\n<tr>\n<td>bindtouchcancel</td>\n<td>eventhandle</td>\n<td>手指触摸动作被打断，例如来电提醒，弹窗等</td>\n</tr>\n<tr>\n<td>bindlongtap</td>\n<td>eventhandle</td>\n<td>手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动</td>\n</tr>\n<tr>\n<td>binderror Grill</td>\n<td>eventhandle</td>\n<td>当发生错误时触发 error 事件</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</li>\n<li>\n<p>在 &lt;slider&gt; 组件上添加 bindchanging=&quot;sliderChanging&quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>bindchange: 完成一次拖曳后触发的事件</p>\n<p>bindchanging: 拖曳过程中触发的事件</p>\n</blockquote>\n</li>\n<li>\n<p>canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span>  ）</p>\n<blockquote>\n<p>type 指定 canvas 组件的类型，支持 2D 和 WebGL</p>\n</blockquote>\n</li>\n<li>\n<p>文件上传 API 使用的方法是 wx.uploadFile ()。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>微信小程序提供了文件上传 API，调用 wx.uploadFile () 方法即可使用文件上传 API。</p>\n</blockquote>\n</li>\n<li>\n<p>通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>通过调用 wx.chooseMedia () 方法即可使用选择媒体 API，该方法执行后，会提示用户拍摄图片或视频，或从手机相册中选择图片或视频。</p>\n</blockquote>\n</li>\n</ol>\n<p>三、选择题</p>\n<ol>\n<li>\n<p>下列选项中，用于滑动选择某一个值的组件是（<span class=\"spoiler\" title=\"你知道得太多了\">B</span> ）。</p>\n<p>A. view</p>\n<p><strong>B. slider</strong></p>\n<p>C. input</p>\n<p>D. audio</p>\n<blockquote>\n<p>slider 组件是微信小程序表单组件中的一种，用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。</p>\n</blockquote>\n</li>\n<li>\n<p>下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A. stop()</p>\n<p><strong>B. seek()</strong></p>\n<p>C. pause()</p>\n<p>D. play()</p>\n<blockquote>\n<p>A. stop ()  停止背景音频 *</p>\n<p>B. seek ()  跳转到指定位置</p>\n<p>C. pause () 暂停背景音频</p>\n<p>D. play ()  播放背景音频</p>\n</blockquote>\n</li>\n<li>\n<p>下列关于 canvas 组件的说法中，错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">A</span> ）。</p>\n<p><strong>A. CSS 动画对 canvas 组件无效</strong></p>\n<p>B. canvas-id 是 canvas 组件的唯一标识符</p>\n<p>C. canvas 组件用于自定义绘制图形</p>\n<p>D. 在同一个页面中，canvas-id 是唯一的</p>\n<blockquote>\n<p>CSS 动画和 &lt;canvas&gt; 元素的结合使用可以创建复杂的视觉效果。</p>\n<p>然而，&lt;canvas&gt; 是一个基于 JavaScript 的图形绘制工具，它不直接支持 CSS 动画。你需要使用 JavaScript 配合 &lt; canvas &gt; 来实现动画。</p>\n<p>canvas-id:canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性</p>\n<p>canvas 组件可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。</p>\n</blockquote>\n<p>下列关于 canvas 组件的说法中，错误的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>    ）。</p>\n<p>A. canvas 组件通过<canvas>标签定义</p>\n<p>B. id 是 canvas 组件的唯一标识符</p>\n<p>C. canvas 组件用于自定义绘制图形</p>\n<p>D. Canvas 组件的 type 属性用于指定 canvas 类型</p>\n</li>\n<li>\n<p>下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A. start () 方法表示开始录音</p>\n<p>B. pause () 方法表示暂停录音<br />\n C. resume () 方法表示继续录音</p>\n<p><strong>D. onError () 方法表示停止录音，点击开始录音后会从中断的地方接着继续录音</strong></p>\n<blockquote>\n<p>实际上，onError () 方法<strong>并不表示停止录音</strong>。它是用于处理录音过程中发生错误的回调函数，当录音发生错误时会触发该方法。与录音的开始、暂停、继续等操作无关。因此，D 选项中的描述是错误的。</p>\n</blockquote>\n</li>\n</ol>\n<p>四、简答题</p>\n<ol>\n<li>\n<p>简述 BackgroundAudioManager 实例的属性和方法。</p>\n<p>BackgroundAudioMauager 实例的常用属性包含 src（背景音频的数据源）、startTime（背景音频开始播放的位置）、title（背景音频标题）、duration（当前背景音频的长度）、currentTime（当前背景音频的播放位置）和 paused（当前是否暂停或停止）。</p>\n<p>BackgroundAudioMauager 实例的常用方法包含 play ()（播放背景音频）、pause ()（暂停背景音频）、seek ()（跳转到指定位置）和 stop ()（停止背景音频）。</p>\n</li>\n<li>\n<p>简述使用画布 API 进行绘图的基本步骤。</p>\n<p>若要使用画布 API，需要先获取 Canvas 实例，然后通过 Canvas 实例获取 RenderingContext（渲染上下文）实例，最后通过 RenderingContext 实例的属性和方法完成绘图操作。</p>\n</li>\n<li>\n<p>简述如何实现文件上传和文件下载。</p>\n<p>微信小程序提供了文件上传 API，通过调用 wx.uploadFile () 方法可以实现文件上传；同时也提供了文件下载 API，通过调用 wx.downloadFile () 方法即可使用文件下载 API。</p>\n</li>\n</ol>\n<h1 id=\"第五章-微信小程序常用api下\"><a class=\"anchor\" href=\"#第五章-微信小程序常用api下\">#</a> 第五章、微信小程序常用 API（下）</h1>\n<p>一、填空题</p>\n<ol>\n<li>\n<p>从本地缓存中异步获取指定 key 的内容使用 ____ 方法。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx.getStorage()</span></p>\n<table>\n<thead>\n<tr>\n<th><strong>异步方法</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>wx.setStorage()</td>\n<td>将数据存储在本地缓存指定的 key 中</td>\n</tr>\n<tr>\n<td>wx.getStorage()</td>\n<td>从本地缓存中异步获取指定 key 的内容</td>\n</tr>\n<tr>\n<td>wx.getStorageInfo()</td>\n<td>异步获取当前 storage 的相关信息</td>\n</tr>\n<tr>\n<td>wx.removeStorage()</td>\n<td>从本地缓存中移除指定 key</td>\n</tr>\n<tr>\n<td>wx.setStorageSync()</td>\n<td>wx.setStorage () 方法的同步版本</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</li>\n<li>\n<p>微信小程序通过 ____ 方法获取登录凭证 code。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx.login()</span></p>\n<p>微信小程序提供了登录 API，调用 wx.login () 方法获取用户登录凭证 code</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位毫秒</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</li>\n<li>\n<p>微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">session_key</span></p>\n<p>调用 login () 方法，获取到 login code 和 session，并且 session 中包含 session_key 和 openid，说明用户登录凭证 code 验证成功。</p>\n<p>session_key 是用户的会话密钥，需要存储在开发者服务器中。</p>\n</blockquote>\n</li>\n<li>\n<p>map 组件中地图视野发生变化时触发  ____  事件。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">bindregionchange</span></p>\n<p>map 组件可以为用户提供地图功能。map 组件可以在页面中显示地图，并且支持移动、缩放、添加标记点等功能。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>longitude</td>\n<td>number</td>\n<td>中心经度，为必填项</td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>number</td>\n<td>中心纬度，为必填项</td>\n</tr>\n<tr>\n<td>scale</td>\n<td>number</td>\n<td>缩放级别，取值范围为 3~20，默认值为 16</td>\n</tr>\n<tr>\n<td>markers</td>\n<td>Array.<marker></td>\n<td>标记点数组</td>\n</tr>\n<tr>\n<td>show-location</td>\n<td>boolean</td>\n<td>是否显示带有方向的当前定位点，默认值为 false</td>\n</tr>\n<tr>\n<td>bindregionchange</td>\n<td>eventhandle</td>\n<td>视野发生变化时触发的事件处理函数</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</li>\n<li>\n<p>在 Animation 实例的常用方法中，  ____  用于导出动画队列。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">export()</span></p>\n<p>export (): 导出动画队列。export () 方法每次调用后会清掉之前的动画操作</p>\n<p>scale: 缩放</p>\n<p>translate：平移变化</p>\n<p>skew：倾斜</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序通过   ____ 方法创建一个 WebSocket 连接。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">wx.connectWebSocket</span></p>\n<p>WebSocket API：允许服务器主动向微信小程序发送消息。</p>\n<p>通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">send()</span></p>\n<p>微信小程序通过  <code>socket.send()</code>  方法可以通过 WebSocket 发送数据。在微信小程序中建立 WebSocket 连接后，可以使用 <code>send</code>  函数来发送数据</p>\n</blockquote>\n</li>\n<li>\n<p>微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件。</p>\n<blockquote>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">onMessage()</span></p>\n<p>微信小程序通过  <code>wx.onSocketMessage</code>  方法监听 WebSocket 接收到服务器的消息事件。当 WebSocket 接收到服务器发送的数据时，这个回调函数会被触发。</p>\n</blockquote>\n</li>\n</ol>\n<p>二、判断题</p>\n<ol>\n<li>\n<p>在微信小程序中，调用 wx.login () 方法可以获取临时登录凭证 code。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>微信小程序提供了登录 API，调用 wx.login () 方法获取用户登录凭证 code</p>\n</blockquote>\n</li>\n<li>\n<p>同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ <span class=\"spoiler\" title=\"你知道得太多了\">√</span> ）</p>\n<blockquote>\n<p>openid 是用户在某个小程序中的唯一标识，而当开发者拥有多个小程序时，同一个微信用户在不同的小程序中的 openid 是不一样的。</p>\n</blockquote>\n</li>\n<li>\n<p>openid 是微信小程序的唯一标识。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>在单个小程序内，openid 确实是该用户的唯一标识，但如果跨小程序来看，就不能说 openid 是唯一的，因为它在不同小程序中会有所不同。</p>\n</blockquote>\n</li>\n<li>\n<p>使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（<span class=\"spoiler\" title=\"你知道得太多了\">√</span>  ）</p>\n<blockquote>\n<p>使用 <code>wx.setStorageSync()</code>  方法可以将数据同步存储在本地缓存指定的 key 中，这也是正确的。这个方法用于在本地同步地设置或获取数据，非常适合用来保存一些简单的配置信息或用户的登录态。</p>\n</blockquote>\n</li>\n<li>\n<p>animation.export () 方法每次调用后仍保留之前的动画操作。（ <span class=\"spoiler\" title=\"你知道得太多了\">×</span> ）</p>\n<blockquote>\n<p>微信小程序的 API 设计， <code>animation.export()</code>  方法每次调用后并不会保留之前的动画操作。</p>\n<p>相反， <code>export</code>  方法每次调用后会清掉之前的动画操作。</p>\n<p>这意味着如果你想要创建一个新的动画序列或者更新现有动画，你需要重新初始化和配置动画实例。这是为了确保动画数据的更新能够正确反映最新的动画设置，避免动画状态的混乱。</p>\n</blockquote>\n</li>\n</ol>\n<p>三、选择题</p>\n<ol>\n<li>\n<p>下列选项中，用于实现非标签页之间的跳转的方法是（<span class=\"spoiler\" title=\"你知道得太多了\">A</span> ）。</p>\n<p><strong>A.  wx.navigateTo()</strong></p>\n<p>B.   wx.navigate()</p>\n<p>C.   wx.navigatorTo()</p>\n<p>D.  wx.navigator()</p>\n<blockquote>\n<p><strong>用于实现非标签页之间的跳转的方法是 A. wx.navigateTo ()</strong>。在微信小程序中，页面跳转是一个常见的操作，它允许用户在应用的不同页面之间流畅地切换</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于 map 组件属性说法错误的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.  longitude 为中心经度</p>\n<p>B.   scale 为缩放级别，取值范围为 1~20</p>\n<p>C.   latitude 为中心纬度</p>\n<p>D.  markers 为标记点数组</p>\n<blockquote>\n<p>A.  longitude 为中心经度：这个陈述是正确的。在地图应用中，经度（longitude）确实表示地图中心的经度值。在微信小程序的 map 组件中，longitude 属性用于设置地图中心的经度，以确定地图初始显示的地理位置。</p>\n<p>B.scale 为缩放级别，取值范围为 1~20：这个陈述是错误的。在微信小程序的 map 组件中，scale 属性实际上是用来设置地图的缩放比例的，而不是缩放级别。而且，scale 的取值范围并不是 1 到 20，而是任意有效的正数。scale 的值越小，地图的显示范围越大，反之则显示范围越小。</p>\n<p>C.latitude 为中心纬度：这个陈述也是正确的。纬度（latitude）在地理坐标系统中用来表示一个地点的北南位置。在微信小程序的 map 组件中，latitude 属性用于设置地图中心的纬度值，与 longitude 一起确定地图的初始中心位置。</p>\n<p>D.markers 为标记点数组：这个陈述同样是正确的。markers 属性用于在地图上添加标记点。它是一个数组，每个元素代表一个标记点的信息，包括经纬度、名称等。通过 markers 属性，开发者可以在地图上标出特定的地理位置或兴趣点。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于 openid 的说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  openid 是用户的唯一标识</p>\n<p>B.   openid 不等同于微信用户 id</p>\n<p>C.   同一个微信用户在不同 AppID 的微信小程序中的 openid 是不同的</p>\n<p>D.  openid 是微信小程序的唯一标识</p>\n<blockquote>\n<p><strong>openid 的定义与作用</strong>：openid 是微信用户在单个小程序中的唯一标识符。这意味着每个用户在一个特定的小程序中都有一个独特的 openid，这个标识符用于在该小程序内部区分不同的用户。</p>\n<p><strong>openid 的获取方式</strong>：通常通过调用 <code>wx.login()</code>  方法获取一个临时登录凭证，然后再通过服务器请求微信接口 <code>auth.code2Session</code>  来换取 openid。</p>\n<p><strong>openid 的范围限制</strong>：openid 仅在获得它的小程序中有效。如果用户同时使用了开发者的多个小程序，那么在不同的小程序中，用户的 openid 是不同的。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于 marker 对象的属性说法错误的是（<span class=\"spoiler\" title=\"你知道得太多了\">D</span> ）。</p>\n<p>A.  title 标注点名称</p>\n<p>B.   zIndex 表示显示层级</p>\n<p>C.   alpha 表示标注的透明度</p>\n<p>D.  userInfo 表示用户信息对象</p>\n<blockquote>\n<p>D.userInfo 不是 marker 对象的属性，而是部分地图 API 中提供的一种用于保存用户信息的参数，可以通过自定义属性来实现类似功能。</p>\n</blockquote>\n</li>\n<li>\n<p>下列选项中，关于数据缓存说法错误的是（ <span class=\"spoiler\" title=\"你知道得太多了\">B</span>）。</p>\n<p>A.  wx.getStorage () 方法用于从本地缓存中异步获取指定 key 内容</p>\n<p>B.   wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key</p>\n<p>C.   wx.setStorage () 方法用于将数据异步存储在本地缓存指定的 key</p>\n<p>D.  在实现数据缓存的方法中，方法名以 Sync 结尾的都是同步方法</p>\n<blockquote>\n<p>B 选项说 “wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key”，这是不正确的。</p>\n<p>实际上，wx.removeStorageSync () 方法是以同步的方式从本地缓存中移除指定 key 的内容。方法名中的 “Sync” 后缀表示这是一个同步方法，而不是异步方法。</p>\n<p>所以，B 选项的描述是错误的。</p>\n</blockquote>\n</li>\n</ol>\n<p>四、简答题</p>\n<ol>\n<li>\n<p>简述如何获取 Animation 实例。</p>\n<p>通过 wx.createAnimation () 方法可以获取 Animation 实例。</p>\n</li>\n<li>\n<p>简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。</p>\n<ol>\n<li>onHide () 和 onPageNotFound () 的作用。</li>\n</ol>\n<p>（1）onLaunch ()：监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次。</p>\n<p>（2）onShow ()：监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发。</p>\n<p>（3）onError ()：错误监听函数，微信小程序脚本错误或者 API 调用报错时触发。</p>\n<p>（4）onHide ()：监听微信小程序切后台，微信小程序从前台进入后台时触发。</p>\n<p>（5）onPageNotFound ()：页面不存在监听函数，微信小程序要打开的页面不存在时触发。</p>\n</li>\n<li>\n<p>简述如何创建 WebSocket 连接。</p>\n<p>使用 wx.connectSocket () 方法创建 WebSocket 连接。</p>\n</li>\n</ol>\n<h1 id=\"编程题-重点范围\"><a class=\"anchor\" href=\"#编程题-重点范围\">#</a> 编程题 重点范围</h1>\n<blockquote>\n<p>程序题 6 题 * 4=24 分</p>\n</blockquote>\n<h2 id=\"1组件的概念及常用组件imagevideoview等组件\"><a class=\"anchor\" href=\"#1组件的概念及常用组件imagevideoview等组件\">#</a> 1. 组件的概念及常用组件 (image，video，view 等组件)</h2>\n<p>例题 组件的概念及常用组件 --view、image、text、radio、button</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618220146963.png\" alt=\"\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--index.wxml--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 配置状态栏 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navigation-bar</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>我的主页<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">back</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">background</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#bbf<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navigation-bar</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">&lt;!-- 头像区域 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>container<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/avatar.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>aspectFit<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">&lt;!-- 详细信息区域 --></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>姓名：小丽<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年龄：20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>性别：女<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>特长：绘画、书法<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>爱好：编程<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span> 16 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">&lt;!-- 配置页脚 --></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">hover-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>bgc<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">hover-start-time</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1000<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">hover-stay-time</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>想联系我吗？<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>发邮箱给我dd@qq.com</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">// WXSS配置</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.top</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3A4861<span class=\"token punctuation\">;</span> 3\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 30rpx 0<span class=\"token punctuation\">;</span> 5 <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token selector\">.top .user-img</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 252rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.top image</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 252rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 252rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 6rpx solid #777F92<span class=\"token punctuation\">;</span> 15 </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token selector\">.menu .item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 96rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 96rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 2rpx solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 40rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 34rpx<span class=\"token punctuation\">;</span> 7 </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token selector\">.footer</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 50rpx 5rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token selector\">.footer button</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>5rpx solid #aaa<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>#bbf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>15rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token selector\">.bgc</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>#cdd<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例题 组件的概念及常用组件 -- video</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618220310260.png\" alt=\"image-20240618220310260\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>pages/life/life.wxml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;view class=\"vd\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      &lt;view classs=\"item\"</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         &lt;video src=\"http://127.0.0.1:3000/01.mp4poster=\"http://127.0.0.1:3000/st2.pngcontrols=\"true\" loop=\"true\" /></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">&lt;!-- autoplay=\"true--></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.vd</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>2rpx solid #4ed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80vw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80vh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token selector\">.vd .item</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span>2rpx solid #4ed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60vw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 60vw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token selector\">.item video</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span>80%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"2页面路径的配置方法能够运用该方法对页面进行管理\"><a class=\"anchor\" href=\"#2页面路径的配置方法能够运用该方法对页面进行管理\">#</a> 2. 页面路径的配置方法，能够运用该方法对页面进行管理</h2>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618194400.png%7D\" alt=\"image-20240618194343394\" /></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pages\"<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token string\">\"pages/index/index\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token string\">\"pages/info/info\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token string\">\"pages/life/life\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token property\">\"window\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">\"navigationBarTextstyle\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token property\">\"backgroundTextstyle\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"light\"</span>. </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token property\">\"navigationBarBackgroundColor\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"app.json\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token property\">\"tabBar\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token property\">\"color\"</span><span class=\"token operator\">:</span>\"#<span class=\"token number\">000</span>”，</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token property\">\"selectedColor\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">\"borderStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"#eee\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"pages/index/index\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span>\"首页”，</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"images/invite.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span>\"images/invite.png'</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span>.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"pages/info/info\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span>\"个人信息” <span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"images/guest.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"3掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作\"><a class=\"anchor\" href=\"#3掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作\">#</a> <mark>*3. 掌握 swiper 和 swiper-item 组件的使用方法，能灵活运用 swiper 和 swiper 组件完成轮播图的制作</mark></h2>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618194759.png%7D\" alt=\"image-20240618194446919\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>50px<span class=\"token punctuation\">;</span> <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">,</span> <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span>30px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>本地生活<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 轮播图区域的页面结构 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper</span> <span class=\"token attr-name\">indicator-dots</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">interval</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/swiper00.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/swiper01.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/swiper02.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">&lt;!-- 九宫格区域 --></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grids<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/shi.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>美食<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/xiu.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>装修<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/yu.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>洗浴<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/che.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>汽车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>       </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/chang.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>唱歌<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/fang.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>住宿<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/xue.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>学习<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/gong.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>工作<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/hun.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>结婚<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span> 38 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">swiper</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 350rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token selector\">swiper image</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* 九宫格 */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.grids</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span>760rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token selector\">.grids .item image</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 70rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 70rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token selector\">.grids .item text</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 28rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20rpx<span class=\"token punctuation\">;</span> 9 </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"4掌握导航栏的配置方法\"><a class=\"anchor\" href=\"#4掌握导航栏的配置方法\">#</a> <mark>*4. 掌握导航栏的配置方法</mark></h2>\n<p>在页面配置文件中对导航栏进行配置</p>\n<p>以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"微信小程序\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在全局配置文件中对导航栏进行配置</p>\n<p>在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span>  <span class=\"token string\">\"微信小程序\"</span></pre></td></tr></table></figure><p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173744741.png\" alt=\"image-20240608173744741\" /></p>\n<h2 id=\"5掌握标签栏的配置方法能够完成页面标签栏的配置\"><a class=\"anchor\" href=\"#5掌握标签栏的配置方法能够完成页面标签栏的配置\">#</a> 5. 掌握标签栏的配置方法，能够完成页面标签栏的配置</h2>\n<p>例题，页面路径的配置方法 / 标签栏的配置方法 / 导航栏的配置方法<br />\n 2.3 知识点</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618194929281.png\" alt=\"image-20240618194929281\" /></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"tabBar\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ccc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">\"selectedColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ff4c91\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token property\">\"borderStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/index/index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/invite.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/invite.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"邀请函\"</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/picture/picture\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/marry.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/marry.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"照片\"</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/video/video\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/video.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/video.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"美好时光\"</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/guest/guest\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/guest.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/guest.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"宾客信息\"</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    navigationBarTitleText<span class=\"token string\">\": \"</span>邀请函\"</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"6掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作\"><a class=\"anchor\" href=\"#6掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作\">#</a> 6. 掌握表单组件的使用方法，能够灵活运用常用的表单组件完成页面的制作</h2>\n<p>form 表单组件</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618221849950.png\" alt=\"image-20240618221849950\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">bindsubmit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>1 输入文本<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>2 输入数字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>数字键盘<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>3 输入身份证号码<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idcard<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token punctuation\">></span></span>4 带小数点的数字键盘<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>digit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">></span></span>6 密码<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>普通按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mini<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>mini普通按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>主色调按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>警告按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token attr-name\">&lt;radio</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>单个单选按钮</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>互斥按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-group</span> <span class=\"token attr-name\">bindchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>选择1</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>选择2</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-group</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"7掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用\"><a class=\"anchor\" href=\"#7掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用\">#</a> <mark>*7. 掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用</mark></h2>\n<p>例题，事件绑定 /this，3.1 知识点</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618194956822.png\" alt=\"image-20240618194956822\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮1-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮1-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token attr-name\">&lt;button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮2-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮2-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changetext<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewtap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>out<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>out </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>inner<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单独view1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>elif</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单独view2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>else</span><span class=\"token punctuation\">></span></span>单独view3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function-variable function\">viewtap</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">changetext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span>'新标题</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>例题，数据绑定（插值语法），3.1 知识点</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195142811.png\" alt=\"image-20240618195142811\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">hid</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token literal-property property\">num1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 保存第 1 个数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function-variable function\">onLoad</span> <span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮1-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮1-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token attr-name\">&lt;button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮2-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮2-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changetext<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195204476.png\" alt=\"image-20240618195204476\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token string\">'hello'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">hid</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token literal-property property\">num1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 保存第 1 个数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 报错 //console.log (this.msg);</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onPullDownRefresh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span>'hello world</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//num1:42 无效</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h2 id=\"8掌握data-自定义属性能够完成data-自定义数据的设置与获取\"><a class=\"anchor\" href=\"#8掌握data-自定义属性能够完成data-自定义数据的设置与获取\">#</a> 8. 掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取</h2>\n<p>例题，自定义属性 data- /setData，3.2 知识点</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195235946.png\" alt=\"image-20240618195235946\" /></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var hello = require('../../examplejs/hello')</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Page(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    data<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        name<span class=\"token operator\">:</span>'初始值'，</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        age<span class=\"token operator\">:</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    onLoad<span class=\"token operator\">:</span>function()<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console.log(hello.msg);</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    demo(e)<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        this.setData(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            name<span class=\"token operator\">:</span>e.target.dataset.name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            age<span class=\"token operator\">:</span>e.target.dataset.infoAge</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>);</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navigation-bar</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Weixin<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">back</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">background</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#FFF<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navigation-bar</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scroll-view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scrollarea<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scroll-y</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token attr-name\">Weixin</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token attr-name\">&lt;view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>小程序<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token attr-name\">data-info-age</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单击更新数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scroll-view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>例题，自定义属性 data- /setData，3.2 案例</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195305327.png\" alt=\"image-20240618195305327\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">numBtn</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 点击数字按钮，获取对应的数字，将其值赋给 num</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>val</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>resultFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 如果当前使用 = 计算了，则重置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'numbtn1'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numChangeFlag<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>targetnum<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numl<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numChangeFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numChangeFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>execFlag<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 代表已输入第 2 个数字</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span>'<span class=\"token number\">0</span>’</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 将 num 设为 0，避免数字进行拼接</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>targetnum <span class=\"token operator\">=</span><span class=\"token string\">'num2'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 将 target 切换到第 2 个数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"9掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件\"><a class=\"anchor\" href=\"#9掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件\">#</a> <mark>*9. 掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件</mark></h2>\n<p>例题，条件渲染，3.1 知识点</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195110504.png\" alt=\"image-20240618195110504\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单独view1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>elif</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单独view2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>else</span><span class=\"token punctuation\">></span></span>单独view3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>第1个<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>第2个<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>block</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>文本hidden<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">flag</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">hid</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token literal-property property\">num1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span>，<span class=\"token comment\">// 保存第 1 个数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token comment\">//console.log (this.msg);   // 报错</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onPullDownRefresh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token string\">'hello world'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">//num1:42 无效</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"10掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中\"><a class=\"anchor\" href=\"#10掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中\">#</a> <mark>*10. 掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中</mark></h2>\n<p>例题，列表渲染 / 网络请求 / 信息框，3.3 知识点 / 案例</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195549652.png\" alt=\"image-20240618195549652\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\"><span class=\"token namespace\">wx:</span></span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*this<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>                </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"></span> <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>viel</span><span class=\"token punctuation\">></span></span>-----------<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"></span> -- <span class=\"token comment\"></span> -- <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>viel</span><span class=\"token punctuation\">></span></span>-----------<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token attr-name\">wx</span> <span class=\"token attr-name\">:</span> <span class=\"token attr-name\">for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"></span>--<span class=\"token comment\"></span>--<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>--------<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"></span>,<span class=\"token comment\"></span>,<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>showLoading--持续1秒<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sload2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>showLoading--持续3秒<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>'a</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span><span class=\"token string\">'梅'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span><span class=\"token string\">'兰'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span><span class=\"token string\">'竹'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>             <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span><span class=\"token string\">'菊'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token literal-property property\">contract</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'页面加载'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function-variable function\">getContract</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>\"http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">3000</span><span class=\"token operator\">/</span>data2'</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span><span class=\"token string\">'GET'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195348753.png\" alt=\"image-20240618195348753\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>showLoading--持续1秒<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sload2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>showLoading--持续3秒<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>tap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stoast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>wx.showToast<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span><span class=\"token string\">'加载框'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span><span class=\"token number\">1000</span> <span class=\"token comment\">// 默认 1500 毫秒</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sload2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span><span class=\"token string\">'加载框'</span>                   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        wx<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>，<span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">stoast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span><span class=\"token string\">'提示框'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span><span class=\"token number\">3000</span>，<span class=\"token comment\">// 默认 1500 毫秒</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">icon</span><span class=\"token operator\">:</span><span class=\"token string\">\"error\"</span><span class=\"token comment\">// 默认为 successicon:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>例题，3.3 美食列表，上划 / 下拉</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618222213994.png\" alt=\"image-20240618222213994\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 需要重置的数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Tthis<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">shoplist</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listData<span class=\"token punctuation\">.</span>page <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listData<span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token comment\">// 重新发起数据请求</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getshopList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        wx<span class=\"token punctuation\">.</span><span class=\"token function\">stopPullDownRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>onLoad()<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console.log('页面加载，开始获取数据')</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    this.getshopList()</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 上拉触底</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>onReachBottom<span class=\"token operator\">:</span>function()<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console.log('触发了上拉触底的事件')</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>if(this.listData.page * this.listData.pagesize >= this.listData.total)<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 没有下一页的数据了</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    return wx.showToast(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        title<span class=\"token operator\">:</span>\"数据加载完毕!</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        icon<span class=\"token operator\">:</span>'none</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    if(this.isLoading)<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        return</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"11掌握登录api能够运用wxlogin方法实现用户登录\"><a class=\"anchor\" href=\"#11掌握登录api能够运用wxlogin方法实现用户登录\">#</a> 11. 掌握登录 API, 能够运用 wx.login 方法实现用户登录</h2>\n<p>例题，登录 API, 能够运用 wx.login 方法实现用户登录 5.1</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618222306488.png\" alt=\"image-20240618222306488\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">login</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login code:'</span><span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>                               <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span><span class=\"token string\">'http://127.0.0.1:3000/login'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span><span class=\"token string\">'post'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token literal-property property\">data</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> res<span class=\"token punctuation\">.</span>code</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>'token<span class=\"token operator\">:</span><span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>           <span class=\"token comment\">// 将 token 保存为公共 数据，用于在所有页面中共享 token</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>globalData<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token comment\">// 将 token 保存到数据缓存</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        wx<span class=\"token punctuation\">.</span><span class=\"token function\">setStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span>'token</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                       <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"12掌握头像填写功能能够实现头像选择和昵称填写\"><a class=\"anchor\" href=\"#12掌握头像填写功能能够实现头像选择和昵称填写\">#</a> 12. 掌握头像填写功能，能够实现头像选择和昵称填写</h2>\n<p>例题，头像填写功能，能够实现头像选择和昵称填写 5.1</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195446899.png\" alt=\"image-20240618195446899\" /></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar-wrapper<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chooseAvatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindchooseavatar</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onChooseAvatar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>image</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;input type=\"nickname\" class='nickname\" placeholder=\"请输入昵称\"/></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                              </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>credit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>获取用户的积分<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>当前用户积分:<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>例题，用 wx.navigateTo () 实现非标签页跳转</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618195738.png%7D\" alt=\"\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">navigateTo</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx <span class=\"token punctuation\">.</span><span class=\"token function\">navigateTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>\"<span class=\"token operator\">/</span>pages<span class=\"token operator\">/</span>target<span class=\"token operator\">/</span>target<span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token number\">1</span>'</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳转成功'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳转失败'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function-variable function\">complete</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳转完成'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>navigateTo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>路由<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"简答题-重点范围\"><a class=\"anchor\" href=\"#简答题-重点范围\">#</a> 简答题 重点范围</h1>\n<blockquote>\n<p>简答题 2 题 * 15=30 分</p>\n<p>预测：</p>\n<ol>\n<li>简述使用画布 API 进行绘图的基本步骤。</li>\n<li>简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。</li>\n</ol>\n<p>分点答题，字迹清晰，逻辑清楚！</p>\n</blockquote>\n<ol>\n<li>\n<p>简述 BackgroundAudioManager 实例的属性和方法。</p>\n<p>①BackgroundAudioMauager 实例的常用属性包含 src（背景音频的数据源）、startTime（背景音频开始播放的位置）、title（背景音频标题）、duration（当前背景音频的长度）、currentTime（当前背景音频的播放位置）和 paused（当前是否暂停或停止）。</p>\n<p>②BackgroundAudioMauager 实例的常用方法包含 play ()（播放背景音频）、pause ()（暂停背景音频）、seek ()（跳转到指定位置）和 stop ()（停止背景音频）。</p>\n</li>\n<li>\n<p>简述使用画布 API 进行绘图的基本步骤。</p>\n<p>①获取 Canvas 实例</p>\n<p>②通过 Canvas 实例获取 RenderingContext（渲染上下文）实例</p>\n<p>③最后通过 RenderingContext 实例的属性和方法完成绘图操作。</p>\n</li>\n<li>\n<p>简述如何实现文件上传和文件下载。</p>\n<p>①微信小程序提供了文件上传 API，通过调用 wx.uploadFile () 方法可以实现文件上传；</p>\n<p>②同时也提供了文件下载 API，通过调用 wx.downloadFile () 方法即可使用文件下载 API。</p>\n</li>\n<li>\n<p>简述如何获取 Animation 实例。</p>\n<p>通过 wx.createAnimation () 方法可以获取 Animation 实例。</p>\n</li>\n<li>\n<p>简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。</p>\n<ol>\n<li>onHide () 和 onPageNotFound () 的作用。</li>\n</ol>\n<p>（1）onLaunch ()：监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次。</p>\n<p>（2）onShow ()：监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发。</p>\n<p>（3）onError ()：错误监听函数，微信小程序脚本错误或者 API 调用报错时触发。</p>\n<p>（4）onHide ()：监听微信小程序切后台，微信小程序从前台进入后台时触发。</p>\n<p>（5）onPageNotFound ()：页面不存在监听函数，微信小程序要打开的页面不存在时触发。</p>\n</li>\n<li>\n<p>简述如何创建 WebSocket 连接。</p>\n<p>使用 wx.connectSocket () 方法创建 WebSocket 连接。</p>\n</li>\n</ol>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WX_review/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WX_review/",
            "title": "微信小程序内容复习",
            "date_published": "2024-06-19T08:22:51.000Z",
            "content_html": "<p>应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习。</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"题型\"><a class=\"anchor\" href=\"#题型\">#</a> 题型：</h1>\n<p>1. 单项选择题 8 题 * 2=16 分</p>\n<p>2. 填空题 7 题 * 2=14 分</p>\n<p>3. 判断题 8 题 * 2=16 分</p>\n<p>4. 程序题 6 题 * 4=24 分</p>\n<p>5. 简答题 2 题 * 15=30 分</p>\n<h1 id=\"第一章-微信小程序入门\"><a class=\"anchor\" href=\"#第一章-微信小程序入门\">#</a> 第一章 微信小程序入门</h1>\n<h2 id=\"1微信小程序的概念-特点-宿主环境\"><a class=\"anchor\" href=\"#1微信小程序的概念-特点-宿主环境\">#</a> 1. 微信小程序的概念、特点、宿主环境</h2>\n<p>概念：微信小程序是一种全新的连接用户与服务的应用，它可以在微信内被便捷地获取和传播，同时具有良好的用户体验。微信小程序是运行在<span class=\"red\">微信</span>中的应用，是一种不需要下载即可使用的应用，用户通过微信扫一扫或者搜一搜即可打开，且每个微信小程序的体积<span class=\"red\">非常小</span>。</p>\n<p>特点：无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强</p>\n<ul>\n<li>无须安装，直接使用，不占用存储空间</li>\n<li>用完即走，无须卸载</li>\n<li>名称唯一：不能使用相同名称</li>\n<li>入口丰富</li>\n<li>传播能力强：微信搜索、好友分享、小程序识别码</li>\n</ul>\n<p>宿主环境</p>\n<p>宿主环境概念：宿主环境（Host Environment）是指程序运行所依赖的环境。</p>\n<p>微信小程序可以跨平台，这是因为微信小程序并不是一个直接安装在 Android 系统或 iOS 系统中的应用，而是运行在<span class=\"red\">微信客户端上的应用</span>。微信客户端给微信小程序提供的环境就是微信小程序的宿主环境。</p>\n<h2 id=\"2如何获取微信小程序appidappid的唯一性\"><a class=\"anchor\" href=\"#2如何获取微信小程序appidappid的唯一性\">#</a> 2. 如何获取微信小程序 AppID，AppID 的唯一性</h2>\n<ol>\n<li>登录微信小程序管理后台</li>\n<li>在左侧边栏中选择 “开发管理”</li>\n<li>选择 “开发设置”</li>\n<li>查看并复制 AppID</li>\n</ol>\n<blockquote>\n<p>在微信小程序中，AppID 又称为小程序 ID，是每个小程序的<span class=\"red\">唯一</span>标识，每个小程序账号只有一个 AppID，因此每个账号只能发布一个小程序，如果要发布多个小程序，需要注册多个小程序账号。</p>\n</blockquote>\n<h2 id=\"3熟悉微信小程序的项目结构主要配置文件的作用\"><a class=\"anchor\" href=\"#3熟悉微信小程序的项目结构主要配置文件的作用\">#</a> 3. 熟悉微信小程序的项目结构，主要配置文件的作用</h2>\n<p>项目结构：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pages</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.eslintrc.js</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>app.js</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#123;&#125;app.json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app.wxss</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;&#125;project.config.json</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#123;&#125; project.private.config.json</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#123;&#125;sitemap.json</pre></td></tr></table></figure><ul>\n<li>\n<p>- pages：用于存放微信小程序的所有页面。</p>\n</li>\n<li>\n<p>- eslintrc.js：用于格式化代码，使代码风格保持一致。</p>\n</li>\n<li>\n<p>- app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。</p>\n</li>\n<li>\n<p>- app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。</p>\n</li>\n<li>\n<p>- app.wxss：微信小程序的全局样式文件，文件可以为空。</p>\n</li>\n<li>\n<p>- project.config.json：在微信开发者工具上做的任何配置都会写入这个文件中，当重新安装工具或者更换计算机工作时，只要栽入同一个项目的代码包，微信开发者工具会根据该文件自动恢复成开发微信小程序时的个性化配置。</p>\n</li>\n<li>\n<p>- project.private.config.json：用于保存微信开发者工具的私人配置，配置的优先级高于 project.config.json。</p>\n</li>\n<li>\n<p>- sitemap.json：用于配置微信小程序及其页面是否允许被微信索引，如果没有该文件， 则默认为所有页面都允许被索引。</p>\n</li>\n</ul>\n<h2 id=\"4微信小程序的页面组成能够解释wmxlwxssjs和json文件的作用\"><a class=\"anchor\" href=\"#4微信小程序的页面组成能够解释wmxlwxssjs和json文件的作用\">#</a> 4. 微信小程序的页面组成，能够解释 WMXL,WXSS,JS 和 JSON 文件的作用</h2>\n<p>一个微信小程序是由一个或多个页面组成的，这些页面被存放在<span class=\"red\"> pages 目录</span>中。</p>\n<p>下面以 pages 目录下的 index 页面为例展示其组成部分，index 页面的组成部分</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pages</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> └── index</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      ├── index.js</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      ├── index.json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      ├── index.wxml</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      └── index.wxss</pre></td></tr></table></figure><ul>\n<li>\n<p>- JS：类似网页制作中的 JavaScript 语言，用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。</p>\n</li>\n<li>\n<p>- JSON（JavaScript Object Notation，JavaScript 对象符号）：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。</p>\n</li>\n<li>\n<p>- WXML（WeiXin Markup Language，微信标记语言）：类似于网页制作中的 HTML 语言，用于构建页面结构，文件扩展名为.wxml。</p>\n</li>\n<li>\n<p>- WXSS（WeiXin Style Sheets，微信样式表）：类似于网页制作中的 CSS 语言，用于设置页面样式，文件扩展名为.wxss。</p>\n</li>\n</ul>\n<h2 id=\"5了解微信小程序的通信模型教材13页图1-23\"><a class=\"anchor\" href=\"#5了解微信小程序的通信模型教材13页图1-23\">#</a> 5. 了解微信小程序的通信模型，教材 13 页图 1-23</h2>\n<p>通信模型分为两个部分</p>\n<ol>\n<li>渲染层与逻辑层之间的通信，即将逻辑层的数据渲染到页面中</li>\n<li>逻辑层和第三方服务器之间的通信，即通过向第三方服务器发送请求，得到需要的数据</li>\n</ol>\n<p>Native 表示微信客户端的底层，渲染层与逻辑层之间的通信和逻辑层与第三方服务器之间的通信都由微信客户端的底层进行转发。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240608164251.png%7D\" alt=\"image-20240603145720170\" /></p>\n<h2 id=\"6熟悉微信开发者工具的主界面熟悉常用的快捷键按钮\"><a class=\"anchor\" href=\"#6熟悉微信开发者工具的主界面熟悉常用的快捷键按钮\">#</a> 6. 熟悉微信开发者工具的主界面，熟悉常用的快捷键按钮</h2>\n<p>快捷键 —— 编辑相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th><strong>分类</strong></th>\n<th><strong>快捷键</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>项目</td>\n<td>Shift+Ctrl+N</td>\n<td>新建项目</td>\n</tr>\n<tr>\n<td>项目</td>\n<td>Shift+Ctrl+W</td>\n<td>关闭当前项目</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+N</td>\n<td>新建文件</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+S</td>\n<td>保存</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+W</td>\n<td>关闭当前文件</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Shift+Ctrl+S</td>\n<td>全部保存</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+[</td>\n<td>代码左缩进</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+]</td>\n<td>代码右缩进</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Alt+Shift+F</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+Shift+[</td>\n<td>折叠代码块</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctr1+Shift+]</td>\n<td>展开代码块</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt + ↑</td>\n<td>代码向上移动一行</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt + ↓</td>\n<td>代码向下移动一行</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt+Shift + ↑</td>\n<td>复制并向上粘贴</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt+Shift + ↓</td>\n<td>复制并向下粘贴</td>\n</tr>\n<tr>\n<td>文件跳转</td>\n<td>Ctrl+E</td>\n<td>跳转到最近文件</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Ctrl+End</td>\n<td>移动到文件末尾</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Ctrl+Home</td>\n<td>移动到文件开头</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Shift+End</td>\n<td>移动到行尾</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Shift+Home</td>\n<td>移动到行首</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+F</td>\n<td>在当前文件中查找</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+H</td>\n<td>在当前文件中替换</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+Shift+F</td>\n<td>全局查找</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+Shift+H</td>\n<td>全局替换</td>\n</tr>\n</tbody>\n</table>\n<p>快捷键 —— 工具相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th><strong>快捷键</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+B</td>\n<td>编译项目</td>\n</tr>\n<tr>\n<td>Ctrl+R</td>\n<td>焦点在编辑器外，编译项目</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+P</td>\n<td>预览代码</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+U</td>\n<td>上传代码</td>\n</tr>\n</tbody>\n</table>\n<p>快捷键 —— 界面相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th><strong>快捷键</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+Shift+T</td>\n<td>显示或隐藏工具栏</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+D</td>\n<td>显示或隐藏模拟器</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+E</td>\n<td>显示或隐藏编辑器</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+M</td>\n<td>显示或隐藏目录树</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+I</td>\n<td>显示或隐藏调试器</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note info\">\n<p>快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">S</span>   表示<span class=\"kbd\">保存</span></p>\n</div>\n<h2 id=\"7熟悉微信小程序的上线发布流程\"><a class=\"anchor\" href=\"#7熟悉微信小程序的上线发布流程\">#</a> 7. 熟悉微信小程序的上线发布流程</h2>\n<p>一个微信小程序从开发完到发布上线，一般分为以下 3 个步骤：</p>\n<ol>\n<li>\n<p>上传代码</p>\n<p>打开微信小程序，在微信开发者工具的工具栏中单击 “上传” 按钮，页面中弹出提示框，根据提示填写相应的信息，然后单击 “上传” 按钮，即可上传代码。</p>\n<p>登录微信小程序管理后台，在左侧边栏中单击 “版本管理”，即可进入版本管理页面，查看开发版本，即可查看刚才提交上传的版本。</p>\n</li>\n<li>\n<p>提交审核</p>\n<p>单击 “提交审核” 按钮，根据页面提示信息进行操作，即可提交已上传的版本并进行审核。</p>\n<p>提交审核后在审核版本中会出现正在审核的版本，审核需要一定时间，PPT 中不再演示。</p>\n</li>\n<li>\n<p>发布</p>\n<p>审核通过后审核版本中将显示 “发布” 按钮，单击该按钮，即可完成微信小程序的发布。</p>\n</li>\n</ol>\n<h2 id=\"8习题\"><a class=\"anchor\" href=\"#8习题\">#</a> 8. 习题</h2>\n<blockquote>\n<p>主要考察为选择、判断、填空</p>\n</blockquote>\n<p>一、 填空题</p>\n<ol>\n<li>微信小程序是运行在______之上的应用。</li>\n<li>微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。</li>\n<li>微信小程序项目中的______文件是全局配置文件。</li>\n<li>微信开发者工具中用于保存文件的快捷键是______。</li>\n<li>在微信小程序中，每个页面由 4 个文件组成，分别是______文件、______文件、______文件和 JS 文件</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（ ）</li>\n<li>微信小程序项目中 app.js 文件是全局样式文件。（ ）</li>\n<li>通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ ）</li>\n<li>微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。（ ）</li>\n<li>项目成员表示参与微信小程序开发、运行的成员。（ ）</li>\n</ol>\n<p>三、 选择题</p>\n<ol>\n<li>\n<p>下列选项中，关于微信小程序说法错误的是（ ）。</p>\n<p>A. 微信小程序是运行在微信之中应用</p>\n<p>B. 微信小程序的体积非常小</p>\n<p>C. 微信小程序不可以跨平台</p>\n<p>D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序</p>\n</li>\n<li>\n<p>下列选项中，不属于微信小程序特点的是（ ）。</p>\n<p>A. 无须安装          B. 无须卸载</p>\n<p>C. 体积大           D. 入口丰富</p>\n</li>\n<li>\n<p>下列选项中，用于在微信开发者工具中输出调试信息的面板是（ ）。</p>\n<p>A.Wxml            B.Console</p>\n<p>C.Sources           D.Network</p>\n</li>\n<li>\n<p>下列选项中，关于微信小程序项目目录结构说法错误的是（ ）。</p>\n<p>A.pages 目录用于存放所有微信小程序的页面</p>\n<p>B.app.wxss 文件定义了微信小程序项目的全局样式</p>\n<p>C.sitemap.json 文件是微信小程序项目的全局配置文件</p>\n<p>D.app.js 文件是微信小程序项目的入口文件</p>\n</li>\n<li>\n<p>下列选项中，关于微信开发者工具说法错误的是（ ）。</p>\n<p>A. 工具栏 “预览” 按钮用于在微信中进行预览</p>\n<p>B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等</p>\n<p>C. 模拟器可以模拟小程序在微信客户端的运行效果</p>\n<p>D. 编辑器中只能打开一个文件</p>\n</li>\n</ol>\n<p>四、 简答题</p>\n<ol>\n<li>请简述微信小程序的特点。</li>\n<li>请简述微信小程序项目的创建过程。</li>\n</ol>\n<h1 id=\"第二章-微信小程序的页面制作\"><a class=\"anchor\" href=\"#第二章-微信小程序的页面制作\">#</a> 第二章 微信小程序的页面制作</h1>\n<h2 id=\"1了解wxmlwxss的概念及主要特点\"><a class=\"anchor\" href=\"#1了解wxmlwxss的概念及主要特点\">#</a> 1. 了解 WXML,WXSS 的概念及主要特点</h2>\n<p>WXML 概念：在制作微信小程序页面时，<span class=\"red\">页面的结构可以用 WXML 来实现</span>。WXML 是微信团队为微信小程序开发而设计的一套语言，可以结合微信小程序中的各种组件构建页面结构。</p>\n<p>WXML 与 HTML 的区别:</p>\n<ol>\n<li>\n<p>HTML 和 WXML 使用的标签不同。</p>\n<p>例如，HTML 经常使用 &lt;div&gt; 标签搭建页面结构，而 WXML 则使用 &lt; view &gt; 标签搭建页面结构；HTML 经常使用 &lt; span &gt; 标签定义行内文本 ，而 WXML 则使用 &lt; text &gt; 标签定义行内文本 。</p>\n</li>\n<li>\n<p>WXML 提供了和 Vue.js 中模板语法类似的模板语法</p>\n<p>例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。</p>\n</li>\n<li>\n<p>HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。</p>\n</li>\n<li>\n<p>WXML 中的单标签必须在结尾 “&gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&gt;” 前面的 “/”。</p>\n</li>\n<li>\n<p>WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。</p>\n</li>\n</ol>\n<p>WXSS 概念：在微信小程序的页面制作中，使用 WXML 搭建页面结构以后，也需要设置样式来美化页面。微信小程序通过<span class=\"red\"> WXSS 可以美化页面样式</span>。</p>\n<p>WXSS 与 CSS 的区别：</p>\n<ol>\n<li>不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。</li>\n<li>在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。</li>\n<li>在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url ('/images/1.png'); ” 是无效的，而 CSS 可以使用本地图片来设置背景图片。</li>\n</ol>\n<h2 id=\"2组件的概念及常用组件\"><a class=\"anchor\" href=\"#2组件的概念及常用组件\">#</a> 2. 组件的概念及常用组件</h2>\n<p>组件的概念：微信小程序页面和普通网页都是通过标签来定义页面结构的，但是在微信小程序开发中，更习惯将<span class=\"red\">这些标签称为组件，这些组件自带微信风格的 UI 样式和特定功能效果</span>。</p>\n<table>\n<thead>\n<tr>\n<th><strong>组件</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>view</td>\n<td>视图容器</td>\n</tr>\n<tr>\n<td>video</td>\n<td>视频</td>\n</tr>\n<tr>\n<td>text</td>\n<td>文本</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>复选框</td>\n</tr>\n<tr>\n<td>button</td>\n<td>按钮</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>单选按钮</td>\n</tr>\n<tr>\n<td>image</td>\n<td>图片</td>\n</tr>\n<tr>\n<td>input</td>\n<td>输入框</td>\n</tr>\n<tr>\n<td>form</td>\n<td>表单</td>\n</tr>\n<tr>\n<td>audio</td>\n<td>音频</td>\n</tr>\n</tbody>\n</table>\n<p><strong>view 组件</strong></p>\n<p>view 组件表示视图容器，常用于实现页面的布局效果。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- view 组件通过 & lt;view > 标签定义 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span> view组件 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>view 组件提供了一些属性，用于实现特殊的效果</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hover-class</td>\n<td>string</td>\n<td>指定手指按下去的样式。当该属性值为 none 时，没有点击态。（点击态是指手指在屏幕上按下时的状态）</td>\n</tr>\n<tr>\n<td>hover-stop-propagation</td>\n<td>boolean</td>\n<td>指定是否阻止本节点的祖先节点出现点击态。</td>\n</tr>\n<tr>\n<td>hover-start-time</td>\n<td>number</td>\n<td>手指按住后多久出现点击态，单位为毫秒。</td>\n</tr>\n<tr>\n<td>hover-stay-time</td>\n<td>number</td>\n<td>手指松开后点击态保留时间，单位为毫秒。</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608170318567.png\" alt=\"image-20240608170318567\" /></p>\n<p><strong>image 组件</strong></p>\n<p>微信小程序提供了用于显示图片的 image 组件，支持对图片进行剪裁和缩放。image 组件的默认宽度为 300px，默认高度为 240px。</p>\n<p>image 组件通过 &lt;image&gt; 标签定义，支持单标签和双标签两种写法</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 单标签写法的示例代码 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">sr</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>图片资源地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 单双标签写法的示例代码 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">sr</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>图片资源地址<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>image</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>image 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>string</td>\n<td>图片资源地址</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>string</td>\n<td>图片剪裁、缩放的模式</td>\n</tr>\n<tr>\n<td>webp</td>\n<td>boolean</td>\n<td>默认不解析 WebP 格式，只支持网络资源</td>\n</tr>\n<tr>\n<td>lazy-load</td>\n<td>boolean</td>\n<td>图片延迟加载</td>\n</tr>\n<tr>\n<td>show-menu-by-longpress</td>\n<td>boolean</td>\n<td>长按图片显示的菜单，菜单提供发送给朋友、收藏、保存图片、搜一搜等功能</td>\n</tr>\n<tr>\n<td>binderror</td>\n<td>eventhandle</td>\n<td>当错误发生时触发</td>\n</tr>\n<tr>\n<td>bindload</td>\n<td>eventhandle</td>\n<td>当图片载入完毕时触发</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：图片资源地址 src 可以是本地路径或 URL 地址。如果使用本地路径，可以在项目中创建一个目录，例如 images 目录，并在该目录中放入图片，例如 test.jpg，然后通过本地路径 /images/test.jpg 即可引用图片。</p>\n</blockquote>\n<p><span class=\"red\">image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式</span></p>\n<ul>\n<li>scaleToFill: 不保持宽高比缩放图片，使图片的宽高完全拉伸至填满 image 元素。此合法值为 mode 属性的默认值</li>\n<li>aspectFit: 保持宽高比缩放图片，使图片的长沙能完全显示出来，即可以完整地将图片显示出来</li>\n<li>aspectFill: 保持宽高比缩放图片，只保证图片的短边能完全显示出来，即图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取</li>\n<li>widthFix: 宽度不变，高度自动变化，保持原图宽高比不变</li>\n<li>heightFix: 高度不变，宽度自动变化，保持原图宽高比不变</li>\n<li>top\\bottom\\center\\left\\right\\top left\\top right\\bottom left\\bottom right: 不缩放图片，只显示对应区域</li>\n</ul>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171236731.png\" alt=\"image-20240608171236731\" /></p>\n<p><strong>text 组件</strong></p>\n<p>在微信小程序中，则可以通过 text 组件定义行内文本。需要注意的是，<span class=\"red\">text 组件内部只能嵌套 text 组件。</span></p>\n<p>text 常用属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user-select</td>\n<td>boolean</td>\n<td>文本是否可选，该属性会使文本节点显示为 inline-block</td>\n</tr>\n<tr>\n<td>space</td>\n<td>string</td>\n<td>显示连续空格，可选参数为 <strong>ensp</strong>（中文字符空格一半大小）、<strong>emsp</strong>（中文字符空格大小）和 <strong>nbsp</strong>（根据字体设置的空格大小）</td>\n</tr>\n<tr>\n<td>decode</td>\n<td>boolean</td>\n<td>是否解码</td>\n</tr>\n</tbody>\n</table>\n<p>user-select 属性</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171451763.png\" alt=\"image-20240608171451763\" /></p>\n<p><strong>video 组件</strong></p>\n<p>微信小程序提供了 video 组件用来播放视频，video 组件的默认宽度为 300px，高度为 225px，可通过 WXSS 代码设置宽高。</p>\n<p>video 常见属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>string</td>\n<td>视频的资源地址</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>指定视频时长</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>boolean</td>\n<td>是否显示默认播放控件（播放 / 暂停按钮、播放进度、时间）</td>\n</tr>\n<tr>\n<td>danmu-list</td>\n<td>Object Array</td>\n<td>弹幕列表</td>\n</tr>\n<tr>\n<td>danmu-btn</td>\n<td>boolean</td>\n<td>是否显示弹幕按钮，只在初始化时有效，不能动态变更</td>\n</tr>\n<tr>\n<td>enable-danmu</td>\n<td>boolean</td>\n<td>是否展示弹幕，只在初始化时有效，不能动态变更</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>boolean</td>\n<td>是否自动播放</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>boolean</td>\n<td>是否循环播放</td>\n</tr>\n<tr>\n<td>muted</td>\n<td>boolean</td>\n<td>是否静音播放</td>\n</tr>\n<tr>\n<td>poster</td>\n<td>string</td>\n<td>视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 属性无效</td>\n</tr>\n<tr>\n<td>bindplay</td>\n<td>eventhandle</td>\n<td>当开始 / 继续播放时触发 play 事件</td>\n</tr>\n<tr>\n<td>bindpause</td>\n<td>eventhandle</td>\n<td>当暂停播放时触发 pause 事件</td>\n</tr>\n<tr>\n<td>object-fit</td>\n<td>string</td>\n<td>当视频大小与 video 组件大小不一致时，调整视频的表现形式，可选值有：contain（包含）、fill（填充）、cover（覆盖），默认值为 contain</td>\n</tr>\n<tr>\n<td>initial-time</td>\n<td>string</td>\n<td>指定视频初始播放位置</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171638894.png\" alt=\"image-20240608171638894\" /></p>\n<h2 id=\"3页面路径的配置方法能够运用该方法对页面进行管理\"><a class=\"anchor\" href=\"#3页面路径的配置方法能够运用该方法对页面进行管理\">#</a> 3. 页面路径的配置方法，能够运用该方法对页面进行管理</h2>\n<p>开发一个功能完整的微信小程序时，一般需要制作多个页面。</p>\n<p>在微信小程序中可以通过<span class=\"red\"> app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。</span></p>\n<p>pages 配置项是一个数组，该数组用于指定微信小程序由哪些页面组成，数组中的每一个元素都对应一个页面的路径信息。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"pages/index/index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"pages/logs/logs\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>上述代码中共配置了两个页面，分别是 pages/index/index 页面和 pages/logs/logs 页面。</p>\n<p>默认情况下，pages 数组中的第一项为微信小程序的初始页面，即 pages/index/index 页面。如果想将其他页面设置为初始页面，读者可以手动调整数组中元素的顺序，将需要设为初始页面的页面路径设为第一项即可。</p>\n<p>pages/index/index 中的 pages 表示存放页面的目录，index/index 中第一个 index 表示 index 目录，第二个 index 表示文件名。 同理，pages/logs/logs 中的 pages 表示存放页面的目录，logs/logs 中第一 logs 表示 logs 目录，第二个 logs 表示文件名。</p>\n<blockquote>\n<p><span class=\"red\">注意：文件名不需要写后缀名，以 pages/index/index 页面为例，配置成功后，微信开发者工具会自动生成 index.wxml 文件、index.wxss 文件、index.js 文件和 index.json 文件</span></p>\n</blockquote>\n<h2 id=\"4掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作\"><a class=\"anchor\" href=\"#4掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作\">#</a> *4. 掌握 swiper 和 swiper-item 组件的使用方法，能灵活运用 swiper 和 swiper 组件完成轮播图的制作</h2>\n<p><span class=\"red\"><strong>重点内容！！！</strong></span></p>\n<p>概念：swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。</p>\n<p>swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>swiper 组件为外层容器，内层有 3 个 swiper-item 组件，表示当前滑块视图内容一共有 3 项。</p>\n<p>滑块视图内容在初始状态下只显示第 1 项，向左滑动显示第 2 项，再向右滑动可以返回第 1 项。</p>\n<p>swiper 组件的常用属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>indicator-dots</td>\n<td>boolean</td>\n<td>是否显示面板指示点</td>\n</tr>\n<tr>\n<td>indicator-color</td>\n<td>color</td>\n<td>指示点颜色</td>\n</tr>\n<tr>\n<td>indicator-active-color</td>\n<td>color</td>\n<td>当前选中的指示点颜色</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>boolean</td>\n<td>是否自动切换</td>\n</tr>\n<tr>\n<td>current</td>\n<td>number</td>\n<td>当前所在滑块的 index, 默认为 0</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>number</td>\n<td>自动切换时间间隔</td>\n</tr>\n<tr>\n<td>circular</td>\n<td>boolean</td>\n<td>是否采用衔接滑动</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173426528.png\" alt=\"image-20240608173426528\" /></p>\n<h2 id=\"5掌握导航栏的配置方法\"><a class=\"anchor\" href=\"#5掌握导航栏的配置方法\">#</a> *5. 掌握导航栏的配置方法</h2>\n<p>通过<span class=\"red\">页面配置文件或全局配置文件</span>对导航栏的样式进行配置</p>\n<table>\n<thead>\n<tr>\n<th><strong>配置项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarTitleText</td>\n<td>string</td>\n<td>导航栏标题文字内容，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>导航栏背景颜色，默认值为 #000000</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>string</td>\n<td>导航栏标题颜色，仅支持 black 和 white, 默认值为 white</td>\n</tr>\n</tbody>\n</table>\n<p>在页面配置文件中对导航栏进行配置</p>\n<p>以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"微信小程序\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在全局配置文件中对导航栏进行配置</p>\n<p>在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span>  <span class=\"token string\">\"微信小程序\"</span></pre></td></tr></table></figure><p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173744741.png\" alt=\"image-20240608173744741\" /></p>\n<h2 id=\"6掌握标签栏的配置方法能够完成页面标签栏的配置\"><a class=\"anchor\" href=\"#6掌握标签栏的配置方法能够完成页面标签栏的配置\">#</a> 6. 掌握标签栏的配置方法，能够完成页面标签栏的配置</h2>\n<p>通过标签栏可以很方便地在多个页面之间进行切换。</p>\n<p><span class=\"red\">在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。</span></p>\n<p>tabBar 常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th>必填</th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏上的文字默认颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏上的文字选中时的颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏的背景色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>string</td>\n<td>否</td>\n<td>标签栏上边框的颜色，仅支持 black 和 white</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>是</td>\n<td>标签栏的列表</td>\n</tr>\n<tr>\n<td>position</td>\n<td>string</td>\n<td>否</td>\n<td>标签栏的位置，仅支持 bottom（底部）和 top（顶部）</td>\n</tr>\n<tr>\n<td>custom</td>\n<td>boolean</td>\n<td>否</td>\n<td>自定义标签栏</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"red\"> 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。</span></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 演示 tabBar 配置项的属性使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"tabBar\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ccc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"selectedColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ff4c91\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"borderStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//list 数组中的每个元素都是一个代表标签按钮的对象，通过配置该对象的属性可以对标签栏中的每个标签按钮进行配置。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//list 数组中最少需要配置 2 个标签按钮，最多只能配置 5 个标签按钮。</span></pre></td></tr></table></figure><p>标签按钮的相关属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>标签栏上的文字默认颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>标签栏上的文字选中时的颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>string</td>\n<td>标签栏上边框的颜色，仅支持 black 和 white</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>标签栏的背景色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>标签栏的列表</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//tabBar 配置项的属性使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/index/index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/home.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/home-active.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"首页\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/list/list\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/contact.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/contact-active.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"联系我们\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 需要注意的是，pages/index/index 和 pages/list/list 这两个页面都必须在 pages 数组中配置并提前创建好对应的文件。</span></pre></td></tr></table></figure><p>标签栏的效果如下：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608174515502.png\" alt=\"image-20240608174515502\" /></p>\n<h2 id=\"7掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作\"><a class=\"anchor\" href=\"#7掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作\">#</a> 7. 掌握表单组件的使用方法，能够灵活运用常用的表单组件完成页面的制作</h2>\n<p>微信小程序在 HTML 基础上做了封装，并且增加了一些组件。</p>\n<p>表单组件通常用于用户信息的填写，以便于把用户填写的信息提交给服务器。</p>\n<table>\n<thead>\n<tr>\n<th><strong>组件</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>form</td>\n<td>表单</td>\n</tr>\n<tr>\n<td>checkbox-group</td>\n<td>多项选择器</td>\n</tr>\n<tr>\n<td>radio-group</td>\n<td>单项选择器</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>多行输入框</td>\n</tr>\n<tr>\n<td>button</td>\n<td>按钮</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>多选项目</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>单选项目</td>\n</tr>\n<tr>\n<td>input</td>\n<td>输入框</td>\n</tr>\n</tbody>\n</table>\n<p><strong>form 组件</strong></p>\n<p>form 组件表示表单容器，没有任何样式，需要配合其他表单组件一起使用，<span class=\"red\">用于提交用户输入的信息和选择的选项。</span></p>\n<p>form 组件内部可以包含若干个供用户输入或选择的表单组件，允许提交的表单组件为 switch、input、 checkbox、slider、radio 和 picker 组件。</p>\n<p><span class=\"red\">表单中携带数据的组件（如输入框）必须带有 name 属性值，否则无法识别提交的内容。</span></p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bindsubmit</td>\n<td>eventhandle</td>\n<td>通过携带 form 组件中的数据触发 submit 事件</td>\n</tr>\n<tr>\n<td>bindreset</td>\n<td>eventhandle</td>\n<td>表单重置时会触发 reset 事件</td>\n</tr>\n</tbody>\n</table>\n<p><strong>button 组件</strong></p>\n<p>button 组件表示按钮，功能比 HTML 中的 button 按钮丰富。</p>\n<p>button 组件的常用属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>string</td>\n<td>按钮的大小，可选值：default、mini, 默认值为 default</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>按钮的样式类型，可选值：primary、default、warn, 默认值为 default</td>\n</tr>\n<tr>\n<td>plain</td>\n<td>boolean</td>\n<td>按钮是否镂空，当 plain 属性值为 true 时背景色透明，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>form-type</td>\n<td>string</td>\n<td>form-type 属性值可设为 submit、reset, 点击分别会触发 form 组件中的 submit、reset 事件，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>hover-class</td>\n<td>string</td>\n<td>指定按钮点击态效果，默认值为 &quot;&quot;</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608175154327.png\" alt=\"image-20240608175154327\" /></p>\n<p><strong>input 组件</strong></p>\n<p>input 组件与 HTML 中的 &lt;input&gt; 标签作用类似，<span class=\"red\">都用于接收用户的输入</span>。在微信小程序中，input 组件增加了很多属性，使 input 组件使用起来更加简单、方便。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>属性</strong></th>\n<th style=\"text-align:center\"><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">value</td>\n<td style=\"text-align:center\">string</td>\n<td>输入框的初始内容，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">type</td>\n<td style=\"text-align:center\">string</td>\n<td>input 的类型，默认值为 text</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">confirm-type</td>\n<td style=\"text-align:center\">string</td>\n<td>设置键盘右下角按钮的文字，仅在 type=&quot;text&quot; 时生效，可选值：send、search、next、go、done, 默认值为 done</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">password</td>\n<td style=\"text-align:center\">boolean</td>\n<td>是否是密码类型，默认值为 false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">placeholder</td>\n<td style=\"text-align:center\">string</td>\n<td>输入框为空时的占位符，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">placeholder-style</td>\n<td style=\"text-align:center\">string</td>\n<td>指定 placeholder 的样式，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">placeholder-class</td>\n<td style=\"text-align:center\">string</td>\n<td>指定 placeholder 的样式类，默认值为 &quot;&quot;</td>\n</tr>\n</tbody>\n</table>\n<p>input 组件的 type 属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>可选值</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>文本输入键盘</td>\n</tr>\n<tr>\n<td>number</td>\n<td>数字输入键盘</td>\n</tr>\n<tr>\n<td>idcard</td>\n<td>身份证输入键盘</td>\n</tr>\n<tr>\n<td>digit</td>\n<td>带小数点的数字键盘</td>\n</tr>\n<tr>\n<td>safe-password</td>\n<td>密码安全输入键盘</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>昵称输入键盘</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608175311122.png\" alt=\"image-20240608175311122\" /></p>\n<p><strong>checkbox 和 checkbox-group 组件</strong></p>\n<p>checkbox 组件表示多选项目，在进行多项选择时会用到。</p>\n<p>checkbox 组件一般与 checkbox-group 组件搭配使用，checkbox-group 组件表示多项选择器，内部由多个 checkbox 组件组成。</p>\n<p>建议将不同组的 checkbox 组件嵌套在不同的 checkbox-group 组件中，从而方便管理和区分。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>checkbox 组件标识，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>boolean</td>\n<td>当前是否选中，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>颜色，默认值为 #09BB07</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- checkbox 和 checkbox-group 组件的使用 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox-group</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>蛋糕<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>甜甜圈<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>巧克力<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox-group</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>radio 和 radio-group 组件</strong></p>\n<p>radio 组件为单选项目，是表单中常用的组件，用于在从多个选项中选出一个，选项之间是互斥关系。</p>\n<p>radio 组件一般与 radio-group 组件搭配使用，radio-group 组件表示单项选择器，内部由多个 radio 组件组成。</p>\n<p>建议将不同组的 radio 组件分别嵌套在不同的 radio-group 组件中，从而方便管理和区分。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>radio 标识，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>boolean</td>\n<td>当前是否选中，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>颜色，默认值为 #09BB07</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- radio 和 radio-group 组件 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 radio 和 radio-group 组件实现性别的单项选择 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-group</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span><span class=\"token punctuation\">></span></span>男<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span><span class=\"token punctuation\">></span></span>女<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-group</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"8习题-2\"><a class=\"anchor\" href=\"#8习题-2\">#</a> 8. 习题</h2>\n<blockquote>\n<p>主要考察为选择、判断、填空</p>\n</blockquote>\n<p>一、 填空题</p>\n<ol>\n<li>image 组件的 ____属性用于设置图片的展示模式。</li>\n<li>swiper 组件内部只可以放置____组件。</li>\n<li>在 Flex 布局中，____属性能够设置项目在主轴方向的排列方式。</li>\n<li>text 组件的 ____属性用于实现长按选中文本内容的效果。</li>\n<li>在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（ ）</li>\n<li>微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（ ）</li>\n<li>swiper 组件可以实现页面的轮播图效果。（ ）</li>\n<li>video 组件专门用于播放音频。（ ）</li>\n</ol>\n<p>三、 选择题</p>\n<ol>\n<li>\n<p>下列选项中，用于配置微信小程序所有的页面地址的文件是（ ）</p>\n<p>A.  app.js   B. app.json   C. app.wxss   D. project.config.json</p>\n</li>\n<li>\n<p>下列选项中，不属于表单组件的是（ ）</p>\n<p>A. input 组件        B. checkbox 组件  C. form 组件     D. swiper 组件</p>\n</li>\n<li>\n<p>下列选项中，不属于 Flex 布局的是（ ）</p>\n<p>A.  display:flex;</p>\n<p>B.   flex:1;</p>\n<p>C.   float:left;</p>\n<p>D.  flex-flow:column nowrap;</p>\n</li>\n<li>\n<p>下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ ）。</p>\n<p>A. 3    B. 4    C. 5    D. 6</p>\n</li>\n</ol>\n<p>四、 简答题</p>\n<ol>\n<li>简述 WXML 和 HTML 的区别。</li>\n<li>简述 WXSS 和 CSS 的区别。</li>\n<li>简述 Flex 布局的概念。</li>\n</ol>\n<h1 id=\"第三章-微信小程序的页面交互\"><a class=\"anchor\" href=\"#第三章-微信小程序的页面交互\">#</a> 第三章 微信小程序的页面交互</h1>\n<h2 id=\"1熟悉page函数能够归纳page函数及其各个参数的作用\"><a class=\"anchor\" href=\"#1熟悉page函数能够归纳page函数及其各个参数的作用\">#</a> 1. 熟悉 Page () 函数，能够归纳 Page () 函数及其各个参数的作用</h2>\n<p>Page () 函数概念：在微信小程序中，页面交互的代码写在页面的 JS 文件中，每个页面都需要通过 Page () 函数进行注册。</p>\n<p>需要注意的是，<span class=\"red\">Page ( ) 函数只能写在微信小程序每个页面对应的 JS 文件中，并且每个页面只能注册一个。</span></p>\n<p>Page () 函数的参数是一个对象，通过该对象可以指定页面初始数据、页面生命周期回调函数和页面事件处理函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 调用 Page () 函数的示例代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// 页面初始数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 页面生命周期回调函数，以 onLoad () 为例</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onLoad()函数执行了'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 页面事件处理函数，以 onPullDownRefresh () 为例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onPullDownRefresh()函数执行了'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>页面初始数据</strong></p>\n<p>页面初始数据是指页面第一次渲染时所用到的数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义页面初始数据，示例代码如下：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">msg1</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">msg2</span><span class=\"token operator\">:</span> <span class=\"token string\">'World'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p><strong>页面生命周期回调函数</strong></p>\n<p>页面的生命周期是指每个页面<span class=\"red\"> “加载→渲染→销毁”</span> 的过程，每个页面都有生命周期</p>\n<p><span class=\"red\">如果想要在某个特定的时机进行特定的处理，则可以通过页面生命周期回调函数来完成。</span></p>\n<p>页面生命周期回调函数用于实现在特定的时间点执行特定的操作，随着页面生命周期的变化，页面生命周期回调函数会自动执行。</p>\n<p>页面生命周期回调函数：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onLoad()</td>\n<td>监听页面加载，且一个页面只会在创建完成后触发一次</td>\n</tr>\n<tr>\n<td>onShow()</td>\n<td>监听页面显示，只要页面显示就会触发此函数</td>\n</tr>\n<tr>\n<td>onReady()</td>\n<td>监听页面初次渲染完成，一个页面只会调用一次</td>\n</tr>\n<tr>\n<td>onHide()</td>\n<td>监听页面隐藏，只要页面隐藏就会触发此函数</td>\n</tr>\n<tr>\n<td>onUnload()</td>\n<td>监听页面卸载，只要页面被释放就会触发此函数</td>\n</tr>\n</tbody>\n</table>\n<p><strong>页面事件处理函数</strong></p>\n<p>在微信小程序中，用户可能会在页面上进行一些操作，例如上拉、下拉、滚动页面等，如何在发生这些操作的时候进行处理呢？可以通过页面事件处理函数来完成。</p>\n<p><span class=\"red\">页面事件处理函数用于监听用户的行为。</span></p>\n<p>常见的页面事件处理函数：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onPullDownRefresh()</td>\n<td>监听用户下拉刷新事件</td>\n</tr>\n<tr>\n<td>onReachBottom()</td>\n<td>监听页面上拉触底事件</td>\n</tr>\n<tr>\n<td>onPageScroll()</td>\n<td>页面滚动会连续调用</td>\n</tr>\n<tr>\n<td>onShareAppMessage()</td>\n<td>用户点击页面右上角 &quot;⋯⋯&quot; 按钮，选择 &quot;转发给朋友&quot; 时调用</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用\"><a class=\"anchor\" href=\"#2掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用\">#</a> 2. 掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用</h2>\n<p><strong>数据绑定</strong></p>\n<p>概念：微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定，可将 data 中的数据通过 Mustache 语法输出到页面上。</p>\n<p>通过数据绑定将数据显示在页面中案例：</p>\n<ol>\n<li>\n<p>打开 pages/index/index.js 文件，在 data 中定义一个 message 数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello World'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 Mustache &#123;&#125; 语法将 data 中的数据显示在页面中 --></span></pre></td></tr></table></figure><p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608181250880.png\" alt=\"image-20240608181250880\" /></p>\n</li>\n</ol>\n<p>页面上显示了 message 变量对应的值，也就是把 “Hello World” 渲染到页面代码中所在的位置，实现了从逻辑层到视图层的数据显示。</p>\n<p><strong>事件绑定</strong></p>\n<p>概念：在微信小程序中，事件是视图层到逻辑层的通信方式，通过给组件绑定事件，可以监听用户的操作行为，然后在对应的事件处理函数中进行相应的业务处理。例如，为页面中的按钮绑定事件，当用户点击按钮时，就产生了事件。</p>\n<p>常见的事件：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>类别</strong></th>\n<th style=\"text-align:center\"><strong>事件名称</strong></th>\n<th style=\"text-align:left\"><strong>触发条件</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">点击事件</td>\n<td style=\"text-align:center\">tap</td>\n<td style=\"text-align:left\">手指触摸后马上离开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">长按事件</td>\n<td style=\"text-align:center\">longpress</td>\n<td style=\"text-align:left\">手指触摸后，超过 350ms 再离开，如果指定了事件回调函数并触发了这个事件，tap 事件将不被触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchstart</td>\n<td style=\"text-align:left\">手指触摸动作开始</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchmove</td>\n<td style=\"text-align:left\">手指触摸后移动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchcancel</td>\n<td style=\"text-align:left\">手指触摸动作被打断，例如来电提醒、弹窗</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchend</td>\n<td style=\"text-align:left\">手指触摸动作结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他事件</td>\n<td style=\"text-align:center\">input</td>\n<td style=\"text-align:left\">键盘输入时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他事件</td>\n<td style=\"text-align:center\">submit</td>\n<td style=\"text-align:left\">携带 form 中的数据触发 submit 事件</td>\n</tr>\n</tbody>\n</table>\n<p>事件分类：</p>\n<ul>\n<li>冒泡事件：指当一个组件上的事件被触发后，该事件会向父组件传递。</li>\n<li>非冒泡事件：指当一个组件上的事件被触发后，该事件不会向父组件传递。</li>\n</ul>\n<blockquote>\n<p>注意：点击事件、长按事件、触摸事件都属于冒泡事件，其他事件属于非冒泡事件。</p>\n</blockquote>\n<p><strong>为组件绑定事件</strong></p>\n<ul>\n<li>若要为组件绑定事件，可以通过为组件添加 “bind + 事件名称” 属性或 “catch + 事件名称” 属性来完成，属性的值为事件处理函数，当组件的事件被触发时，会主动执行事件处理函数。</li>\n</ul>\n<blockquote>\n<p>bind 和 catch 的区别在于，bind 不会阻止冒泡事件向上冒泡，而 catch 可以阻止冒泡事件向上冒泡。</p>\n</blockquote>\n<p>为组件绑定事件案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中给 button 组件绑定 tap 事件，事件处理函数为 compare () 函数。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>compare<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>比较<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>bindtap 表示绑定 tap 事件。<br />\n在触屏手机中，tap 事件在用户手指触摸 button 组件离开后触发，而在微信开发者工具中，tap 事件在鼠标单击 button 组件时触发。</p>\n</li>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中定义 compare () 函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">compare</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'比较按钮被点击了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>事件处理函数的简写形式</p>\n<p>由于 compare () 函数是 {} 对象的方法，所以可以将 compare () 函数写成方法的简写形式，即省略 compare 后面的冒号和 function 关键字</p>\n<p>示例代码如下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">compare</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'比较按钮被点击了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>事件对象</strong></p>\n<p>概念：在开发微信小程序的过程中，有时需要获取事件发生时的一些信息，例如事件类型、事件发生的时间、触发事件的对象等，此时可以通过事件对象来获取。</p>\n<p><span class=\"red\">当事件处理函数被调用时，微信小程序会将事件对象以参数的形式传给事件处理函数。</span></p>\n<p>事件对象的属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>事件类型</td>\n</tr>\n<tr>\n<td>timeStamp</td>\n<td>number</td>\n<td>事件生成的时间戳</td>\n</tr>\n<tr>\n<td>target</td>\n<td>object</td>\n<td>触发事件的组件的一些属性值集合</td>\n</tr>\n<tr>\n<td>currentTarget</td>\n<td>object</td>\n<td>当前组件的一些属性值集合</td>\n</tr>\n<tr>\n<td>mark</td>\n<td>object</td>\n<td>事件标记数据</td>\n</tr>\n</tbody>\n</table>\n<p><strong>事件对象的使用</strong></p>\n<p>修改 pages/index/index.js 文件中的 compare () 函数，通过参数接收事件对象，并将事件对象输出到控制台。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">compare</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token comment\">// 函数参数 e 表示事件对象</span></pre></td></tr></table></figure><p>事件对象属性中的 target 和 currentTarget 属性的对比。</p>\n<ul>\n<li>target 表示获取触发事件的组件的一些属性值集合</li>\n<li>currentTarget 表示获取当前组件的一些的属性值集合</li>\n</ul>\n<p>事件对象属性中 target 和 currentTarget 的区别案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewtap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  outer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      inner</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.js 文件中添加 viewtap () 事件处理函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">viewtap</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 使用 e.target.id 或 e.currentTarget.id 都可以获取发生事件的组件的 id，由于 outer 和 inner 的 id 不同，因此可以区分这两个组件。</span></pre></td></tr></table></figure></li>\n</ol>\n<p>运行程序测试，当单击 outer 时，控制台中的输出结果为 outer-outer，而单击 inner 时，控制台中的输出结果为 inner-outer。</p>\n<p>由此可见，e.target 获取的是子元素的属性值集合，而 e.currentTarget 获取到的是父元素的属性值集合。</p>\n<p><strong>this 关键字</strong></p>\n<p>在微信小程序开发过程中，有时需要在函数中访问页面中定义的一些数据，或者调用页面中定义的一些函数，此时可以通过 this 关键字来实现。</p>\n<p>this 关键字代表当前页面对象。</p>\n<p>this 关键字的使用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 定义 data 数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">test</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 定义 test () 函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test()函数执行了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// 通过 this 关键字访问 data 中的 num 数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t<span class=\"token comment\">// 通过 this 关键字调用 test () 函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>setData () 方法</strong></p>\n<p>概念：在微信小程序开发过程中，虽然通过数据绑定可以将 data 中定义的数据渲染到页面，但是如果数据发生了变化，页面并不会同步更新数据。</p>\n<p>为了实现在数据变化时使页面同步更新，微信小程序提供了 setData () 方法，该方法可以立即改变 data 中的数据，并通过异步的方式将数据渲染到页面上。</p>\n<p>setData () 方法通过 this 关键字调用，该方法的基本语法格式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>setData () 方法的参数</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>当前要改变的数据</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>setData () 方法引起的页面更新渲染完毕后的回调函数</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>第 1 个参数 data 是 object 类型的数据，以 key: value 的形式将 data 中的 key 对应值设置成 value；</li>\n<li>第 2 个参数 callback 是回调函数，可以省略。</li>\n</ul>\n</blockquote>\n<p>setData () 方法的使用：</p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件中编写页面中所需的数据 message 和事件处理函数 changeText ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello World'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">changeText</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello 微信小程序'</span>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeText<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 给 view 组件绑定了 tap 事件，事件处理函数为 changeText () --></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"3掌握data-自定义属性能够完成data-自定义数据的设置与获取\"><a class=\"anchor\" href=\"#3掌握data-自定义属性能够完成data-自定义数据的设置与获取\">#</a> 3. 掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取</h2>\n<p>概念：微信小程序可以通过自定义属性来进行传参。</p>\n<p>微信小程序中的 data-* 是一个自定义属性，data-* 自定义属性实际上是由 data - 前缀加上一个自定义的属性名组成的，属性名中如果有多个单词，用连字符 “-” 连接。</p>\n<p>data-* 自定义属性的属性值表示要传参的数据。</p>\n<p>在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。</p>\n<p>dataset 属性是一个对象，该对象的属性与 data-* 自定义属性相对应。</p>\n<p>通过设置 data-* 自定义属性实现参数的传递：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xiaochengxu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-age</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  获取姓名和年龄</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.js 文件中编写页面逻辑。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'初始名字'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">demo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>age</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608182842473.png\" alt=\"image-20240608182842473\" /></p>\n<h2 id=\"4掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件\"><a class=\"anchor\" href=\"#4掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件\">#</a> 4. 掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件</h2>\n<p>概念：在微信小程序开发过程中，如果需要根据不同的判断结果显示不同的组件，可以使用条件渲染来实现。</p>\n<p><span class=\"red\">条件渲染通过标签的 wx:if 控制属性来完成。</span></p>\n<p>使用 wx:if=“” 来判断是否需要渲染标签对应的组件，如果变量 val 的值为 true，则渲染组件并输出；变量 val 的值为 false，则不渲染组件</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>True<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>通过变量 condition 的值来控制是否渲染 view 组件</p>\n<p>给标签设置了 wx:if 控制属性后，可以为后面的标签设置 wx:elif、wx:else 控制属性。</p>\n<ul>\n<li>wx:elif 控制属性表示当前面标签的 if 条件不满足时，继续判断 elif（else if）的条件；</li>\n<li>wx:else 控制属性表示当前面的 if 条件不满足时，渲染 else 对应的组件。</li>\n<li>wx:else 控制属性也可以直接出现在 wx:if 控制属性的后面</li>\n</ul>\n<p>示例代码如下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>elif</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>else</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"5掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中\"><a class=\"anchor\" href=\"#5掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中\">#</a> 5. 掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中</h2>\n<p>概念：列表渲染通过 wx:for 控制属性来实现。</p>\n<p>微信小程序进行列表渲染时，会根据列表中数据的数量渲染相应数量的内容。</p>\n<p>在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。</p>\n<p>如果不想使用 item 和 index 这两个变量名，还可以通过 wx:for-item 控制属性更改 item 的变量名；通过 wx:for-index 控制属性更改 index 的变量名。</p>\n<p>wx:key 控制属性</p>\n<ul>\n<li>wx:for 控制属性通常搭配 wx:key 控制属性使用。</li>\n<li>wx:key 控制属性用于为每一项设置唯一标识，这样可以在数据改变后页面重新渲染时，使原有组件保持自身的状态，而不是重新创建，这样可以提高列表渲染的效率。</li>\n</ul>\n<p>设置 wx:key</p>\n<ol>\n<li>如果 item 本身就是一个具有唯一性的字符串或数字，则可以将 wx:key 的值设置为 * this，*this 表示 item 本身。</li>\n<li>如果给定的数据是一个由对象作为数组元素构成的数组，那么可以将 wx:key 的值设置为对象中的一个 “值具有唯一性” 的属性的名称。</li>\n</ol>\n<p><strong>数组的列表渲染案例：</strong></p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构，通过列表渲染的方式将 arr 数组渲染到页面中。</p>\n<pre><code class=\"language-wxml\">&lt;view wx:for=&quot;&#123;&#123; arr &#125;&#125;&quot; wx:key=&quot;*this&quot;&gt;\n  &#123;&#123; index &#125;&#125; &#123;&#123; item &#125;&#125;\n&lt;/view&gt;\n</code></pre>\n</li>\n</ol>\n<p>数组中包含对象情况下的列表渲染案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'梅'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'兰'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'竹'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'菊'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//id 是每条数据的唯一标识</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构，将 list 数组中的数据在页面中显示出来。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"></span>-----<span class=\"token comment\"></span>=======<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>数组中包含对象情况下的列表渲染的页面效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183458412.png\" alt=\"image-20240608183458412\" /></p>\n</li>\n<li>\n<p>在 pages/index/index.wxml 文件中修改页面结构，实现通过 wx:for-item、wx:for-index 更改 item 和 index 的变量名。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"></span>：<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 wx:for-item 更改 item 的变量名为 item2，通过 wx:for-index 更改 index 的变量名为 index2 --></span></pre></td></tr></table></figure><p>更名后列表渲染的页面效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183658029.png\" alt=\"image-20240608183658029\" /></p>\n</li>\n</ol>\n<h2 id=\"6掌握网络请求实现能够通过网络请求与服务器进行交互\"><a class=\"anchor\" href=\"#6掌握网络请求实现能够通过网络请求与服务器进行交互\">#</a> 6. 掌握网络请求实现，能够通过网络请求与服务器进行交互</h2>\n<p>客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。</p>\n<p>例如，获取用户的头像信息，需要客户端向服务器发送请求，服务器查询到数据后把数据传递给客户端。</p>\n<p>在微信小程序中实现网络请求时，需要服务器给微信小程序提供服务器接口。</p>\n<p>在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。</p>\n<p>wx.request () 方法的常见选项</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器接口地址，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>data</td>\n<td>string/object/ArrayBuffer</td>\n<td>请求的参数，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>设置请求的 header, 默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>method</td>\n<td>string</td>\n<td>HTTP 请求方式，默认值为 GET</td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>string</td>\n<td>返回的数据格式，默认值为 json</td>\n</tr>\n<tr>\n<td>responseType</td>\n<td>string</td>\n<td>响应的数据类型，默认值为 text</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>注意：method 选项的合法值包括 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE 和 CONNECT，具体使用哪个，以服务器接口的要求为准。</p>\n<p>每个 wx:request () 方法都是一个请求任务，可以通过 abort () 方法将其取消。</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发起网络请求</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> requestTask <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'URL地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">//wx.request () 的常见参数……</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 取消请求任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>requestTask<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 调用 wx.request () 方法发起网络请求</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 调用 abort () 方法取消请求任务</span></pre></td></tr></table></figure><p>通过 wx.request () 方法发起一个 GET 方式的请求</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'URL地址'</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 表示服务器接口地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 表示 HTTP 请求方式为 GET</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'zs'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 设置了请求参数 name</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 定义了接口调用成功的回调函数 success </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"7掌握上拉触底与下拉刷新的实现\"><a class=\"anchor\" href=\"#7掌握上拉触底与下拉刷新的实现\">#</a> 7. 掌握上拉触底与下拉刷新的实现.</h2>\n<p><strong>上拉触底：</strong></p>\n<p>概念：在原生应用或者网页的交互中，经常会有上拉加载这个功能。用户在浏览列表页面时，手指在手机屏幕上进行上拉滑动操作，通过上拉加载请求数据，增加列表数据。</p>\n<p>微信小程序提供了 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。</p>\n<p>onReachBottom () 事件处理函数的示例代码如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>onReachBottom<span class=\"token operator\">:</span> function () <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console.log('触发了上拉触底的事件')</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>在默认情况下，触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，开发人员可以根据实际需求，在全局或页面的 JSON 配置文件中通过 onReachBottomDistance 属性修改上拉触底的距离。</p>\n<p>在页面的 JSON 文件中配置上拉触底的距离为 200px：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"onReachBottomDistance\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>下拉刷新</strong></p>\n<p>在原生应用的交互中，经常会有下拉刷新操作，即当用户下拉页面到达顶部时，再进行下拉可以将数据重新加载。</p>\n<p>启用下拉刷新的方式:</p>\n<ol>\n<li>全局开启下拉刷新\n<ul>\n<li>在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。</li>\n</ul>\n</li>\n<li>局部开启下拉刷新\n<ul>\n<li>在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。</li>\n</ul>\n</li>\n</ol>\n<p>开启下拉刷新后，当下拉操作执行时，就会触发 onPullDownRefresh () 事件处理函数。</p>\n<p>onPullDownRefresh () 事件处理函数的示例代码如下。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>onPullDownRefresh<span class=\"token operator\">:</span> function () <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console.log('触发了下拉刷新的事件') </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行下拉刷新操作后，页面顶部会出现加载提示，并且页面需要延迟一段时间才会弹回去。</p>\n<p>为了优化用户体验，可以在完成下拉刷新的数据加载后，立即调用 wx.stopPullDownRefresh () 方法停止使用当前页面的下拉刷新加载效果</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.stopPullDownRefresh()</pre></td></tr></table></figure><h2 id=\"8习题-3\"><a class=\"anchor\" href=\"#8习题-3\">#</a> 8. 习题</h2>\n<blockquote>\n<p>主要考察为选择、判断、填空</p>\n</blockquote>\n<p>一、 填空题</p>\n<ol>\n<li>在页面结构渲染过程中，通过____控制属性完成页面的条件渲染。</li>\n<li>在列表渲染中，通过____控制属性可以循环数组中的每一项。</li>\n<li>在列表渲染中，使用____可以指定当前项的变量名。</li>\n<li>在 JS 文件中，通过____ 获取 data-* 自定义属性的值。</li>\n<li>在微信小程序中，页面加载完成后执行的生命周期函数为 ____。</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ ）</li>\n<li>‌所有绑定的数据都必须在 data 中进行初始化。（ ）</li>\n<li>设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（ ）</li>\n<li>通过调用 wx.request () 方法可以发起网络请求。（ ）</li>\n<li>通过调用 wx.showLoading () 方法可以弹出加载提示框。（ ）</li>\n</ol>\n<p>三、 选择题</p>\n<ol>\n<li>\n<p>下列选项中，关于列表渲染说法正确的是（ ）。</p>\n<pre><code>A.   wx:for-index可以用于重新定义当前项的变量名\n\nB.   在列表渲染中，可以使用item变量获取当前项的值\n\nC.   wx:for可以用于实现页面中的列表渲染\n\nD.   wx:for-item可以用于设置当前索引变量的属性名\n</code></pre>\n</li>\n<li>\n<p>下列选项中，用于监听页面初次渲染成功的回调函数是（ ）。</p>\n<pre><code>A. onHide   B. onLoad     C. onShow     D. onReady\n</code></pre>\n</li>\n<li>\n<p>下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ ）。</p>\n<pre><code>A. wx:for-i  B.  wx:for-j    C.  wx:for-item    D.  wx:for-index\n</code></pre>\n</li>\n<li>\n<p>下列选项中，wx.showToast () 函数的参数属性中包含的回调函数有（ ）。</p>\n<pre><code>A.  title、icon和mask\n\nB.  success、fail和title\n\nC.  duration、mask和success\n\nD.  success、fail和complete\n</code></pre>\n</li>\n<li>\n<p>下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ ）。</p>\n<pre><code>A. &#123;&#123; &#125;&#125;    B. [ ]     C. &#123; &#125;    D. [[ ]]\n</code></pre>\n</li>\n</ol>\n<p>四、 简答题</p>\n<ol>\n<li>简述页面生命周期函数包括哪些。</li>\n<li>简述 wx:if 控制属性和 hidden 属性的区别。</li>\n<li>简述微信小程序如何实现下拉刷新。</li>\n<li>简述微信小程序如何实现上拉触底。</li>\n</ol>\n<h1 id=\"第四章-微信小程序常用api上\"><a class=\"anchor\" href=\"#第四章-微信小程序常用api上\">#</a> 第四章 微信小程序常用 API（上）</h1>\n<h2 id=\"1掌握scroll-view组件能够运用scroll-view组件完成视图区域的横向与纵向滚动\"><a class=\"anchor\" href=\"#1掌握scroll-view组件能够运用scroll-view组件完成视图区域的横向与纵向滚动\">#</a> 1. 掌握 scroll-view 组件，能够运用 scroll-view 组件完成视图区域的横向与纵向滚动</h2>\n<p><strong>scroll-view 组件</strong></p>\n<p>概念：当一个容器中的内容有很多时，如果容器无法完整显示内容，则可以通过滚动操作来查看完整内容。</p>\n<p>在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动，默认是不滚动的，需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。</p>\n<p>scroll-view 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>scroll-x</td>\n<td>boolean</td>\n<td>允许横向滚动，默认值为 false</td>\n</tr>\n<tr>\n<td>scroll-y</td>\n<td>boolean</td>\n<td>允许纵向滚动，默认值为 false</td>\n</tr>\n<tr>\n<td>scroll-top</td>\n<td>number/string</td>\n<td>设置竖向滚动条的位置，默认值为空</td>\n</tr>\n<tr>\n<td>scroll-left</td>\n<td>number/string</td>\n<td>设置横向滚动条的位置，默认值为空</td>\n</tr>\n<tr>\n<td>scroll-into-view</td>\n<td>string</td>\n<td>当前可在哪个方向滚动，则在哪个方向滚动到该元素。值为某子元素 id (id 不能以数字开头)</td>\n</tr>\n<tr>\n<td>scroll-with-animation</td>\n<td>boolean</td>\n<td>在设置滚动条位置时是否使用动画过渡，默认值为 false</td>\n</tr>\n<tr>\n<td>bindscrolltoupper</td>\n<td>eventhandle</td>\n<td>滚动到顶部 / 左边时触发的事件</td>\n</tr>\n<tr>\n<td>bindscrolltolower</td>\n<td>eventhandle</td>\n<td>滚动到底部 / 右边时触发的事件</td>\n</tr>\n<tr>\n<td>bindscroll</td>\n<td>eventhandle</td>\n<td>滚动时触发的事件</td>\n</tr>\n</tbody>\n</table>\n<p>在允许横向滚动、纵向滚动后，还需要使 scroll-view 组件中内容的宽度和高度大于 scroll-view 组件本身的宽度和高度，这样才能滚动。</p>\n<p>在实际开发中，由于 scroll-view 组件的默认宽度为 100%，会占满整个屏幕，所以当内容的宽度超出屏幕宽度显示范围时，即可横向滚动。若要实现纵向滚动，则需要在样式中为 scroll-view 组件设置一个固定高度，否则 scroll-view 组件会被内容撑大，导致无法纵向滚动。</p>\n<p>scroll-view 组件的使用案例：</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scroll-view</span> <span class=\"token attr-name\">scroll-x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scroll-y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">bindscroll</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span> <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to bottom right<span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scroll-view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- scroll-view 组件设置了允许横向滚动和纵向滚动。--></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中添加 scroll () 事件处理函数输出 e.detail 的值。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">scroll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 通过 e.detail 获取滚动时的位置信息。</span></pre></td></tr></table></figure><p>拖曳滚动条使 scroll () 函数执行，然后在控制台中查看输出结果如下图所示：</p>\n<p><img data-src=\"C:/Users/86198/AppData/Roaming/Typora/typora-user-images/image-20240608190115198.png\" alt=\"image-20240608190115198\" /></p>\n<p>e.detail 为自定义事件所携带的数据，下面对上图中获取到的信息进行讲解，具体如下。</p>\n<ul>\n<li>scrollLeft：横向滚动条左侧到视图左边的距离。</li>\n<li>scrollTop：纵向滚动条上端到视图顶部的距离。</li>\n<li>scrollHeight：纵向滚动条在 Y 轴上最大滚动距离。</li>\n<li>scrollWidth：横向滚动条在 X 轴上最大的滚动距离。</li>\n<li>deltaX：横向滚动条的滚动状态。</li>\n<li>deltaY：纵向滚动条的滚动状态。</li>\n</ul>\n<h2 id=\"2掌握slider组件能够运用slider组件完成滑动选择器的制作\"><a class=\"anchor\" href=\"#2掌握slider组件能够运用slider组件完成滑动选择器的制作\">#</a> 2. 掌握 slider 组件，能够运用 slider 组件完成滑动选择器的制作</h2>\n<p><strong>slider 组件</strong></p>\n<p>概念：在微信小程序中，通过 slider 组件可以定义一个滑动选择器。</p>\n<p>slider 组件是微信小程序表单组件中的一种，用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。</p>\n<p>slider 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td>number</td>\n<td>最小值，默认值为 0</td>\n</tr>\n<tr>\n<td>max</td>\n<td>number</td>\n<td>最大值，默认值为 100</td>\n</tr>\n<tr>\n<td>step</td>\n<td>number</td>\n<td>步长，取值大于 0, 可被 max-min 整除，默认值为 1</td>\n</tr>\n<tr>\n<td>value</td>\n<td>number</td>\n<td>当前取值，默认值为 0</td>\n</tr>\n<tr>\n<td>activeColor</td>\n<td>color</td>\n<td>已选择的颜色，默认值为 #1aad19</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>color</td>\n<td>背景条的颜色，默认值为 #e9e9e9</td>\n</tr>\n<tr>\n<td>block-size</td>\n<td>number</td>\n<td>滑块的大小，取值范围为 12∼2812∼28 , 默认值为 28</td>\n</tr>\n<tr>\n<td>block-color</td>\n<td>color</td>\n<td>滑块的颜色，默认值为 #ffffff</td>\n</tr>\n<tr>\n<td>show-value</td>\n<td>boolean</td>\n<td>是否显示当前值，默认值为 false</td>\n</tr>\n<tr>\n<td>bindchange</td>\n<td>eventhandle</td>\n<td>完成一次拖曳后触发的事件</td>\n</tr>\n<tr>\n<td>bindchanging</td>\n<td>eventhandle</td>\n<td>拖曳过程中触发的事件</td>\n</tr>\n</tbody>\n</table>\n<p>slider 组件的使用</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slider</span> <span class=\"token attr-name\">bindchanging</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sliderChanging<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">show-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 当拖曳 slider 组件的滑块时，会执行 sliderChanging () 事件处理函数 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过设置 show-value 属性可将当前值显示出来 --></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中编写事件处理函数 sliderChanging ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">sliderChanging</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//e.detail.value 表示当前 slider 组件的值</span></pre></td></tr></table></figure><p>保存代码后，会看到页面中显示了一个滑动选择器。拖曳滑块到 13 的页面效果</p>\n<p>如下图所示：</p>\n<p><img data-src=\"C:/Users/86198/AppData/Roaming/Typora/typora-user-images/image-20240608190317944.png\" alt=\"image-20240608190317944\" /></p>\n<h2 id=\"3掌握背景音频api了解背景音频api的常用属性和方法\"><a class=\"anchor\" href=\"#3掌握背景音频api了解背景音频api的常用属性和方法\">#</a> 3. 掌握背景音频 API, 了解背景音频 API 的常用属性和方法</h2>\n<p><strong>音频 API</strong></p>\n<p>概念：在微信小程序中，使用背景音频 API 可以实现音频的后台播放。</p>\n<p>在使用背景音频 API 前，需要在 app.json 文件中配置 requiredBackgroundModes 属性，开启微信小程序后台音频播放功能，示例代码如下。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"requiredBackgroundModes\"</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">\"audio\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">//requiredBackgroundModes 属性值为数组类型，在数组中添加 audio 项表示开启后台音频播放功能。</span></pre></td></tr></table></figure><p>背景音频 API 的使用方法如下：</p>\n<p>第一步：通过 wx.getBackgroundAudioManager () 方法获取到一个 BackgroundAudioManager 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var audioGbam =  wx.getBackgroundAudioManager()  <span class=\"token comment\">//BackgroundAudioManager 实例</span></pre></td></tr></table></figure><p>第二步：通过 BackgroundAudioManager 实例的相关属性和方法实现背景音频的播放。</p>\n<p>BackgroundAudioManager 实例常用的属性和方法：</p>\n<table>\n<thead>\n<tr>\n<th>** 类型                                                            **</th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>属性</td>\n<td><strong>src</strong></td>\n<td>背景音频的数据源，默认值为空字符串，当设置了新的 src 时，会自动开始播放，目前支持的格式有 M4A、AAC、MP3、WAV</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>startTime</strong></td>\n<td>背景音频开始播放的位置（单位：秒）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>title</strong></td>\n<td>背景音频标题，用于原生音频播放器的背景音频标题</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>playbackRate</strong></td>\n<td>播放速率，范围 0.5∼2.00.5∼2.0 倍，默认值为 1 倍</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>duration</strong></td>\n<td>当前背景音频的长度（单位：秒），只有在有合法 src 时有效（只读）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>currentTime</strong></td>\n<td>当前背景音频的播放位置（单位：秒），只有在有合法 src 时有效（只读）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>paused</strong></td>\n<td>当前是否暂停或停止（只读）</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>play()</strong></td>\n<td>播放背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>pause()</strong></td>\n<td>暂停背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>seek()</strong></td>\n<td>跳转到指定位置</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>stop()</strong></td>\n<td>停止背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onCanplay()</strong></td>\n<td>背景音频进入可以播放状态的事件（参数为回调函数）</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onWaiting()</strong></td>\n<td>监听背景音频加载中事件，当背景音频因为数据不足需要停下来加载时会触发</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onError()</strong></td>\n<td>监听背景音频播放错误事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onPlay()</strong></td>\n<td>监听背景音频播放事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onPause()</strong></td>\n<td>监听背景音频暂停事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onSeeking()</strong></td>\n<td>监听背景音频开始跳转操作事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onSeeked()</strong></td>\n<td>监听背景音频完成跳转操作事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onEnded()</strong></td>\n<td>监听背景音频自然播放结束事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onStop()</strong></td>\n<td>监听背景音频停止事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onTimeUpdate()</strong></td>\n<td>监听背景音频播放进度更新事件，只有微信小程序在前台时会回调</td>\n</tr>\n</tbody>\n</table>\n<p>背景音频 API 的使用案例：</p>\n<p>在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onReady</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">// 创建 BackgroundAudioManager 实例     </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">var</span> audio <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">getBackgroundAudioManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">// 当开始播放音乐时，输出调试信息     </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      audio<span class=\"token punctuation\">.</span><span class=\"token function\">onPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始播放'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 设置背景音频的标题     </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      audio<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'音乐标题'</span>     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 设置背景音频的资源地址     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'http://127.0.0.1:3000/1.mp3'</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"4掌握录音api了解录音api的常用方法\"><a class=\"anchor\" href=\"#4掌握录音api了解录音api的常用方法\">#</a> 4. 掌握录音 API, 了解录音 API 的常用方法</h2>\n<p><strong>录音 API</strong></p>\n<p>概念：录音功能在日常生活中使用很广泛，使用该功能可以记录重要的工作内容、优美的歌声等。那么在微信小程序中如何实现录音功能呢？微信小程序为开发者提供了录音 API。</p>\n<p>录音 API 的使用方法如下：</p>\n<p>第一步：通过 wx.getRecorderManager () 方法获取到一个 RecorderManager 实例，该实例是一个全局唯一的录音管理器，用于实现录音功能；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var recorderManager =  wx.getRecorderManager()  <span class=\"token comment\">//RecorderManager 实例</span></pre></td></tr></table></figure><p>第二步：通过 RecorderManager 实例的方法实现录音功能。</p>\n<p>RecorderManager 实例的常用方法如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start()</td>\n<td>开始录音</td>\n</tr>\n<tr>\n<td>pause()</td>\n<td>暂停录音</td>\n</tr>\n<tr>\n<td>resume()</td>\n<td>继续录音</td>\n</tr>\n<tr>\n<td>stop()</td>\n<td>停止录音</td>\n</tr>\n<tr>\n<td>onStart()</td>\n<td>监听录音开始事件</td>\n</tr>\n<tr>\n<td>onResume()</td>\n<td>监听录音继续事件</td>\n</tr>\n<tr>\n<td>onPause()</td>\n<td>监听录音暂停事件</td>\n</tr>\n<tr>\n<td>onStop()</td>\n<td>监听录音结束事件</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onFrameRecord</td>\n<td>监听已录制完指定帧大小的文件事件。如果设置了 frameSize, 则会回调此事件</td>\n</tr>\n<tr>\n<td>onError()</td>\n<td>监听录音错误事件</td>\n</tr>\n<tr>\n<td>onInterruptionBegin</td>\n<td>监听录音因为系统占用而被中断开始事件。以下场景会触发此事件：微信语音聊天、微信视频聊天，此事件触发后，录音会被暂停。pause 事件在此事件后触发</td>\n</tr>\n<tr>\n<td>onInterruptionEnd</td>\n<td>监听录音中断结束事件。在收到 interruptionBegin 事件后，微信小程序内所有录音会暂停，收到此事件之后才可再次录音成功</td>\n</tr>\n</tbody>\n</table>\n<p>录音 API 的使用案例：</p>\n<p>在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取全局唯一的录音管理器 RecorderManager  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> recorderManager <span class=\"token operator\">=</span>  wx<span class=\"token punctuation\">.</span><span class=\"token function\">getRecorderManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 监听录音开始事件  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'录音开始'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 监听录音停止事件  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">onStop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'录音停止'</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>tempFilePath<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 开始录音  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 5 秒后自动停止录音  </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"5掌握音频api了解音频api的常用属性和方法\"><a class=\"anchor\" href=\"#5掌握音频api了解音频api的常用属性和方法\">#</a> 5. 掌握音频 API, 了解音频 API 的常用属性和方法</h2>\n<p><strong>音频 API</strong></p>\n<p>概念：在微信小程序中，除了背景音频 API 可以实现播放音频的功能外，还可以通过音频 API 来播放音乐。</p>\n<p>背景音频 API 与音频 API 的区别在于背景音频 API 支持后台播放，而音频 API 不支持后台播放。</p>\n<p>音频 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createInnerAudioContext () 方法获取到一个 InnerAudioContext 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var audioCtx =  wx.createInnerAudioContext()  <span class=\"token comment\">//InnerAudioContext 实例</span></pre></td></tr></table></figure><p>第二步：通过 InnerAudioContext 实例的属性和方法实现音频播放功能。</p>\n<p>InnerAudioContext 实例常用的属性和方法与 BackgroundAudioManager 实例常用的属性和方法相同，但是 InnerAudioContext 实例没有 title 属性。InnerAudioContext 实例特有的属性和方法如下表所示</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>类型</strong></td>\n<td><strong>名称</strong></td>\n<td><strong>说明</strong></td>\n<td><strong>默认值</strong></td>\n</tr>\n<tr>\n<td>属性</td>\n<td>autoplay</td>\n<td>是否自动开始播放，默认值为 false</td>\n<td>false</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>loop</td>\n<td>是否循环播放，默认值为 false</td>\n<td>false</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>volume</td>\n<td>音量，范围 0∼10∼1 , 默认值为 1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>destroy()</td>\n<td>销毁当前实例</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>音频 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建 InnerAudioContext 实例  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var audioCtx =  wx.createInnerAudioContext()  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 设置音频资源地址  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>audioCtx.src =  'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/1.mp3'  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 当开始播放音频时，输出调试信息  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>audioCtx.onPlay(() => <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console.log('开始播放')  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)  <span class=\"token comment\">// 开始播放  audioCtx.play ()</span></pre></td></tr></table></figure><h2 id=\"6掌握文件上传api能够运用wxuploadfile方法实现将本地资源上传到服务器中\"><a class=\"anchor\" href=\"#6掌握文件上传api能够运用wxuploadfile方法实现将本地资源上传到服务器中\">#</a> 6. 掌握文件上传 API, 能够运用 wx.uploadFile () 方法实现将本地资源上传到服务器中</h2>\n<p><strong>上传 API</strong></p>\n<p>概念：在生活中，经常需要进行文件上传操作，例如更改头像需要将新的头像上传到服务器中。微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。</p>\n<p>wx.uploadFile () 方法的常用选项：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器地址，该项为必填项</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP 请求的 Header, Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>文件对应的 key, 开发者在服务器端可以通过这个 key 获取文件的二进制内容，该项为必填项</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>要上传的文件资源的路径（本地路径），该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（接口调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>文件上传 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.uploadFile(<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      filePath<span class=\"token operator\">:</span> '文件路径'<span class=\"token punctuation\">,</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      name<span class=\"token operator\">:</span> 'image'<span class=\"token punctuation\">,</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/upload',   </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          console.log(res)   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h2 id=\"7掌握文件下载api能够运行wxdownloadfile方法实现资源文件的下载\"><a class=\"anchor\" href=\"#7掌握文件下载api能够运行wxdownloadfile方法实现资源文件的下载\">#</a> 7. 掌握文件下载 API, 能够运行 wx.downloadFile () 方法实现资源文件的下载</h2>\n<p><strong>下载 API</strong></p>\n<p>概念：在生活中，经常需要下载一些文件，例如将网络中某个参考资料下载到本地进行查看。</p>\n<p>微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。</p>\n<p>wx.downloadFile () 方法的常用选项如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>下载资源 url, 该项为必填项</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP 请求的 Header,Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>指定文件下载后存储的路径（本地路径）</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（接口调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>文件下载 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.downloadFile(<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/tree.jpg',   </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 判断服务器响应的状态码    </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        if (res.statusCode === <span class=\"token number\">200</span>) <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            console.log(res.tempFilePath)    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h2 id=\"8掌握canvas组件了解画布api以及如何使用画布api进行绘图的基本步骤\"><a class=\"anchor\" href=\"#8掌握canvas组件了解画布api以及如何使用画布api进行绘图的基本步骤\">#</a> 8. 掌握 canvas 组件，了解画布 API 以及如何使用画布 API 进行绘图的基本步骤</h2>\n<p>canvas 组件</p>\n<p>概念：在 HTML 中，<canvas>标签可用于图形的绘制，也可用于创建图片特效和动画。在微信小程序中，canvas 组件也起着类似作用，可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。</p>\n<p>canvas 组件的常用属性如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>指定 canvas 组件的类型，支持 2D 和 WebGL</td>\n</tr>\n<tr>\n<td>canvas-id</td>\n<td>string</td>\n<td>canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性</td>\n</tr>\n<tr>\n<td>disable-scroll</td>\n<td>boolean</td>\n<td>当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false</td>\n</tr>\n<tr>\n<td>bindtouchstart</td>\n<td>eventhandle</td>\n<td>手指触摸动作开始</td>\n</tr>\n<tr>\n<td>bindtouchmove</td>\n<td>eventhandle</td>\n<td>手指触摸后移动</td>\n</tr>\n<tr>\n<td>bindtouchend</td>\n<td>eventhandle</td>\n<td>手指触摸动作结束</td>\n</tr>\n<tr>\n<td>bindtouchcancel</td>\n<td>eventhandle</td>\n<td>手指触摸动作被打断，例如来电提醒，弹窗等</td>\n</tr>\n<tr>\n<td>bindlongtap</td>\n<td>eventhandle</td>\n<td>手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动</td>\n</tr>\n<tr>\n<td>binderror Grill</td>\n<td>eventhandle</td>\n<td>当发生错误时触发 error 事件</td>\n</tr>\n</tbody>\n</table>\n<p>canvas 组件的使用案例：</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myCanvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2d<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas 2D 接口。 --></span></pre></td></tr></table></figure><p>②在 pages/index/index.wxss 文件中编写 canvas 组件的页面样式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#myCanvas</span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了方便查看默认 canvas 组件的大小，设置了 1px 的红色实心边框，页面效果如下图所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191216979.png\" alt=\"image-20240608191216979\" /></p>\n<p><strong>画布 API</strong></p>\n<p>概念：通过 canvas 组件创建画布后，要想在画布中绘制图案，需要通过画布 API 来完成。</p>\n<p>画布 API 的使用方法如下：</p>\n<ol>\n<li>第一步：获取 Canvas 实例；</li>\n<li>第二步：通过 Canvas 实例获取 RenderingContext（渲染上下文）实例；</li>\n<li>第三步：通过 RenderingContext 实例的属性和方法完成绘图操作。</li>\n</ol>\n<p>获取 Canvas 实例的示例代码如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.createSelectorQuery()  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.select('#myCanvas')             </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 页面中 & lt;canvas > 标签的 id  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.fields(<span class=\"token punctuation\">&#123;</span> node<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>)  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.exec(res => <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 获取 Canvas 实例     </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    const canvas = res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.node     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 调用 getContext () 方法获取 RenderingContext 实例     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    const ctx = canvas.getContext('2d')  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><p>RenderingContext 实例的常用属性和方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>属性</td>\n<td>width</td>\n<td>画布宽度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>height</td>\n<td>画布高度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>fillStyle</td>\n<td>设置或返回用于填充绘画的颜色、渐变或模式</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>strokeStyle</td>\n<td>设置描边颜色</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>lineWidth</td>\n<td>设置或返回当前的线条宽度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>font</td>\n<td>设置或返回文本内容的当前字体属性</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>textBaseline</td>\n<td>设置或返回在绘制文本时使用的当前文本基线</td>\n</tr>\n</tbody>\n</table>\n<p><strong>方法表</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>方法</td>\n<td>rect()</td>\n<td>创建矩形</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>fillRect()</td>\n<td>绘制 “被填充” 的矩形</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>strokeRect()</td>\n<td>绘制矩形（无填充）</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>clearRect()</td>\n<td>在给定的矩形内清除指定的像素</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>stroke()</td>\n<td>绘制已定义的路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>beginPath()</td>\n<td>开始创建一个路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>closePath()</td>\n<td>创建从当前点回到起始点的路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>moveTo()</td>\n<td>把路径移动到画布中的指定点，不创建线条</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>arc()</td>\n<td>创建一条弧线</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>rotate()</td>\n<td>以原点为中心顺时针旋转当前坐标轴。多次调用旋转的角度会叠加。原点可以用 translate () 方法修改，旋转角度为正数，顺时针旋转，否则逆时针旋转</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>translate()</td>\n<td>对当前坐标系的原点 (0,0) 进行变换。默认的坐标系原点为页面左上角</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>fillText()</td>\n<td>在画布上绘制被填充的文本</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>restore()</td>\n<td>恢复之前保存的绘图上下文</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>save()</td>\n<td>保存绘图上下文</td>\n</tr>\n</tbody>\n</table>\n<p>Canvas 绘制的基本步骤</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>draw<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2d<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas  2D 接口。--></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中编写代码获取 Canvas 实例。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onReady</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">createSelectorQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#draw'</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">fields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">node</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSmile</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function-variable function\">drawRect</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 绘制矩形，在后面的步骤中实现  </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 绘制笑脸，在后面的步骤中实现  </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>③编写绘制矩形函数 drawRect ()。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>drawRect<span class=\"token operator\">:</span>  function (ctx) <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      ctx.fillStyle = 'rgba(<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span>)'   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ctx.fillRect(<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span>)  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>矩形的绘制效果如下图所示</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191626985.png\" alt=\"image-20240608191626985\" /></p>\n<p>④接下来绘制笑脸，先把调用绘制矩形的方法注释起来。</p>\n<p>//  this.drawRect(ctx)</p>\n<p>⑤编写绘制笑脸函数 drawSmile ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">// 设置线条颜色为红色，线条宽度为 2px     </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#f00'</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 移动画笔坐标位置，绘制外部大圆    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 移动画笔坐标位置，绘制外部嘴巴线条     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#125;</span>             <span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  原有代码……</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 移动画笔坐标位置，绘制左眼圆圈</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 移动画笔坐标位置，绘制右眼圆圈</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>笑脸的绘制效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191856755.png\" alt=\"image-20240608191856755\" /></p>\n<h2 id=\"9习题\"><a class=\"anchor\" href=\"#9习题\">#</a> 9. 习题</h2>\n<p>一、 填空题</p>\n<ol>\n<li>上传文件的 API 是___。</li>\n<li>下载文件的 API 是___。</li>\n<li>scroll-view 组件可以实现___效果。</li>\n<li>在 scroll-view 组件中，用 ___属性用于设置横向滚动条的位置。</li>\n<li>在 slider 组件的属性中，___属性用于设置进度条的最大值。</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>在 canvas 组件中，canvas-id 属性是其唯一标识符。（ ）</li>\n<li>在<slider>组件上添加 bindchanging=&quot;sliderChanging&quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ ）</li>\n<li>canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（ ）</li>\n<li>文件上传 API 使用的方法是 wx.uploadFile ()。（ ）</li>\n</ol>\n<p>三、 选择题</p>\n<ol>\n<li>下列选项中，用于滑动选择某一个值的组件是（ ）。</li>\n</ol>\n<pre><code>A. view     B. slider    C. input      D. audio\n</code></pre>\n<ol start=\"2\">\n<li>下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ ）。</li>\n</ol>\n<pre><code>A. stop()     B. seek()    C. pause()     D. play()\n</code></pre>\n<ol start=\"3\">\n<li>下列关于 canvas 组件的说法中，错误的是（ ）。</li>\n</ol>\n<pre><code>A. CSS动画对canvas组件无效\n\nB. canvas-id是canvas组件的唯一标识符\n\nC. canvas组件用于自定义绘制图形\n\nD. 在同一个页面中，canvas-id是唯一的\n</code></pre>\n<ol start=\"4\">\n<li>下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（ ）。</li>\n</ol>\n<pre><code>A. start()方法表示开始录音\n\nB. pause()方法表示暂停录音\n    \nC. resume()方法表示继续录音\n\nD. onError()方法表示停止录音，点击开始录音后会从中断的地方接着继续录音\n</code></pre>\n<p>四、 简答题</p>\n<ol>\n<li>简述 BackgroundAudioManager 实例的属性和方法。</li>\n<li>简述使用画布 API 进行绘图的基本步骤。</li>\n<li>简述如何实现文件上传和文件下载。</li>\n</ol>\n<h1 id=\"第五章-微信小程序常用api下\"><a class=\"anchor\" href=\"#第五章-微信小程序常用api下\">#</a> 第五章 微信小程序常用 API（下）</h1>\n<h2 id=\"1掌握动画api了解如何获取animation实例导出动画队列所用的方法能够完成动画的制作\"><a class=\"anchor\" href=\"#1掌握动画api了解如何获取animation实例导出动画队列所用的方法能够完成动画的制作\">#</a> 1. 掌握动画 API，了解如何获取 Animation 实例，导出动画队列所用的方法，能够完成动画的制作</h2>\n<p><strong>动画 API</strong></p>\n<p>概念：动画 API 用于在微信小程序中完成动画效果的制作。在微信小程序中添加动画效果，可以让页面中的内容动起来。动画效果对浏览者的视觉冲击力远远高于静态画面，更能吸引浏览者。</p>\n<p>动画 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createAnimation () 方法获取 Animation 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var animation = wx.createAnimation(Object  object)  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">// Animation 实例</span></pre></td></tr></table></figure><p>wx.createAnimation () 方法的常用选项：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>动画持续时间，单位毫秒，默认值为 400 毫秒</td>\n</tr>\n<tr>\n<td>timingFunction</td>\n<td>string</td>\n<td>动画的效果，默认值为 linear</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>number</td>\n<td>动画延迟时间，单位毫秒，默认值为 0</td>\n</tr>\n<tr>\n<td>transformOrigin</td>\n<td>string</td>\n<td>设置旋转元素的基本位置，默认值为 50% 50% 0, 这 3 个数字分别表示 x 轴、y 轴和 z 轴的位置</td>\n</tr>\n</tbody>\n</table>\n<p>wx.createAnimation () 方法的 timingFunction 选项有多个合法值，具体如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>合法值</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>linear</td>\n<td>动画从头到尾的速度是相同的</td>\n</tr>\n<tr>\n<td>ease</td>\n<td>动画以低速开始，然后加快，在结束前变慢</td>\n</tr>\n<tr>\n<td>ease-in</td>\n<td>动画以低速开始</td>\n</tr>\n<tr>\n<td>ease-in-out</td>\n<td>动画以低速开始和结束</td>\n</tr>\n<tr>\n<td>ease-out</td>\n<td>动画以低速结束</td>\n</tr>\n<tr>\n<td>step-start</td>\n<td>动画第一帧就跳至结束状态直到结束</td>\n</tr>\n<tr>\n<td>step-end</td>\n<td>动画一直保持开始状态，最后一帧跳到结束状态</td>\n</tr>\n</tbody>\n</table>\n<p>Animation 实例的常用方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rotate(number angle)</td>\n<td>旋转。从原点顺时针旋转一个角度，角度取值范围为 [-180,180]</td>\n</tr>\n<tr>\n<td>export()</td>\n<td>导出动画队列。export () 方法每次调用后会清掉之前的动画操作</td>\n</tr>\n<tr>\n<td>scale(number s x, number sy)</td>\n<td>缩放。当仅有 sx 参数时，表示在 x 轴、y 轴同时缩放 sx 倍数；如果 sx 和 sx 参数都存在，sx 表示 x 轴缩放倍数，sx 表示 y 轴缩放倍数平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx</td>\n</tr>\n<tr>\n<td>translate(number tx, number ty)</td>\n<td>平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx 和 ty 参数都存在，表示在 x 轴偏移 tx, 单位为 px, 在 y 轴偏移 ty, 单位为 px</td>\n</tr>\n<tr>\n<td>skew(number ax, number ay)</td>\n<td>倾斜。相对 x 轴、y 轴倾斜的角度，角度取值范围为 [-180,180]</td>\n</tr>\n<tr>\n<td>step(Object object)</td>\n<td>表示一组动画完成。当调用任意多个动画方法组成一组动画时，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画</td>\n</tr>\n<tr>\n<td>opacity(number value)</td>\n<td>设置透明度，范围为 0∼10∼1</td>\n</tr>\n<tr>\n<td>backgroundColor(string value)</td>\n<td>设置背景色</td>\n</tr>\n<tr>\n<td>width(numberstring value)</td>\n<td>设置宽度</td>\n</tr>\n<tr>\n<td>top(numberlstring value)</td>\n<td>设置 top 值</td>\n</tr>\n</tbody>\n</table>\n<p>动画 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createAnimation () 方法获取 Animation 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var  animation = wx.createAnimation(Object object)  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">//  Animation 实例</span></pre></td></tr></table></figure><p>第二步：调用 Animation 实例的方法实现动画效果。</p>\n<p>动画 API 的使用案例：</p>\n<p>①在 pages/index/index.js 文件的 Page ({}) 中定义页面初始数据 move。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">move</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//move 对象用于保存动画队列</span></pre></td></tr></table></figure><p>②在 pages/index/index.wxml 文件编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">animation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>动画<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 绑定事件处理函数为 translate () --></span></pre></td></tr></table></figure><p>③在 pages/index/index.js 文件的 Page ({}) 中定义 translate () 函数实现动画效果。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">translate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">var</span> animation <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">timingFunction</span><span class=\"token operator\">:</span> <span class=\"token string\">'ease'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  animation<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">move</span><span class=\"token operator\">:</span> animation<span class=\"token punctuation\">.</span><span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>④完成上述代码后，运行程序，单击 “动画” 按钮后，“hello world” 向右下角平移，单击按钮前后的对比效果图如下。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192447959.png\" alt=\"image-20240608192447959\" /></p>\n<h2 id=\"2-熟悉登录流程时序教材152页图5-7\"><a class=\"anchor\" href=\"#2-熟悉登录流程时序教材152页图5-7\">#</a> 2. 熟悉登录流程时序，教材 152 页图 5-7</h2>\n<p><strong>登录流程时序</strong></p>\n<p>概念：登录流程时序由微信小程序官方文档提供，通过对登录流程时序的学习，可以完成登录功能的开发。微信官方提供的登录功能可以方便地获取微信提供的用户身份标识，从而使开发者服务器能够识别每个微信小程序用户。</p>\n<p>微信小程序官方文档提供的登录流程时序图如下所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192525712.png\" alt=\"image-20240608192525712\" /></p>\n<p>用户登录流程的参与角色：</p>\n<p>小程序：用户使用的客户端，即微信小程序。</p>\n<p>开发者服务器：微信小程序的后端服务器，用于为微信小程序用户提供服务。</p>\n<p>微信接口服务：微信为开发者服务器提供的接口。</p>\n<p>登录流程：</p>\n<p>①获取 code</p>\n<ul>\n<li>在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。</li>\n</ul>\n<p>②将 code 发送给开发者服务器</p>\n<ul>\n<li>在获取 code 后，使用 wx.request () 方法将 code 发送给开发者服务器。</li>\n</ul>\n<p>③校验登录凭证</p>\n<ul>\n<li>开发者服务器将 appid、appsecret 和 code 发送给微信接口服务进行登录凭证校验，如果校验成功，微信接口服务会返回 session_key、openid、unionid 等信息。</li>\n</ul>\n<p>④开发者服务器自定义登录态</p>\n<ul>\n<li>在开发者服务器中为登录成功的用户生成一个 token，然后通过验证 token 的有效性来识别用户的登录状态。</li>\n</ul>\n<h2 id=\"3掌握登录api能够运用wxlogin方法实现用户登录\"><a class=\"anchor\" href=\"#3掌握登录api能够运用wxlogin方法实现用户登录\">#</a> 3. 掌握登录 API, 能够运用 wx.login 方法实现用户登录</h2>\n<p>作用：登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。</p>\n<p>wx.login () 方法的常用选项</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位毫秒</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>string</td>\n<td>用户登录凭证（有效期 5 分钟）</td>\n</tr>\n</tbody>\n</table>\n<p>注意：code 即为调用 wx.login () 方法获取的用户登录凭证。</p>\n<p>wx.login () 方法的具体用法</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.login(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    if (res.code) <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">//res.code 为登录获取的 code   </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      wx.request(<span class=\"token punctuation\">&#123;</span>\t<span class=\"token comment\">// 登录成功之后发起网络请求</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/login',</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        method<span class=\"token operator\">:</span> 'post'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> code<span class=\"token operator\">:</span> res.code\t<span class=\"token comment\">// 设置参数，把 code 传递给服务器&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> else <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 登录失败，在控制台输出错误信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      console.log('登录失败！' + res.errMsg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h2 id=\"4掌握头像填写功能能够实现头像选择和昵称填写\"><a class=\"anchor\" href=\"#4掌握头像填写功能能够实现头像选择和昵称填写\">#</a> 4. 掌握头像填写功能，能够实现头像选择和昵称填写</h2>\n<p>头像昵称填写：</p>\n<p>概念：头像昵称是在用户登录小程序后，显示在页面中的头像和昵称。目前，微信小程序不允许开发者在未获得用户同意的情况下展示用户的头像和昵称，当需要展示时，应使用微信小程序的头像昵称填写功能。</p>\n<p>头像选择的使用方法</p>\n<p>将 button 组件的 open-type 属性值设置为 chooseAvatar，当用户选择头像之后，可通过 bindchooseavatar 绑定的事件处理函数获取头像信息的临时路径。</p>\n<p>昵称填写的使用方法</p>\n<p>将 input 组件的 type 属性值设置为 nickname，当用户在此 input 进行输入时，键盘上方会展示用户的微信昵称，用户可以使用该昵称，也可以手动填写昵称。</p>\n<p>演示头像昵称填写功能的使用</p>\n<p>①在 pages/index/index.js 文件中编写页面所需的数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> defaultAvatar <span class=\"token operator\">=</span> <span class=\"token string\">'/images/avatar.png'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">avatarUrl</span><span class=\"token operator\">:</span> defaultAvatar</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//defaultAvatar 默认头像途径</span></pre></td></tr></table></figure><p>②在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar-wrapper<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chooseAvatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindchooseavatar</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onChooseAvatar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nickname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nickname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入昵称<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>③在 pages/index/index.wxss 文件中编写样式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.avatar-wrapper</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">.avatar</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 20rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token selector\">.nickname</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #000000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>④在 pages/index/index.js 文件中编写 onChooseAvatar () 函数，获取头像信息的临时路径。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onChooseAvatar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> avatarUrl <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>detail</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> avatarUrl <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"5什么是websocket以及如何创建websocket连接\"><a class=\"anchor\" href=\"#5什么是websocket以及如何创建websocket连接\">#</a> 5. 什么是 WebSocket 以及如何创建 WebSocket 连接</h2>\n<p>WebSocket API：允许服务器主动向微信小程序发送消息。</p>\n<p>WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议，它会在客户端与服务器之间专门建立一条通道，使客户端与服务器之间的数据交换变得简单。客户端与服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。</p>\n<p>通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接，该方法的常用选项如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器 WSS 接口地址</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP Header, Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>wx.connectSocket () 方法的使用</p>\n<p>调用 wx.connectSocket () 方法创建 WebSocket 连接</p>\n<pre><code>wx.connectSocket(&#123;\n  // 服务器地址\n  url: 'ws://127.0.0.1:3000'      \t\n&#125;)   \n</code></pre>\n<h2 id=\"6本地缓存异步同步的区别主要api及其作用教材154页表5-6\"><a class=\"anchor\" href=\"#6本地缓存异步同步的区别主要api及其作用教材154页表5-6\">#</a> 6. 本地缓存异步，同步的区别，主要 API 及其作用，教材 154 页表 5-6</h2>\n<p>数据缓存 API：</p>\n<p>作用：数据缓存 API 可以实现数据的缓存，从而加快读取数据的速度。在微信小程序中，需要保存一些临时数据时，例如，保存用户登录后获取到的 token，或保存一些经常需要从服务器中下载的数据，提高微信小程序下次打开时的加载速度。</p>\n<p>常见的数据缓存方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>方式</strong></th>\n<th><strong>方法</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>异步</td>\n<td>wx.setStorage()</td>\n<td>将数据存储在本地缓存指定的 key 中</td>\n</tr>\n<tr>\n<td>wx.getStorage()</td>\n<td>从本地缓存中异步获取指定 key 的内容</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.getStorageInfo()</td>\n<td>异步获取当前 storage 的相关信息</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.removeStorage(0)</td>\n<td>从本地缓存中移除指定 key 的方法</td>\n<td></td>\n</tr>\n<tr>\n<td>同步</td>\n<td>wx.setStorageSync()</td>\n<td>wx.setStorage () 方法的同步版本</td>\n</tr>\n<tr>\n<td>wx.getStorageSync()</td>\n<td>wx.getStorage () 方法的同步版本</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.getStorageInfoSync()</td>\n<td>wx.getStorageInfo () 方法的同步版本</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.removeStorageSync()</td>\n<td>wx.removeStorage (0) 方法的同步版本</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>存储的最大数据长度：单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</p>\n<p>wx.setStorage () 方法的常用选项如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>本地缓存中指定的 key, 该项为必填项</td>\n</tr>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>需要存储的内容，只支持原生类型，Date 及能够通过 JSON.stringify () 序列化的对象，该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>异步与同步的区别：</p>\n<p>异步方法：</p>\n<ul>\n<li>不会阻塞当前任务</li>\n<li>异步方法需要通过传入回调函数获取结果</li>\n<li>在发生错误时，异步方法会执行 fail () 回调函数返回错误</li>\n</ul>\n<p>同步方法：</p>\n<ul>\n<li>同步方法名以 Sync 结尾</li>\n<li>同步方法直到处理完之后才能继续向下执行</li>\n<li>同步方法通过返回值获取结果</li>\n<li>在发生错误时，同步方法通过 try...catch 捕获异常来获取错误信息</li>\n</ul>\n<p>使用异步方法存储、获取缓存数据示例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">setStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 存储缓存数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 本地缓存中指定的 key</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 需要存储的内容（支持对象或字符串）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 接口调用成功的回调函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\t\t<span class=\"token comment\">// 接口调用失败的回调函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">getStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 获取缓存数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 本地缓存中指定的 key</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 接口调用成功的回调函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\t\t<span class=\"token comment\">// 接口调用失败的回调函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"7登录凭证code所使用的方法\"><a class=\"anchor\" href=\"#7登录凭证code所使用的方法\">#</a> 7. 登录凭证 code 所使用的方法</h2>\n<p>在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。</p>\n<p>登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。</p>\n<p>success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>string</td>\n<td>用户登录凭证（有效期 5 分钟）</td>\n</tr>\n</tbody>\n</table>\n<p>code 即为调用 wx.login () 方法获取的用户登录凭证。</p>\n<h2 id=\"8能够用wxnavigateto实现非标签页跳转\"><a class=\"anchor\" href=\"#8能够用wxnavigateto实现非标签页跳转\">#</a> 8. 能够用 wx.navigateTo () 实现非标签页跳转</h2>\n<p>路由 API 的作用：用于实现页面跳转。</p>\n<p><strong>常用的路由 API 方法</strong>：</p>\n<p>wx.navigateTo()</p>\n<ul>\n<li>用于跳转到另一个页面，跳转后原来的页面会保留，并在导航栏左侧提供一个返回按钮，用户可以返回到之前的页面。该方法不能用于标签页切换。</li>\n</ul>\n<p>wx.redirectTo()</p>\n<ul>\n<li>用于关闭当前页面，跳转到一个新页面。该方法不能用于标签页切换。</li>\n</ul>\n<p>wx.switchTab()</p>\n<ul>\n<li>用于跳转到某个标签页，并关闭其他所有非标签页的页面。</li>\n</ul>\n<p>路由 API 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>需要跳转的路径，路径后可以带参数。参数与路径之间使用 “？” 分隔，参数键与参数值用 “=” 相连，不同参数用 “&amp;” 分隔，如 'path?key=value&amp;key2=value2', 该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p><strong>路由 API 的使用</strong></p>\n<p>①在 pages/index/index.wxml 文件中编写一个按钮，实现点击按钮时触发 navigateTo () 函数。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>  <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>navigateTo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>路由<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;!--绑定事件处理函数为navigateTo()</pre></td></tr></table></figure><p>②在 app.json 文件中创建 pages/list/list 页面，然后在 pages/index/index.js 文件中编写 navigateTo () 函数，实现跳转到 pages/list/list 页面。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Page(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  navigateTo<span class=\"token operator\">:</span> function () <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wx.navigateTo(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      url<span class=\"token operator\">:</span> '/pages/list/list?id=<span class=\"token number\">1</span>'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      success<span class=\"token operator\">:</span> () => <span class=\"token punctuation\">&#123;</span>console.log('跳转成功')<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      fail<span class=\"token operator\">:</span> () => <span class=\"token punctuation\">&#123;</span>console.log('跳转失败')<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      complete<span class=\"token operator\">:</span> () => <span class=\"token punctuation\">&#123;</span>console.log('跳转完成')<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><p>③在 pages/list/list.js 文件中编写 onLoad () 函数，输出 options 参数的值。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>④保存上述代码后，运行程序，单击 “路由” 按钮后，在控制台中输出结果。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608193335249.png\" alt=\"image-20240608193335249\" /></p>\n<p>通过查看控制台中的结果，可以看出从 index 页面成功跳转到 list 页面，并传递了参数 id。</p>\n<h2 id=\"9习题-2\"><a class=\"anchor\" href=\"#9习题-2\">#</a> 9. 习题</h2>\n<p>一、 填空题</p>\n<ol>\n<li>从本地缓存中异步获取指定 key 的内容使用____方法。</li>\n<li>微信小程序通过 ____方法获取登录凭证 code。</li>\n<li>微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。</li>\n<li>map 组件中地图视野发生变化时触发  ____  事件。</li>\n<li>在 Animation 实例的常用方法中，  ____  用于导出动画队列。</li>\n<li>微信小程序通过   ____ 方法创建一个 WebSocket 连接。</li>\n<li>微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。</li>\n<li>微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件。</li>\n</ol>\n<p>二、 判断题</p>\n<ol>\n<li>在微信小程序中，调用 wx.login () 方法可以获取临时登录凭证 code。（ ）</li>\n<li>同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ ）</li>\n<li>openid 是微信小程序的唯一标识。（ ）</li>\n<li>使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（ ）</li>\n<li>animation.export () 方法每次调用后仍保留之前的动画操作。（ ）</li>\n</ol>\n<p>三、 选择题</p>\n<ol>\n<li>下列选项中，用于实现非标签页之间的跳转的方法是（ ）。</li>\n</ol>\n<pre><code>A.  wx.navigateTo()\n\nB.   wx.navigate()\n\nC.   wx.navigatorTo()\n\nD.  wx.navigator()\n</code></pre>\n<ol start=\"2\">\n<li>下列选项中，关于 map 组件属性说法错误的是（ ）。</li>\n</ol>\n<pre><code>A.  longitude为中心经度\n\nB.   scale为缩放级别，取值范围为1~20\n\nC.   latitude为中心纬度\n\nD.  markers为标记点数组\n</code></pre>\n<ol start=\"3\">\n<li>下列选项中，关于 openid 的说法错误的是（ ）。</li>\n</ol>\n<pre><code>A.  openid是用户的唯一标识\n\nB.   openid不等同于微信用户id\n\nC.   同一个微信用户在不同AppID的微信小程序中的openid是不同的\n\nD.  openid是微信小程序的唯一标识\n</code></pre>\n<ol start=\"4\">\n<li>下列选项中，关于 marker 对象的属性说法错误的是（ ）。</li>\n</ol>\n<pre><code>A.  title标注点名称\n\nB.   zIndex表示显示层级\n\nC.   alpha表示标注的透明度\n\nD.  userInfo表示用户信息对象\n</code></pre>\n<ol start=\"5\">\n<li>下列选项中，关于数据缓存说法错误的是（ ）。</li>\n</ol>\n<pre><code>A.  wx.getStorage()方法用于从本地缓存中异步获取指定key内容\n\nB.   wx.removeStorageSync()方法用于以异步的方式从本地缓存中移除指定key\n\nC.   wx.setStorage()方法用于将数据异步存储在本地缓存指定的key\n\nD.  在实现数据缓存的方法中，方法名以Sync结尾的都是同步方法\n</code></pre>\n<p>四、 简答题</p>\n<ol>\n<li>简述如何获取 Animation 实例。</li>\n<li>简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。</li>\n<li>简述如何创建 WebSocket 连接。</li>\n</ol>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序",
                "期末复习"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program5/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program5/",
            "title": "第五章：微信小程序常用API（下）",
            "date_published": "2024-06-19T02:49:27.000Z",
            "content_html": "<p>通过案例的方式讲解微信小程序中常用 API 的使用，主要包括如何使用动画 API 制作动画、如何通过登录 API 实现用户登录、如何调用微信开放能力实现用户头像和昵称的获取、如何通过地图 API 实现地图功能，以及如何通过 WebSocketAPI、SocketTask 实现在线聊天。</p>\n <span id=\"more\"></span>\n<hr />\n<p>学习目标：</p>\n<ul>\n<li>掌握动画 API，能够完成动画的制作</li>\n<li>熟悉登录流程时序，能够归纳微信小程序的登录流程</li>\n<li>掌握登录 API，能够运用 wxlogin () 方法实现用户登录</li>\n<li>掌握数据缓存 API，能够对数据进行存储、获取和移除等操作</li>\n<li>掌握头像昵称填写功能，能够实现头像选择和昵称填写</li>\n<li>掌握腾讯地图 SDK，能够实现腾讯地图 SDK 的接入和使用</li>\n<li>掌握 map 组件，能够灵活运用 map 组件实现地图效果</li>\n<li>掌握地图 API，能够实现地图中地理位置的获取等功能</li>\n<li>掌握位置 API，自能够实现获取当前地理位置的功能</li>\n<li>掌握路由 API，能够利用路由 API 实现页面跳转</li>\n<li>掌握 WebSocket API，能够成功创建 WebSocket 连接</li>\n<li>学握 SocketTask，能够使用 SocketTask 管理 WebSocket 连接</li>\n</ul>\n<h1 id=\"1动画api\"><a class=\"anchor\" href=\"#1动画api\">#</a> 1. 动画 API</h1>\n<p>概念：动画 API 用于在微信小程序中完成动画效果的制作。在微信小程序中添加动画效果，可以让页面中的内容动起来。动画效果对浏览者的视觉冲击力远远高于静态画面，更能吸引浏览者。</p>\n<p>动画 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createAnimation () 方法获取 Animation 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var animation = wx.createAnimation(Object  object)  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">// Animation 实例</span></pre></td></tr></table></figure><p>wx.createAnimation () 方法的常用选项：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>动画持续时间，单位毫秒，默认值为 400 毫秒</td>\n</tr>\n<tr>\n<td>timingFunction</td>\n<td>string</td>\n<td>动画的效果，默认值为 linear</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>number</td>\n<td>动画延迟时间，单位毫秒，默认值为 0</td>\n</tr>\n<tr>\n<td>transformOrigin</td>\n<td>string</td>\n<td>设置旋转元素的基本位置，默认值为 50% 50% 0, 这 3 个数字分别表示 x 轴、y 轴和 z 轴的位置</td>\n</tr>\n</tbody>\n</table>\n<p>wx.createAnimation () 方法的 timingFunction 选项有多个合法值，具体如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>合法值</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>linear</td>\n<td>动画从头到尾的速度是相同的</td>\n</tr>\n<tr>\n<td>ease</td>\n<td>动画以低速开始，然后加快，在结束前变慢</td>\n</tr>\n<tr>\n<td>ease-in</td>\n<td>动画以低速开始</td>\n</tr>\n<tr>\n<td>ease-in-out</td>\n<td>动画以低速开始和结束</td>\n</tr>\n<tr>\n<td>ease-out</td>\n<td>动画以低速结束</td>\n</tr>\n<tr>\n<td>step-start</td>\n<td>动画第一帧就跳至结束状态直到结束</td>\n</tr>\n<tr>\n<td>step-end</td>\n<td>动画一直保持开始状态，最后一帧跳到结束状态</td>\n</tr>\n</tbody>\n</table>\n<p>Animation 实例的常用方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rotate(number angle)</td>\n<td>旋转。从原点顺时针旋转一个角度，角度取值范围为 [-180,180]</td>\n</tr>\n<tr>\n<td>export()</td>\n<td>导出动画队列。export () 方法每次调用后会清掉之前的动画操作</td>\n</tr>\n<tr>\n<td>scale(number s x, number sy)</td>\n<td>缩放。当仅有 sx 参数时，表示在 x 轴、y 轴同时缩放 sx 倍数；如果 sx 和 sx 参数都存在，sx 表示 x 轴缩放倍数，sx 表示 y 轴缩放倍数平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx</td>\n</tr>\n<tr>\n<td>translate(number tx, number ty)</td>\n<td>平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx 和 ty 参数都存在，表示在 x 轴偏移 tx, 单位为 px, 在 y 轴偏移 ty, 单位为 px</td>\n</tr>\n<tr>\n<td>skew(number ax, number ay)</td>\n<td>倾斜。相对 x 轴、y 轴倾斜的角度，角度取值范围为 [-180,180]</td>\n</tr>\n<tr>\n<td>step(Object object)</td>\n<td>表示一组动画完成。当调用任意多个动画方法组成一组动画时，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画</td>\n</tr>\n<tr>\n<td>opacity(number value)</td>\n<td>设置透明度，范围为 0∼10∼1</td>\n</tr>\n<tr>\n<td>backgroundColor(string value)</td>\n<td>设置背景色</td>\n</tr>\n<tr>\n<td>width(numberstring value)</td>\n<td>设置宽度</td>\n</tr>\n<tr>\n<td>top(numberlstring value)</td>\n<td>设置 top 值</td>\n</tr>\n</tbody>\n</table>\n<p>动画 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createAnimation () 方法获取 Animation 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var  animation = wx.createAnimation(Object object)  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">//  Animation 实例</span></pre></td></tr></table></figure><p>第二步：调用 Animation 实例的方法实现动画效果。</p>\n<p>动画 API 的使用案例：</p>\n<p>①在 pages/index/index.js 文件的 Page ({}) 中定义页面初始数据 move。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">move</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//move 对象用于保存动画队列</span></pre></td></tr></table></figure><p>②在 pages/index/index.wxml 文件编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">animation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>动画<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 绑定事件处理函数为 translate () --></span></pre></td></tr></table></figure><p>③在 pages/index/index.js 文件的 Page ({}) 中定义 translate () 函数实现动画效果。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">translate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">var</span> animation <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">timingFunction</span><span class=\"token operator\">:</span> <span class=\"token string\">'ease'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  animation<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">move</span><span class=\"token operator\">:</span> animation<span class=\"token punctuation\">.</span><span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>④完成上述代码后，运行程序，单击 “动画” 按钮后，“hello world” 向右下角平移，单击按钮前后的对比效果图如下。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192447959.png\" alt=\"image-20240608192447959\" /></p>\n<h1 id=\"2-登录流程时序\"><a class=\"anchor\" href=\"#2-登录流程时序\">#</a> 2. 登录流程时序</h1>\n<p><strong>登录流程时序</strong></p>\n<p>概念：登录流程时序由微信小程序官方文档提供，通过对登录流程时序的学习，可以完成登录功能的开发。微信官方提供的登录功能可以方便地获取微信提供的用户身份标识，从而使开发者服务器能够识别每个微信小程序用户。</p>\n<p>微信小程序官方文档提供的登录流程时序图如下所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192525712.png\" alt=\"image-20240608192525712\" /></p>\n<p>用户登录流程的参与角色：</p>\n<p>小程序：用户使用的客户端，即微信小程序。</p>\n<p>开发者服务器：微信小程序的后端服务器，用于为微信小程序用户提供服务。</p>\n<p>微信接口服务：微信为开发者服务器提供的接口。</p>\n<p>登录流程：</p>\n<p>①获取 code</p>\n<ul>\n<li>在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。</li>\n</ul>\n<p>②将 code 发送给开发者服务器</p>\n<ul>\n<li>在获取 code 后，使用 wx.request () 方法将 code 发送给开发者服务器。</li>\n</ul>\n<p>③校验登录凭证</p>\n<ul>\n<li>开发者服务器将 appid、appsecret 和 code 发送给微信接口服务进行登录凭证校验，如果校验成功，微信接口服务会返回 session_key、openid、unionid 等信息。</li>\n</ul>\n<p>④开发者服务器自定义登录态</p>\n<ul>\n<li>在开发者服务器中为登录成功的用户生成一个 token，然后通过验证 token 的有效性来识别用户的登录状态。</li>\n</ul>\n<h1 id=\"3登录api\"><a class=\"anchor\" href=\"#3登录api\">#</a> 3. 登录 API</h1>\n<p>登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。</p>\n<p>wx.login () 方法的常用选项</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位毫秒</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>string</td>\n<td>用户登录凭证（有效期 5 分钟）</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：code 即为调用 wx.login () 方法获取的用户登录凭证。</p>\n</blockquote>\n<p>wx.login () 方法的具体用法</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.login(<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    if (res.code) <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">//res.code 为登录获取的 code   </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      wx.request(<span class=\"token punctuation\">&#123;</span>\t<span class=\"token comment\">// 登录成功之后发起网络请求</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/login',</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        method<span class=\"token operator\">:</span> 'post'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> code<span class=\"token operator\">:</span> res.code\t<span class=\"token comment\">// 设置参数，把 code 传递给服务器&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> else <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 登录失败，在控制台输出错误信息</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      console.log('登录失败！' + res.errMsg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h1 id=\"4数据缓存api\"><a class=\"anchor\" href=\"#4数据缓存api\">#</a> 4. 数据缓存 API</h1>\n<p>数据缓存 API 可以实现数据的缓存，从而加快读取数据的速度。在微信小程序中，需要保存一些临时数据时，例如，保存用户登录后获取到的 token， 或保存一些经常需要从服务器中下载的数据，提高微信小程序下次打开时的加载速度。</p>\n<p>常见的数据缓存方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>方式</strong></th>\n<th><strong>方法</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>异步</td>\n<td>wx.setStorage()</td>\n<td>将数据存储在本地缓存指定的 key 中</td>\n</tr>\n<tr>\n<td>wx.getStorage()</td>\n<td>从本地缓存中异步获取指定 key 的内容</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.getStorageInfo()</td>\n<td>异步获取当前 storage 的相关信息</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.removeStorage(0)</td>\n<td>从本地缓存中移除指定 key 的方法</td>\n<td></td>\n</tr>\n<tr>\n<td>同步</td>\n<td>wx.setStorageSync()</td>\n<td>wx.setStorage () 方法的同步版本</td>\n</tr>\n<tr>\n<td>wx.getStorageSync()</td>\n<td>wx.getStorage () 方法的同步版本</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.getStorageInfoSync()</td>\n<td>wx.getStorageInfo () 方法的同步版本</td>\n<td></td>\n</tr>\n<tr>\n<td>wx.removeStorageSync()</td>\n<td>wx.removeStorage (0) 方法的同步版本</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<p>存储的最大数据长度：</p>\n<p>单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</p>\n</blockquote>\n<p>wx.setStorage () 方法的常用选项如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>本地缓存中指定的 key, 该项为必填项</td>\n</tr>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>需要存储的内容，只支持原生类型，Date 及能够通过 JSON.stringify () 序列化的对象，该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>异步与同步的区别：</p>\n<p>异步方法：</p>\n<ul>\n<li>不会阻塞当前任务</li>\n<li>异步方法需要通过传入回调函数获取结果</li>\n<li>在发生错误时，异步方法会执行 fail () 回调函数返回错误</li>\n</ul>\n<p>同步方法：</p>\n<ul>\n<li>同步方法名以 Sync 结尾</li>\n<li>同步方法直到处理完之后才能继续向下执行</li>\n<li>同步方法通过返回值获取结果</li>\n<li>在发生错误时，同步方法通过 try...catch 捕获异常来获取错误信息</li>\n</ul>\n<p>使用异步方法存储、获取缓存数据示例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">setStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 存储缓存数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 本地缓存中指定的 key</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 需要存储的内容（支持对象或字符串）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 接口调用成功的回调函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\t\t<span class=\"token comment\">// 接口调用失败的回调函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">getStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 获取缓存数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 本地缓存中指定的 key</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 接口调用成功的回调函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\t\t<span class=\"token comment\">// 接口调用失败的回调函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"5头像昵称填写\"><a class=\"anchor\" href=\"#5头像昵称填写\">#</a> 5. 头像昵称填写</h1>\n<p>头像昵称是在用户登录小程序后，显示在页面中的头像和昵称。目前，微信小程序不允许开发者在未获得用户同意的情况下展示用户的头像和昵称，当需要展示时，应使用微信小程序的头像昵称填写功能。</p>\n<p>头像选择的使用方法</p>\n<ul>\n<li>将 button 组件的 open-type 属性值设置为 chooseAvatar，当用户选择头像之后，可通过 bindchooseavatar 绑定的事件处理函数获取头像信息的临时路径。</li>\n</ul>\n<p>昵称填写的使用方法</p>\n<ul>\n<li>将 input 组件的 type 属性值设置为 nickname，当用户在此 input 进行输入时，键盘上方会展示用户的微信昵称，用户可以使用该昵称，也可以手动填写昵称。</li>\n</ul>\n<p>演示头像昵称填写功能的使用</p>\n<p>①在 pages/index/index.js 文件中编写页面所需的数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> defaultAvatar <span class=\"token operator\">=</span> <span class=\"token string\">'/images/avatar.png'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">avatarUrl</span><span class=\"token operator\">:</span> defaultAvatar</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//defaultAvatar 默认头像途径</span></pre></td></tr></table></figure><p>②在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar-wrapper<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open-type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chooseAvatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindchooseavatar</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onChooseAvatar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nickname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nickname<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入昵称<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>③在 pages/index/index.wxss 文件中编写样式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.avatar-wrapper</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">.avatar</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 160rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 20rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token selector\">.nickname</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100rpx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #000000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>④在 pages/index/index.js 文件中编写 onChooseAvatar () 函数，获取头像信息的临时路径。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onChooseAvatar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> avatarUrl <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>detail</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> avatarUrl <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在手机中预览微信小程序。首先在微信开发者工具中单击 “预览” 按钮，获得预览二维码，然后用手机中的微信客户端扫描二维码打开微信小程序，初始页面效果如图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619105810691.png\" alt=\"image-20240619105810691\" /></p>\n<h1 id=\"6ap函数\"><a class=\"anchor\" href=\"#6ap函数\">#</a> 6.AP () 函数</h1>\n<p>若要在微信小程序启动、显示、隐藏时执行某些操作，或者在各个页面中需要共享一些数据时，可以通过 App () 函数实现。App () 函数用于注册一个微信小程序，该函数必须在 app.js 文件中调用，且只能调用一次。</p>\n<p>App () 函数的参数是一个对象，通过该对象可以指定应用生命周期回调函数和保存一些共享数据。</p>\n<p>应用生命周期函数</p>\n<ul>\n<li>应用生命周期函数是指微信小程序 “启动→运行→销毁” 期间依次调用的函数</li>\n</ul>\n<p>应用生命周期回调函数如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onLaunch()</td>\n<td>监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次</td>\n</tr>\n<tr>\n<td>onShow()</td>\n<td>监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发</td>\n</tr>\n<tr>\n<td>onError()</td>\n<td>错误监听函数，微信小程序脚本错误或者 API 调用报错时触发</td>\n</tr>\n<tr>\n<td>onHide()</td>\n<td>监听微信小程序切后台，微信小程序从前台进入后台时触发</td>\n</tr>\n<tr>\n<td>onPageNotFound()</td>\n<td>页面不存在监听函数，微信小程序要打开的页面不存在时触发</td>\n</tr>\n</tbody>\n</table>\n<p>App 实例的获取：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//getApp () 函数获取微信小程序全局唯一的 App 实例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过 getApp () 函数获取 App 实例之后，可以访问 App 实例的属性或调用 App 实例的方法。</p>\n<blockquote>\n<p>注意：</p>\n<p>定义在 App () 函数的参数 {} 中的方法，可以直接使用 this 获取 App 实例，不必使用 getApp () 函数。</p>\n</blockquote>\n<h1 id=\"7腾讯地图sdk\"><a class=\"anchor\" href=\"#7腾讯地图sdk\">#</a> 7. 腾讯地图 SDK</h1>\n<p>腾讯地图 SDK 是一套为开发者提供多种地理位置服务的工具，可以使开发者在自己的应用中加入地图相关的功能，轻松访问腾讯地图服务和数据， 更好地实现微信小程序的地图功能。</p>\n<p>腾讯地图 SDK 的使用步骤分为以下 5 步：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619110214364.png\" alt=\"image-20240619110214364\" /></p>\n<p>腾讯地图 SDK 的使用方法：</p>\n<ul>\n<li>首先引入 SDK 核心类，通过 new QQMapWX () 构造函数创建 QQMapWX 实例；</li>\n<li>然后通过该实例的相关属性和方法实现地点搜索等功能。在这里使用 search () 方法搜索周边兴趣点（Point of Interest，POI）信息，例如 “酒店”“餐饮”“学校” 等。</li>\n</ul>\n<p>search () 方法的常用选项如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>keyword</td>\n<td>string</td>\n<td>POI 搜索关键词，默认周边搜索</td>\n</tr>\n<tr>\n<td>location</td>\n<td>string|object</td>\n<td>位置坐标，默认为当前位置</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>搜索成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>搜索失败的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>通过示例代码演示腾讯地图 SDK 的使用。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 SDK 核心类，js 文件的位置可自行放置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> QQMapWX <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../libs/qqmap-wx-jssdk.js'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 创建 QQMapWX 实例</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> qqmapsdk <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QQMapWX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'填写自己申请的开发者密钥'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 实现逻辑代码的编写</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 实现逻辑代码的编写</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function-variable function\">onShow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        qqmapsdk<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 搜索信息 keyword: ' 酒店 ',</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>保存代码后，控制台中可以看到通过 “酒店” 关键词搜索到的周边 POI 信息。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619110510746.png\" alt=\"image-20240619110510746\" /></p>\n<h1 id=\"8map组件\"><a class=\"anchor\" href=\"#8map组件\">#</a> 8.map 组件</h1>\n<p>在微信小程序中，map 组件可以为用 户提供地图功能。map 组件可以在页 面中显示地图，并且支持移动、缩放、添加标记点等功能。map 组件通过 &lt;map&gt;&lt; /map &gt; 标签来定义。</p>\n<p>map 组件的常用属性如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>longitude</td>\n<td>number</td>\n<td>中心经度，为必填项</td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>number</td>\n<td>中心纬度，为必填项</td>\n</tr>\n<tr>\n<td>scale</td>\n<td>number</td>\n<td>缩放级别，取值范围为 3~20，默认值为 16</td>\n</tr>\n<tr>\n<td>markers</td>\n<td>Array.<marker></td>\n<td>标记点数组</td>\n</tr>\n<tr>\n<td>show-location</td>\n<td>boolean</td>\n<td>是否显示带有方向的当前定位点，默认值为 false</td>\n</tr>\n<tr>\n<td>bindregionchange</td>\n<td>eventhandle</td>\n<td>视野发生变化时触发的事件处理函数</td>\n</tr>\n</tbody>\n</table>\n<p>markers 数组中的每一项为一个表示标记点的 marker 对象，marker 对象的属性如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>number</td>\n<td>标记点 id，在事件处理函数中通过 id 可以识别当前事件对应的标记点</td>\n</tr>\n<tr>\n<td>longitude</td>\n<td>number</td>\n<td>经度，浮点数，取值范围为 - 180~180，为必填项</td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>number</td>\n<td>纬度，浮点数，取值范围为 - 90~90，为必填项</td>\n</tr>\n<tr>\n<td>iconPath</td>\n<td>string</td>\n<td>设置标记点的图标路径，支持网络路径、本地路径、代码包路径，为必填项</td>\n</tr>\n<tr>\n<td>title</td>\n<td>string</td>\n<td>标记点名，点击时显示</td>\n</tr>\n<tr>\n<td>zIndex</td>\n<td>number</td>\n<td>显示层级</td>\n</tr>\n<tr>\n<td>alpha</td>\n<td>number</td>\n<td>标记点的透明度，默认值为 1，即无透明，取值范围为 0~1</td>\n</tr>\n<tr>\n<td>width</td>\n<td>number/string</td>\n<td>标记点的图标宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>number/string</td>\n<td>标记点的图标高度</td>\n</tr>\n</tbody>\n</table>\n<p>marker 标记点的定义：</p>\n<p>①在 pages/index/index.wxml 文件中为 map 组件添加 markers 属性</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>map</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myMap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">markers</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>map</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>②在 pages/index/index.wxss 中编写样式，让地图组件占满整个页面</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">map</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>③在 pages/index/index.js 文件中定义数据</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">markers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>               <span class=\"token literal-property property\">iconPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'/images/gps.png'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               <span class=\"token literal-property property\">longitude</span><span class=\"token operator\">:</span> <span class=\"token number\">113.324520</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>               <span class=\"token literal-property property\">latitude</span><span class=\"token operator\">:</span> <span class=\"token number\">23.099994</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>               <span class=\"token comment\">// 标记点 id</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>               <span class=\"token comment\">// 图标路径</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>               <span class=\"token comment\">// 经度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>               <span class=\"token comment\">// 维度（广州市</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h1 id=\"9地图api\"><a class=\"anchor\" href=\"#9地图api\">#</a> 9. 地图 API</h1>\n<p>地图 API 可以在 map 组件创建地图完成后，在 JS 文件中对地图进行控制。小 程序中，使用 wx.createMapContext () 方法创建 MapContext（Map 上下文） 实例，然后通过该实例的相关方法来 操作 map 组件。</p>\n<p>MapContext 实例的常用方法如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getCenterLocation()</td>\n<td>获取当前地图中心的经纬度。返回 GCJ-02 坐标系</td>\n</tr>\n<tr>\n<td>moveToLocation()</td>\n<td>将地图中心移至当前定位点</td>\n</tr>\n</tbody>\n</table>\n<p>MapContext 实例的 getCenterLocation () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iconPath</td>\n<td>string</td>\n<td>图标路径，支持网络路径、本地路径、代码包路径</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数，通过其参数可以获取 longitude  （经度）和 longitude（纬度）</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>MapContext 实例的 moveToLocation () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>longitude</td>\n<td>number</td>\n<td>经度</td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>number</td>\n<td>纬度</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>获取当前地图中心经纬度的示例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 调用 getCenterLocation () 方法获取当前地图中心的经度和纬度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mapCtx<span class=\"token punctuation\">.</span><span class=\"token function\">getCenterLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> longitude <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>longitude </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> latitude <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>latitude </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"10位置api\"><a class=\"anchor\" href=\"#10位置api\">#</a> 10. 位置 API</h1>\n<p>位置 API 用于实现获取当前地理位置的功能。在日常生活中，通过地图软件可以实时定位自己或者朋友的位置， 方便出行。微信小程序中，通过调用 wx.getLocation () 方法的 success 回调函数获取定位结果。</p>\n<blockquote>\n<p>注意：</p>\n<p>对于正式项目，若要使用位置 API，需要在微信小程序管理后台的 “开发管理 - 接口设置” 页面中申请开通，并且还需要在 app.json 文件中添加请求用户隐私信息的声明</p>\n</blockquote>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 请求用户隐私信息的声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"requiredPrivateInfos\"</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span> <span class=\"token string\">\"getLocation\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>wx.getLocation () 方法的常用选项如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>设为 WGS84 可返回 GPS 坐标，设为 GCJ-02 可  以返回用于微信内置地图查看位置的坐标</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>wx.getLocation () 方法的 success () 回调函数的参数是一个对象，该对象的属性如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>latitude</td>\n<td>number</td>\n<td>纬度，取值范围为 - 90~90</td>\n</tr>\n<tr>\n<td>longitude</td>\n<td>number</td>\n<td>经度，取值范围为 - 180~180</td>\n</tr>\n<tr>\n<td>speed</td>\n<td>number</td>\n<td>速度，单位为 m/s</td>\n</tr>\n<tr>\n<td>altitude</td>\n<td>number</td>\n<td>高度，单位为 m</td>\n</tr>\n</tbody>\n</table>\n<p>wx.getLocation () 方法的使用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 调用 wx.getLocation () 方法获取当前地理位置的经度和纬度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">getLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'gcj02'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> longitude <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>longitude </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> latitude <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>latitude </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"11路由api\"><a class=\"anchor\" href=\"#11路由api\">#</a> 11. 路由 API</h1>\n<p>路由 API 的作用：用于实现页面跳转。</p>\n<p>常用的路由 API 方法：</p>\n<p>wx.navigateTo()</p>\n<ul>\n<li>用于跳转到另一个页面，跳转←后原来的页面会保留，并在导 “航栏左侧提供一个返回按钮，用户可以返回到之前的页面。该方法不能用于标签页切换。</li>\n</ul>\n<p>wx.redirectTo()</p>\n<ul>\n<li>用于关闭当前页面，跳转到一←众新页面。该方法不能用于标 &lt; 签页切换。</li>\n</ul>\n<p>wx.switchTab()</p>\n<ul>\n<li>用于跳转到某个标签页，并关 &lt; 团其他所有非标签页的页面。</li>\n</ul>\n<p>路由 API 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>需要跳转的路径，路径后可以带参数。参数与路径之间使用 “?” 分隔，参数键与参数值用 “=” 相连，不同参数用 “&amp;” 分隔，如  'path?key=value&amp;key2=value2'，该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>路由 API 的使用</p>\n<p>①在 pages/index/index:wxml 文件中编写一见点击按钮时触发、navigateTo () 函数。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;button bindtapnavigateTo 路由<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>绑定事件处理函数为 navigateTo ()</p>\n<p>②在 app.json 文件中创建 pages/list/list 页面，然后在 pages/index/index.js</p>\n<p>文件中编写 navigateTo () 函数，实现跳转到 pages/list/list 页面</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">navigateTo</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/pages/list/list?id=1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳转成功'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'跳转完成'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>③在 pages/list/list.js 文件中编写 onLoad () 函数，输出 options 参数的值</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>④保存上述代码后，运行程序，单击 “路由” 按钮后，在控制台中输出结果</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619112021773.png\" alt=\"image-20240619112021773\" /></p>\n<p>通过查看控制台中的结果，可以看出从 index 页面成功跳转到 list 页面，并传递了参数 id。</p>\n<h1 id=\"12websocket-api\"><a class=\"anchor\" href=\"#12websocket-api\">#</a> 12.WebSocket API</h1>\n<p>WebSocket API：允许服务器主动向微信小程序发送消息。</p>\n<p>WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议，它会在客户端与服务器之间专门建立一条通道，使客户端与服务器之间的数据交换变得简单。客户端与服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。</p>\n<p>通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接，该方法的常用选项如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器 WSS 接口地址</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP Header, Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>wx.connectSocket () 方法的使用</p>\n<p>调用 wx.connectSocket () 方法创建 WebSocket 连接</p>\n<pre><code>wx.connectSocket(&#123;\n  // 服务器地址\n  url: 'ws://127.0.0.1:3000'      \t\n&#125;)   \n</code></pre>\n<h1 id=\"13sockettask\"><a class=\"anchor\" href=\"#13sockettask\">#</a> 13.SocketTask</h1>\n<p>当项目中同时存在多个 WebSocket 的连 接 时 ， 使 用 SocketTask 管 理 WebSocket 连接，会使每一条链路的生命周期都更可控。而使用 wx 对象的方法可能会出现一些与预期不一致的情况。</p>\n<p>SocketTask 实例的创建</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//ws1 是一个 SocketTask 实例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> ws1 <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">connectSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'ws://127.0.0.1:3000'</span></pre></td></tr></table></figure><p>SocketTask 实例的常用方法如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>send()</td>\n<td>通过 WebSocket 连接发送数据</td>\n</tr>\n<tr>\n<td>close()</td>\n<td>关闭 WebSocket 连接</td>\n</tr>\n<tr>\n<td>onOpen()</td>\n<td>监听 WebSocket 连接打开事件</td>\n</tr>\n<tr>\n<td>onClose()</td>\n<td>监听 WebSocket 连接关闭事件</td>\n</tr>\n<tr>\n<td>onError()</td>\n<td>监听 WebSocket 错误事件</td>\n</tr>\n<tr>\n<td>onMessage()</td>\n<td>监听 WebSocket 连接接收到服务器的消息事件</td>\n</tr>\n</tbody>\n</table>\n<p>SocketTask 实例的 send () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string/ArrayBuffer</td>\n<td>需要发送的内容，该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<p>SocketTask 实例的 close () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>number</td>\n<td>一个数字值，即关闭连接的状态号，表示连接被关闭的原因。默认值为 1000，表示正常关闭连接</td>\n</tr>\n<tr>\n<td>reson</td>\n<td>string</td>\n<td>一个可读的字符串，表示连接被关闭的原因</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n<tr>\n<td>code</td>\n<td>number</td>\n<td>一个数字值，即关闭连接的状态号，表示连接被关闭的原因。默认值为 1000，表示正常关闭连接</td>\n</tr>\n<tr>\n<td>reson</td>\n<td>string</td>\n<td>一个可读的字符串，表示连接被关闭的原因</td>\n</tr>\n</tbody>\n</table>\n<p>SocketTask 实例的 onOpen () 方法的属性如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>连接成功的 HTTP 响应 header</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>object</td>\n<td>网络请求过程中一些调试信息</td>\n</tr>\n</tbody>\n</table>\n<p>SocketTask 的使用：</p>\n<p>n 创建 WebSocket 连接、监听 WebSocket 连接打开事件、监听 WebSocket 接收到服务器的消息事件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 创建 WebSocket 连接</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> ws1 <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">connectSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 监听 WebSocket 连接打开事件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ws1<span class=\"token punctuation\">.</span><span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 监听 WebSocket 接收到服务器的消息事件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ws1<span class=\"token punctuation\">.</span><span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建 WebSocket 连接</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> ws1 <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">connectSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'ws://127.0.0.1:3000'</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 本地服务器地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 连接成功</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resConnect</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resConnect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 连接失败</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resConnectError</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resConnectError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>监听 WebSocket 连接打开事件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ws1<span class=\"token punctuation\">.</span><span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ws1<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resSend</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resSend<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">resSendError</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resSendError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>监听 WebSocket 接收到服务器的消息事件</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ws1<span class=\"token punctuation\">.</span><span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program4/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program4/",
            "title": "第四章：微信小程序常用API（上）",
            "date_published": "2024-06-19T00:30:27.000Z",
            "content_html": "<p>微信小程序为开发者提供了大量的 API。开发者通过 API 可以获得微信底层封装的高级特性， 同时可以很方便地调用微信提供的各种能力，例如网络请求、获取用户信息、本地存储等 能力。</p>\n <span id=\"more\"></span>\n<hr />\n<p>学习目标：</p>\n<ul>\n<li>掌握 scroll-view 组件，能够完成视图区域的横向滚动或者纵向滚动</li>\n<li>掌握 slider 组件，能够运用 slider 组件完成滑动选择器的制作</li>\n<li>掌握 &lt;include&gt; 标签，能够运用 &lt; include &gt; 标签引用其他文件中的代码</li>\n<li>掌握背景音频 API，能够运用背景音频 API 实现音频后台播放、音频暂停等功能</li>\n<li>掌握录音 API，能够运用录音 API 实现录音功能</li>\n<li>掌握音频 API，能够运用音频 API 实现音频播放、暂停等功能</li>\n<li>掌握选择媒体 API，能够运用 wx.chooseMedia () 方法选择图片或视频</li>\n<li>掌握图片预览 APIreviewlmage () 方法预览图片</li>\n<li>掌握文件上传 API，能够实现将本地资源上传到服务器中</li>\n<li>能够运用 wx.downloadFile0) 方法实现资源文件的下载掌握文件下载 API</li>\n<li>掌握 canvas 组件，能够灵活运用 canvas 组件创建画布</li>\n<li>掌握画布 API，能够运用画布 API 完成图形的绘制</li>\n</ul>\n<h1 id=\"1scroll-view\"><a class=\"anchor\" href=\"#1scroll-view\">#</a> 1.scroll-view</h1>\n<p>当一个容器中的内容有很多时，如果容器无法完整显示内容，则可以通过滚动操作来查看完整内容。</p>\n<p>在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动， 默认是不滚动的， 需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。</p>\n<p>scroll-view 组件的常用属性如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>scroll-x</td>\n<td>boolean</td>\n<td>允许横向滚动，默认值为 false</td>\n</tr>\n<tr>\n<td>scroll-y</td>\n<td>boolean</td>\n<td>允许纵向滚动，默认值为 false</td>\n</tr>\n<tr>\n<td>scroll-top</td>\n<td>number/string</td>\n<td>设置竖向滚动条的位置，默认值为空</td>\n</tr>\n<tr>\n<td>scroll-left</td>\n<td>number/string</td>\n<td>设置横向滚动条的位置，默认值为空</td>\n</tr>\n<tr>\n<td>scroll-into-view</td>\n<td>string</td>\n<td>当前可在哪个方向滚动，则在哪个方向滚动到该  元素。值为某子元素 id（id 不能以数字开头）</td>\n</tr>\n<tr>\n<td>scroll-with-animation</td>\n<td>boolean</td>\n<td>在设置滚动条位置时是否使用动画过渡，默认值  为 false</td>\n</tr>\n<tr>\n<td>bindscrolltoupper</td>\n<td>eventhandle</td>\n<td>滚动到顶部 / 左边时触发的事件</td>\n</tr>\n<tr>\n<td>bindscrolltolower</td>\n<td>eventhandle</td>\n<td>滚动到底部 / 右边时触发的事件</td>\n</tr>\n<tr>\n<td>bindscroll</td>\n<td>eventhandle</td>\n<td>滚动时触发的事件</td>\n</tr>\n</tbody>\n</table>\n<p>允许横向滚动、纵向滚动后， 还需要使 scroll- view 组件中内容的宽度和高度大于 scroll-view 组件本身的宽度和高度，这样才能滚动。</p>\n<p>在实际开发中，由于 scroll-view 组件的默认宽度为 100%，会占满整个屏幕，所以当内容的宽度超出屏幕宽度显示范围时，即可横向滚动。</p>\n<p>若要实现纵向滚动，则需要在样式中为 scroll-view 组件设置一个固定高度，否则 scroll-view 组件会被内容撑大，导致无法纵向滚动。</p>\n<p>scroll-view 组件的使用案例：</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scroll-view</span> <span class=\"token attr-name\">scroll-x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scroll-y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">bindscroll</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span> <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to bottom right<span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scroll-view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">&lt;!-- scroll-view 组件设置了允许横向滚动和纵向滚动。--></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中添加 scroll () 事件处理函数输出 e.detail 的值。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">scroll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 通过 e.detail 获取滚动时的位置信息。</span></pre></td></tr></table></figure><p>拖曳滚动条使 scroll () 函数执行，然后在控制台中查看输出结果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608190115198.png\" alt=\"image-20240608190115198\" /></p>\n<p>e.detail 为自定义事件所携带的数据，下面对上图中获取到的信息进行讲解，具体如下。</p>\n<ul>\n<li>scrollLeft：横向滚动条左侧到视图左边的距离。</li>\n<li>scrollTop：纵向滚动条上端到视图顶部的距离。</li>\n<li>scrollHeight：纵向滚动条在 Y 轴上最大滚动距离。</li>\n<li>scrollWidth：横向滚动条在 X 轴上最大的滚动距离。</li>\n<li>deltaX：横向滚动条的滚动状态。</li>\n<li>deltaY：纵向滚动条的滚动状态。</li>\n</ul>\n<h1 id=\"2slider组件\"><a class=\"anchor\" href=\"#2slider组件\">#</a> 2.slider 组件</h1>\n<p>在微信小程序中，通过 slider 组件可以定义一个滑动选择器。</p>\n<p>slider 组件是微信小程序表单组件中的一种， 用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。</p>\n<p>slider 组件的常用属性如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td>number</td>\n<td>最小值，默认值为 0</td>\n</tr>\n<tr>\n<td>max</td>\n<td>number</td>\n<td>最大值，默认值为 100</td>\n</tr>\n<tr>\n<td>step</td>\n<td>number</td>\n<td>步长，取值大于 0，可被 max-min 整除，默认值为 1</td>\n</tr>\n<tr>\n<td>value</td>\n<td>number</td>\n<td>当前取值，默认值为 0</td>\n</tr>\n<tr>\n<td>activeColor</td>\n<td>color</td>\n<td>已选择的颜色，默认值为 #1aad19</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>color</td>\n<td>背景条的颜色，默认值为 #e9e9e9</td>\n</tr>\n<tr>\n<td>block-size</td>\n<td>number</td>\n<td>滑块的大小，取值范围为 12~28，默认值为 28</td>\n</tr>\n<tr>\n<td>block-color</td>\n<td>color</td>\n<td>滑块的颜色，默认值为 #ffffff</td>\n</tr>\n<tr>\n<td>show-value</td>\n<td>boolean</td>\n<td>是否显示当前值，默认值为 false</td>\n</tr>\n<tr>\n<td>bindchange</td>\n<td>eventhandle</td>\n<td>完成一次拖曳后触发的事件</td>\n</tr>\n<tr>\n<td>bindchanging</td>\n<td>eventhandle</td>\n<td>拖曳过程中触发的事件</td>\n</tr>\n</tbody>\n</table>\n<p>slider 组件的使用</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slider</span> <span class=\"token attr-name\">bindchanging</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sliderChanging<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">show-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 当拖曳 slider 组件的滑块时，会执行 sliderChanging () 事件处理函数 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过设置 show-value 属性可将当前值显示出来 --></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中编写事件处理函数 sliderChanging ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">sliderChanging</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//e.detail.value 表示当前 slider 组件的值</span></pre></td></tr></table></figure><p>保存代码后，会看到页面中显示了一个滑动选择器。拖曳滑块到 13 的页面效果</p>\n<p>如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608190317944.png\" alt=\"image-20240608190317944\" /></p>\n<p>在控制台中可以看到 sliderChanging () 函数执行时输出的当前 slider 值如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619101313690.png\" alt=\"image-20240619101313690\" /></p>\n<h1 id=\"3-include标签\"><a class=\"anchor\" href=\"#3-include标签\">#</a> 3.&lt;include&gt; 标签</h1>\n<p>&lt;include&gt; 标签用于引用其他文件的代码， 相当于把引用的代码复制到 &lt; include &gt; 标签的位置。</p>\n<p>&lt;include&gt; 标签的用途主要有以下两点，具体如下：</p>\n<ul>\n<li>当一个 WXML 页面中的代码过多时，会给代码的维护带来麻烦，有时为了找到某一处代码可能需要翻阅几百行。这时可以利用 &lt;include&gt; 标签将代码拆分到多个文件中，从而可以更方便地查找代码。</li>\n<li>当多个 WXML 页面中有相同的部分时，可以将这些公共部分抽取出来，保存到一个单独的 WXML 文件中，然后在用到的地方通过 &lt;include&gt; 标签引入。这样可以减少重复的代码，并且修改时只需要修改一次。</li>\n</ul>\n<p>&lt;include&gt; 标签的使用案例：</p>\n<p>假设在 index.wxml 文件中，页面的头部和尾部是公共部分，可将头部代码抽取到 header.wxml 文件中、尾部代码抽取到 footer.wxml 文件中，然后在 index.wxml 文件中使用<include>标签进行引入。</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- index.wxml --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header.wxml<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>body<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer.wxml<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/header.wxml 文件中编写头部的页面结构</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/footer.wxml 文件中编写尾部的页面结构</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>footer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>当上述代码运行后，实际得到的 pages/index/index.wxml 文件的页面结构如下所示</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>body<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>footer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"4背景音频api\"><a class=\"anchor\" href=\"#4背景音频api\">#</a> 4. 背景音频 API</h1>\n<p>在微信小程序中，使用背景音频 API 可以实现音频的后台播放</p>\n<p>在使用背景音频 API 前，需要在 app.json 文件中配置 requiredBackgroundModes 属性，开启微信小程序后台音频播放功能，示例代码如下。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"requiredBackgroundModes\"</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">\"audio\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">//requiredBackgroundModes 属性值为数组类型，在数组中添加 audio 项表示开启后台音频播放功能。</span></pre></td></tr></table></figure><p>背景音频 API 的使用方法如下：</p>\n<p>第一步：通过 wx.getBackgroundAudioManager () 方法获取到一个 BackgroundAudioManager 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var audioGbam =  wx.getBackgroundAudioManager()  <span class=\"token comment\">//BackgroundAudioManager 实例</span></pre></td></tr></table></figure><p>第二步：通过 BackgroundAudioManager 实例的相关属性和方法实现背景音频的播放。</p>\n<p>BackgroundAudioManager 实例常用的属性和方法：</p>\n<table>\n<thead>\n<tr>\n<th>** 类型                                                            **</th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>属性</td>\n<td><strong>src</strong></td>\n<td>背景音频的数据源，默认值为空字符串，当设置了新的 src 时，会自动开始播放，目前支持的格式有 M4A、AAC、MP3、WAV</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>startTime</strong></td>\n<td>背景音频开始播放的位置（单位：秒）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>title</strong></td>\n<td>背景音频标题，用于原生音频播放器的背景音频标题</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>playbackRate</strong></td>\n<td>播放速率，范围 0.5∼2.00.5∼2.0 倍，默认值为 1 倍</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>duration</strong></td>\n<td>当前背景音频的长度（单位：秒），只有在有合法 src 时有效（只读）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>currentTime</strong></td>\n<td>当前背景音频的播放位置（单位：秒），只有在有合法 src 时有效（只读）</td>\n</tr>\n<tr>\n<td>属性</td>\n<td><strong>paused</strong></td>\n<td>当前是否暂停或停止（只读）</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>play()</strong></td>\n<td>播放背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>pause()</strong></td>\n<td>暂停背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>seek()</strong></td>\n<td>跳转到指定位置</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>stop()</strong></td>\n<td>停止背景音频</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onCanplay()</strong></td>\n<td>背景音频进入可以播放状态的事件（参数为回调函数）</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onWaiting()</strong></td>\n<td>监听背景音频加载中事件，当背景音频因为数据不足需要停下来加载时会触发</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onError()</strong></td>\n<td>监听背景音频播放错误事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onPlay()</strong></td>\n<td>监听背景音频播放事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onPause()</strong></td>\n<td>监听背景音频暂停事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onSeeking()</strong></td>\n<td>监听背景音频开始跳转操作事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onSeeked()</strong></td>\n<td>监听背景音频完成跳转操作事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onEnded()</strong></td>\n<td>监听背景音频自然播放结束事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onStop()</strong></td>\n<td>监听背景音频停止事件</td>\n</tr>\n<tr>\n<td><strong>方法</strong></td>\n<td><strong>onTimeUpdate()</strong></td>\n<td>监听背景音频播放进度更新事件，只有微信小程序在前台时会回调</td>\n</tr>\n</tbody>\n</table>\n<p>背景音频 API 的使用案例：</p>\n<p>在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onReady</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">// 创建 BackgroundAudioManager 实例     </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">var</span> audio <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">getBackgroundAudioManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">// 当开始播放音乐时，输出调试信息     </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      audio<span class=\"token punctuation\">.</span><span class=\"token function\">onPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始播放'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">// 设置背景音频的标题     </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      audio<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'音乐标题'</span>     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 设置背景音频的资源地址     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'http://127.0.0.1:3000/1.mp3'</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"5录音api\"><a class=\"anchor\" href=\"#5录音api\">#</a> 5. 录音 API</h1>\n<p>录音功能在日常生活中使用很广泛，使用该功能可以记录重要的工作内容、优美的歌声等。那么在微信小程序中如何实现录音功能呢？微信小程序为开发者提供了录音 API。</p>\n<p>录音 API 的使用方法如下：</p>\n<p>第一步：通过 wx.getRecorderManager () 方法获取到一个 RecorderManager 实例，该实例是一个全局唯一的录音管理器，用于实现录音功能；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var recorderManager =  wx.getRecorderManager()  <span class=\"token comment\">//RecorderManager 实例</span></pre></td></tr></table></figure><p>第二步：通过 RecorderManager 实例的方法实现录音功能。</p>\n<p>RecorderManager 实例的常用方法如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>start()</td>\n<td>开始录音</td>\n</tr>\n<tr>\n<td>pause()</td>\n<td>暂停录音</td>\n</tr>\n<tr>\n<td>resume()</td>\n<td>继续录音</td>\n</tr>\n<tr>\n<td>stop()</td>\n<td>停止录音</td>\n</tr>\n<tr>\n<td>onStart()</td>\n<td>监听录音开始事件</td>\n</tr>\n<tr>\n<td>onResume()</td>\n<td>监听录音继续事件</td>\n</tr>\n<tr>\n<td>onPause()</td>\n<td>监听录音暂停事件</td>\n</tr>\n<tr>\n<td>onStop()</td>\n<td>监听录音结束事件</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onFrameRecord</td>\n<td>监听已录制完指定帧大小的文件事件。如果设置了 frameSize, 则会回调此事件</td>\n</tr>\n<tr>\n<td>onError()</td>\n<td>监听录音错误事件</td>\n</tr>\n<tr>\n<td>onInterruptionBegin</td>\n<td>监听录音因为系统占用而被中断开始事件。以下场景会触发此事件：微信语音聊天、微信视频聊天，此事件触发后，录音会被暂停。pause 事件在此事件后触发</td>\n</tr>\n<tr>\n<td>onInterruptionEnd</td>\n<td>监听录音中断结束事件。在收到 interruptionBegin 事件后，微信小程序内所有录音会暂停，收到此事件之后才可再次录音成功</td>\n</tr>\n</tbody>\n</table>\n<p>录音 API 的使用案例：</p>\n<p>在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取全局唯一的录音管理器 RecorderManager  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> recorderManager <span class=\"token operator\">=</span>  wx<span class=\"token punctuation\">.</span><span class=\"token function\">getRecorderManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 监听录音开始事件  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'录音开始'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 监听录音停止事件  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">onStop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'录音停止'</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>tempFilePath<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 开始录音  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 5 秒后自动停止录音  </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    recorderManager<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"6音频api\"><a class=\"anchor\" href=\"#6音频api\">#</a> 6. 音频 API</h1>\n<p>在微信小程序中，除了背景音频 API 可以实现播放音频的功能外，还可以通过音频 API 来播放音乐。</p>\n<p>背景音频 API 与音频 API 的区别在于背景音频 API 支持后台播放，而音频 API 不支持后台播放。</p>\n<p>音频 API 的使用方法如下：</p>\n<p>第一步：通过 wx.createInnerAudioContext () 方法获取到一个 InnerAudioContext 实例；</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var audioCtx =  wx.createInnerAudioContext()  <span class=\"token comment\">//InnerAudioContext 实例</span></pre></td></tr></table></figure><p>第二步：通过 InnerAudioContext 实例的属性和方法实现音频播放功能。</p>\n<p>InnerAudioContext 实例常用的属性和方法与 BackgroundAudioManager 实例常用的属性和方法相同，但是 InnerAudioContext 实例没有 title 属性。InnerAudioContext 实例特有的属性和方法如下表所示</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>类型</strong></td>\n<td><strong>名称</strong></td>\n<td><strong>说明</strong></td>\n<td><strong>默认值</strong></td>\n</tr>\n<tr>\n<td>属性</td>\n<td>autoplay</td>\n<td>是否自动开始播放，默认值为 false</td>\n<td>false</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>loop</td>\n<td>是否循环播放，默认值为 false</td>\n<td>false</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>volume</td>\n<td>音量，范围 0∼10∼1 , 默认值为 1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>destroy()</td>\n<td>销毁当前实例</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>音频 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建 InnerAudioContext 实例  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var audioCtx =  wx.createInnerAudioContext()  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 设置音频资源地址  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>audioCtx.src =  'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/1.mp3'  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 当开始播放音频时，输出调试信息  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>audioCtx.onPlay(() => <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console.log('开始播放')  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)  <span class=\"token comment\">// 开始播放  audioCtx.play ()</span></pre></td></tr></table></figure><h1 id=\"7媒体api\"><a class=\"anchor\" href=\"#7媒体api\">#</a> 7. 媒体 API</h1>\n<p>微信小程序提供了选择媒体 API，其用于选择图片或视频，一般用于上传头像、上传照片和上传视频等功能中。</p>\n<p>通过调用 wx.chooseMedia () 方法即可使用选择媒体 API，该方法执行后，会提示用户拍摄图片或视频，或从手机相册中选择图片或视频。</p>\n<p>wx.chooseMedia () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>count</td>\n<td>number</td>\n<td>最多可以选择的文件个数，默认值为 9</td>\n</tr>\n<tr>\n<td>mediaType</td>\n<td>Array.&lt; string&gt;</td>\n<td>文件类型，默认值为 ['image', 'video']</td>\n</tr>\n<tr>\n<td>sourceType</td>\n<td>Array.&lt; string&gt;</td>\n<td>图片和视频选择的来源，默认值为 ['album', 'camera']</td>\n</tr>\n<tr>\n<td>maxDuration</td>\n<td>number</td>\n<td>拍摄视频最长拍摄时间，单位秒。时间范围为 3~60 秒之间。  不限制相册，默认值为 10</td>\n</tr>\n<tr>\n<td>camera</td>\n<td>string</td>\n<td>仅在 sourceType 为 camera 时生效，可设置使用前置或后置  摄像头，默认值为 back</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>mediaType 选项的合法值有 3 个：</p>\n<ul>\n<li>image（只能拍摄图片或从相册选择图片）；</li>\n<li>video（只能拍摄视频或从相册选择视频）；</li>\n<li>mix（可同时选择图片和视频）。</li>\n</ul>\n<p>sourceType 选项的合法值有 2 个：</p>\n<ul>\n<li>album（从相册选择）；</li>\n<li>camera（使用相机拍摄）。</li>\n</ul>\n<p>媒体 API 的使用：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>选择图片<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>为按钮绑定了 test () 函数</p>\n</li>\n<li>\n<p>在 pages/index/index.js 文件中编写事件处理函数 test ()</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">test</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">chooseMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 最多可以选择 9 个文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">mediaType</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 文件类型为只能拍摄图片或从相册中选图片 s</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">ourceType</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'album'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'camera'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 图片来源为从相册选择和使用相机拍摄 success (res) </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 获取用户选择的文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">const</span> tempFilePath <span class=\"token operator\">=</span>res<span class=\"token punctuation\">.</span>tempFiles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tempFilePath</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tempFilePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"8图片预览api\"><a class=\"anchor\" href=\"#8图片预览api\">#</a> 8. 图片预览 API</h1>\n<p>微信小程序提供了图片预览 API，通过图片预览 API 可以预览图片，且在预览过程中用户可以进行保存图片、发送给朋友等操作。</p>\n<p>通过调用 wx.previewImage () 方法即可使用预览图片 API。</p>\n<p>wx.previewImage () 方法的常用选项如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>urls</td>\n<td>Array.&lt; string&gt;</td>\n<td>需要预览的图片链接，为必填项，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>showmenu</td>\n<td>boolean</td>\n<td>是否显示长按菜单，默认值为 true</td>\n</tr>\n<tr>\n<td>current</td>\n<td>string</td>\n<td>当前显示图片的链接，默认值为 urls 的第一张</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>urls 选项支持 http 或者 https 协议的网络图片地址，如果使用本地图片进行预览，会出现黑屏加载不出图片的情况。</p>\n<p>通过 wx.previewImage () 方法预览图片：</p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中定义页面所需的数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span><span class=\"token string\">'http://127.0.0.1:3000/tree.jpg'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>定义了 url 属性，表示图片地址，该图片来自本地服务器</p>\n</li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>image src<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> bindtap<span class=\"token operator\">=</span><span class=\"token string\">\"previewImage\"</span></pre></td></tr></table></figure><p>为 image 组件绑定 tap 事件，事件处理函数为 previewImage () 函数， 点击按钮可实现图片的预览</p>\n</li>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中添加 previewImage () 函数，实现图片的预览</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">previewImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">previewImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url\t<span class=\"token comment\">// 需要预览的图片链接列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行程序，单击图片前后的对比如下图所示:</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619103622537.png\" alt=\"image-20240619103622537\" /></p>\n</li>\n</ol>\n<h1 id=\"9文件上传api\"><a class=\"anchor\" href=\"#9文件上传api\">#</a> 9. 文件上传 API</h1>\n<p>在生活中，经常需要进行文件上传操作，例如更改头像需要将新的头像上传到服务器中。微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。</p>\n<p>wx.uploadFile () 方法的常用选项：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器地址，该项为必填项</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP 请求的 Header, Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>文件对应的 key, 开发者在服务器端可以通过这个 key 获取文件的二进制内容，该项为必填项</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>要上传的文件资源的路径（本地路径），该项为必填项</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（接口调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>文件上传 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.uploadFile(<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      filePath<span class=\"token operator\">:</span> '文件路径'<span class=\"token punctuation\">,</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      name<span class=\"token operator\">:</span> 'image'<span class=\"token punctuation\">,</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/upload',   </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          console.log(res)   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h1 id=\"10下载api\"><a class=\"anchor\" href=\"#10下载api\">#</a> 10. 下载 API</h1>\n<p>在生活中，经常需要下载一些文件，例如将网络中某个参考资料下载到本地进行查看。</p>\n<p>微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。</p>\n<p>wx.downloadFile () 方法的常用选项如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>下载资源 url, 该项为必填项</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>HTTP 请求的 Header,Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>number</td>\n<td>超时时间，单位为毫秒</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>指定文件下载后存储的路径（本地路径）</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（接口调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>文件下载 API 的使用案例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.downloadFile(<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    url<span class=\"token operator\">:</span> 'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:3000/tree.jpg',   </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    success<span class=\"token operator\">:</span> res => <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 判断服务器响应的状态码    </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        if (res.statusCode === <span class=\"token number\">200</span>) <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            console.log(res.tempFilePath)    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><h1 id=\"11canvas组件\"><a class=\"anchor\" href=\"#11canvas组件\">#</a> 11.canvas 组件</h1>\n<p>在 HTML 中，&lt;canvas&gt; 标签可用于图形的绘制，也可用于创建图片特效和动画。在微信小程序中，canvas 组件也起着类似作用，可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。</p>\n<p>canvas 组件的常用属性如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>指定 canvas 组件的类型，支持 2D 和 WebGL</td>\n</tr>\n<tr>\n<td>canvas-id</td>\n<td>string</td>\n<td>canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性</td>\n</tr>\n<tr>\n<td>disable-scroll</td>\n<td>boolean</td>\n<td>当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false</td>\n</tr>\n<tr>\n<td>bindtouchstart</td>\n<td>eventhandle</td>\n<td>手指触摸动作开始</td>\n</tr>\n<tr>\n<td>bindtouchmove</td>\n<td>eventhandle</td>\n<td>手指触摸后移动</td>\n</tr>\n<tr>\n<td>bindtouchend</td>\n<td>eventhandle</td>\n<td>手指触摸动作结束</td>\n</tr>\n<tr>\n<td>bindtouchcancel</td>\n<td>eventhandle</td>\n<td>手指触摸动作被打断，例如来电提醒，弹窗等</td>\n</tr>\n<tr>\n<td>bindlongtap</td>\n<td>eventhandle</td>\n<td>手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动</td>\n</tr>\n<tr>\n<td>binderror Grill</td>\n<td>eventhandle</td>\n<td>当发生错误时触发 error 事件</td>\n</tr>\n</tbody>\n</table>\n<p>canvas 组件的使用案例：</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myCanvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2d<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas 2D 接口。 --></span></pre></td></tr></table></figure><p>②在 pages/index/index.wxss 文件中编写 canvas 组件的页面样式。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#myCanvas</span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了方便查看默认 canvas 组件的大小，设置了 1px 的红色实心边框，页面效果如下图所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191216979.png\" alt=\"image-20240608191216979\" /></p>\n<h1 id=\"12画布api\"><a class=\"anchor\" href=\"#12画布api\">#</a> 12. 画布 API</h1>\n<p>概念：通过 canvas 组件创建画布后，要想在画布中绘制图案，需要通过画布 API 来完成。</p>\n<p>画布 API 的使用方法如下：</p>\n<ol>\n<li>第一步：获取 Canvas 实例；</li>\n<li>第二步：通过 Canvas 实例获取 RenderingContext（渲染上下文）实例；</li>\n<li>第三步：通过 RenderingContext 实例的属性和方法完成绘图操作。</li>\n</ol>\n<p>获取 Canvas 实例的示例代码如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx.createSelectorQuery()  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.select('#myCanvas')             </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 页面中 & lt;canvas > 标签的 id  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.fields(<span class=\"token punctuation\">&#123;</span> node<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span>)  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.exec(res => <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 获取 Canvas 实例     </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    const canvas = res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.node     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 调用 getContext () 方法获取 RenderingContext 实例     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    const ctx = canvas.getContext('2d')  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure><p>RenderingContext 实例的常用属性和方法如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>属性</td>\n<td>width</td>\n<td>画布宽度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>height</td>\n<td>画布高度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>fillStyle</td>\n<td>设置或返回用于填充绘画的颜色、渐变或模式</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>strokeStyle</td>\n<td>设置描边颜色</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>lineWidth</td>\n<td>设置或返回当前的线条宽度</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>font</td>\n<td>设置或返回文本内容的当前字体属性</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>textBaseline</td>\n<td>设置或返回在绘制文本时使用的当前文本基线</td>\n</tr>\n</tbody>\n</table>\n<p><strong>方法表</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>方法</td>\n<td>rect()</td>\n<td>创建矩形</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>fillRect()</td>\n<td>绘制 “被填充” 的矩形</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>strokeRect()</td>\n<td>绘制矩形（无填充）</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>clearRect()</td>\n<td>在给定的矩形内清除指定的像素</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>stroke()</td>\n<td>绘制已定义的路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>beginPath()</td>\n<td>开始创建一个路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>closePath()</td>\n<td>创建从当前点回到起始点的路径</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>moveTo()</td>\n<td>把路径移动到画布中的指定点，不创建线条</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>arc()</td>\n<td>创建一条弧线</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>rotate()</td>\n<td>以原点为中心顺时针旋转当前坐标轴。多次调用旋转的角度会叠加。原点可以用 translate () 方法修改，旋转角度为正数，顺时针旋转，否则逆时针旋转</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>translate()</td>\n<td>对当前坐标系的原点 (0,0) 进行变换。默认的坐标系原点为页面左上角</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>fillText()</td>\n<td>在画布上绘制被填充的文本</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>restore()</td>\n<td>恢复之前保存的绘图上下文</td>\n</tr>\n<tr>\n<td>方法</td>\n<td>save()</td>\n<td>保存绘图上下文</td>\n</tr>\n</tbody>\n</table>\n<p>Canvas 绘制的基本步骤</p>\n<p>①在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>draw<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2d<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas  2D 接口。--></span></pre></td></tr></table></figure><p>②在 pages/index/index.js 文件中编写代码获取 Canvas 实例。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onReady</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">createSelectorQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#draw'</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">fields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">node</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSmile</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function-variable function\">drawRect</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 绘制矩形，在后面的步骤中实现  </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 绘制笑脸，在后面的步骤中实现  </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>③编写绘制矩形函数 drawRect ()。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>drawRect<span class=\"token operator\">:</span>  function (ctx) <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      ctx.fillStyle = 'rgba(<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span>)'   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ctx.fillRect(<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span>)  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>矩形的绘制效果如下图所示</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191626985.png\" alt=\"image-20240608191626985\" /></p>\n<p>④接下来绘制笑脸，先把调用绘制矩形的方法注释起来。</p>\n<p>//  this.drawRect(ctx)</p>\n<p>⑤编写绘制笑脸函数 drawSmile ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">// 设置线条颜色为红色，线条宽度为 2px     </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#f00'</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 移动画笔坐标位置，绘制外部大圆    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 移动画笔坐标位置，绘制外部嘴巴线条     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span>     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#125;</span>             <span class=\"token function-variable function\">drawSmile</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  原有代码……</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 移动画笔坐标位置，绘制左眼圆圈</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 移动画笔坐标位置，绘制右眼圆圈</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>笑脸的绘制效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191856755.png\" alt=\"image-20240608191856755\" /></p>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program3/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program3/",
            "title": "第三章：微信小程序页面交互",
            "date_published": "2024-06-18T22:50:24.000Z",
            "content_html": "<p>通过第 2 章的学习，读者已可以在微信小程序项目中实现页面结构和样式效果，但是这些页面并不能进行交互。在实际的微信小程序项目中，用户是可以与微信小程序页面发生交互的，即可以通过触摸、长按等操作实现各种各样的功能。本章将对微信小程序页面交互的相关知识进行详细讲解。</p>\n <span id=\"more\"></span>\n<hr />\n<p>学习目标：</p>\n<ul>\n<li>熟悉 Page () 函数，能够归纳 Page () 函数及其各个参数的作用<br />\n掌握数据绑定能够运用数据绑定实现页面中数据的显示与修改</li>\n<li>掌握事件绑定，能够在组件触发时执行对应的事件处理函数</li>\n<li>熟悉事件对象，能够总结事件对象的属性及其作用</li>\n<li>掌握 this 关键字的使用，能够运用 this 关键字访问当前页面中的数据或者函数</li>\n<li>掌握 setData () 方法的使用，能够完成数据的设置与更改<br />\n掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件</li>\n<li>掌握 &lt;block&gt; 标签，能够运用 &lt; block &gt; 标签同时显示或隐藏多个组件</li>\n<li>熟悉 hidden 属性，能够区分其与 wx:if 控制属性的区别</li>\n<li>掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取</li>\n<li>掌握模块的使用能够完成模块的创建和引入</li>\n<li>掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中</li>\n<li>掌握网络请求的实现，能够通过网络请求与服务器进行交互</li>\n<li>掌握提示框的实现，能能够在页面中显示消息提示框</li>\n<li>掌握 WXS 的使用，能够运用 WXS 处理页面中的数据</li>\n<li>掌握上拉触底的实现，能够运用上拉触底实现数据的动态加载</li>\n<li>掌握下拉刷新的实现，能够运用下拉刷新实现数据的重新加载</li>\n<li>掌握双向数据绑定，，能够运用双向绑定实现数据的动态更改、</li>\n</ul>\n<h1 id=\"1page函数\"><a class=\"anchor\" href=\"#1page函数\">#</a> 1.Page () 函数</h1>\n<p>在微信小程序中，页面交互的代码写在页面的 JS 文件中，每个页面都需要通过 Page () 函数进行注册。需要注意的是，Page () 函数只能写在微信小程序每个页面对应的 JS 文件中，并且每个页面只能注册一个。</p>\n<p>Page () 函数的参数是一个对象，通过该对象可以指定页面初始数据、页面生命周期回调函数和页面事件处理函数。调用 Page () 函数的示例代码如下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 页面初始数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 页面生命周期回调函数，以 onLoad () 为例</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onLoad()函数执行了'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 页面事件处理函数，以 onPullDownRefresh () 为例</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onPullDownRefresh()函数执行了'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"页面初始数据\"><a class=\"anchor\" href=\"#页面初始数据\">#</a> 页面初始数据</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">msg1</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">msg2</span><span class=\"token operator\">:</span> <span class=\"token string\">'World'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h2 id=\"页面生命周期回调函数\"><a class=\"anchor\" href=\"#页面生命周期回调函数\">#</a> 页面生命周期回调函数</h2>\n<p>在微信小程序中，页面的生命周期是指每个页面 “加载→渲染→销毁” 的过程，每个页面都有生命周期。</p>\n<p><span class=\"red\">如果想要在某个特定的时机进行特定的处理，则可以通过页面生命周期回调函数来完成。</span></p>\n<p>页面生命周期回调函数用于实现在特定的时间点执行特定的操作，随着页面生命周期的变化，页面生命周期回调函数会自动执行。</p>\n<p>页面生命周期回调函数如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onLoad()</td>\n<td>监听页面加载，且一个页面只会在创建完成后触发一次</td>\n</tr>\n<tr>\n<td>onShow()</td>\n<td>监听页面显示，只要页面显示就会触发此函数</td>\n</tr>\n<tr>\n<td>onReady()</td>\n<td>监听页面初次渲染完成，一个页面只会调用一次</td>\n</tr>\n<tr>\n<td>onHide()</td>\n<td>监听页面隐藏，只要页面隐藏就会触发此函数</td>\n</tr>\n<tr>\n<td>onUnload()</td>\n<td>监听页面卸载，只要页面被释放就会触发此函数</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"页面事件处理函数\"><a class=\"anchor\" href=\"#页面事件处理函数\">#</a> 页面事件处理函数</h2>\n<p>在微信小程序中，用户可能会在页面上进行一些操作，例如上拉、下拉、滚动页面等，如何在发生这些操作的时候进行处理呢？可以通过页面事件处理函数来完成。</p>\n<p><span class=\"red\">页面事件处理函数用于监听用户的行为。</span></p>\n<p>常见的页面事件处理函数如下表所示:</p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onPullDownRefresh()</td>\n<td>监听用户下拉刷新事件</td>\n</tr>\n<tr>\n<td>onReachBottom()</td>\n<td>监听页面上拉触底事件</td>\n</tr>\n<tr>\n<td>onPageScroll()</td>\n<td>页面滚动会连续调用</td>\n</tr>\n<tr>\n<td>onShareAppMessage()</td>\n<td>用户点击页面右上角 “...” 按钮，选择 “转发给朋友” 时调用</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"2数据绑定\"><a class=\"anchor\" href=\"#2数据绑定\">#</a> 2. 数据绑定</h1>\n<p>微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定 ， 可 将 data 中 的 数 据 通 过 Mustache 语法输出到页面上。</p>\n<p>通过数据绑定将数据显示在页面中案例：</p>\n<ol>\n<li>\n<p>打开 pages/index/index.js 文件，在 data 中定义一个 message 数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello World'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 Mustache &#123;&#125; 语法将 data 中的数据显示在页面中 --></span></pre></td></tr></table></figure><p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608181250880.png\" alt=\"image-20240608181250880\" /></p>\n</li>\n</ol>\n<p>页面上显示了 message 变量对应的值，也就是把 “Hello World” 渲染到页面代码中所在的位置，实现了从逻辑层到视图层的数据显示。</p>\n<h1 id=\"3事件绑定\"><a class=\"anchor\" href=\"#3事件绑定\">#</a> 3. 事件绑定</h1>\n<p>在微信小程序中，事件是视图层到逻辑层的通信方式，通过给组件绑定事件，可以监听用户的操作行为，然后在对应的事件处理函数中进行相应的业务处理。例如，为页面中的按钮绑定事件，当用户点击按钮时，就产生了事件。</p>\n<p>在微信小程序中，常见的事件如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>类别</strong></th>\n<th style=\"text-align:center\"><strong>事件名称</strong></th>\n<th style=\"text-align:left\"><strong>触发条件</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">点击事件</td>\n<td style=\"text-align:center\">tap</td>\n<td style=\"text-align:left\">手指触摸后马上离开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">长按事件</td>\n<td style=\"text-align:center\">longpress</td>\n<td style=\"text-align:left\">手指触摸后，超过 350ms 再离开，如果指定了事件回调函数并触发了这个事件，tap 事件将不被触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchstart</td>\n<td style=\"text-align:left\">手指触摸动作开始</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchmove</td>\n<td style=\"text-align:left\">手指触摸后移动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchcancel</td>\n<td style=\"text-align:left\">手指触摸动作被打断，例如来电提醒、弹窗</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">触摸事件</td>\n<td style=\"text-align:center\">touchend</td>\n<td style=\"text-align:left\">手指触摸动作结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他事件</td>\n<td style=\"text-align:center\">input</td>\n<td style=\"text-align:left\">键盘输入时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他事件</td>\n<td style=\"text-align:center\">submit</td>\n<td style=\"text-align:left\">携带 form 中的数据触发 submit 事件</td>\n</tr>\n</tbody>\n</table>\n<p>事件分类：</p>\n<ul>\n<li>冒泡事件：指当一个组件上的事件被触发后，该事件会向父组件传递。</li>\n<li>非冒泡事件：指当一个组件上的事件被触发后，该事件不会向父组件传递。</li>\n</ul>\n<blockquote>\n<p>注意：点击事件、长按事件、触摸事件都属于冒泡事件，其他事件属于非冒泡事件。</p>\n</blockquote>\n<p>组件绑定事件</p>\n<ul>\n<li>若要为组件绑定事件，可以通过为组件添加<span class=\"red\"> “bind + 事件名称” 属性或 “catch + 事件名称” 属性</span>来完成，属性的值为事件处理函数，当组件的事件被触发时，会主动执行事件处理函数。</li>\n</ul>\n<blockquote>\n<p>bind 和 catch 的区别在于，bind 不会阻止冒泡事件向上冒泡，而 catch 可以阻止冒泡事件向上冒泡。</p>\n</blockquote>\n<p>为组件绑定事件案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中给 button 组件绑定 tap 事件，事件处理函数为 compare () 函数。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>compare<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>比较<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>bindtap 表示绑定 tap 事件。<br />\n在触屏手机中，tap 事件在用户手指触摸 button 组件离开后触发，而在微信开发者工具中，tap 事件在鼠标单击 button 组件时触发。</p>\n</li>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中定义 compare () 函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">compare</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'比较按钮被点击了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure></li>\n</ol>\n<p>事件处理函数的简写形式</p>\n<p>由于 compare () 函数是 {} 对象的方法，所以可以将 compare () 函数写成方法的简写形式，即省略 compare 后面的冒号和 function 关键字</p>\n<p>示例代码如下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">compare</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'比较按钮被点击了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h1 id=\"4事件对象\"><a class=\"anchor\" href=\"#4事件对象\">#</a> 4. 事件对象</h1>\n<p>概念：在开发微信小程序的过程中，有时需要获取事件发生时的一些信息，例如事件类型、事件发生的时间、触发事件的对象等，此时可以通过事件对象来获取。</p>\n<p><span class=\"red\">当事件处理函数被调用时，微信小程序会将事件对象以参数的形式传给事件处理函数。</span></p>\n<p>事件对象的属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>事件类型</td>\n</tr>\n<tr>\n<td>timeStamp</td>\n<td>number</td>\n<td>事件生成的时间戳</td>\n</tr>\n<tr>\n<td>target</td>\n<td>object</td>\n<td>触发事件的组件的一些属性值集合</td>\n</tr>\n<tr>\n<td>currentTarget</td>\n<td>object</td>\n<td>当前组件的一些属性值集合</td>\n</tr>\n<tr>\n<td>mark</td>\n<td>object</td>\n<td>事件标记数据</td>\n</tr>\n</tbody>\n</table>\n<p><strong>事件对象的使用</strong></p>\n<ol>\n<li>\n<p>修改 pages/index/index.js 文件中的 compare () 函数，通过参数接收事件对象，并将事件对象输出到控制台。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">compare</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token comment\">// 函数参数 e 表示事件对象  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure></li>\n<li>\n<p>单击 “比较” 按钮，控制台中输出的结果如下图所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618234427693.png\" alt=\"image-20240618234427693\" /></p>\n<p>从上图中可以看出，控制台成功输出了事件对象的相关信息</p>\n</li>\n</ol>\n<p>target 属性和 currentTarget 属性</p>\n<p>事件对象属性中的 target 和 currentTarget 属性的对比。</p>\n<ul>\n<li>target 表示获取触发事件的组件的一些属性值集合</li>\n<li>currentTarget 表示获取当前组件的一些的属性值集合</li>\n</ul>\n<p>事件对象属性中 target 和 currentTarget 的区别案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewtap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    outer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        inner</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.js 文件中添加 viewtap () 事件处理函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">viewtap</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>使用 e.target.id 或 e.currentTarget.id 都可以获取发生事件的组件的 id，由于 outer 和 inner 的 id 不同，因此可以区分这两个组件。</p>\n<p>运行程序测试，当单击 outer 时，控制台中的输出结果为 outer-outer，而单击 inner 时，控制台中的输出结果为 inner-outer。</p>\n<p>由此可见，e.target 获取的是子元素的属性值集合，而 e.currentTarget 获取到的是父元素的属性值集合。</p>\n</li>\n</ol>\n<h1 id=\"5this关键字\"><a class=\"anchor\" href=\"#5this关键字\">#</a> 5.this 关键字</h1>\n<p>在微信小程序开发过程中，有时需要在函数中访问页面中定义的一些数据，或者调用页面中定义的一些函数，此时可以通过 this 关键字来实现。</p>\n<p><span class=\"red\">this 关键字代表当前页面对象。</span></p>\n<p>this 关键字的使用</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">num</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 定义 data 数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function-variable function\">test</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 定义 test () 函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test()函数执行了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 通过 this 关键字访问 data 中的 num 数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 通过 this 关键字调用 test () 函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"6setdata方法\"><a class=\"anchor\" href=\"#6setdata方法\">#</a> 6.setData () 方法</h1>\n<p>在微信小程序开发过程中，虽然通过数据绑定可以将 data 中定义的数据渲染到页面，但是如果数据发生了变化，页面并不会同步更新数据。</p>\n<p><span class=\"red\">为了实现在数据变化时使页面同步更新，微信小程序提供了 setData () 方法</span>，该方法可以立即改变 data 中的数据，并通过异步的方式将数据渲染到页面上。</p>\n<p>setData () 方法通过 this 关键字调用，该方法的基本语法格式如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>setData () 方法的参数</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>object</td>\n<td>当前要改变的数据</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>function</td>\n<td>setData () 方法引起的页面更新渲染完毕后的回调函数</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>第 1 个参数 data 是 object 类型的数据，以 key: value 的形式将 data 中的 key 对应值设置成 value；</li>\n<li>第 2 个参数 callback 是回调函数，可以省略。</li>\n</ul>\n</blockquote>\n<p>setData () 方法的使用：</p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件中编写页面中所需的数据 message 和事件处理函数 changeText ()。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello World'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">changeText</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello 微信小程序'</span>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeText<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>给 view 组件绑定了 tap 事件，事件处理函数为 changeText ()</p>\n</li>\n<li>\n<p>运行代码，在微信开发者工具中单击前和单击后的页面效果如下图所示</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618235451427.png\" alt=\"image-20240618235451427\" /></p>\n</li>\n</ol>\n<h1 id=\"7条件渲染\"><a class=\"anchor\" href=\"#7条件渲染\">#</a> 7. 条件渲染</h1>\n<p>在微信小程序开发过程中，如果需要根据不同的判断结果显示不同的组件，可以使用条件渲染来实现。</p>\n<p><span class=\"red\">条件渲染通过标签的 wx:if 控制属性来完成。</span></p>\n<p>使用 wx:if=“” 来判断是否需要渲染标签对应的组件，如果变量 val 的值为 true，则渲染组件并输出；变量 val 的值为 false，则不渲染组件</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>True<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>通过变量 condition 的值来控制是否渲染 view 组件</p>\n<p>给标签设置了 wx:if 控制属性后，可以为后面的标签设置 wx:elif、wx:else 控制属性。</p>\n<ul>\n<li>wx:elif 控制属性表示当前面标签的 if 条件不满足时，继续判断 elif（else if）的条件；</li>\n<li>wx:else 控制属性表示当前面的 if 条件不满足时，渲染 else 对应的组件。</li>\n<li>wx:else 控制属性也可以直接出现在 wx:if 控制属性的后面</li>\n</ul>\n<p>示例代码如下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>elif</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>else</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>#8. &lt;block&gt; 标签</p>\n<p>通过 &lt;block&gt; 标签可以创建一个容器，该标签并不是一个组件，它仅仅是一个包装元素，不会在页面中做任何渲染，只接收控制属性。</p>\n<p>&lt;block&gt; 标签的示例代码如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>view1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>view2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>block</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>&lt;block&gt; 标签中 wx:if 控制属性的值为 true，在页面上会渲染出 &lt; block &gt; 组件内部的两个 view 组件</p>\n<h1 id=\"9hidden属性\"><a class=\"anchor\" href=\"#9hidden属性\">#</a> 9.hidden 属性</h1>\n<p>除 wx:if 控制属性外，hidden 属性也可以控制组件的显示与隐藏，条件为 true 时隐藏组件</p>\n<p>里面的内容，条件为 false 时显示组件里面的内容，示例代码如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>hidden为true时不显示<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>hidden 与 wx:if 的区别：</p>\n<ul>\n<li>wx:if 控制属性的初始渲染条件为 false，只有条件第一次变为 true 的时候才开始渲染，hidden 属性所在的组件始终会被渲染，只是简单的控制显示与隐藏。</li>\n<li>wx:if 控制属性有更大的切换开销而 hidden 属性有更高的初次渲染开销。</li>\n<li>在需要频繁切换显示和隐藏的情境下用 hidden 更好，而如果运行时条件不太可能会改变则用 wx:if 控制属性更好</li>\n</ul>\n<h1 id=\"10data-自定义属性\"><a class=\"anchor\" href=\"#10data-自定义属性\">#</a> 10.data-* 自定义属性</h1>\n<p>微信小程序可以通过自定义属性来进行传参。</p>\n<p>微信小程序中的 data-* 是一个自定义属性，data-* 自定义属性实际上是由 data - 前缀加上一个自定义的属性名组成的，属性名中如果有多个单词，用连字符 “-” 连接。</p>\n<p>data-* 自定义属性的属性值表示要传参的数据。</p>\n<p>在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。</p>\n<p>dataset 属性是一个对象，该对象的属性与 data-* 自定义属性相对应。</p>\n<p>通过设置 data-* 自定义属性实现参数的传递：</p>\n<ol>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xiaochengxu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-age</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  获取姓名和年龄</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.js 文件中编写页面逻辑。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'初始名字'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">demo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>age</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>在微信开发者工具中，单击 “获取姓名和年龄” 前后的对比如下图所示</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608182842473.png\" alt=\"image-20240608182842473\" /></p>\n</li>\n</ol>\n<h1 id=\"11模块\"><a class=\"anchor\" href=\"#11模块\">#</a> 11. 模块</h1>\n<p>在微信小程序中，为了提高代码的可复用性，通常会将一些公共的代码抽离成单独的 JS 文件，作为模块使用，每个 JS 文件均为一个模块</p>\n<p>微信小程序提供了模块化开发的语法，可以使用 module.exports 语法对外暴露接口，然后在需要使用模块的地方通过 require () 函数引入模块</p>\n<p>创建和引入模块案例：</p>\n<ol>\n<li>\n<p>创建模块。在项目的根目录下创建一个 utils 目录，用于保存项目中的模块，然后在该目录下创建 welcome.js 文件。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'welcome'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 module.exports 语法暴露了一个对象，作为模块使用</p>\n</li>\n<li>\n<p>引入模块。在页面的 JS 文件中使用 require () 函数将模块引入。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> welcome <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../utils/welcome.js'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>require () 函数的参数是模块的路径，并且需要使用相对路径，不能使用绝对路径，否则会报错。模块路径中，文件扩展名 “.js” 可以省略</p>\n</li>\n</ol>\n<h1 id=\"12列表渲染\"><a class=\"anchor\" href=\"#12列表渲染\">#</a> 12. 列表渲染</h1>\n<p>列表渲染通过 wx:for 控制属性来实现。</p>\n<p>微信小程序进行列表渲染时，会根据列表中数据的数量渲染相应数量的内容。</p>\n<p><span class=\"red\">在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。</span></p>\n<p>如果不想使用 item 和 index 这两个变量名，还可以通过 wx:for-item 控制属性更改 item 的变量名；通过 wx:for-index 控制属性更改 index 的变量名。</p>\n<p>wx:key 控制属性</p>\n<ul>\n<li>wx:for 控制属性通常搭配 wx:key 控制属性使用。</li>\n<li>wx:key 控制属性用于为每一项设置唯一标识，这样可以在数据改变后页面重新渲染时，使原有组件保持自身的状态，而不是重新创建，这样可以提高列表渲染的效率。</li>\n</ul>\n<p>设置 wx:key</p>\n<ol>\n<li>如果 item 本身就是一个具有唯一性的字符串或数字，则可以将 wx:key 的值设置为 * this，*this 表示 item 本身。</li>\n<li>如果给定的数据是一个由对象作为数组元素构成的数组，那么可以将 wx:key 的值设置为对象中的一个 “值具有唯一性” 的属性的名称。</li>\n</ol>\n<p><strong>数组的列表渲染案例：</strong></p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构，通过列表渲染的方式将 arr 数组渲染到页面中。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*this<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"></span> <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<p>数组中包含对象情况下的列表渲染案例：</p>\n<ol>\n<li>\n<p>在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'梅'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'兰'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'竹'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'菊'</span> <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>id 是每条数据的唯一标识</p>\n</li>\n<li>\n<p>在 pages/index/index.wxml 文件中编写页面结构，将 list 数组中的数据在页面中显示出来。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"></span>-----<span class=\"token comment\"></span>=======<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>数组中包含对象情况下的列表渲染的页面效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183458412.png\" alt=\"image-20240608183458412\" /></p>\n</li>\n<li>\n<p>在 pages/index/index.wxml 文件中修改页面结构，实现通过 wx:for-item、wx:for-index 更改 item 和 index 的变量名。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"></span>：<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 wx:for-item 更改 item 的变量名为 item2，通过 wx:for-index 更改 index 的变量名为 index2 --></span></pre></td></tr></table></figure><p>更名后列表渲染的页面效果如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183658029.png\" alt=\"image-20240608183658029\" /></p>\n</li>\n</ol>\n<h1 id=\"13网络请求\"><a class=\"anchor\" href=\"#13网络请求\">#</a> 13. 网络请求</h1>\n<p>客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。</p>\n<p>例如，获取用户的头像信息，需要客户端向服务器发送请求，服务器查询到数据后把数据传递给客户端。</p>\n<p>在微信小程序中实现网络请求时，需要服务器给微信小程序提供服务器接口。</p>\n<p><span class=\"red\">在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。</span></p>\n<p>wx.request () 方法的常见选项</p>\n<table>\n<thead>\n<tr>\n<th><strong>选项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>开发者服务器接口地址，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>data</td>\n<td>string/object/ArrayBuffer</td>\n<td>请求的参数，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>header</td>\n<td>object</td>\n<td>设置请求的 header, 默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>method</td>\n<td>string</td>\n<td>HTTP 请求方式，默认值为 GET</td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>string</td>\n<td>返回的数据格式，默认值为 json</td>\n</tr>\n<tr>\n<td>responseType</td>\n<td>string</td>\n<td>响应的数据类型，默认值为 text</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：method 选项的合法值包括 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE 和 CONNECT，具体使用哪个，以服务器接口的要求为准。</p>\n</blockquote>\n<p>每个 wx:request () 方法都是一个请求任务，可以通过 abort () 方法将其取消。</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 发起网络请求</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> requestTask <span class=\"token operator\">=</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'URL地址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">//wx.request () 的常见参数……</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 取消请求任务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>requestTask<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 调用 wx.request () 方法发起网络请求</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 调用 abort () 方法取消请求任务</span></pre></td></tr></table></figure><p>通过 wx.request () 方法发起一个 GET 方式的请求</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'URL地址'</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 表示服务器接口地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 表示 HTTP 请求方式为 GET</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'zs'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 设置了请求参数 name</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 定义了接口调用成功的回调函数 success </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"14提示框\"><a class=\"anchor\" href=\"#14提示框\">#</a> 14. 提示框</h1>\n<p>在微信小程序中，如果想实现点击一个按钮弹出</p>\n<p>一个提示框的效果，可以使用以下 2 种方式。</p>\n<p>① wx.showLoading () 方法</p>\n<p>wx.showLoading () 方法用于弹出加载提示框，加载提示框弹出后，不会自动关闭，需要手动调用 wx.hideLoading () 方法才能关闭提示框。</p>\n<p>wx.showLoading () 方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>string</td>\n<td>提示的内容</td>\n</tr>\n<tr>\n<td>mask</td>\n<td>boolean</td>\n<td>是否显示透明蒙层，防止触摸穿透，默认值为 false</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>wx.showLoading () 方法的使用案例</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 用于弹出加载提示框，提示内容为 “加载中”</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'加载中'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 用于在 2 秒后关闭加载提示框</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wx<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>② wx.showToast () 方法</p>\n<p>提示框 wx.showToast () 方法用于显示消息提示框，该方法的常用选项如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>string</td>\n<td>提示的内容</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>string</td>\n<td>图标，默认值为 success</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>提示的停留时间，单位为毫秒，默认值为 1500</td>\n</tr>\n<tr>\n<td>mask</td>\n<td>boolean</td>\n<td>是否显示透明蒙层，防止触摸穿透，默认值为 false</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>接口调用结束的回调函数（调用成功、失败都会执行）</td>\n</tr>\n</tbody>\n</table>\n<p>wx.showToast () 方法的使用案例：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'成功'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">icon</span><span class=\"token operator\">:</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 设置了消息提示框的内容为 “成功”，图标为 success，提示的停留时间为 2 秒</span></pre></td></tr></table></figure><h1 id=\"15wxs\"><a class=\"anchor\" href=\"#15wxs\">#</a> 15.WXS</h1>\n<p>WXS（WeiXin Script）是微信小程序独有的一套脚本语言，可以结合 WXML 构建出页面结构。 WXS 的典型应用场景是 “过滤器”，所谓的过滤器是指在渲染数据之前，对数据进行处理，过滤器处理的结果最终会显示在页面上。</p>\n<p>WXS 的特点:</p>\n<ol>\n<li>WXS 与 JavaScript 不同；</li>\n<li>WXS 不能作为组件的事件回调；</li>\n<li>具有隔离性；</li>\n<li>在 iOS 设备上效率高。</li>\n</ol>\n<p>为了降低 WXS 的学习成本，WXS 在设计时借鉴了 JavaScript 的语法，但是本质上，WXS 和 JavaScript 本质上是完全不同的两种语言，在使用 WXS 时应该注意以下 3 点。</p>\n<ol>\n<li>WXS 有 8 种数据类型，包括 number（数值）、string（字符串）、boolean（布尔）、object（对象）、function（函数）、array（数组）、date（日期）、regexp（正则）。</li>\n<li>WXS 不支持 let、const、解构赋值、展开运算符、箭头函数、对象属性简写等语法，WXS 支持 var 定义变量、普通 function 函数等语法。</li>\n<li>WXS 遵循 CommonJS 规范。在每个模块内部，module 变量代表当前模块，这个变量是一个对象，它的 exports 属性（即 module.exports）是对外的接口，在使用 require () 函数引用其他模块时，得到的是被引用模块中 module.exports 所指的对象。</li>\n</ol>\n<p>WXS 不能作为组件的事件回调 :</p>\n<ul>\n<li>WXS 经常与 Mustache 语法配合使用，但是在 WXS 中定义的函数不能作为组件的事件回调函数。</li>\n</ul>\n<p>具有隔离性</p>\n<p>隔离性是指 WXS 代码的运行环境和其他 JavaScript 代码是隔离的，体现在以下两方面。</p>\n<ol>\n<li>在 WXS 代码中不能调用页面的 JS 文件中定义的函数。</li>\n<li>在 WXS 代码中不能调用微信小程序提供的 API。</li>\n</ol>\n<p>在 iOS 设备上效率高</p>\n<ul>\n<li>在 iOS 设备上，微信小程序内 WXS 代码的执行速度比 JavaScript 代码快 2~20 倍；在 Android 设备上，两者的运行效率无差异。</li>\n</ul>\n<h1 id=\"16上拉触底\"><a class=\"anchor\" href=\"#16上拉触底\">#</a> 16 上拉触底</h1>\n<p>在原生应用或者网页的交互中，经常会有上拉加载这个功能。用户在浏览列表页面时，手指在手机屏幕上进行上拉滑动操作，通过上拉加载请求数据，增加列表数据。</p>\n<p>微信小程序提供了 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。</p>\n<p>onReachBottom () 事件处理函数的示例代码如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>onReachBottom<span class=\"token operator\">:</span> function () <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console.log('触发了上拉触底的事件')</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>在默认情况下，触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，开发人员可以根据实际需求，在全局或页面的 JSON 配置文件中通过 onReachBottomDistance 属性修改上拉触底的距离。</p>\n<p>在页面的 JSON 文件中配置上拉触底的距离为 200px：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"onReachBottomDistance\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"17下拉刷新\"><a class=\"anchor\" href=\"#17下拉刷新\">#</a> 17 下拉刷新</h1>\n<p>在原生应用的交互中，经常会有下拉刷新操作，即当用户下拉页面到达顶部时，再进行下拉可以将数据重新加载。</p>\n<p>启用下拉刷新的方式:</p>\n<ol>\n<li>全局开启下拉刷新\n<ul>\n<li>在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。</li>\n</ul>\n</li>\n<li>局部开启下拉刷新\n<ul>\n<li>在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。</li>\n</ul>\n</li>\n</ol>\n<p>开启下拉刷新后，当下拉操作执行时，就会触发 onPullDownRefresh () 事件处理函数。</p>\n<p>onPullDownRefresh () 事件处理函数的示例代码如下。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function-variable function\">onPullDownRefresh</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'触发了下拉刷新的事件'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行下拉刷新操作后，页面顶部会出现加载提示，并且页面需要延迟一段时间才会弹回去。</p>\n<p>为了优化用户体验，可以在完成下拉刷新的数据加载后，立即调用 wx.stopPullDownRefresh () 方法停止使用当前页面的下拉刷新加载效果</p>\n<p>示例代码如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wx<span class=\"token punctuation\">.</span><span class=\"token function\">stopPullDownRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program2/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program2/",
            "title": "第二章：微信小程序页面制作",
            "date_published": "2024-06-18T21:03:28.000Z",
            "content_html": "<p>若想开发一个微信小程序，首先应学习如何进行页面制作，也就是学习如何搭建微信小程序的页面结构并实现美观的页面样式效果。为了使初学者快速掌握微信小程序的页面制作，本章将从微信小程序常用组件、页面样式等方面进行详细讲解。</p>\n <span id=\"more\"></span>\n<hr />\n<p>学习目标：</p>\n<ul>\n<li>了解 WXML 的概念，能够说出 WXML 的特点、WXML 与 HTML 的区别</li>\n<li>了解 WXSS 的概念，能够说出 WXSS 的特点、WXSS 与 CSS 的区别</li>\n<li>了解组件的概念，食能够说出组件的特点及常用的组件</li>\n<li>掌握页面路径的配置方法，能够运用该方法进行页面管理</li>\n<li>掌握 view 组件的使用方法，能够灵活运用 view 组件实现页面的布局效果</li>\n<li>掌握 image 组件的使用方法，能够灵活运用 image 组件完成图片插入操作</li>\n<li>掌握 rx 单位的使用方法，能够灵活运用 rpx 单位解决屏幕适配的问题</li>\n<li>掌握页面样式的导入方法，能够灵活运用该方法导入公共样式</li>\n<li>掌握 swiper 和 swiper-item 组件的使用方法，能够灵活运用 swiper 和 swiperitem 组件完成轮播图的制作</li>\n<li>掌握 text 组件的使用方法，能够灵活运用 text 组件定义行内文本</li>\n<li>掌握 Flex 布局的使用方法，能够使用 Flex 布局的相关属性完成页面布局</li>\n<li>掌握导航栏的配置方法，能够完成导航栏标题颜色、背景颜色等页面效果的设置</li>\n</ul>\n<hr />\n<h1 id=\"1-wxml\"><a class=\"anchor\" href=\"#1-wxml\">#</a> 1 WXML</h1>\n<p>概念：在制作微信小程序页面时，<span class=\"red\">页面的结构</span>可以用 WXML 来实现。WXML 是微信团队为微信小程序开发而设计的一套语言，可以结合微信小程序中的各种组件构建页面结构。</p>\n<p>WXML 与 HTML 的区别</p>\n<ul>\n<li>\n<p>HTML 和 WXML 使用的标签不同。例如，HTML 经常使用 &lt;div&gt; 标签搭建页面结构，而 WXML 则使用 &lt; view &gt; 标签搭建页面结构；HTML 经常使用 &lt; span &gt; 标签定义行内文本 ，而 WXML 则使用 &lt; text &gt; 标签定义行内文本 。</p>\n</li>\n<li>\n<p>WXML 提供了和 Vue.js 中模板语法类似的模板语法，例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。</p>\n</li>\n<li>\n<p>HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。</p>\n</li>\n<li>\n<p>WXML 中的单标签必须在结尾 “&gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&gt;” 前面的 “/”。</p>\n</li>\n<li>\n<p>WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。</p>\n</li>\n</ul>\n<hr />\n<h1 id=\"2-wxss\"><a class=\"anchor\" href=\"#2-wxss\">#</a> 2 WXSS</h1>\n<p>概念：在微信小程序的页面制作中，使用 WXML 搭建页面结构以后，也需要设置样式来美化页面。微信小程序提供了一套类似 CSS 的语言 WXSS，通过 WXSS 可以<span class=\"red\">美化页面样式</span>。</p>\n<p>WXSS 与 CSS 的区别</p>\n<ul>\n<li>不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。</li>\n<li>在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。</li>\n<li>在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url ('/images/1.png'); ” 是无效的，而 CSS 可以使用本地图片来设置背景图片。</li>\n</ul>\n<hr />\n<h1 id=\"3-常用组件\"><a class=\"anchor\" href=\"#3-常用组件\">#</a> 3 常用组件</h1>\n<p>概念：微信小程序页面和普通网页都是通过标签来定义页面结构的，但是在微信小程序开发中，更习惯将<span class=\"red\">这些标签称为组件</span>，这些组件自带微信风格的 UI 样式和特定功能效果。微信小程序提供了丰富的组件，通过组合这些组件可以进行高效开发。</p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>view</td>\n<td>视图容器</td>\n</tr>\n<tr>\n<td>video</td>\n<td>视频</td>\n</tr>\n<tr>\n<td>text</td>\n<td>文本</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>复选框</td>\n</tr>\n<tr>\n<td>button</td>\n<td>按钮</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>单选按钮</td>\n</tr>\n<tr>\n<td>image</td>\n<td>图片</td>\n</tr>\n<tr>\n<td>input</td>\n<td>输入框</td>\n</tr>\n<tr>\n<td>form</td>\n<td>表单</td>\n</tr>\n<tr>\n<td>audio</td>\n<td>音频</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"4-页面路径配置\"><a class=\"anchor\" href=\"#4-页面路径配置\">#</a> 4 页面路径配置</h1>\n<p>开发一个功能完整的微信小程序时，一般需要制作多个页面。</p>\n<p>在微信小程序中可以通过 app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。pages 配置项是一个数组，该数组用于指定微信小程序由哪些页面组成，数组中的每一个元素都对应一个页面的路径信息。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>\"pages\": [</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \"pages/index/index\",</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  \"pages/logs/logs\"</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>],</pre></td></tr></table></figure><p>上述代码中共配置了两个页面，分别是 pages/index/index 页面和 pages/logs/logs 页面。</p>\n<p>默认情况下，pages 数组中的第一项为微信小程序的初始页面，即 pages/index/index 页面。如果想将其他页面设置为初始页面，读者可以手动调整数组中元素的顺序，将需要设为初始页面的页面路径设为第一项即可。</p>\n<p>pages/index/index 中的 pages 表示存放页面的目录，index/index 中第一个 index 表示 index 目录，第二个 index 表示文件名。 同理，pages/logs/logs 中的 pages 表示存放页面的目录，logs/logs 中第一 logs 表示 logs 目录，第二个 logs 表示文件名。</p>\n<p><span class=\"red\">注意：文件名不需要写后缀名，以 pages/index/index 页面为例，配置成功后，微信开发者工具会自动生成 index.wxml 文件、index.wxss 文件、index.js 文件和 index.json 文件</span></p>\n<p>创建新页面的方法</p>\n<ul>\n<li>通过 pages 数组中新增一项来新增页面\n<ul>\n<li>如果需要在微信小程序中创建一个新的页面，可以在<span class=\"red\"> app.json 文件的 pages 数组中增加一项新页面的信息</span>，微信开发者工具会创建对应的页面。</li>\n</ul>\n</li>\n<li>通过项目资源管理器新增页面\n<ul>\n<li>通过在微信开发者工具的<span class=\"red\">项目资源管理器的 pages 目录下右键单击鼠标，选择 “新建 Page” 来创建页面</span>，微信开发者工具会自动在 app.json 文件中添加对应的路径。</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"red\">如果对页面文件直接进行删除操作，则不会触发代码的自动更新效果，需要手动修改 app.json 文件中的 pages 数组</span></p>\n<hr />\n<h1 id=\"5-view组件\"><a class=\"anchor\" href=\"#5-view组件\">#</a> 5 view 组件</h1>\n<p>在 HTML 中，&lt;div&gt; 标签可以定义文档中的分区或节，把文档分割为独立的、不同的部分，在 WXML 中，view 组件起着类似的作用。view 组件表示视图容器，常用于实现页面的布局效果。</p>\n<p>view 组件通过 &lt;view&gt; 标签定义，示例代码如下。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>view组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>view 组件提供了一些属性，用于实现特殊的效果。</p>\n<p>view 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hover-class</td>\n<td>string</td>\n<td>指定手指按下去的样式。当该属性值为 none 时，没有点击态。</td>\n</tr>\n<tr>\n<td>hover-stop-propagation</td>\n<td>boolean</td>\n<td>指定是否阻止本节点的祖先节点出现点击态。</td>\n</tr>\n<tr>\n<td>hover-start-time</td>\n<td>number</td>\n<td>手指按住后多久出现点击态，单位为毫秒。</td>\n</tr>\n<tr>\n<td>hover-stay-time</td>\n<td>number</td>\n<td>手指松开后点击态保留时间，单位为毫秒。</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"red\">点击态是指手指在屏幕上按下时的状态</span></p>\n<hr />\n<h1 id=\"6-image组件\"><a class=\"anchor\" href=\"#6-image组件\">#</a> 6 image 组件</h1>\n<p>微信小程序提供了用于显示图片的 image 组件，并且 image 组件的功能比 HTML 中的 &lt;img&gt; 标签更强大，支持对图片进行剪裁和缩放。image 组件的默认宽度为 300px，默认高度为 240px。</p>\n<p>image 组件通过 &lt;image&gt; 标签定义，支持单标签和双标签两种写法</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 单标签写法</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>图片资源地址<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre># 双标签写法</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>图片资源地址<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>image</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>image 组件的常用属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>string</td>\n<td>图片资源地址</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>string</td>\n<td>图片剪裁、缩放的模式</td>\n</tr>\n<tr>\n<td>webp</td>\n<td>boolean</td>\n<td>默认不解析 WebP 格式，只支持网络资源</td>\n</tr>\n<tr>\n<td>lazy-load</td>\n<td>boolean</td>\n<td>图片延迟加载</td>\n</tr>\n<tr>\n<td>show-menu-by-longpress</td>\n<td>boolean</td>\n<td>长按图片显示的菜单，菜单提供发送给朋友、收藏、保存图片、搜一搜等功能</td>\n</tr>\n<tr>\n<td>binderror</td>\n<td>eventhandle</td>\n<td>当错误发生时触发</td>\n</tr>\n<tr>\n<td>bindload</td>\n<td>eventhandle</td>\n<td>当图片载入完毕时触发</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"red\">图片资源地址 src 可以是本地路径或 URL 地址。如果使用本地路径，可以在项目中创建一个目录，例如 images 目录，并在该目录中放入图片，例如 test.jpg，然后通过本地路径 /images/test.jpg 即可引用图片。</span></p>\n<p>image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式</p>\n<p>常用的 mode 合法值：</p>\n<table>\n<thead>\n<tr>\n<th><strong>模式</strong></th>\n<th><strong>合法值</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>缩放</td>\n<td>scaleToFill</td>\n<td>不保持宽高比缩放图片，使图片的宽高完全拉伸至填满 image 元素。此合法值为 mode 属性的默认值</td>\n</tr>\n<tr>\n<td>缩放</td>\n<td>aspectFit</td>\n<td>保持宽高比缩放图片，使图片的长沙能完全显示出来，即可以完整地将图片显示出来</td>\n</tr>\n<tr>\n<td>缩放</td>\n<td>aspectFill</td>\n<td>保持宽高比缩放图片，只保证图片的短边能完全显示出来，即图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取</td>\n</tr>\n<tr>\n<td>缩放</td>\n<td>widthFix</td>\n<td>宽度不变，高度自动变化，保持原图宽高比不变</td>\n</tr>\n<tr>\n<td>缩放</td>\n<td>heightFix</td>\n<td>高度不变，宽度自动变化，保持原图宽高比不变</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>top</td>\n<td>不缩放图片，只显示图片的顶部区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>bottom</td>\n<td>不缩放图片，只显示图片的底部区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>center</td>\n<td>不缩放图片，只显示图片的中间区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>left</td>\n<td>不缩放图片，只显示图片的左边区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>right</td>\n<td>不缩放图片，只显示图片的右边区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>top left</td>\n<td>不缩放图片，只显示图片的左上边区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>top right</td>\n<td>不缩放图片，只显示图片的右上边区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>bottom left</td>\n<td>不缩放图片，只显示图片的左下边区域</td>\n</tr>\n<tr>\n<td>裁剪</td>\n<td>bottom right</td>\n<td>不缩放图片，只显示图片的右下边区域</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"7-rpx单位\"><a class=\"anchor\" href=\"#7-rpx单位\">#</a> 7 rpx 单位</h1>\n<p>rpx（Responsive Pixel，自适应像素）。</p>\n<p>rpx 单位是微信小程序独有的、用来解决屏幕适配问题的尺寸单位</p>\n<p>rpx 单位的设计思想是把所有设备的屏幕在宽度上等分为 750 份，即屏幕的总宽度为 750rpx。微信小程序在不同设备上运行的时候，会自动把 rpx 单位换算成对应的像素单位来渲染，从而实现屏幕适配。</p>\n<table>\n<thead>\n<tr>\n<th>屏幕宽度</th>\n<th>rpx 换算 rpx（屏幕宽度 ÷ 750）</th>\n<th>px 换算 rpx（750 ÷ 屏幕宽度）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>320px</td>\n<td>1rpx ≈ 0.427px</td>\n<td>1px ≈ 2.34rpx</td>\n</tr>\n<tr>\n<td>375px</td>\n<td>1rpx = 0.5px</td>\n<td>1px = 2rpx</td>\n</tr>\n<tr>\n<td>414px</td>\n<td>1rpx = 0.552px</td>\n<td>1px ≈ 1.81rpx</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"8-样式导入\"><a class=\"anchor\" href=\"#8-样式导入\">#</a> 8 样式导入</h1>\n<p>在微信小程序中，多个不同的页面可能需要编写相同的样式代码，这样会造成代码冗余。为了避免代码冗余，可以将<span class=\"red\">相同的样式代码抽为公共样式，放到一个单独的文件中，通过只修改公共样式实现对所有相关页面样式的修改</span>，从而节约时间、方便管理。</p>\n<p>步骤 1：在微信小程序的目录下创建一个公共样式文件 page.wxss，在该文件中编写公共样式代码。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/** page.wxss **/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">.name</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>步骤 2：在 pages/index/index.wxss 文件中导入 page.wxss 文件。</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/** index.wxss **/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@import “/page.wxss\"<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>添加上述代码后，即可导入 page.wxss 文件中定义的样式。</p>\n<hr />\n<h1 id=\"9-swiper和swiper-item组件\"><a class=\"anchor\" href=\"#9-swiper和swiper-item组件\">#</a> 9 swiper 和 swiper-item 组件</h1>\n<p>swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。</p>\n<p>swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容。</p>\n<p>swiper 组件的默认高度为 150px，默认宽度为 100%。swiper-item 组件的初始高度和初始宽度都为 100%。</p>\n<p>swiper 组件通过 &lt;swiper&gt; 标签定义，swiper-item 组件通过 &lt; swiper-item &gt; 标签定义</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>swiper 组件为外层容器，内层有 3 个 swiper-item 组件，表示当前滑块视图内容一共有 3 项。滑块视图内容在初始状态下只显示第 1 项，向左滑动显示第 2 项，再向右滑动可以返回第 1 项。</p>\n<p>swiper 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>indicator-dots</td>\n<td>boolean</td>\n<td>是否显示面板指示点</td>\n</tr>\n<tr>\n<td>indicator-color</td>\n<td>color</td>\n<td>指示点颜色</td>\n</tr>\n<tr>\n<td>indicator-active-color</td>\n<td>color</td>\n<td>当前选中的指示点颜色</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>boolean</td>\n<td>是否自动切换</td>\n</tr>\n<tr>\n<td>current</td>\n<td>number</td>\n<td>当前所在滑块的 index, 默认为 0</td>\n</tr>\n<tr>\n<td>interval</td>\n<td>number</td>\n<td>自动切换时间间隔</td>\n</tr>\n<tr>\n<td>circular</td>\n<td>boolean</td>\n<td>是否采用衔接滑动</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 实现轮播图3秒自动无缝切换效果，同时显示面板指示点，并设置指示点颜色为黄色、当前选中指示点颜色为红色</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper</span> <span class=\"token attr-name\">current</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">indicator-dots</span> <span class=\"token attr-name\">indicator-color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yellow<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">indicator-active-color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">interval</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3000<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">circular</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> lightblue</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> lightcoral</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>swiper-item</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> lightgrey</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper-item</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>swiper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"10-text-组件\"><a class=\"anchor\" href=\"#10-text-组件\">#</a> 10 text 组件</h1>\n<p>在 HTML 中，一般通过 &lt;span&gt; 标签定义行内文本，而在微信小程序中，则可以通过 text 组件定义行内文本。需要注意的是，text 组件内部只能嵌套 text 组件。</p>\n<p>text 常用属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user-select</td>\n<td>boolean</td>\n<td>文本是否可选，该属性会使文本节点显示为 inline-block</td>\n</tr>\n<tr>\n<td>space</td>\n<td>string</td>\n<td>显示连续空格，可选参数为 <strong>ensp</strong>（中文字符空格一半大小）、<strong>emsp</strong>（中文字符空格大小）和 <strong>nbsp</strong>（根据字体设置的空格大小）</td>\n</tr>\n<tr>\n<td>decode</td>\n<td>boolean</td>\n<td>是否解码</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">user-select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>微信小程序<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>设置 user-select 属性值为 true，实现长按选中文本</p>\n<hr />\n<h1 id=\"11-flex布局\"><a class=\"anchor\" href=\"#11-flex布局\">#</a> 11 Flex 布局</h1>\n<p>在微信小程序中可以使用 Flex 布局实现自适应页面。</p>\n<p>Flex 布局又称为弹性盒（Flexible Box）布局，它为盒子模型提供了很强的灵活性，任何一个容器都可以指定为 Flex 布局。</p>\n<p><strong>基本概念</strong></p>\n<p>Flex 容器：采用 Flex 布局的元素，称为 Flex 容器（简称容器）。</p>\n<p>Flex 项目：Flex 容器的所有子元素自动成为容器成员，称为 Flex 项目（简称项目）。</p>\n<p>Flex 容器内有两根轴：主轴（Main Axis）和交叉轴（Cross Axis），默认情况下主轴为水平方向，交叉轴为垂直方向，项目默认沿主轴排列。</p>\n<p><span class=\"red\">若想使用 Flex 布局，首先要设置父元素的 display 属性为 flex，表示将父元素设置为容器，然后就可以使用容器和项目的相关属性了。</span></p>\n<p>容器常用属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>flex-direction</td>\n<td>决定主轴的方向（即项目的排列方向），默认值为 row, 即主轴为从左到右的水平方向，项目按照主轴方向排列</td>\n</tr>\n<tr>\n<td>flex-wrap</td>\n<td>规定是否允许项目换行，默认值为 nowrap，即不换行</td>\n</tr>\n<tr>\n<td>flex-flow</td>\n<td>flex-direction 和 flex-wrap 的组合属性，默认值为 row_nowrap</td>\n</tr>\n<tr>\n<td>justify-content</td>\n<td>定义了项目在主轴上的对齐方式，默认值为 flex-start, 即项目在主轴方向上，与主轴起始位置对齐</td>\n</tr>\n<tr>\n<td>align-items 空间</td>\n<td>定义项目在交叉轴上的对齐方式，默认值为 normal（等同于 stretch），即如果项目没有设置固定的大小，则会被拉伸填充满足义轴方向剩余的空间</td>\n</tr>\n<tr>\n<td>align-content</td>\n<td>只适用多行的容器，定义项目在交叉轴上的对齐方式，默认值为 normal （等同于 stretch），即交叉轴方向剩余的空间平均分配到每一行，并且行的高度会拉伸，填满整行的空间</td>\n</tr>\n</tbody>\n</table>\n<p>项目的常用属性</p>\n<table>\n<thead>\n<tr>\n<th>order</th>\n<th>定义项目的排列顺序，按从小到大排列，默认值为 0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>flex-grow</td>\n<td>定义项目的放大比例，默认值为 0, 即如果存在剩余空间，该项目也不放大</td>\n</tr>\n<tr>\n<td>flex-shrink</td>\n<td>定义项目的缩小比例，默认值为 1, 即如果空间不足，该项目将缩小</td>\n</tr>\n<tr>\n<td>flex-basis</td>\n<td>定义在分配多余空间之前，项目占据的主轴空间，默认值为 auto</td>\n</tr>\n<tr>\n<td>flex</td>\n<td>flex-grow、flex-shrink 和 flex-basis 的组合属性，默认值为 0 1 auto</td>\n</tr>\n<tr>\n<td>align-self</td>\n<td>允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto, 表示继承父元素的 align-items 属性，如果父元素没有设置 align-items 属性，则等同于 normal 和 stretch</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>flex-direction 属性用于设置主轴方向，通过设置主轴方向可以规定项目的排列方向，它有以下 4 个常用的可选值。</li>\n<li>row：默认值，主轴为从左到右的水平方向。</li>\n<li>row-reverse：主轴为从右到左的水平方向。</li>\n<li>column：主轴为从上到下的垂直方向。</li>\n<li>column-reverse：主轴为从下到上的垂直方向。</li>\n</ul>\n<p>flex-direction 属性的使用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 1编写页面结构代码。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#2 编写页面样式代码。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.demo1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>justify-content 属性用于设置项目在主轴方向上的对齐方式，能够分配项目之间及其周围多余的空间，它有以下 5 个常用的可选值。</p>\n<ul>\n<li>flex-start：默认值，表示项目对齐到主轴起点，项目间不留空隙。</li>\n<li>flex-end：项目对齐到主轴终点，项目间不留空隙。</li>\n<li>center：项目在主轴上居中排列，项目间不留空隙。主轴上第一个项目离主轴起点的距离等于最后一个项目离主轴终点的距离。</li>\n<li>space-between：两端对齐，两端的项目分别靠向容器的两端，其他项目之间的间隔相等。</li>\n<li>space-around：每个项目之间的距离相等，第一个项目离主轴起点和最后一个项目离终点的距离为中间项目间距的一半。</li>\n</ul>\n<p>justify-content 属性的使用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 1编写页面结构代码。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#2编写页面样式代码。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.demo2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightgrey<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>align-items 属性用于设置项目在交叉轴上的对齐方式，它有以下 6 个常用的可选值。</p>\n<ul>\n<li>normal：默认值，等同于 stretch。</li>\n<li>stretch：未设置项目大小时将项目拉伸，填充满交叉轴方向剩余的空间。</li>\n<li>flex-start：项目顶部与交叉轴起点对齐。</li>\n<li>flex-end：项目底部与交叉轴终点对齐。</li>\n<li>center：项目在交叉轴的中间位置对齐。</li>\n<li>baseline：项目的第一行文字的基线对齐。</li>\n</ul>\n<hr />\n<h1 id=\"12导航栏配置\"><a class=\"anchor\" href=\"#12导航栏配置\">#</a> 12 导航栏配置</h1>\n<p>在微信小程序中，有时为了页面美观，需要更改导航栏的样式。此时可以通过页面配置文件或全局配置文件对导航栏的样式进行配置。</p>\n<p>导航栏的相关配置项:</p>\n<table>\n<thead>\n<tr>\n<th><strong>配置项</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarTitleText</td>\n<td>string</td>\n<td>导航栏标题文字内容，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>导航栏背景颜色，默认值为 #000000</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>string</td>\n<td>导航栏标题颜色，仅支持 black 和 white, 默认值为 white</td>\n</tr>\n</tbody>\n</table>\n<p>在页面配置文件中对导航栏进行配置</p>\n<p>以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"微信小程序\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在全局配置文件中对导航栏进行配置</p>\n<p>在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"navigationBarTitleText\"</span><span class=\"token operator\">:</span>  <span class=\"token string\">\"微信小程序\"</span></pre></td></tr></table></figure><hr />\n<h1 id=\"13-标签栏配置\"><a class=\"anchor\" href=\"#13-标签栏配置\">#</a> 13 标签栏配置</h1>\n<p>通过标签栏可以很方便地在多个页面之间进行切换。在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。</p>\n<p>tabBar 配置项的属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>必填</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏上的文字默认颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏上的文字选中时的颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td>标签栏的背景色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>string</td>\n<td>否</td>\n<td>标签栏上边框的颜色，仅支持 black 和 white</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>是</td>\n<td>标签栏的列表</td>\n</tr>\n<tr>\n<td>position</td>\n<td>string</td>\n<td>否</td>\n<td>标签栏的位置，仅支持 bottom（底部）和 top（顶部）</td>\n</tr>\n<tr>\n<td>custom</td>\n<td>boolean</td>\n<td>否</td>\n<td>自定义标签栏</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"red\"> 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。</span></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 演示tabBar配置项的属性使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"tabBar\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ccc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"selectedColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ff4c91\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"borderStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre># list数组中的每个元素都是一个代表标签按钮的对象，通过配置该对象的属性可以对标签栏中的每个标签按钮进行配置。list数组中最少需要配置<span class=\"token number\">2</span>个标签按钮，最多只能配置<span class=\"token number\">5</span>个标签按钮。</pre></td></tr></table></figure><p>标签按钮的相关属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>标签栏上的文字默认颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>标签栏上的文字选中时的颜色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>string</td>\n<td>标签栏上边框的颜色，仅支持 black 和 white</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>标签栏的背景色，仅支持十六进制颜色</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>标签栏的列表</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># tabBar配置项的属性使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/index/index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/home.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/home-active.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"首页\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"pagePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pages/list/list\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"iconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/contact.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"selectedIconPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/contact-active.png\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"联系我们\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre># 需要注意的是，pages/index/index和pages/list/list这两个页面都必须在pages数组中配置并提前创建好对应的文件。</pre></td></tr></table></figure><p>标签栏的效果：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/rainyblue1001/image@main/img/image-20240603182710050.png\" alt=\"image-20240603182710050\" /></p>\n<hr />\n<h1 id=\"14-vw-vh单位\"><a class=\"anchor\" href=\"#14-vw-vh单位\">#</a> 14 vw、vh 单位</h1>\n<p>在使用 CSS 编写移动端的页面样式时，由于不同手机的屏幕宽高不同，屏幕适配会比较麻烦。针对这类型问题，通过视口单位可以有效解决。</p>\n<p>视口表示可视区域的大小，视口单位主要包括 vw（Viewport Width）和 vh（Viewport Height），在 CSS 中很常用。</p>\n<p>在微信小程序中也可以使用 vw 和 vh 单位。使用视口单位时，系统会将视口的宽度和高度分为 100 份，1vw 占用视口宽度的百分之一，1vh 占用视口高度的百分之一。vw、vh 是相对长度单位，永远以视口作为参考。例如，屏幕宽度为 375px，那么 1vw = 375px / 100 = 3.75px。</p>\n<hr />\n<h1 id=\"15-video组件\"><a class=\"anchor\" href=\"#15-video组件\">#</a> 15 video 组件</h1>\n<p>微信小程序提供了 video 组件用来播放视频，video 组件的默认宽度为 300px，高度为 225px，可通过 WXSS 代码设置宽高。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>string</td>\n<td>视频的资源地址</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>指定视频时长</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>boolean</td>\n<td>是否显示默认播放控件（播放 / 暂停按钮、播放进度、时间）</td>\n</tr>\n<tr>\n<td>danmu-list</td>\n<td>Object Array</td>\n<td>弹幕列表</td>\n</tr>\n<tr>\n<td>danmu-btn</td>\n<td>boolean</td>\n<td>是否显示弹幕按钮，只在初始化时有效，不能动态变更</td>\n</tr>\n<tr>\n<td>enable-danmu</td>\n<td>boolean</td>\n<td>是否展示弹幕，只在初始化时有效，不能动态变更</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>boolean</td>\n<td>是否自动播放</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>boolean</td>\n<td>是否循环播放</td>\n</tr>\n<tr>\n<td>muted</td>\n<td>boolean</td>\n<td>是否静音播放</td>\n</tr>\n<tr>\n<td>poster</td>\n<td>string</td>\n<td>视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 属性无效</td>\n</tr>\n<tr>\n<td>bindplay</td>\n<td>eventhandle</td>\n<td>当开始 / 继续播放时触发 play 事件</td>\n</tr>\n<tr>\n<td>bindpause</td>\n<td>eventhandle</td>\n<td>当暂停播放时触发 pause 事件</td>\n</tr>\n<tr>\n<td>object-fit</td>\n<td>string</td>\n<td>当视频大小与 video 组件大小不一致时，调整视频的表现形式，可选值有：contain（包含）、fill（填充）、cover（覆盖），默认值为 contain</td>\n</tr>\n<tr>\n<td>initial-time</td>\n<td>string</td>\n<td>指定视频初始播放位置</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 视频在页面上循环播放</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;video src=<span class=\"token string\">\"http://localhost:3000/01.mp4\"</span> loop=<span class=\"token string\">\"true\"</span>>&lt;/video></pre></td></tr><tr><td data-num=\"3\"></td><td><pre># video组件的src属性用于设置要播放视频的资源地址</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># video组件的loop属性的属性值设置为true，表示循环播放视频</pre></td></tr></table></figure><hr />\n<h1 id=\"16-表单组件\"><a class=\"anchor\" href=\"#16-表单组件\">#</a> 16 表单组件</h1>\n<p>微信小程序中的表单组件与 HTML 中的表单类似。微信小程序在 HTML 基础上做了封装，并且增加了一些组件。表单组件通常用于用户信息的填写，以便于把用户填写的信息提交给服务器。</p>\n<p>常用的表单组件：</p>\n<table>\n<thead>\n<tr>\n<th><strong>组件</strong></th>\n<th><strong>功能</strong></th>\n<th><strong>组件</strong></th>\n<th><strong>功能</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>form</td>\n<td>表单</td>\n<td>button</td>\n<td>按钮</td>\n</tr>\n<tr>\n<td>checkbox-group</td>\n<td>多项选择器</td>\n<td>checkbox</td>\n<td>多选项目</td>\n</tr>\n<tr>\n<td>radio-group</td>\n<td>单项选择器</td>\n<td>radio</td>\n<td>单选项目</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>多行输入框</td>\n<td>input</td>\n<td>输入框</td>\n</tr>\n</tbody>\n</table>\n<p>form 组件</p>\n<p>form 组件表示表单容器，没有任何样式，需要配合其他表单组件一起使用，用于提交用户输入的信息和选择的选项。</p>\n<p>form 组件内部可以包含若干个供用户输入或选择的表单组件，允许提交的表单组件为 switch、input、 checkbox、slider、radio 和 picker 组件。表单中携带数据的组件（如输入框）必须带有 name 属性值，否则无法识别提交的内容。</p>\n<p>form 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bindsubmit</td>\n<td>eventhandle</td>\n<td>通过携带 form 组件中的数据触发 submit 事件</td>\n</tr>\n<tr>\n<td>bindreset</td>\n<td>eventhandle</td>\n<td>表单重置时会触发 reset 事件</td>\n</tr>\n</tbody>\n</table>\n<p>button 组件</p>\n<p>button 组件表示按钮，功能比 HTML 中的 button 按钮丰富。</p>\n<p>button 组件的常用属性如下表所示。</p>\n<p>button 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>string</td>\n<td>按钮的大小，可选值：default、mini, 默认值为 default</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>按钮的样式类型，可选值：primary、default、warn, 默认值为 default</td>\n</tr>\n<tr>\n<td>plain</td>\n<td>boolean</td>\n<td>按钮是否镂空，当 plain 属性值为 true 时背景色透明，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>form-type</td>\n<td>string</td>\n<td>form-type 属性值可设为 submit、reset, 点击分别会触发 form 组件中的 submit、reset 事件，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>hover-class</td>\n<td>string</td>\n<td>指定按钮点击态效果，默认值为 &quot;&quot;</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># button组件的</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 利用button组件的type属性改变按钮的样式，type属性的可选值有3个，分别是primary（绿色）、default（白色）、warn（红色）。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>普通按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>主色调按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>警告按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre># 第1个为普通按钮的样式类型，</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># 第2个为主色调按钮的样式类型，</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 第3个为警告按钮样式类型。</pre></td></tr></table></figure><p>input 组件</p>\n<p>input 组件与 HTML 中的 &lt;input&gt; 标签作用类似，都用于接收用户的输入。在微信小程序中，input 组件增加了很多属性，使 input 组件使用起来更加简单、方便。</p>\n<p>input 组件的常用属性：</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>输入框的初始内容，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>input 的类型，默认值为 text</td>\n</tr>\n<tr>\n<td>confirm-type</td>\n<td>string</td>\n<td>设置键盘右下角按钮的文字，仅在 type=&quot;text&quot; 时生效，可选值：send、search、next、go、done, 默认值为 done</td>\n</tr>\n<tr>\n<td>password</td>\n<td>boolean</td>\n<td>是否是密码类型，默认值为 false</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>string</td>\n<td>输入框为空时的占位符，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>placeholder-style</td>\n<td>string</td>\n<td>指定 placeholder 的样式，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>placeholder-class</td>\n<td>string</td>\n<td>指定 placeholder 的样式类，默认值为 &quot;&quot;</td>\n</tr>\n</tbody>\n</table>\n<p>input 组件的 type 属性</p>\n<table>\n<thead>\n<tr>\n<th><strong>可选值</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>文本输入键盘</td>\n</tr>\n<tr>\n<td>number</td>\n<td>数字输入键盘</td>\n</tr>\n<tr>\n<td>idcard</td>\n<td>身份证输入键盘</td>\n</tr>\n<tr>\n<td>digit</td>\n<td>带小数点的数字键盘</td>\n</tr>\n<tr>\n<td>safe-password</td>\n<td>密码安全输入键盘</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>昵称输入键盘</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># input组件的使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># 设置type属性值为text，表示在微信客户端中运行的微信小程序出现文本输入键盘</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># 设置type属性值为number，表示在微信客户端中运行的微信小程序出现数字输入键盘</pre></td></tr></table></figure><p>checkbox 和 checkbox-group 组件</p>\n<p>checkbox 组件表示多选项目，在进行多项选择时会用到。checkbox 组件一般与 checkbox-group 组件搭配使用，checkbox-group 组件表示多项选择器，内部由多个 checkbox 组件组成。建议将不同组的 checkbox 组件嵌套在不同的 checkbox-group 组件中，从而方便管理和区分。</p>\n<p>checkbox 组件的常用属性:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>checkbox 组件标识，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>boolean</td>\n<td>当前是否选中，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>颜色，默认值为 #09BB07</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># checkbox和checkbox-group组件的使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox-group</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>蛋糕<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>甜甜圈<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span><span class=\"token punctuation\">></span></span>巧克力<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox-group</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>radio 和 radio-group 组件</p>\n<p>radio 组件为单选项目，是表单中常用的组件，用于在从多个选项中选出一个，选项之间是互斥关系。radio 组件一般与 radio-group 组件搭配使用，radio-group 组件表示单项选择器，内部由多个 radio 组件组成。建议将不同组的 radio 组件分别嵌套在不同的 radio-group 组件中，从而方便管理和区分。</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>radio 标识，默认值为 &quot;&quot;</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>boolean</td>\n<td>当前是否选中，默认值为 false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>是否禁用，默认值为 false</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td>颜色，默认值为 #09BB07</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># radio和radio-group组件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 通过radio和radio-group组件实现性别的单项选择。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-group</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span><span class=\"token punctuation\">></span></span>男<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio</span><span class=\"token punctuation\">></span></span>女<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-group</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program1/",
            "url": "http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program1/",
            "title": "第一章：小程序入门",
            "date_published": "2024-06-18T20:09:27.000Z",
            "content_html": "<p>小程序是一种不需要下载安装即可使用的应用，它实现了应用 “触手可及” 的概念，用户扫一扫或搜一下即可打开应用。也体现了 “用完即走” 的理念，用户不需要关心安装和卸载的问题。</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"1学习目标\"><a class=\"anchor\" href=\"#1学习目标\">#</a> 1. 学习目标</h1>\n<ul>\n<li>了解微信小程序，能够说出微信小程序的概念、特点、发展前景和宿主环境</li>\n<li>掌握微信小程序开发账号的注册方法，能够独立完成微信小程序开发账号的注册</li>\n<li>掌握获取微信小程序 AppID 的方法，能够从微信小程序管理后台获取 AppID</li>\n<li>掌握微信开发者工具的安装方法，能够独立完成微信开发者工具的安装</li>\n<li>掌握微信小程序项目的创建方法，能够使用微信开发者工具创建项目</li>\n<li>熟悉微信小程序的项目结构，能够解释每个文件的作用</li>\n<li>熟悉微信小程序的页面组成，能够解释 WXML、WXSS、JS 和 JSON 文件的作用</li>\n<li>熟悉微信小程序的通信模型，能够解释微信小程序中渲染层、逻辑层及第三方服务器的通信方式</li>\n<li>熟悉微信开发者工具的主界面，能够说出主界面中常用快捷按钮的功能</li>\n<li>掌握微信小程序的项目设置，能够根据需要对微信小程序进行设置</li>\n<li>了解微信小程序开发常用快捷键，能够列举 4 类常用快捷键</li>\n<li>了解项目成员，能够说出项目成员的组织结构、分工和权限</li>\n<li>掌握添加项目成员和体验成员的方法，能够在微信小程序管理后台中添加项目成员和体验成员</li>\n<li>熟悉微信小程序的版本，能够说明微信小程序的 4 种版本</li>\n<li>熟悉微信小程序发布上线的流程，能够归纳出微信小程序发布上线的步骤</li>\n</ul>\n<hr />\n<h1 id=\"2章节概述\"><a class=\"anchor\" href=\"#2章节概述\">#</a> 2. 章节概述</h1>\n<p>微信小程序于 2017 年 1 月 9 日正式上线，凭借其<span class=\"red\">开发成本低、微信用户数量</span>庞大等优势，得到了许多用户的认可，同时还为许多商家提供了商机。</p>\n<p>概念：微信小程序是一种全新的连接用户与服务的应用，它可以在微信内被便捷地获取和传播，同时具有良好的用户体验。微信小程序是运行在<span class=\"red\">微信</span>中的应用，是一种不需要下载即可使用的应用，用户通过微信扫一扫或者搜一搜即可打开，且每个微信小程序的体积非常小。</p>\n<p>特点：</p>\n<ul>\n<li>无须安装，直接使用，不占用存储空间</li>\n<li>用完即走，无须卸载</li>\n<li>名称唯一：不能使用相同名称</li>\n<li>入口丰富</li>\n<li>传播能力强：微信搜索、好友分享、小程序识别码</li>\n</ul>\n<p>微信小程序与原生应用、HTML5 应用的区别：</p>\n<table>\n<thead>\n<tr>\n<th>对比项</th>\n<th>微信小程序</th>\n<th>原生应用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>下载安装</td>\n<td>无需下载和安装</td>\n<td>从 iOS 和 Android 应用商店中下载</td>\n</tr>\n<tr>\n<td>体积大小</td>\n<td>体积小</td>\n<td>体积大</td>\n</tr>\n<tr>\n<td>跨平台</td>\n<td>可以跨平台</td>\n<td>不可以跨平台</td>\n</tr>\n<tr>\n<td>开发成本</td>\n<td>较低</td>\n<td>较高</td>\n</tr>\n<tr>\n<td>推广成本</td>\n<td>较低</td>\n<td>较高</td>\n</tr>\n<tr>\n<td>运行环境</td>\n<td>运行在微信上</td>\n<td>运行在浏览器上</td>\n</tr>\n<tr>\n<td>用户体验</td>\n<td>较流畅</td>\n<td>实际上打开一个网页，流程度略差</td>\n</tr>\n<tr>\n<td>接口成本</td>\n<td>可以大量应用 API</td>\n<td>可用 API 较少</td>\n</tr>\n</tbody>\n</table>\n<p>发展前景：</p>\n<ul>\n<li>生态体系：微信小程序已经形成了自己的生态体系，它连接了开发者、运营者、投资者等各领域的企业，并且接入了多个第三方服务的平台。</li>\n<li>开放能力：微信小程序不断自我完善， 为开发者开放了越来越多的接口，它可以适用于大多数的用户和场景，还可以方便开发者进行深度挖掘。同时，微信为小程序提供了越来越多的开放功能，例如微信扫码、微信支付、地理定位等，这对微信小程序的发展也会起到推动作用。</li>\n<li>用户粘性：微信小程序已经积累了大量用户，用户黏性高，使其他行业与微信用户有更好的连接，能够更好地与微信结合。</li>\n</ul>\n<p>宿主环境：</p>\n<p>宿主环境（Host Environment）是指程序运行所依赖的环境。例如，iOS 系统和 Android 系统提供了两种不同的宿主环境，微信、微博等应用都需要依赖宿主环境才能运行，如下图所示。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145546412.png\" alt=\"image-20240603145546412\" /></p>\n<p>微信小程序可以跨平台，这是因为微信小程序并不是一个直接安装在 Android 系统或 iOS 系统中的应用，而是运行在微信客户端上的应用。<span class=\"red\">微信客户端给微信小程序提供的环境就是微信小程序的宿主环境</span>。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145601465.png\" alt=\"image-20240603145601465\" /></p>\n<p>微信小程序的宿主环境为微信小程序提供了丰富的组件和 API（Application Program Interface，应用程序接口），具体解释如下：</p>\n<ul>\n<li>组件：用于快速搭建页面的结构。微信小程序的组件包括视图容器、基础内容、表单、导航、媒体、地图、画布、开放能力等。</li>\n<li>API：用于让开发者方便地调用微信提供的功能，例如获取用户信息、微信登录、微信支付等。</li>\n</ul>\n<hr />\n<h1 id=\"3微信小程序开发前准备\"><a class=\"anchor\" href=\"#3微信小程序开发前准备\">#</a> 3. 微信小程序开发前准备</h1>\n<p>①注册微信小程序开发账号</p>\n<p>②获取微信小程序 AppID</p>\n<ol>\n<li>登录微信小程序管理后台</li>\n<li>在左侧边栏中选择 “开发管理”</li>\n<li>选择 “开发设置”</li>\n<li>查看并复制 AppID</li>\n</ol>\n<ul>\n<li>在微信小程序中，AppID 又称为小程序 ID，是每个小程序的唯一标识，每个小程序账号只有一个 AppID，因此每个账号只能发布一个小程序，如果要发布多个小程序，需要注册多个小程序账号。</li>\n</ul>\n<p>③安装微信开发者工具</p>\n<p>④创建微信小程序项目</p>\n<ul>\n<li>在微信小程序项目的创建界面中，读者可以自定义项目名称和目录，如填写项目名称为 “HELLO”，目录为 “D:\\miniprogram\\hello”。关于 AppID、开发模式、后端服务和模板选择的具体解释如下：\n<ul>\n<li>AppID：填写 1.2.2 小节获取的 AppID 即可。如果不想使用自己的 AppID，也可以使用测试号，二者的区别是，前者能够使用的功能比后者多，例如代码的上传和发布。</li>\n<li>开发模式：有 “小程序” 和 “插件” 两种选择，由于我们要创建一个微信小程序项目，所以此处应选择 “小程序”。</li>\n<li>后端服务：有 “微信云开发” 和 “不使用云服务” 两种选择。在 “微信云开发” 中 ，开发者无须搭建服务器，即可使用云函数、云数据库、云存储以及微信云托管等完整云端能力。</li>\n<li>模板选择：微信开发者工具提供了多种模板用于快速创建微信小程序项目。</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h1 id=\"4微信小程序开发基础\"><a class=\"anchor\" href=\"#4微信小程序开发基础\">#</a> 4. 微信小程序开发基础</h1>\n<p>微信小程序项目创建完成后，微信开发者工具会自动创建微信小程序的项目结构</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145645322.png\" alt=\"image-20240603145645322\" /></p>\n<ul>\n<li>pages：用于存放微信小程序的所有页面。</li>\n<li>eslintrc.js：用于格式化代码，使代码风格保持一致。</li>\n<li>app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。</li>\n<li>app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。</li>\n<li>app.wxss：微信小程序的全局样式文件，文件可以为空。</li>\n<li>project.config.json：在微信开发者工具上做的任何配置都会写入这个文件中，当重新安装工具或者更换计算机工作时，只要栽入同一个项目的代码包，微信开发者工具会根据该文件自动恢复成开发微信小程序时的个性化配置。</li>\n<li>project.private.config.json：用于保存微信开发者工具的私人配置，配置的优先级高于 project.config.json。</li>\n<li>sitemap.json：用于配置微信小程序及其页面是否允许被微信索引，如果没有该文件， 则默认为所有页面都允许被索引。微信现已开放微信小程序页面的搜索，也就是说微信小程序里面的内容也能被微信搜索引擎搜索到。 当开发者允许微信小程序页面被微信索引时，微信会通过爬虫的形式，为微信小程序的页面建立索引。 当用户的搜索词条触发该索引时，微信小程序的链接地址将可能展示在搜索结果中。</li>\n</ul>\n<p>在微信客户端中启动微信小程序的步骤。</p>\n<ol>\n<li>把整个微信小程序的代码包下载到本地。</li>\n<li>解析 app.json 全局配置文件，通过该文件解析出微信小程序的所有页面路径。</li>\n<li>执行 app.js 入口文件，调用 App () 函数创建微信小程序的实例。</li>\n<li>渲染微信小程序的首页。</li>\n</ol>\n<p>页面组成：</p>\n<p>一个微信小程序是由一个或多个页面组成的，这些页面被存放在 pages 目录中。下面以 pages 目录下的 index 页面为例展示其组成部分，index 页面的组成部分如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145704124.png\" alt=\"image-20240603145704124\" /></p>\n<p>index 页面由 4 个文件组成，分别是 index.js、index.json、index.wxml 和 index.wxss</p>\n<ul>\n<li>JS：类似网页制作中的 JavaScript 语言，用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。</li>\n<li>JSON（JavaScript Object Notation，JavaScript 对象符号）：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。</li>\n<li>WXML（WeiXin Markup Language，微信标记语言）：类似于网页制作中的 HTML 语言，用于构建页面结构，文件扩展名为.wxml。</li>\n<li>WXSS（WeiXin Style Sheets，微信样式表）：类似于网页制作中的 CSS 语言，用于设置页面样式，文件扩展名为.wxss。</li>\n</ul>\n<p>微信客户端在加载微信小程序页面时的步骤。</p>\n<ol>\n<li>读取并解析页面中 JSON 文件的配置。</li>\n<li>加载页面的 WXML 文件、WXSS 文件和 JS 文件，实现页面渲染。</li>\n</ol>\n<p>其中，页面中 WXSS 文件的样式会覆盖项目根目录下的 app.wxss 文件中相同的全局样式；页面中 JS 文件的 Page () 函数会被调用，用于创建页面实例。</p>\n<p>微信小程序的通信模型</p>\n<p>微信小程序实现了渲染层、逻辑层和第三方服务器的通信：</p>\n<ul>\n<li>WXML 和 WXSS 工作在渲染层，用于实现页面的渲染。</li>\n<li>JS 工作在逻辑层，用于实现页面的逻辑。</li>\n</ul>\n<p>微信小程序的通信模型分为两个部分。</p>\n<ul>\n<li>第 1 部分是渲染层与逻辑层之间的通信，即将逻辑层的数据渲染到页面中</li>\n<li>第 2 部分是逻辑层和第三方服务器之间的通信，即通过向第三方服务器发送请求，得到需要的数据。</li>\n</ul>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145720170.png\" alt=\"image-20240603145720170\" /></p>\n<p>Native 表示微信客户端的底层，渲染层与逻辑层之间的通信和逻辑层与第三方服务器之间的通信都由微信客户端的底层进行转发。</p>\n<h1 id=\"5微信开发者工具的使用\"><a class=\"anchor\" href=\"#5微信开发者工具的使用\">#</a> 5. 微信开发者工具的使用</h1>\n<p>菜单栏：</p>\n<ul>\n<li>项目：用于新建项目、导入项目、打开最近项目、查看所有项目或关闭当前项目等。</li>\n<li>文件：用于新建文件、全部保存或关闭编辑器等。</li>\n<li>编辑：用于编辑代码，查看编辑相关的操作和快捷键，对代码进行格式化。</li>\n<li>工具：用于项目的编译、刷新、清除缓存等。</li>\n<li>转到：用于切换编辑器、快速定位到行、查看问题等。</li>\n<li>选择：用于全选、光标的移动等。</li>\n<li>视图：用于微信开发者工具可视区的控制。</li>\n<li>界面：用于控制主界面中工具栏、模拟器、编辑器、目录树和调试器的显示与隐藏。</li>\n<li>设置：用于通用设置、外观设置、快捷键设置、编辑器设置、代理设置、安全设置、扩展设置和项目设置。</li>\n<li>帮助：用于工具的反馈和开发文档的查看等。</li>\n<li>微信开发者工具：用于账号切换、更换开发模式、检查更新、调试、退出等。</li>\n</ul>\n<p>工具栏：</p>\n<ul>\n<li>\n<p>个人中心：工具栏最左侧的第 1 个按钮，显示当前登录用户的头像，单击头像后会显示用户名。</p>\n</li>\n<li>\n<p>模拟器、编辑器和调试器：用于控制模拟器、编辑器和调试器的显示与隐藏。</p>\n</li>\n<li>\n<p>可视化：用于代码的可视化编辑，开发者可以通过拖曳等方式对界面进行快速布局与修改。</p>\n</li>\n<li>\n<p>云开发：开发者可以使用云开发来开发微信小程序、小游戏，无须搭建服务器，即可使用云端能力。云开发能力从基础库 2.2.3 开始支持。</p>\n</li>\n<li>\n<p>模式切换下拉菜单：用于在小程序模式和插件模式之间进行切换。</p>\n</li>\n<li>\n<p>编译下拉菜单：用于切换编译模式，默认为普通编译，可以添加其他编译。</p>\n</li>\n<li>\n<p>编译：编写完微信小程序的代码后， 需要经过编译才能运行。默认情况下，直接按 Ctrl+S 快捷键保存代码文件，微信开发者工具就会自动编译运行该代码。 若想手动编译， 则单击 “编译” 按钮即可。</p>\n</li>\n<li>\n<p>预览：单击 “预览” 按钮会生成一个二维码，使用微信扫描二维码，即可在微信中预览小程序的实际运行效果。</p>\n</li>\n<li>\n<p>真机调试：可以实现直接利用开发者工具，通过网络连接对手机上运行的微信小程序进行调试，帮助开发者更好地定位和查找在手机上出现的问题。</p>\n</li>\n<li>\n<p>清缓存：用于清除模拟器缓存、编译缓存。</p>\n</li>\n<li>\n<p>上传：用于将代码上传到微信小程序管理后台，可以在 “开发管理” 中查看上传的版本，将代码提交审核。需要注意的是，如果在创建项目时使用的是测试号，则不会显示 “上传” 按钮。</p>\n</li>\n<li>\n<p>版本管理：用于通过 Git 对小程序进行版本管理。</p>\n</li>\n<li>\n<p>详情：用于查看和修改微信小程序的基本信息、本地设置和项目配置。</p>\n</li>\n<li>\n<p>消息：用于显示消息通知。</p>\n</li>\n</ul>\n<p>模拟器：</p>\n<p>模拟器可以模拟微信小程序在微信客户端的运行效果。微信小程序的代码通过编译后可以在模拟器上直接运行。开发者可以选择不同的设备，也可以添加自定义设备来调试小程序在不同尺寸机型上的适配问题。</p>\n<p>编辑器：</p>\n<p>编辑器分为左右两栏，左栏为目录树，主要用于展示当前微信小程序项目的目录结构；右栏为代码编辑区，用于编写文件中的代码。在左栏中单击某个文件，就可以在右栏中对该文件进行编辑，也可以在左栏中通过双击打开多个文件，这些文件会在右栏中显示</p>\n<p>调试器：</p>\n<ul>\n<li>\n<p>Wxml：Wxml 面板，用于查看和调试 WXML 和 WXSS。</p>\n</li>\n<li>\n<p>Console：控制台面板，用于输出调试信息，也可以直接编写代码执行。</p>\n</li>\n<li>\n<p>Sources：源代码面板，用于显示当前项目的脚本文件，在该面板中开发者看到的文件是经过处理之后的脚本文件。</p>\n</li>\n<li>\n<p>Network：网络面板，用于记录网络请求和响应信息，根据它可以进行网络性能优化。</p>\n</li>\n<li>\n<p>AppData：App 数据面板，用于查看或编辑当前微信小程序运行时的数据。</p>\n</li>\n<li>\n<p>Storage：存储面板，用于查看和管理本地数据缓存。</p>\n</li>\n<li>\n<p>Sensor：传感器面板，用于模拟地理位置、重力感应。</p>\n</li>\n<li>\n<p>Security：安全面板，用于调试页面的安全和认证等信息。</p>\n</li>\n<li>\n<p>Trace: 跟踪面板， 用于真机调试时跟踪调试信息。</p>\n</li>\n</ul>\n<p>微信小程序的项目设置</p>\n<p>在微信开发者工具中，可以对微信小程序的项目进行设置，主要包含以下 4 个方面。</p>\n<ul>\n<li>基本信息的设置</li>\n<li>性能分析</li>\n<li>本地设置</li>\n<li>项目配置</li>\n</ul>\n<p>项目设置 —— 基本信息的设置</p>\n<p>在微信开发者工具中，选择菜单栏的 “设置”，然后选择 “项目设置”，将会弹出一个用于项目设置的选项卡，单击 “基本信息” 项，即可对项目的基本信息进行设置，如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145752610.png\" alt=\"image-20240603145752610\" /></p>\n<p>项目设置 —— 性能分析</p>\n<p>单击 “性能分析”，即可查看项目的线上数据和本地情况，供开发者有针对性地进行优化，如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145808181.png\" alt=\"image-20240603145808181\" /></p>\n<p>项目设置 —— 本地设置</p>\n<p>单击 “本地设置”，即可对项目进行本地设置，如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145816962.png\" alt=\"image-20240603145816962\" /></p>\n<ul>\n<li>\n<p>调试基础库：选择基础库的版本，用于在对应版本的微信客户端上运行。高版本的基础库无法兼容低版本的微信客户端。版本号后边的百分比表示该版本的用户占比。本书中使用的基础库的版本为 2.25.2。</p>\n</li>\n<li>\n<p>将 JS 编译成 ES5：选中该项后，JS 代码的语法将转换为 ES5。</p>\n</li>\n<li>\n<p>上传代码时样式自动补全：选中该项后，在预览、真机调试、上传时文件中的样式将自动补全，需要注意的是，勾选此项会增大代码包的体积。</p>\n</li>\n<li>\n<p>上传代码时自动压缩样式文件、上传代码时自动压缩脚本文件和上传代码时自动压缩 WXML 文件：选中对应选项后，在预览、真机调试、上传时文件中的样式文件、脚本文件、WXML 文件将自动压缩。</p>\n</li>\n<li>\n<p>上传时进行代码保护：选中该项后，微信开发者工具会尝试对项目代码进行保护。</p>\n</li>\n<li>\n<p>不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书：正式发布的微信小程序的网络请求需要校验这些信息，在开发过程中可以选中该项，开发工具将不校验这些信息，从而有助于开发者在开发过程中更方便地完成调试工作。</p>\n</li>\n<li>\n<p>启用自定义处理命令：选中该项后，微信开发者工具在编译前、预览前、上传前这三个时机调用开发者自定义的命令，开发者可以对代码进行一些预处理。</p>\n</li>\n</ul>\n<p>项目设置 —— 项目配置</p>\n<p>单击 “项目配置”，即可查看项目的域名信息和高级配置，如图：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145832542.png\" alt=\"image-20240603145832542\" /></p>\n<ul>\n<li>域名信息：用于显示项目的安全域名信息。</li>\n<li>高级配置：用于显示代码包的大小、Tabbar 的个数等信息。</li>\n</ul>\n<p>常用快捷键</p>\n<p>快捷键 —— 编辑相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>快捷键</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>项目</td>\n<td>Shift+Ctrl+N</td>\n<td>新建项目</td>\n</tr>\n<tr>\n<td>项目</td>\n<td>Shift+Ctrl+W</td>\n<td>关闭当前项目</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+N</td>\n<td>新建文件</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+S</td>\n<td>保存</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Ctrl+W</td>\n<td>关闭当前文件</td>\n</tr>\n<tr>\n<td>文件</td>\n<td>Shift+Ctrl+S</td>\n<td>全部保存</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+[</td>\n<td>代码左缩进</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+]</td>\n<td>代码右缩进</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Alt+Shift+F</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctrl+Shift+[</td>\n<td>折叠代码块</td>\n</tr>\n<tr>\n<td>代码格式调整</td>\n<td>Ctr1+Shift+]</td>\n<td>展开代码块</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt + ↑</td>\n<td>代码向上移动一行</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt + ↓</td>\n<td>代码向下移动一行</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt+Shift + ↑</td>\n<td>复制并向上粘贴</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Alt+Shift + ↓</td>\n<td>复制并向下粘贴</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Ctrl+C</td>\n<td>复制</td>\n</tr>\n<tr>\n<td>代码移动、复制、粘贴</td>\n<td>Ctrl+V</td>\n<td>粘贴</td>\n</tr>\n<tr>\n<td>注释</td>\n<td>Ctrl+/</td>\n<td>注释或取消注释</td>\n</tr>\n<tr>\n<td>文件跳转</td>\n<td>Ctrl+P</td>\n<td>跳转到文件</td>\n</tr>\n<tr>\n<td>文件跳转</td>\n<td>Ctrl+E</td>\n<td>跳转到最近文件</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Ctrl+End</td>\n<td>移动到文件末尾</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Ctrl+Home</td>\n<td>移动到文件开头</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Shift+End</td>\n<td>移动到行星</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Shift+Home</td>\n<td>移动到行首</td>\n</tr>\n<tr>\n<td>光标移动</td>\n<td>Ctrl+U</td>\n<td>光标回退</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+F</td>\n<td>在当前文件中查找</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+H</td>\n<td>在当前文件中替换</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+Shift+F</td>\n<td>全局查找</td>\n</tr>\n<tr>\n<td>搜索、替换</td>\n<td>Ctrl+Shift+H</td>\n<td>全局替换</td>\n</tr>\n</tbody>\n</table>\n<p>快捷键 —— 工具相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+B</td>\n<td>编译项目</td>\n</tr>\n<tr>\n<td>Ctrl+R</td>\n<td>焦点在编辑器外，编译项目</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+P</td>\n<td>预览代码</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+U</td>\n<td>上传代码</td>\n</tr>\n</tbody>\n</table>\n<p>快捷键 —— 界面相关的快捷键</p>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+Shift+T</td>\n<td>显示或隐藏工具栏</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+D</td>\n<td>显示或隐藏模拟器</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+E</td>\n<td>显示或隐藏编辑器</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+M</td>\n<td>显示或隐藏目录树</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+I</td>\n<td>显示或隐藏调试器</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h1 id=\"6微信小程序的项目成员\"><a class=\"anchor\" href=\"#6微信小程序的项目成员\">#</a> 6. 微信小程序的项目成员</h1>\n<p>一般情况下，微信小程序中项目成员的组织结构如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145851071.png\" alt=\"image-20240603145851071\" /></p>\n<ul>\n<li>\n<p>项目管理者负责统筹整个项目的进展和风险，把控微信小程序对外发布上线的节奏。产品组、设计组、开发组和测试组之间相互配合，协调工作，共同完成微信小程序项目。</p>\n</li>\n<li>\n<p>项目成员：表示参与微信小程序开发、运行的成员，可登录微信小程序管理后台，包括运营者、开发者及和数据分析者。</p>\n</li>\n<li>\n<p>体验成员：表示参与小程序内测体验的成员，可使用体验版小程序，但不属于项目成员。</p>\n</li>\n</ul>\n<p>微信小程序成员管理的示意图如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145907869.png\" alt=\"image-20240603145907869\" /></p>\n<p>管理员可以添加或删除项目成员和体验成员，项目成员也可以添加或删除体验成员。</p>\n<p>项目成员的权限</p>\n<p>在一个微信小程序中，每个项目成员的权限各有不同，只有为每个项目成员分配了各自的权限，才能保证项目的正常进行。例如开发者有开发者权限、登录权限等，下面将介绍不同项目成员拥有的权限，具体如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>权限</th>\n<th>运营者</th>\n<th>开发者</th>\n<th>数据分析者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>登录</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>版本发布</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>数据分析</td>\n<td></td>\n<td></td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>开发能力</td>\n<td></td>\n<td>✔️</td>\n<td></td>\n</tr>\n<tr>\n<td>修改小程序介绍</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>暂停 / 恢复服务</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>设置可被搜索</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>解除关联移动应用</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>解除关联公众号</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>管理体验者</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>体验者权限</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>微信支付</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>小程序插件管理</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>游戏运营管理</td>\n<td>✔️</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>推广</td>\n<td>✔️</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n</tbody>\n</table>\n<p>接下来对项目成员的各种权限进行解释说明：</p>\n<ul>\n<li>\n<p>登录：可登录小程序管理后台，无须管理员确认。</p>\n</li>\n<li>\n<p>版本发布：小程序版本发布、回退。</p>\n</li>\n<li>\n<p>数据分析：使用小程序统计模块查看小程序数据。</p>\n</li>\n<li>\n<p>开发能力：可使用微信开发者工具和开发版小程序进行开发；在开发模块可使用开发管理、微信开发者工具和云开发等。</p>\n</li>\n<li>\n<p>修改小程序介绍：修改小程序在主页展示的功能介绍。</p>\n</li>\n<li>\n<p>暂停 / 恢复服务：暂停或恢复小程序线上服务。</p>\n</li>\n<li>\n<p>设置可被搜索：设置小程序是否可被用户主动搜索。</p>\n</li>\n<li>\n<p>解除关联移动应用：可解绑小程序已关联的移动应用。</p>\n</li>\n<li>\n<p>解除关联公众号：可解绑小程序已关联的公众号。</p>\n</li>\n<li>\n<p>管理体验者：添加或删除小程序体验者。</p>\n</li>\n<li>\n<p>体验者权限：使用体验版小程序。</p>\n</li>\n<li>\n<p>微信支付：使用小程序微信支付（虚拟支付）模块。</p>\n</li>\n<li>\n<p>小程序插件管理：运营者可进行小程序插件开发管理、申请管理和设置。</p>\n</li>\n<li>\n<p>游戏运营管理：可使用小游戏管理后台的素材管理、游戏圈管理等功能。</p>\n</li>\n<li>\n<p>推广：在推广模块使用小程序流量主、广告主等功能。</p>\n</li>\n</ul>\n<p>微信小程序的上线发布流程</p>\n<p>一个微信小程序从开发完到发布上线，一般分为以下 3 个步骤：</p>\n<ol>\n<li>上传代码</li>\n</ol>\n<p>打开微信小程序，在微信开发者工具的工具栏中单击 “上传” 按钮，页面中弹出提示框，根据提示填写相应的信息，然后单击 “上传” 按钮，即可上传代码。</p>\n<p>登录微信小程序管理后台，在左侧边栏中单击 “版本管理”，即可进入版本管理页面，查看开发版本，即可查看刚才提交上传的版本。</p>\n<ol start=\"2\">\n<li>提交审核</li>\n</ol>\n<p>单击 “提交审核” 按钮，根据页面提示信息进行操作，即可提交已上传的版本并进行审核。</p>\n<p>提交审核后在审核版本中会出现正在审核的版本，审核需要一定时间，PPT 中不再演示。</p>\n<ol start=\"3\">\n<li>发布</li>\n</ol>\n<p>审核通过后审核版本中将显示 “发布” 按钮，单击该按钮，即可完成微信小程序的发布。</p>\n<hr />\n<h1 id=\"7习题\"><a class=\"anchor\" href=\"#7习题\">#</a> 7. 习题</h1>\n<h2 id=\"一-填空题\"><a class=\"anchor\" href=\"#一-填空题\">#</a> 一、 填空题</h2>\n<ol>\n<li>微信小程序是运行在  <span class=\"spoiler\" title=\"你知道得太多了\">微信</span>  之上的应用。</li>\n<li>微信小程序开发完成后需要通过 “上传” 按钮将代码上传到  <span class=\"spoiler\" title=\"你知道得太多了\">小程序管理后台</span>  。</li>\n<li>微信小程序项目中的  <span class=\"spoiler\" title=\"你知道得太多了\">app.json</span>  文件是全局配置文件。</li>\n<li>微信开发者工具中用于保存文件的快捷键是 <span class=\"spoiler\" title=\"你知道得太多了\">ctrl +s</span>  。</li>\n<li>在微信小程序中，每个页面由 4 个文件组成，分别是 <span class=\"spoiler\" title=\"你知道得太多了\">WXML</span> 文件、 <span class=\"spoiler\" title=\"你知道得太多了\">WXSS</span> 文件、<span class=\"spoiler\" title=\"你知道得太多了\">JSON</span> 文件和 <span class=\"spoiler\" title=\"你知道得太多了\">JS</span> 文件</li>\n</ol>\n<h2 id=\"二-判断题\"><a class=\"anchor\" href=\"#二-判断题\">#</a> 二、 判断题</h2>\n<ol>\n<li class=\"quiz true\">在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。</li>\n<li class=\"quiz true\">微信小程序项目中 app.js 文件是全局样式文件。</li>\n<li class=\"quiz true\">通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。</li>\n<li class=\"quiz true\">微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。</li>\n<li class=\"quiz true\">项目成员表示参与微信小程序开发、运行的成员。</li>\n</ol>\n<h2 id=\"三-选择题\"><a class=\"anchor\" href=\"#三-选择题\">#</a> 三、 选择题</h2>\n<ol class=\"options\">\n<li class=\"quiz\">\n<p>下列选项中，关于微信小程序说法错误的是（ ）{.gap} 。</p>\n<ul>\n<li>微信小程序是运行在微信之中应用</li>\n<li>微信小程序的体积非常小</li>\n<li class=\"correct\">微信小程序不可以跨平台</li>\n<li>通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序</li>\n<li class=\"options\"></li>\n</ul>\n</li>\n<li class=\"quiz options\">\n<p>下列选项中，不属于微信小程序特点的是（ ）{.gap} 。</p>\n<ul>\n<li>\n<p>无须安装</p>\n</li>\n<li>\n<p>无须卸载</p>\n</li>\n<li class=\"correct\">\n<p>体积大</p>\n</li>\n<li>\n<p>入口丰富</p>\n<p></p>\n</li>\n</ul>\n</li>\n<li class=\"quiz options\">\n<p>下列选项中，用于在微信开发者工具中输出调试信息的面板是（ ）{.gap} 。</p>\n<ul>\n<li>\n<p>Wxml</p>\n</li>\n<li class=\"correct\">\n<p>Console</p>\n</li>\n<li>\n<p>Sources</p>\n</li>\n<li>\n<p>Network</p>\n<p></p>\n</li>\n</ul>\n</li>\n<li class=\"quiz options\">\n<p>下列选项中，关于微信小程序项目目录结构说法错误的是（ ）{.gap} 。</p>\n<ul>\n<li>\n<p>pages 目录用于存放所有微信小程序的页面</p>\n</li>\n<li>\n<p>app.wxss 文件定义了微信小程序项目的全局样式</p>\n</li>\n<li class=\"correct\">\n<p>sitemap.json 文件是微信小程序项目的全局配置文件</p>\n</li>\n<li>\n<p>app.js 文件是微信小程序项目的入口文件</p>\n<p></p>\n</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>下列选项中，关于微信开发者工具说法错误的是（ ）{.gap} 。</p>\n<ul>\n<li>\n<p>工具栏 “预览” 按钮用于在微信中进行预览</p>\n</li>\n<li>\n<p>菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等</p>\n</li>\n<li>\n<p>模拟器可以模拟小程序在微信客户端的运行效果</p>\n</li>\n<li class=\"correct\">\n<p>编辑器中只能打开一个文件</p>\n<p></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"四-简答题\"><a class=\"anchor\" href=\"#四-简答题\">#</a> 四、 简答题</h2>\n<ol>\n<li>\n<p>请简述微信小程序的特点。</p>\n<blockquote>\n<p>微信小程序具有无须安装、触手可及、用完即走、无须卸载的特点。用户在使用微信小程序时无须安装，直接使用，不占用存储空间；在使用微信小程序后，可以用完即走，无须卸载。除此之外，微信小程序还具有名称唯一、入口丰富和传播能力强等特点。</p>\n</blockquote>\n</li>\n<li>\n<p>请简述微信小程序项目的创建过程。</p>\n<blockquote>\n<p>（1）首次打开微信开发者工具时，会出现一个登录界面，在登录界面中，可以使用微信扫码登录微信开发者工具，微信开发者工具将使用这个微信账号的信息进行微信小程序的开发和调试。</p>\n<p>（2）使用微信扫码登录成功后会进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成后，单击 “确定” 按钮创建微信小程序项目。</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "学习类",
                "微信小程序开发",
                "微信小程序"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review4/",
            "url": "http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review4/",
            "title": "数据分析复习（第四章）",
            "date_published": "2024-06-18T01:01:00.000Z",
            "content_html": "<p>应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"第四章-pandas进行数据预处理\"><a class=\"anchor\" href=\"#第四章-pandas进行数据预处理\">#</a> 第四章、pandas 进行数据预处理</h1>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/1719038031036.png\" alt=\"1719038031036\" /></p>\n<h2 id=\"一-堆叠合并数据\"><a class=\"anchor\" href=\"#一-堆叠合并数据\">#</a> 一、堆叠合并数据</h2>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143713236.png\" alt=\"image-20240622143713236\" /></p>\n<h3 id=\"1轴向堆叠合并数据\"><a class=\"anchor\" href=\"#1轴向堆叠合并数据\">#</a> 1. 轴向堆叠合并数据</h3>\n<p>函数：pandas.concat (参数)，concat 函数主要参数如下，axis 是关键，它用于指定合并的轴是行还是列：</p>\n<p>​</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>objs</td>\n<td>接收多个 Series、DataFrame、Panel 的组合。表示参与连接的 pandas 对象的列表的组合。无默认值</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 int。表示连接的轴向，可选 0 和 1。默认为 0</td>\n</tr>\n<tr>\n<td><strong>join</strong></td>\n<td>接收 str。表示其他轴向上的索引是按交集（inner）还是并集（outer）进行合并。默认为 outer</td>\n</tr>\n<tr>\n<td><strong>ignore_index</strong></td>\n<td>接收 bool。表示是否不保留连接轴上的索引，产生一组新索引 range (total_length)。默认为 False</td>\n</tr>\n<tr>\n<td><strong>keys</strong></td>\n<td>接收 sequence。表示与连接对象有关的值，用于形成连接轴向上的层次化索引。默认为 None</td>\n</tr>\n<tr>\n<td><strong>levels</strong></td>\n<td>接收包含多个 sequence 的 list。表示在指定 keys 参数后，指定用作层次化索引各级别上的索引。默认为 None</td>\n</tr>\n<tr>\n<td><strong>names</strong></td>\n<td>接收 list。表示在设置了 keys 和 levels 参数后，用于创建分层级别的名称。默认为 None</td>\n</tr>\n<tr>\n<td><strong>verify_integrity</strong></td>\n<td>接收 bool。表示检查新连接的轴是否包含重复项，如果发现重复项，那么引发异常。默认为 False</td>\n</tr>\n<tr>\n<td><strong>sort</strong></td>\n<td>接收 bool。表示对非连接轴进行排序。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>横向堆叠：行对齐，然后将不同列名称的两张或多张表合并。索引不同，join 参数用于设置连接可选 inner 或 outer，索引完全相同，join 设置任何值都是直接将两个表在 x 轴向拼接在一起。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143940387.png\" alt=\"image-20240622143940387\" /></p>\n</li>\n<li>\n<p>纵向堆叠：列对齐，将不同行索引的两张或多张表纵向合并。列名并不完全相同，当 join 参数取值为 inner 时，返回的仅仅是列名的交集所代表的列。当 join 参数取值为 outer 时，返回的是两者列名的并集所代表的列。当两张表的列名完全相同时，不论 join 参数的取值是 inner 还是 outer，结果都是将两个表完全按照<em> y</em> 轴拼接起来。</p>\n</li>\n<li>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143946855.png\" alt=\"image-20240622143946855\" /></p>\n</li>\n</ul>\n<p>函数：append () 方法，方法主要使用格式及参数如下：</p>\n<p>pandas.DataFrame.append (参数)</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>other</strong></td>\n<td>接收 DataFrame 或 Series。表示要添加的新数据。无默认值</td>\n</tr>\n<tr>\n<td><strong>ignore_index</strong></td>\n<td>接收 bool。如果输入 True，那么就会对新生成的 DataFrame 使用新的索引（自动产生），而忽略原来数据的索引。默认为 False</td>\n</tr>\n<tr>\n<td><strong>verify_integrity</strong></td>\n<td>接收 bool。如果输入 True，那么当 ignore_index 为 False 时，会检查添加的数据索引是否冲突，若冲突，则会添加失败。默认为 False</td>\n</tr>\n<tr>\n<td><strong>sort</strong></td>\n<td>接收 bool。如果输入 True，那么会对合并的两个表的列进行排序。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<p>用于纵向合并两张表。但是使用 append () 方法实现纵向表堆叠的前提条件是两张表的列名需要完全一致。append () 方法的基本使用格式如下。</p>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>df1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span>df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#默认 axis=0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span>df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#默认 join='ourter'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span>df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>join<span class=\"token operator\">=</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#默认 join='ourter'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span>df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>join<span class=\"token operator\">=</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">,</span>ignore_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#axis=0 (纵向)，join=inner（内连接交集），ignore_index=True (重新设置索引)</span></pre></td></tr></table></figure><h3 id=\"2-主键合并数据\"><a class=\"anchor\" href=\"#2-主键合并数据\">#</a> 2、主键合并数据</h3>\n<p>通过一个或多个键将两个数据集的行连接起来，类似于关系型数据库的连接方式中的 join。针对两张包含不同特征的表，将根据某几个特征一一对应拼接起来，合并后数据的列数为两个原数据的列数和减去连接键的数量。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144151012.png\" alt=\"image-20240622144151012\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144155297.png\" alt=\"image-20240622144155297\" /></p>\n<p>函数：pandas.merge (参数)，函数主要参数如下：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>left</strong></td>\n<td>接收 DataFrame 或 Series。表示要添加的新数据 1。无默认值</td>\n</tr>\n<tr>\n<td><strong>right</strong></td>\n<td>接收 DataFrame 或 Series。表示要添加的新数据 2。无默认值</td>\n</tr>\n<tr>\n<td><strong>how</strong></td>\n<td>接收 “inner”“outer”“left” 或 “right”。表示数据的连接方式。默认为 inner</td>\n</tr>\n<tr>\n<td><strong>on</strong></td>\n<td>接收 str 或 sequence。表示两个数据合并的主键（必须一致）。默认为 None</td>\n</tr>\n<tr>\n<td><strong>left_on</strong></td>\n<td>接收 str 或 sequence。表示 left 参数接收数据用于合并的主键。默认为 None</td>\n</tr>\n<tr>\n<td>right_on</td>\n<td>接收 str 或 sequence。表示 right 参数接收数据用于合并的主键。默认为 None</td>\n</tr>\n<tr>\n<td>left_index</td>\n<td>接收 bool。表示是否将 left 参数接收数据的 index 作为连接主键。默认为 False</td>\n</tr>\n<tr>\n<td>right_index</td>\n<td>接收 bool。表示是否将 right 参数接收数据的 index 作为连接主键。默认为 False</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>接收 bool。表示是否根据连接键对合并后的数据进行排序。默认为 False</td>\n</tr>\n<tr>\n<td>suffixes</td>\n<td>接收 tuple。表示用于追加到 left 和 right 参数接收数据列名相同时的后缀。默认为 ('_x', '_y')</td>\n</tr>\n</tbody>\n</table>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>df1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ctg'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'AABCB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>df2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ticket'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'1001'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1002'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1003'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1004'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1005'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'amount'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">24.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">32.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">34.8</span><span class=\"token punctuation\">,</span><span class=\"token number\">19.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">26.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>new <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span>df2<span class=\"token punctuation\">,</span>how<span class=\"token operator\">=</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">,</span>on<span class=\"token operator\">=</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>总结（综上所述）：</p>\n<p>1、concat 实现的只是将两个 df 按行或者列简单进行拼接，并没有实现 sql 中的 join 功能。</p>\n<p>2、要想实现 sql 中的 join，需要使用 merge 方法。</p>\n<h2 id=\"二-pandas清洗数据\"><a class=\"anchor\" href=\"#二-pandas清洗数据\">#</a> 二、Pandas 清洗数据</h2>\n<h3 id=\"1-检测与处理重复值\"><a class=\"anchor\" href=\"#1-检测与处理重复值\">#</a> 1、检测与处理重复值</h3>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144416065.png\" alt=\"image-20240622144416065\" /></p>\n<p>记录重复，同一列不同数据是否相同：pd.dataframe.drop_duplicates (参数)</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>subset</strong></td>\n<td>接收 str 或 sequence。表示进行去重的列。默认为 None</td>\n</tr>\n<tr>\n<td><strong>keep</strong></td>\n<td>接收特定 str。表示重复时保留第几个数据，“first” 表示保留第一个；“last” 表示保留最后一个；False 表示只要有重复都不保留。默认为 first</td>\n</tr>\n<tr>\n<td><strong>inplace</strong></td>\n<td>接收 bool。表示是否在原表上进行操作。默认为 False</td>\n</tr>\n<tr>\n<td><strong>ignore_index</strong></td>\n<td>接收 bool。表示是否忽略索引。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<p>特征重复（不同列之间数据是否相同）：使用 corr 方法计算相似度。</p>\n<p>dataframe.corr (method)，method 方法有：pearson（皮尔森，两组变量中任何一组中的值不能都是相同、同一组中的值不能差距太大，即如果有异常值相关性会干扰）、spearman（斯皮尔曼，根据原始数据的排序位置进行求解，异常值不会干扰）、kendall（肯德尔）秩相关系数，它也是一种秩相关系数，不过它所计算的对象主要是分类变量，比如无序的 --- 性别（男、女）、血型（A、B、O、AB），有序的 --- 比如肥胖等级（重度肥胖，中度肥胖、轻度肥胖、不肥胖）。</p>\n<p>但要注意：只能针对数值型特征计算相似度。无法实现对类别型特征计算相似度矩阵，如果遇到特征值可转换。</p>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>core <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r'data\\core.xlsx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下是pearson（皮尔森)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'pearson'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#pearson（皮尔森)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'pearson'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#pearson（皮尔森), 有一个列值相同</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'pearson'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#pearson（皮尔森)，有异常值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下是spearman（斯皮尔曼)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'spearman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#spearman（斯皮尔曼)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'spearman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#spearman（斯皮尔曼)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下是kendall(肯德尔)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>core<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span><span class=\"token string\">'kendall'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#kendall (肯德尔)</span></pre></td></tr></table></figure><h3 id=\"2-检测与处理缺失值\"><a class=\"anchor\" href=\"#2-检测与处理缺失值\">#</a> 2、检测与处理缺失值</h3>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144658241.png\" alt=\"image-20240622144658241\" /></p>\n<p>（1）缺失（空）值判断：pd.isnull (data)、pd.isna (data) 或 data.isnull ()、data.isna ()</p>\n<p>（2）缺失（空）值处理：</p>\n<p>删除：data.dropna (axis),axis 参数用于设置移除行或列</p>\n<p>替换：data.fillna (value,method)</p>\n<p>methodà’bfill’: 后一个值填充，methodà’ffill’: 前一个值填充</p>\n<p>插值：线性插值，多项式插值，样条插值</p>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#线性插值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>interpolate <span class=\"token keyword\">import</span> interp1d</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>y1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'y1'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'y2'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data1 <span class=\"token operator\">=</span> interp1d<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'y1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>data2 <span class=\"token operator\">=</span> interp1d<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'y2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-检测与处理异常值\"><a class=\"anchor\" href=\"#3-检测与处理异常值\">#</a> 3、检测与处理异常值</h3>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144949435.png\" alt=\"image-20240622144949435\" /></p>\n<p>符合正态分布的值：3σ(大写 Σ) 原则 --- 数据量较大、格拉布斯准则 --- 检验较少数据</p>\n<p>3σ 原则又称为拉依达准则，其原则就是先假设一组检测数据只含有随机误差，对原始数据进行计算处理得到标准差，然后按一定的概率确定一个区间，认为误差超过这个区间就属于异常。</p>\n<p>3σ 原则仅适用于对正态或近似正态分布的样本数据进行处理。正态分布数据的 3σ 原则如下表所示，其中 σ 代表标准差 (std)，μ 代表均值 (mean)。数据的数值分布几乎全部集中在区间 (μ-3σ,μ+3σ) 内，超出这个范围的数据仅占不到 0.3%。故根据小概率原理，可以认为超出 3σ 的部分为异常数据。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145008150.png\" alt=\"image-20240622145008150\" /></p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145011041.png\" alt=\"image-20240622145011041\" /></p>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#读取 data\\core.xlsx 文件中的数据，使用 3σ 原则分析 D 列是否存在异常值。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r'data\\core.xlsx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">out_range</span><span class=\"token punctuation\">(</span>ser1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    bool_ind <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ser1<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>ser1<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span>ser1<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span><span class=\"token punctuation\">(</span>ser1<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>ser1<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span> ser1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    index <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ser1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>bool_ind<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    outrange <span class=\"token operator\">=</span> ser1<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> outrange</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>out <span class=\"token operator\">=</span> out_range<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>离散值：箱线图分析</p>\n<p>箱线图提供了识别异常值的一个标准，即异常值通常被定义为小于 QL-1.5IQR 或大于 QU+1.5IQR 的值。</p>\n<p>・QL 称为下四分位数，表示全部观察值中有四分之一的数据取值比它小；</p>\n<p>・QU 称为上四分位数，表示全部观察值中有四分之一的数据取值比它大；</p>\n<p>・IQR 称为四分位数间距，是上四分位数 QU 与下四分位数 QL 之差，其间包含了全部观察值的一半。</p>\n<p>案例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#读取 data\\core.xlsx 文件中的数据，使用箱线图分析年龄异常值。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r'data\\core.xlsx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dpi<span class=\"token operator\">=</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>outlier1 <span class=\"token operator\">=</span> p<span class=\"token punctuation\">[</span><span class=\"token string\">'fliers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get_ydata<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>plt<span class=\"token punctuation\">.</span>savefig<span class=\"token punctuation\">(</span><span class=\"token string\">r'data/异常.jpg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"三-pandas量纲化数据\"><a class=\"anchor\" href=\"#三-pandas量纲化数据\">#</a> 三、Pandas 量纲化数据</h2>\n<p>不同特征往往具有不同的量纲，涉及空间距离计算或使用梯度下降法时，不对数据进行处理可能会影响数据分析结果。为了消除因特征之间的量纲和取值范围差异对数据分析可能造成的影响，保证数据的一致性，需要进行规范化（量纲化）处理。量纲化有很多种方式，但具体应该使用那一种方式，并没有固定的标准，而应该结合数据情况或者研究算法，选择最适合的量纲化处理方式，量纲化处理方法常见的有如下图所示：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145117940.png\" alt=\"image-20240622145117940\" /></p>\n<h3 id=\"1-归一化数据\"><a class=\"anchor\" href=\"#1-归一化数据\">#</a> <strong>1、</strong> <strong>归一化数据</strong></h3>\n<p>离差标准化是对原始数据的一种线性变换，结果是将原始数据的数值映射到 [0,1] 区间，转换公式如下：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145123830.png\" alt=\"image-20240622145123830\" /></p>\n<p>max 为样本数据的最大值，min 为样本数据的最小值，max-min 为极差。</p>\n<p>离差标准化的缺点：若数值集中某个数值很大，则规范化后各其余值会接近于 0，并且将会相差不大。</p>\n<h3 id=\"2-标准差标准化数据\"><a class=\"anchor\" href=\"#2-标准差标准化数据\">#</a> <strong>2、</strong> <strong>标准差标准化数据</strong></h3>\n<p>标准差标准化也叫零均值标准化或分数标准化，是当前使用较为广泛的数据标准化方法，经过该方法处理的数据均值为 0，标准差为 1，转化公式如下式：</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145129617.png\" alt=\"image-20240622145129617\" /></p>\n<p>其中，  为原始数据的均值，<em>d</em> 为原始数据的标准差。标准差标准化后的值区间不局限于 [0,1]，并且存在负值。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> MinMaxScaler</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'25'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'18'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                     <span class=\"token punctuation\">[</span><span class=\"token string\">'上海'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'27'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                     <span class=\"token punctuation\">[</span><span class=\"token string\">'广州'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'33'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'25'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                     <span class=\"token punctuation\">[</span><span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'35'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'28'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'地区'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'最低气温'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'最高气温'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'最常气温'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#标准差（Z-score) 标准化数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s_scaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>df <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标准差（Z-score)标准化数据:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s_scaler<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#归一化 (离差）标准化数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"归一化(离差）标准化数据:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>max_min_scaler <span class=\"token operator\">=</span> MinMaxScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>max_min_scaler<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pay <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'data/user_pay_info.csv'</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 自定义离差标准化函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">min_max_scale</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">-</span> data<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 对用户每月支出信息表的每月支出数据做离差标准化</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pay_min_max <span class=\"token operator\">=</span> min_max_scale<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">[</span><span class=\"token string\">'每月支出'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'离差标准化之前每月支出数据为：\\n'</span><span class=\"token punctuation\">,</span> pay<span class=\"token punctuation\">[</span><span class=\"token string\">'每月支出'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'离差标准化之后每月支出数据为\\n'</span><span class=\"token punctuation\">,</span> pay_min_max<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 自定义标准差标准化函数</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">standard_scaler</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">-</span> data<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> data<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 对用户每月支出信息表的每月支出数据做标准差标准化</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>pay_standard <span class=\"token operator\">=</span> standard_scaler<span class=\"token punctuation\">(</span>pay<span class=\"token punctuation\">[</span><span class=\"token string\">'每月支出'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'标准差标准化之前每月支出数据为：\\n'</span><span class=\"token punctuation\">,</span> pay<span class=\"token punctuation\">[</span><span class=\"token string\">'每月支出'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'标准差标准化之后每月支出数据为：\\n'</span><span class=\"token punctuation\">,</span> pay_standard<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>两种标准化数据的比较：</p>\n<p>离差标准化方法简单，便于理解，标准化后的数据限定在 [0,1] 区间内。</p>\n<p>标准差标准化受数据分布的影响较小，大于 0 说明高于平均水平，小于 0 说明低于平均水平。</p>\n<h2 id=\"四-pandas变换数据\"><a class=\"anchor\" href=\"#四-pandas变换数据\">#</a> 四、Pandas 变换数据</h2>\n<h3 id=\"1-哑变量处理类别型数据\"><a class=\"anchor\" href=\"#1-哑变量处理类别型数据\">#</a> 1、哑变量处理类别型数据</h3>\n<p>分析模型中有相当一部分的算法模型都要求输入的特征为数值型，但实际数据中，特征的类型不一定只有数值型，还会存在相当一部分的类别型，这部分的特征需要经过哑变量处理才可以放入模型之中。</p>\n<p>使用 pandas 库的 get_dummies 函数对类别型变量作哑变量处理。</p>\n<p>对于一个类别型特征，若其取值有 m 个，则经过哑变量处理后就变成了 m 个二元特征，并且这些特征互斥，每次只有一个激活，这使得数据变得稀疏。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将特定的数据 转化为 可以使用的数据 --- 数据变换</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 两种情况：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 第一种：哑变量转化 -- 利用 pandas 库中的 get_dummies () 函数进行哑变量处理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 通常与 PCA（主成分分析）一起使用，即构造哑变量产生高维数据后采用 PCA 进行降维。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># pd.get_dummmies(data,prefix,prefix_sep)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># data : 需要转化的数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># prefix: 转化之后列名称的前缀</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 1、将年龄列（非数值型）数据 -----> 数值型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r'data\\core.xlsx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>newagedata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>prefix<span class=\"token operator\">=</span><span class=\"token string\">'性别_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 哑变量转化为数值型数据，维度两例，可降维（删除其中一列）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>newagedata <span class=\"token operator\">=</span> newagedata<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token string\">'性别__男'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>newagedata <span class=\"token operator\">=</span> newagedata<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'性别__女'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 2、将城市列（非数值型）数据 -----> 数值型</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>newcitydata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>prefix<span class=\"token operator\">=</span><span class=\"token string\">'城市_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>newcitydata<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#哑变量转化为数值型数据，维度太多，降维不好处理。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#（1）Label Encoding 给对应进行编号处理，使用 LabelEncoder () 函数将文本类型的数据转换成数字（随机）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> LabelEncoder</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>le <span class=\"token operator\">=</span> LabelEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>label <span class=\"token operator\">=</span> le<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> label</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#（2）pandas 库中的 replace () 函数，按特定内容进行替换</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 先利用 value_counts () 函数查看 “城市” 列有哪些内容需要替换</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'城市'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token string\">'上海'</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">'广州'</span><span class=\"token punctuation\">:</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token string\">'深圳'</span><span class=\"token punctuation\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token string\">'佛山'</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-离散化连续型数据\"><a class=\"anchor\" href=\"#2-离散化连续型数据\">#</a> 2、离散化连续型数据</h3>\n<p>某些模型算法，特别是某些分类算法，如 ID3 决策树算法和 Apriori 算法等，要求数据是离散的。</p>\n<p>此时就需要将连续型特征（数值型）变换成离散型特征（类别型），即连续特征离散化。</p>\n<p>离散化涉及两个子任务，即确定分类数以及如何将连续型数据映射到这些类别型数据上。</p>\n<p>等宽法：利用 pandas 的 cut 函数（将数据的值域分成具有相同宽度的区间，区间的个数由数据本身特点或者用户指定。）</p>\n<p>等频法：cut 函数虽然不能够直接实现等频离散化，但是可以通过定义将相同数量的记录放进每个区间。</p>\n<p>聚类分析法：将连续型数据使用聚类算法（k-means）进行聚类，再处理聚类得到的簇，为合并到一个簇的连续型数据做同一种标记。</p>\n<p>①等宽法缺点：若数据分布不均匀，则等宽 cut 之后各个类的数目也会变得不均匀。</p>\n<p>②等频法缺点：频法离散化，相较于等宽法离散化，避免了类分布不均匀的问题，但同时也有可能将数值非常接近的两个值分到不同的区间以满足每个区间对数据个数的要求。</p>\n<p>③聚类分析法（连续型数据用聚类算法，如 k-means），使用频率高。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>all_info <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">r'data\\user_all_info.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>all_info<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#等宽离散化 -- 将该列中所有的年龄值按设置的等份平均划分</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>age_cut <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>all_info<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'等宽离散化后记录的年龄分布为:\\n'</span><span class=\"token punctuation\">,</span>age_cut<span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#等频离散化 -- 将相同数量的记录放置在每个区间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span>  numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">same_rate</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    w <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>quantile<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>k<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>age_same_rate <span class=\"token operator\">=</span> same_rate<span class=\"token punctuation\">(</span>all_info<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'等频离散化后记录的年龄分布为:\\n'</span><span class=\"token punctuation\">,</span>age_same_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#聚类离散化 --- 使用 Kmeans 进行聚类，得到簇，用户指定簇的个数，用于决定生成的区间数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">kmean_cut</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span>  KMeans</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    kmodel <span class=\"token operator\">=</span> KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span>k<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#用户指定的簇的个数调用 KMeans 算法标记数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    kmodel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#训练数据模型</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    c <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>kmodel<span class=\"token punctuation\">.</span>cluster_centers_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#输出聚类中心并排序</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    w <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>rolling<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#对相邻两项求中点，作为边界点</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    w <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#把首末边界点加上</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#调用 cut 函数将标记后的数据离散化处理</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span>  data</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>all_info<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span>inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#将表内年龄列为空的数据删除（inplace = True 表示原表操作）</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>age_kmeans <span class=\"token operator\">=</span> kmean_cut<span class=\"token punctuation\">(</span>all_info<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'聚类离散化后记录的年龄分布为:\\n'</span><span class=\"token punctuation\">,</span>age_kmeans<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python",
                "期末复习",
                "数据分析"
            ]
        },
        {
            "id": "http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review3/",
            "url": "http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review3/",
            "title": "数据分析复习（第三章）",
            "date_published": "2024-06-18T00:01:00.000Z",
            "content_html": "<p>应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。</p>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"第三章-pandas统计分析基础\"><a class=\"anchor\" href=\"#第三章-pandas统计分析基础\">#</a> 第三章、pandas 统计分析基础</h1>\n<blockquote>\n<p>章节考点：</p>\n<p>（1）Pandas 作用</p>\n<p>（2）重复值、缺失值处理函数及方法</p>\n<p>（3）Pandas 数据结构及特点</p>\n<p>（4）读写 CSV 数据的相关函数</p>\n<p>（5）数据合并</p>\n</blockquote>\n<h2 id=\"1读写不同数据源的数据\"><a class=\"anchor\" href=\"#1读写不同数据源的数据\">#</a> 1. 读 / 写不同数据源的数据</h2>\n<h3 id=\"1认识pandas库\"><a class=\"anchor\" href=\"#1认识pandas库\">#</a> 1）认识 pandas 库</h3>\n<p><span class=\"red\">pandas 是 Python 的核心数据分析支持库，提供了快速、灵活、明确的数据结构，旨在简单、直观地处理关系型、标记型数据（数值型、文本型、时间序列）。</span></p>\n<p><span class=\"red\">pandas 建造在 NumPy 之上</span>，所以使得 pandas 在以 NumPy 为中心的应用中得以容易的使用，而 pandas 库在与其它第三方科学计算支持库结合时也能够完美的进行集成。</p>\n<p>在 Python 中，pandas 库的功能十分强大，它可提供高性能的矩阵运算。</p>\n<ul>\n<li><span class=\"red\">可用于数据挖掘和数据分析，同时也提供数据清洗功能；</span></li>\n<li><span class=\"red\">支持类似 SQL 的数据增、删、查、改，并且带有丰富的数据处理函数；</span></li>\n<li><span class=\"red\">支持时间序列分析功能；支持灵活处理缺失数据等。</span></li>\n</ul>\n<h3 id=\"2pandas数据结构\"><a class=\"anchor\" href=\"#2pandas数据结构\">#</a> 2）Pandas 数据结构</h3>\n<p>pandas 有两个强大的利器</p>\n<ul>\n<li>\n<p><span class=\"red\">Series（一维数据）</span>是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617220651884.png\" alt=\"Series\" /></p>\n</li>\n<li>\n<p><span class=\"red\">DataFrame 是 pandas 中的一个表格型的数据结构</span>，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。</p>\n<p><img data-src=\"https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617220727377.png\" alt=\"DataFrame\" /></p>\n</li>\n</ul>\n<h4 id=\"1series对象\"><a class=\"anchor\" href=\"#1series对象\">#</a> ①Series 对象</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span> data<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> dtype<span class=\"token punctuation\">,</span> copy<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>说明：data 可以是标量、列表、迭代对象、字典、ndarray 等对象。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span><span class=\"token string\">'str'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#标量，设置了索引与类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#列表</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s3 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#迭代对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s4 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'H1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'H2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'H3'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#字典，键为索引</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s5 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#ndarray</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 输出结果：</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">1</span>    <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2</span>    <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">3</span>    <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">4</span>    <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>dtype<span class=\"token punctuation\">:</span> <span class=\"token builtin\">object</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">0</span>    <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">1</span>    <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">2</span>    <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">3</span>    <span class=\"token number\">40</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>dtype<span class=\"token punctuation\">:</span> int64</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">0</span>    <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token number\">1</span>    <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">2</span>    <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">3</span>    <span class=\"token number\">13</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">4</span>    <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">5</span>    <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">6</span>    <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">7</span>    <span class=\"token number\">17</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">8</span>    <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token number\">9</span>    <span class=\"token number\">19</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>dtype<span class=\"token punctuation\">:</span> int64</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>a    H1</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>b    H2</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>c    H3</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>dtype<span class=\"token punctuation\">:</span> <span class=\"token builtin\">object</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token number\">0</span>    x</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token number\">1</span>    y</pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token number\">2</span>    z</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>dtype<span class=\"token punctuation\">:</span> <span class=\"token builtin\">object</span></pre></td></tr></table></figure><p>Series 属性:</p>\n<ul>\n<li>axes：以列表的形式返回所有行索引标签</li>\n<li>dtype：返回对象的数据类型。</li>\n<li>empty：返回一个布尔值，判断数据对象是否为空</li>\n<li>ndim：返回输入数据的维数</li>\n<li>size：返回输入数据的元素数量</li>\n<li>values：以 ndarray 的形式返回 Series 对象</li>\n<li>index：返回一个索引的取值</li>\n</ul>\n<p>Series 查询操作</p>\n<p>使用索引、切片方式</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'tel'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'13500100203'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'hobby'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'上网,打游戏,运动'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sd <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sd<span class=\"token punctuation\">[</span><span class=\"token string\">'tel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sd<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sd<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"2dataframe对象\"><a class=\"anchor\" href=\"#2dataframe对象\">#</a> ②DataFrame 对象</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> columns<span class=\"token punctuation\">,</span> dtype<span class=\"token punctuation\">,</span> copy<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#构造 DataFrame 数据框架</span></pre></td></tr></table></figure><p>说明：（1）从列表、字典、ndarray 等对象转化为 DataFrame。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'tel'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'13500100203'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'hobby'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'上网,打游戏,运动'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sd <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>sd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>df2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'tel'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'hobby'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>DataFrame 属性:</p>\n<ul>\n<li>values：DataFrame 所有行的值</li>\n<li>index：DataFrame 行索引</li>\n<li>colums：DataFrame 列名</li>\n<li>dtypes：DataFrame 指定列数据类型</li>\n<li>size：DataFrame 元素的个数</li>\n<li>ndim：DataFrame 维度</li>\n<li>shape：DataFrame 形状</li>\n<li>T: 实现 DataFrame 转置</li>\n</ul>\n<h3 id=\"2读写文件\"><a class=\"anchor\" href=\"#2读写文件\">#</a> 2）读 / 写文件</h3>\n<h4 id=\"1文本文件读取\"><a class=\"anchor\" href=\"#1文本文件读取\">#</a> ①文本文件读取</h4>\n<p>CSV 文件根据其定义也是一种文本文件。在数据读取过程中可以使用文本文件的读取函数对 CSV 文件进行读取。同时，如果文本文件是字符分隔文件，那么可以使用读取 CSV 文件的函数进行读取。</p>\n<p><span class=\"red\">pandas 提供了 read_table () 函数读取文本文件，提供了 read_csv () 函数读取 CSV 文件。</span></p>\n<p>read_table () 函数和 read_csv () 函数具有许多参数，如果有多个 &lt; expression &gt;，那么表达式之间用逗号隔开，基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_table<span class=\"token punctuation\">(</span>filepath_or_buffer<span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token string\">'infer'</span><span class=\"token punctuation\">,</span> names<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>  engine<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> nrows<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> skiprows<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>filepath_or_buffer<span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token string\">'infer'</span><span class=\"token punctuation\">,</span> names<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>  engine<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> nrows<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> skiprows<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>read_table () 函数和 read_csv () 函数的多数参数相同，它们的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filepath</td>\n<td>接收 str。表示文件路径。无默认值</td>\n</tr>\n<tr>\n<td>sep</td>\n<td>接收 str。表示分隔符。read_csv 函数默认为 “,”，read_table 函数默认为制表符 “Tab”</td>\n</tr>\n<tr>\n<td>header</td>\n<td>接收 int 或列表形式的 int。表示将某行数据作为列名。默认为 infer</td>\n</tr>\n<tr>\n<td>names</td>\n<td>接收 array。表示列名。无默认值</td>\n</tr>\n<tr>\n<td>index_col</td>\n<td>接收 int、sequence 或 False。表示索引列的位置，取值为 sequence 则代表多重索引。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<p>read_table () 函数和 read_csv () 函数的多数参数相同，它们的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dtype</td>\n<td>接收字典形式的列名或 type name。表示写入的数据类型（列名为 key，数据格式为 values）。默认为 None</td>\n</tr>\n<tr>\n<td>engine</td>\n<td>接收 c 语言或 python 语言。表示要使用的数据解析引擎。默认为 None</td>\n</tr>\n<tr>\n<td>nrows</td>\n<td>接收 int。要读取的文件行数。默认为 None</td>\n</tr>\n<tr>\n<td>skiprows</td>\n<td>接收 list 或 int 或 callable。表示读取数据时跳过开头的行数。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>read_csv 和 read_table 之间的区别:</p>\n<p>函数 pd.read_csv 和 pd.read_table 的内容相同，只是默认分隔符不同。在 read_csv 中 “逗号，” 作为定界符，在 read_table 中定界符为 “\\ t”。如果既不是逗号也不是制表符，则可以通过参数（sep 或 delimiter）设置区分符。</p>\n</blockquote>\n<h4 id=\"2文本文件储存\"><a class=\"anchor\" href=\"#2文本文件储存\">#</a> ②文本文件储存</h4>\n<p>文本文件的存储和读取类似，对于结构化数据，可以通过 pandas 库中的 to_csv () 方法实现以 CSV 文件格式存储。</p>\n<p>to_csv () 函数同样具有许多参数，如果有多个 &lt; expression&gt;，那么表达式之间用逗号隔开，基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span>path_or_buf<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> na_rep<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index_label<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>to_csv () 方法的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path_or_buf</td>\n<td>接收 str。表示文件路径。默认为 None</td>\n</tr>\n<tr>\n<td>sep</td>\n<td>接收 str。表示分隔符。默认为 “,”</td>\n</tr>\n<tr>\n<td>na_rep</td>\n<td>接收 str。表示缺失值。默认为 “”</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>接收 list。表示写出的列名。默认为 None</td>\n</tr>\n<tr>\n<td>header</td>\n<td>接收 bool 或列表形式的 str。表示是否将列名写出。默认为 True</td>\n</tr>\n<tr>\n<td>index</td>\n<td>接收 bool。表示是否将行名（索引）写出。默认为 True</td>\n</tr>\n<tr>\n<td>index_label</td>\n<td>接收 sequence 或 str 或 false。表示索引名。默认为 None</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>接收特定 str。表示数据写入模式。默认为 w</td>\n</tr>\n<tr>\n<td>encoding</td>\n<td>接收特定 str。表示存储文件的编码格式。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3读写excel文件\"><a class=\"anchor\" href=\"#3读写excel文件\">#</a> 3）读 / 写 Excel 文件</h3>\n<h4 id=\"1excel文件读取\"><a class=\"anchor\" href=\"#1excel文件读取\">#</a> ①Excel 文件读取</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> names<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> skiprows<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>read_excel () 函数的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>io</td>\n<td>接收 str。表示文件路径。无默认值</td>\n</tr>\n<tr>\n<td>sheet_name</td>\n<td>接收 str、int、list 或 None。表示 Excel 表内数据的分表位置。默认为 0</td>\n</tr>\n<tr>\n<td>header</td>\n<td>接收 int 或列表形式的 int。表示将某行数据作为列名。如果传递整数列表，那么行位置将合并为 MultiIndex。如果没有表头，那么使用 None。默认为 0</td>\n</tr>\n<tr>\n<td>names</td>\n<td>接收 array。表示要使用的列名列表。默认为 None</td>\n</tr>\n<tr>\n<td>index_col</td>\n<td>接收 int 或列表形式的 int。表示将列索引用作 dataframe 的行索引。默认为 None</td>\n</tr>\n<tr>\n<td>dtype</td>\n<td>接收 dict。表示写入的数据类型（列名为 key，数据格式为 values）。默认为 None</td>\n</tr>\n<tr>\n<td>skiprows</td>\n<td>接收 list、int 或 callable。表示读取数据开头跳过的行数。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2excel文件储存\"><a class=\"anchor\" href=\"#2excel文件储存\">#</a> ②Excel 文件储存</h4>\n<p>将数据存储至 Excel，可以使用 to_excel () 方法，基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span>excel_writer<span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">,</span> na_rep<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> header<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index_label<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>to_excel () 函数的常用参数及其说明如下表。</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>excel_writer</td>\n<td>接收 str。表示文件路径。无默认值</td>\n</tr>\n<tr>\n<td>sheet_name</td>\n<td>接收 str。表示 Excel 文件中工作簿的名称。默认为 Sheet1</td>\n</tr>\n<tr>\n<td>na_rep</td>\n<td>接收 str。表示缺失值。默认为 “”</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>接收列表形式的 str 或 sequence。表示写出的列名。默认为 None</td>\n</tr>\n<tr>\n<td>header</td>\n<td>接收 bool 或列表形式的 str。表示是否将列名写出。默认为 True</td>\n</tr>\n<tr>\n<td>index</td>\n<td>接收 bool。表示是否将行名（索引）写出。默认为 True</td>\n</tr>\n<tr>\n<td>index_label</td>\n<td>接收 sequence 或 str。表示索引名。默认为 None</td>\n</tr>\n<tr>\n<td>encoding</td>\n<td>接收特定 str。表示存储文件的编码格式。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"4读写数据库\"><a class=\"anchor\" href=\"#4读写数据库\">#</a> 4）读 / 写数据库</h3>\n<p>在生产环境中，绝大多数的数据都存储在数据库中。pandas 库提供了读取与存储关系型数据库数据的函数与方法。除了 pandas 库外，还需要使用 SQLAlchemy 库建立对应的数据库连接。</p>\n<p>pandas 支持 MySQL、postgresql、Oracle、SQL Server 和 SQLite 等主流数据库。</p>\n<p>SQLAlchemy 是配合相应数据库的 Python 连接工具。</p>\n<ul>\n<li>MySQL 数据库需要安装 mysqlclient 或 pymysql 库。</li>\n<li>Oracle 数据库需要安装 cx_oracle 库。</li>\n<li>使用 create_engine () 函数，建立一个数据库连接。</li>\n</ul>\n<p>下面将以 MySQL 数据库为例，介绍 pandas 数据库数据的读取与存储。</p>\n<h4 id=\"1数据库数据读取\"><a class=\"anchor\" href=\"#1数据库数据读取\">#</a> ①数据库数据读取</h4>\n<p>pandas 可实现数据库数据的读取，但前提是读者在进行读取操作前确保已安装数据库，并且数据库可以正常打开及使用。进行数据库的读取可利用 3 种函数进行操作。</p>\n<ul>\n<li>read_sql_table () 函数只能读取数据库的某一个表格，不能实现查询的操作。</li>\n<li>read_sql_query () 函数则只能实现查询操作，不能直接读取数据库中的某个表。</li>\n<li>read_sql () 函数是两者的综合，既能够读取数据库中的某一个表，也能够实现查询操作。</li>\n</ul>\n<p>在读取数据库数据前，需要先创建数据库连接。Python 提供了 SQLAlchemy 库的 create_engine 函数用于创建数据库连接，在 creat_engine 函数中输入的是一个连接字符串。</p>\n<p>在使用 Python 的 SQLAlchemy 时，MySQL 和 Oracle 数据库连接字符串的格式如下：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>数据库产品名 + 连接工具名：&#x2F;&#x2F; 用户名：密码 @数据库 IP 地址：数据库端口号 &#x2F; 数据库名称？charset &#x3D; 数据库数据编码</pre></td></tr></table></figure><p>read_sql_table () 函数、read_sql_query () 函数和 read_sql () 函数具有许多参数，参数的表达式之间用逗号隔开，基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_sql_table<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> schema<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> coerce_float<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> parse_dates<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> chunksize<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_sql_query<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> coerce_float<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> parse_dates<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> chunksize<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>read_sql<span class=\"token punctuation\">(</span> sql <span class=\"token punctuation\">,</span> con <span class=\"token punctuation\">,</span> index_col <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token punctuation\">,</span> coerce_float <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">,</span> params <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token punctuation\">,</span> parse_dates <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token punctuation\">,</span> chunksize <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>read_sql_table ()、read_sql_query () 和 read_sql () 这 3 个数据库数据读取函数的参数几乎完全一致，唯一的区别在于传入的是语句还是表名。3 个函数的参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sql  or table_name</td>\n<td>接收 str。表示读取的数据的表名或 SQL 语句。无默认值</td>\n</tr>\n<tr>\n<td>con</td>\n<td>接收数据库连接或 str。表示数据库连接信息。无默认值</td>\n</tr>\n<tr>\n<td>index_col</td>\n<td>接收 str 或列表形式的 str。表示列设置为索引。默认为 None</td>\n</tr>\n<tr>\n<td>coerce_float</td>\n<td>接收 bool。表示尝试将非字符串、非数字对象（如十进制）的值转换为浮点。默认为 True</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>接收 list。表示要从 SQL 表中选择的列名列表。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2数据库数据储存\"><a class=\"anchor\" href=\"#2数据库数据储存\">#</a> ②数据库数据储存</h4>\n<p>将 DataFrame 写入数据库中，同样也要依赖 SQLAlchemy 库的 create_engine 函数创建数据库连接。数据库数据读取有 3 个函数，但数据存储则只有一个 to_sql () 方法。</p>\n<p>to_sql () 方法的基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>to_sql<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">,</span> schema<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> if_exists<span class=\"token operator\">=</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> index_label<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> chunksize<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>to_sql () 函数的常用参数及其说明如下表。</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>接收 str。表示数据库表名。无默认值</td>\n</tr>\n<tr>\n<td>con</td>\n<td>接收数据库连接。表示数据库连接信息。无默认值</td>\n</tr>\n<tr>\n<td>if_exists</td>\n<td>接收 str。表示对表进行操作的方式，可选 “fail”“replace”“append”。fail 表示如果表名存在，那么不执行写入操作；replace 表示如果表名存在，那么将原数据库表删除，再重新创建；append 则表示在原数据库表的基础上追加数据。默认为 fail</td>\n</tr>\n<tr>\n<td>index</td>\n<td>接收 bool。表示是否将 DataFrame 索引写入列并使用 index_Label 作为表中的列名。默认为 True</td>\n</tr>\n<tr>\n<td>index_label</td>\n<td>接收 str 或 sequence。表示索引列的列标签。如果没有给定（默认）且索引为 True，那么使用索引名称。如果 DataFrame 使用 MultiIndex，那么应该给出序列。默认为 None</td>\n</tr>\n<tr>\n<td>dtype</td>\n<td>接收 dict 或 scalar。表示指定列的数据类型。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2掌握dataframe的常用操作\"><a class=\"anchor\" href=\"#2掌握dataframe的常用操作\">#</a> 2. 掌握 DataFrame 的常用操作</h2>\n<h3 id=\"1dataframe的常用属性\"><a class=\"anchor\" href=\"#1dataframe的常用属性\">#</a> 1）DataFrame 的常用属性</h3>\n<p>DataFrame 的基础属性如下:</p>\n<ul>\n<li>values：DataFrame 所有行的值</li>\n<li>index：DataFrame 行索引</li>\n<li>colums：DataFrame 列名</li>\n<li>dtypes：DataFrame 指定列数据类型</li>\n<li>size：DataFrame 元素的个数</li>\n<li>ndim：DataFrame 维度</li>\n<li>shape：DataFrame 形状</li>\n<li>T: 实现 DataFrame 转置</li>\n</ul>\n<h3 id=\"2查改增删dataframe数据\"><a class=\"anchor\" href=\"#2查改增删dataframe数据\">#</a> 2）查改增删 DataFrame 数据</h3>\n<p>DataFrame 作为一种二维数据表结构，能够像数据库一样实现查改增删操作，如添加一行、删除一行、添加一列、删除一列、修改某一个值、某个区间的值替换等。</p>\n<h4 id=\"1查看访问dataframe中的数据\"><a class=\"anchor\" href=\"#1查看访问dataframe中的数据\">#</a> ①查看访问 DataFrame 中的数据</h4>\n<p>使用索引、切片方式:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame名称<span class=\"token punctuation\">[</span>行索引编号范围或名称<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>列索引范围或列名<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DataFrame名称<span class=\"token punctuation\">[</span>列索引范围或列名<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>行索引范围或名称<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sql_table_data<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sql_table_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'book_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sql_table_data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'book_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sql_table_data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>除了可以使用基本的查看方式查看访问 DataFrame 中的数据之外，还可以通过 loc () 方法和 iloc () 方法进行访问。</p>\n<p>使用 iloc (iat) 或 loc (at) 函数:</p>\n<p>使用 loc () 方法和 iloc () 方法可以对 DataFrame 进行多种操作：单列切片、多列切片、取出 DataFrame 中的任意数据。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>行索引名称或条件<span class=\"token punctuation\">,</span> 列索引名称<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>行索引编号位置<span class=\"token punctuation\">,</span> 列索引编号位置<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>loc () 方法更加灵活多变，代码的可读性更高；</li>\n<li>iloc () 方法的代码简洁，但可读性不高。在数据分析工作中具体使用哪一种方法，应根据情况而定，大多数时候建议使用 loc () 方法。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印第1-3列所有行数据\"</span><span class=\"token punctuation\">,</span>sql_table_data<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印第1-3列所有行数据\"</span><span class=\"token punctuation\">,</span>sql_table_data<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'book_name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'jd_price'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印第1-3列前10行数据\"</span><span class=\"token punctuation\">,</span>sql_table_data<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印第1-3列前10行数据\"</span><span class=\"token punctuation\">,</span>sql_table_data<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'book_name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'jd_price'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过 DataFrame 提供的方法 head () 和 tail () 也可以得到多行数据，但是用这两种方法得到的数据都是从开始或末尾获取的连续数据。</p>\n<ul>\n<li>head () 方法和 tail () 方法使用的都是默认参数，所以访问的是前、后 5 行。</li>\n<li>在方法后的 “()” 中输入访问行数，即可实现目标行数的查看。</li>\n</ul>\n<h4 id=\"2dataframe的loc-iloc访问方式\"><a class=\"anchor\" href=\"#2dataframe的loc-iloc访问方式\">#</a> ②DataFrame 的 loc、iloc 访问方式</h4>\n<p>pandas 提供了 loc () 和 iloc () 两种更加灵活的方法来实现数据访问。</p>\n<p>loc () 方法是针对 DataFrame 索引名称的切片方法，如果传入的不是索引名称，那么切片操作将无法执行。</p>\n<ul>\n<li>利用 loc () 方法，能够实现所有单层索引切片操作。</li>\n<li>iloc () 方法接收的必须是行索引和列索引的位置。</li>\n</ul>\n<p>loc () 方法和 iloc () 方法基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>行索引名称或条件<span class=\"token punctuation\">,</span> 列索引名称<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>行索引位置<span class=\"token punctuation\">,</span> 列索引位置<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>使用 loc () 方法和 iloc () 方法可以对 DataFrame 进行多种操作。</p>\n<ul>\n<li>单列切片。</li>\n<li>多列切片，其原理是将多列的列名或位置作为一个列表或数据传入。</li>\n<li>取出 DataFrame 中的任意数据。</li>\n</ul>\n<p>在使用 loc () 方法的时候，如果内部传入的行索引名称为一个区间，那么前后均为闭区间。</p>\n<p>而使用 iloc () 方法时，如果内部传入的行索引位置或列索引位置为区间，那么为前闭后开区间。</p>\n<p>loc () 方法的内部还可以传入表达式，结果会返回满足表达式的所有值。</p>\n<p>iloc () 方法不能接收表达式，原因在于，iloc () 方法可以接收的数据类型并不包括 Series。根据 Series 的构成，应取出该 Series 的 values。</p>\n<h4 id=\"3更改dataframe的数据\"><a class=\"anchor\" href=\"#3更改dataframe的数据\">#</a> ③更改 DataFrame 的数据</h4>\n<p>更改 DataFrame 中的数据的原理是将这部分数据提取出来，重新赋值为新的数据。</p>\n<p>需要注意的是，数据更改是直接对 DataFrame 原数据更改，操作无法撤销。</p>\n<p>如果不希望直接对原数据做出更改，那么需要对更改条件进行确认或对数据进行备份。</p>\n<p>重命名列标签</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DateFrame<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>k1<span class=\"token punctuation\">:</span>v1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>：重命名部分列标签</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DateFrame<span class=\"token punctuation\">.</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'新列名'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>：重命名全部列标签</pre></td></tr></table></figure><h4 id=\"4为dataframe增添数据\"><a class=\"anchor\" href=\"#4为dataframe增添数据\">#</a> ④为 DataFrame 增添数据</h4>\n<p>为 DataFrame 添加一列的方法非常简单，只需要新建一个列索引，并对该索引下的数据进行赋值操作即可。如果新增的一列值是相同的，那么可以直接为其赋值一个常量。</p>\n<p>创建一个新的列索引，对该列索引赋值即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>stu_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'何六'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'谢七'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'陆九'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>           <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'20000302'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'19990416'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20011214'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20000812'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20010708'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20001017'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">173</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">182</span><span class=\"token punctuation\">,</span><span class=\"token number\">159</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">178</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token string\">'E'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'无'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'无'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string\">'无'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>student <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>stu_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#修改 C 列的数据类型为 'datetime64'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>student<span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>student<span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token string\">'datetime64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#修改列标签</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>student<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'出生日期'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'身高'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'备注'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#修改备注列中所有空值为 \"暂无\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>student<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>student<span class=\"token punctuation\">[</span><span class=\"token string\">'备注'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'备注'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'暂无'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#新增 \"专业\" 列，数值为 \"数据科学与大数据技术\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>student<span class=\"token punctuation\">[</span><span class=\"token string\">'专业'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'数据科学与大数据技术'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"5删除某列或某行数据\"><a class=\"anchor\" href=\"#5删除某列或某行数据\">#</a> ⑤删除某列或某行数据</h4>\n<p>删除某列或某行数据需要用到 pandas 提供的方法 drop ()。</p>\n<p>drop () 方法的基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>labels<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> level<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> errors<span class=\"token operator\">=</span><span class=\"token string\">'raise'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>drop () 函数的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>labels</td>\n<td>接收单一标签。表示要删除的索引或列标签。无默认值</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 0 或 1。表示操作的轴向。默认为 0</td>\n</tr>\n<tr>\n<td>level</td>\n<td>接收 int 或索引名。表示标签所在级别。默认为 None</td>\n</tr>\n<tr>\n<td>inplace</td>\n<td>接收 bool。表示操作是否对原数据生效。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<p>删除某行数据，只需要将 drop () 方法参数中的 “labels” 参数换成对应的行索引，将 “axis” 参数设置为 0 即可。</p>\n<h3 id=\"3描述分析dataframe数据\"><a class=\"anchor\" href=\"#3描述分析dataframe数据\">#</a> 3）描述分析 DataFrame 数据</h3>\n<p>描述性统计是用于概括、表述事物整体状况，以及事物间关联、类属关系的统计方法。通过几个统计值可简捷地表示一组数据的集中趋势和离散程度等。</p>\n<h4 id=\"1数值型特征的描述性统计\"><a class=\"anchor\" href=\"#1数值型特征的描述性统计\">#</a> ①数值型特征的描述性统计</h4>\n<p>数值型特征的描述性统计主要包括了计算数值型数据的最小值、均值、中位数、最大值、四分位数、极差、标准差、方差、协方差和变异系数等。</p>\n<p>在 NumPy 库中已经提到了为数不少的统计函数，为方便读者查看，将 NumPy 库简写为 np，部分统计函数如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n<th><strong>函数名称</strong></th>\n<th><strong>函数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>np.min</td>\n<td>最小值</td>\n<td>np.max</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>np.mean</td>\n<td>均值</td>\n<td>np.ptp</td>\n<td>极差</td>\n</tr>\n<tr>\n<td>np.median</td>\n<td>中位数</td>\n<td>np.std</td>\n<td>标准差</td>\n</tr>\n<tr>\n<td>np.var</td>\n<td>方差</td>\n<td>np.cov</td>\n<td>协方差</td>\n</tr>\n</tbody>\n</table>\n<p>pandas 库是基于 NumPy 库的，自然也可以使用表中的统计函数对数据进行描述性统计。</p>\n<p>pandas 还提供了更加便利的方法来进行数值型数据的统计。用 np.mean 函数实现计算某列的均值，也可以通过 pandas 实现。</p>\n<p>作为专门为数据分析而生的 Python 库，pandas 还提供了一个 describe () 方法，能够一次性得出数据框中所有数值型特征如下。</p>\n<ul>\n<li>非空值数目。</li>\n<li>均值。</li>\n<li>四分位数。</li>\n<li>标准差。</li>\n<li>最大值和最小值。</li>\n</ul>\n<p>pandas 还提供了与统计相关的主要方法，这些方法能够满足绝大多数数据分析所需要的数值型特征的描述性统计工作，统计方法如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n<th><strong>函数名称</strong></th>\n<th><strong>函数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td>最小值</td>\n<td>Max</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>mean</td>\n<td>均值</td>\n<td>Ptp</td>\n<td>极差</td>\n</tr>\n<tr>\n<td>median</td>\n<td>中位数</td>\n<td>Std</td>\n<td>标准差</td>\n</tr>\n<tr>\n<td>var</td>\n<td>方差</td>\n<td>Cov</td>\n<td>协方差</td>\n</tr>\n<tr>\n<td>sem</td>\n<td>标准误差</td>\n<td>Mode</td>\n<td>众数</td>\n</tr>\n<tr>\n<td>skew</td>\n<td>样本偏度</td>\n<td>Kurt</td>\n<td>样本峰度</td>\n</tr>\n<tr>\n<td>quantile</td>\n<td>分位数</td>\n<td>Count</td>\n<td>非空值数目</td>\n</tr>\n<tr>\n<td>describe</td>\n<td>描述统计</td>\n<td>Mad</td>\n<td>平均绝对离差</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2类别型特征的描述性统计\"><a class=\"anchor\" href=\"#2类别型特征的描述性统计\">#</a> ②类别型特征的描述性统计</h4>\n<p>描述类别型特征的分布状况，可以使用频数统计。在 pandas 库中实现频数统计的方法为 value_counts ()。</p>\n<p>除了使用 value_counts () 方法分析频率分布外，pandas 提供了 category 类，可以使用 astype () 方法将目标特征的数据类型转换为 category 类型。</p>\n<p>describe () 方法除了支持传统数值型数据以外，还能够支持对 category 类型的数据进行描述性统计，4 个统计量如下。</p>\n<ul>\n<li>列非空元素的数目。</li>\n<li>类别的数目。</li>\n<li>数目最多的类别。</li>\n<li>数目最多类别的数目。</li>\n</ul>\n<h2 id=\"3转换与处理时间序列数据\"><a class=\"anchor\" href=\"#3转换与处理时间序列数据\">#</a> 3. 转换与处理时间序列数据</h2>\n<h3 id=\"1转换字符串时间为标准时间\"><a class=\"anchor\" href=\"#1转换字符串时间为标准时间\">#</a> 1）转换字符串时间为标准时间</h3>\n<p>在多数情况下，对时间类型数据进行分析的前提就是将原本为字符串的时间转换为标准时间。pandas 继承了 NumPy 库和 datetime 库的时间相关模块，提供了 6 种时间相关的类如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Timestamp</td>\n<td>最基础的时间类。表示某个时间点。绝大多数的场景中的时间数据都是 Timestamp 形式</td>\n</tr>\n<tr>\n<td>Period</td>\n<td>表示某个时间段，如某一天、某一小时等</td>\n</tr>\n<tr>\n<td>Timedelta</td>\n<td>表示不同单位的时间，如 1d、1.5h、3min、4s 等，而非具体的某个时间段</td>\n</tr>\n<tr>\n<td>DatetimeIndex</td>\n<td>一组 Timestamp 构成的 Index，可以用于作为 Series 或 DataFrame 的索引</td>\n</tr>\n<tr>\n<td>PeriodtimeIndex</td>\n<td>一组 Period 构成的 Index，可以用于作为 Series 或 DataFrame 的索引</td>\n</tr>\n<tr>\n<td>TimedeltaIndex</td>\n<td>一组 Timedelta 构成的 Index，可以用于作为 Series 或 DataFrame 的索引</td>\n</tr>\n</tbody>\n</table>\n<p>Timestamp 是时间类中较为基础的，也是较为常用的。在多数情况下，会将与时间相关的字符串转换成为 Timestamp。pandas 提供的 to_datetime 函数，能够实现这一目标。</p>\n<p>date_range ()：指定时间的起始 start 和结束范围 end、时间间隔 freq、数据数量 periods 等参数。主要用于生成一个固定频率的时间索引，数据类型为：DatetimeIndex。保存在 DataFrame 对象中的每一个时间数据，都会被转换为 Timestamp 类型的数据。可以调用对应的属性获得日期中的部分数据。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>date1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span>start<span class=\"token operator\">=</span><span class=\"token string\">'20230301'</span><span class=\"token punctuation\">,</span>freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span>periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">'20230301'</span><span class=\"token punctuation\">,</span>freq<span class=\"token operator\">=</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span>periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#输出 date1 中第一个日期的年份</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> date2<span class=\"token punctuation\">]</span>  <span class=\"token comment\">#获取 date2 日期中的年、月</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y_m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>to_datetime ()：用于实现将规范或不规范的时间数据转换为标准的 datetime 类型数据。可以使用 errors 参数对无效数据进行解析，参数值设置有：接收 “ignore”、“raise”、“coerce”。</p>\n<p>to_datetime 函数的基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">,</span> errors<span class=\"token operator\">=</span><span class=\"token string\">'raise'</span><span class=\"token punctuation\">,</span> dayfirst<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> yearfirst<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> utc<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> exact<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> unit<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> infer_datetime_format<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> origin<span class=\"token operator\">=</span><span class=\"token string\">'unix'</span><span class=\"token punctuation\">,</span> cache<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>date1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span><span class=\"token string\">'2023 03 08 9:00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>to_datetime () 函数的常用参数及其说明如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>arg</td>\n<td>接收 str、int、float、list、tuple、datetime 或 array。表示需要转换的时间日期对象。无默认值</td>\n</tr>\n<tr>\n<td>errors</td>\n<td>接收 “ignore”“raise”“coerce”。表示无效解析。默认为 raise</td>\n</tr>\n<tr>\n<td>dayfirst\\yearfirst</td>\n<td>接收 bool。表示指定日期的解析顺序。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<p>Timedelta ()：根据一个指定时间计算未知的时间，Timedelta () 括号内参数可以指定多个参数，如周 weeks、天 days、小时 hours 等。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>date1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span>start<span class=\"token operator\">=</span><span class=\"token string\">'20230301'</span><span class=\"token punctuation\">,</span>freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span>periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">'20230301'</span><span class=\"token punctuation\">,</span>freq<span class=\"token operator\">=</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span>periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>date1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#输出 date1 中第一个日期的年份</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> date2<span class=\"token punctuation\">]</span>  <span class=\"token comment\">#获取 date2 日期中的年、月</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y_m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>除了将数据从原始 DataFrame 中直接转换为 Timestamp 格式外，还可以将数据单独提取出来，将其转换为 DatetimeIndex 格式或 PeriodIndex 格式。但 DatetimeIndex 和 PeriodIndex 在日常使用的过程中并无太大区别。</p>\n<ul>\n<li>DatetimeIndex 是用于指代一系列时间点的一种数据结构。</li>\n<li>PeriodIndex 则是用于指代一系列时间段的数据结构。</li>\n</ul>\n<p>DatetimeIndex 类与 PeriodIndex 类的基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">pandas</span><span class=\"token punctuation\">.</span>DatetimeIndex<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> tz<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> normalize<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> closed<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> ambiguous<span class=\"token operator\">=</span><span class=\"token string\">'raise'</span><span class=\"token punctuation\">,</span> dayfirst<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> yearfirst<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> copy<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">pandas</span><span class=\"token punctuation\">.</span>PeriodIndex<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> ordinal<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> copy<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>fields<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>DatetimeIndex 可以用于转换数据，还可以用于创建时间序列数据，常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>接收类数组。表示用可选的类似日期时间的数据来构造索引。默认为 None</td>\n</tr>\n<tr>\n<td>freq</td>\n<td>接收 str。表示一种 pandas 周期字符串或相应的对象。无默认值</td>\n</tr>\n<tr>\n<td>tz</td>\n<td>接收时区或 str。表示设置数据的时区。默认为 None</td>\n</tr>\n<tr>\n<td>dtype</td>\n<td>接收 Numpy.dtype 或 DatetimeTZDtype 或 str。表示数据类型。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<p>PeriodIndex 可以用于转换数据，还可以用于创建时间序列数据，常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>接收类数组。表示用可选的类似周期的数据来构造索引。默认为 None</td>\n</tr>\n<tr>\n<td>freq</td>\n<td>接收 str。表示一种 pandas 周期字符串或相应的对象。默认为 None</td>\n</tr>\n<tr>\n<td>dtype</td>\n<td>接收 str 或 PeriodDtype。表示数据类型。默认为 None</td>\n</tr>\n</tbody>\n</table>\n<p>query ()：Pandas 提供此函数可以实现内容（包括时间）的查询、修改列、创建新列。</p>\n<h3 id=\"2提取时间序列数据信息\"><a class=\"anchor\" href=\"#2提取时间序列数据信息\">#</a> 2）提取时间序列数据信息</h3>\n<p>在多数涉及与时间相关的数据处理、统计分析的过程中，都需要提取时间中的年份、月份等数据。使用对应的 Timestamp 类属性就能够实现这一目的，其常用类属性及说明如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性名称</strong></th>\n<th><strong>属性说明</strong></th>\n<th><strong>属性名称</strong></th>\n<th><strong>属性说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>year</td>\n<td>年</td>\n<td>week</td>\n<td>一年中第几周</td>\n</tr>\n<tr>\n<td>month</td>\n<td>月</td>\n<td>quarter</td>\n<td>季节</td>\n</tr>\n<tr>\n<td>day</td>\n<td>日</td>\n<td>weekofyear</td>\n<td>一年中第几周</td>\n</tr>\n<tr>\n<td>hour</td>\n<td>小时</td>\n<td>dayofyear</td>\n<td>一年中的第几天</td>\n</tr>\n<tr>\n<td>minute</td>\n<td>分钟</td>\n<td>dayofweek</td>\n<td>一周第几天</td>\n</tr>\n<tr>\n<td>second</td>\n<td>秒</td>\n<td>weekday</td>\n<td>一周第几天</td>\n</tr>\n<tr>\n<td>date</td>\n<td>日期</td>\n<td>is_leap_year</td>\n<td>是否闰年</td>\n</tr>\n<tr>\n<td>time</td>\n<td>时间</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3加减时间数据\"><a class=\"anchor\" href=\"#3加减时间数据\">#</a> 3）加减时间数据</h3>\n<p>时间数据的算术运算在现实中随处可见，例如，2020 年 1 月 1 日减一天就是 2019 年 12 月 31 日。pandas 的时间数据和现实生活中的时间数据一样可以做运算。这时就涉及 pandas 的 Timedelta 类。</p>\n<p>Timedelta 是时间相关类中的一个异类，不仅能够使用正数，还能够使用负数表示单位时间，如 1s、2min、3h 等。使用 Timedelta 类，配合常规的时间相关类能够轻松实现时间的算术运算。</p>\n<p>在 Timedelta 类的时间周期中没有年和月，所有周期名称、对应单位及其说明如下表（注：表中单位采用程序定义的符号，与法定单位符号可能不一致）。</p>\n<table>\n<thead>\n<tr>\n<th><strong>周期名称</strong></th>\n<th><strong>单位</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>weeks</td>\n<td>无</td>\n<td>星期</td>\n</tr>\n<tr>\n<td>days</td>\n<td>D</td>\n<td>天</td>\n</tr>\n<tr>\n<td>hours</td>\n<td>h</td>\n<td>小时</td>\n</tr>\n<tr>\n<td>minutes</td>\n<td>m</td>\n<td>分</td>\n</tr>\n<tr>\n<td>seconds</td>\n<td>s</td>\n<td>秒</td>\n</tr>\n<tr>\n<td>milliseconds</td>\n<td>ms</td>\n<td>毫秒</td>\n</tr>\n<tr>\n<td>microseconds</td>\n<td>us</td>\n<td>微妙</td>\n</tr>\n<tr>\n<td>nanoseconds</td>\n<td>ns</td>\n<td>纳秒</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4使用分组聚合进行组内计算\"><a class=\"anchor\" href=\"#4使用分组聚合进行组内计算\">#</a> 4. 使用分组聚合进行组内计算</h2>\n<h3 id=\"1groupby方法拆分数据\"><a class=\"anchor\" href=\"#1groupby方法拆分数据\">#</a> 1）groupby () 方法拆分数据</h3>\n<p>groupby () 方法提供的是分组聚合步骤中的拆分功能，能够根据索引或特征对数据进行分组，其基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> level<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> sort<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> group_keys<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> squeeze<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>no_default<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> observed<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> dropna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>groupby () 方法的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>by</td>\n<td>接收 list、str、mapping、function 或 generator。表示用于确定进行分组的依据，若传入的是一个函数，则对索引进行计算并分组；若传入的是一个字典或 Series，则字典或 Series 的值用于作为分组依据；若传入一个 NumPy 数组，则数据的元素作为分组依据；若传入的是字符串或字符串列表，则使用这些字符串所代表的特征作为分组依据。默认为 None</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 0 或 1。表示操作的轴向。默认为 0</td>\n</tr>\n<tr>\n<td>level</td>\n<td>接收 int 或索引名。表示标签所在级别。默认为 None</td>\n</tr>\n<tr>\n<td>as_index</td>\n<td>接收 bool。表示聚合后的聚合标签是否以 DataFrame 索引形式输出。默认为 True</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>接收 bool。表示是否对分组依据、分组标签进行排序。默认为 True</td>\n</tr>\n<tr>\n<td>group_keys</td>\n<td>接收 bool。表示是否显示分组标签的名称。默认为 True</td>\n</tr>\n</tbody>\n</table>\n<p>分组后的结果并不能直接查看，而是被存在内存中，输出的是内存地址。实际上，分组后的数据对象 groupby 类似于 Series 与 DataFrame，是 pandas 提供的一种对象。</p>\n<p>groupby 对象常用的描述性统计方法及说明如下表。</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法名称</strong></th>\n<th><strong>方法说明</strong></th>\n<th><strong>方法名称</strong></th>\n<th><strong>方法说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>count</td>\n<td>返回各组的计数值，不包括缺失值</td>\n<td>cumcount</td>\n<td>对每个分组中的组员进行标记，0～<em>n</em>-1</td>\n</tr>\n<tr>\n<td>head</td>\n<td>返回每组的前<em> n</em> 个值</td>\n<td>size</td>\n<td>返回每组的大小</td>\n</tr>\n<tr>\n<td>max</td>\n<td>返回每组最大值</td>\n<td>min</td>\n<td>返回每组最小值</td>\n</tr>\n<tr>\n<td>mean</td>\n<td>返回每组的均值</td>\n<td>std</td>\n<td>返回每组的标准差</td>\n</tr>\n<tr>\n<td>median</td>\n<td>返回每组的中位数</td>\n<td>sum</td>\n<td>返回每组的和</td>\n</tr>\n</tbody>\n</table>\n<p>agg () 方法和 aggregate () 方法都支持对每个分组应用某函数，包括 Python 内置函数或自定义函数。同时，这两个方法也能够直接对 DataFrame 进行函数应用操作。</p>\n<p>针对 DataFrame 的 agg () 方法与 aggregate () 方法的基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>agg<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>aggregate<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2使用agg方法聚合数据\"><a class=\"anchor\" href=\"#2使用agg方法聚合数据\">#</a> 2）使用 agg () 方法聚合数据</h3>\n<p>在正常使用过程中，agg () 方法和 aggregate () 方法对 DataFrame 对象操作时的功能几乎完全相同，因此只需要掌握其中一个方法即可。</p>\n<p>agg () 方法的常用参数及其说明如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>func</td>\n<td>接收 list、dict、function 或 str。表示用于聚合数据的函数。无默认值</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 0 或 1。代表操作的轴向。默认为 0</td>\n</tr>\n</tbody>\n</table>\n<p>使用 agg () 方法时，对于某个特征希望只做求均值操作，而对另一个特征则希望只做求和操作。此时需要使用字典的方式，将两个特征名分别作为 key，然后将 NumPy 库的求和与求均值的函数分别作为 value。</p>\n<p>如果希望求出某个特征的多个统计量，对某些特征则只需要求一个统计量，此时只需要将字典对应 key 的 value 转换为列表，将列表元素转换为多个目标的统计量即可。</p>\n<p>在 agg () 方法中还可以传入读者自定义的函数。</p>\n<p>在 NumPy 库中的函数 np.mean、np.median、np.prod、np.sum、np.std 和 np.var 能够在 agg () 方法中直接使用。</p>\n<p>在自定义函数中使用 NumPy 库中的这些函数。</p>\n<ul>\n<li>计算的时候是单个序列，会无法得出想要的结果。</li>\n<li>多列数据同时计算，才能得到正确的结果。</li>\n</ul>\n<p>使用 agg () 方法也能够实现对每一个特征的每一组使用相同的函数。</p>\n<p>若需要对不同的特征应用不同的函数，则与 DataFrame 中使用 agg () 方法的操作相同。</p>\n<h3 id=\"3使用apply方法聚合数据\"><a class=\"anchor\" href=\"#3使用apply方法聚合数据\">#</a> 3）使用 apply () 方法聚合数据</h3>\n<p>apply () 方法类似于 agg () 方法，能够将函数应用于每一列。不同之处在于，与 apply () 方法相比，agg () 方法传入的函数只能够作用于整个 DataFrame 或 Series，而无法像 agg () 方法一样能够对不同特征应用不同函数来获取不同结果。</p>\n<p>apply () 方法的基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> raw<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> result_type<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>apply () 方法的使用方式和 agg () 方法相同。</p>\n<p>使用 apply () 方法对 GroupBy 对象进行聚合操作的方法和 agg () 方法也相同，但使用 agg () 方法能够实现对不同的特征应用不同的函数，而 apply () 方法则不行。</p>\n<p>apply () 方法的常用参数及其说明如下表。</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>func</td>\n<td>接收 functions。表示应用于每行或每列的函数。无默认值</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 0 或 1。表示操作的轴向。默认为 0</td>\n</tr>\n<tr>\n<td>raw</td>\n<td>接收 bool。表示是否直接将 ndarray 对象传递给函数。默认为 False</td>\n</tr>\n</tbody>\n</table>\n<p>transform () 方法能够对整个 DataFrame 的所有元素进行操作，其基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>transform () 方法的常用参数及其说明如下表。</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>func</td>\n<td>接收 functions、str、类列表或类字典。表示用于转换的函数。无默认值</td>\n</tr>\n<tr>\n<td>axis</td>\n<td>接收 0 或 'index'、1 或 'columns'。代表操作的轴向。默认为 0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"5创建透视表与交叉表\"><a class=\"anchor\" href=\"#5创建透视表与交叉表\">#</a> 5. 创建透视表与交叉表</h2>\n<h3 id=\"1使用pivot_table函数创建透视表\"><a class=\"anchor\" href=\"#1使用pivot_table函数创建透视表\">#</a> 1）使用 pivot_table () 函数创建透视表</h3>\n<p>透视表是各种电子表格和其他数据分析软件中一种常见的数据汇总形式，可根据一个或多个建对数据进行聚和，并根据行或列的分组键将数据划分到各个区域。利用 pivot_table 函数可以实现创建透视表。</p>\n<p>pivot_table () 函数的基本使用格式如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DataFrame<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>values<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> aggfunc<span class=\"token operator\">=</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">,</span> fill_value<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> margins<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> dropna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> margins_name<span class=\"token operator\">=</span><span class=\"token string\">'All'</span><span class=\"token punctuation\">,</span> observed<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>pivot_table () 方法的常用参数及其说明如下表</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>values</td>\n<td>接收 str。用于指定要聚合的数据特征名，默认使用全部数据。默认为 None</td>\n</tr>\n<tr>\n<td>index</td>\n<td>接收列、组、数组或前一列的列表。表示行分组键。默认为 None</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>接收列、组、数组或前一列的列表。表示列分组键。默认为 None</td>\n</tr>\n<tr>\n<td>aggfunc</td>\n<td>接收函数、函数列表、dict。表示聚合函数。默认为 mean</td>\n</tr>\n<tr>\n<td>margins</td>\n<td>接收 bool。表示添加所有行 / 列（如小计 / 总计）。默认为 False</td>\n</tr>\n<tr>\n<td>dropna</td>\n<td>接收 bool。表示是否删掉全为 NaN 的列。默认为 True</td>\n</tr>\n</tbody>\n</table>\n<p>使用 pivot_talbe () 函数时，若不特殊指定聚合函数的参数 aggfunc，会默认使用 numpy.mean 进行聚合运算，numpy.mean 会自动过滤掉非数值类型数据。读者可以通过指定 aggfunc 参数来修改聚合函数。</p>\n<p>和 groupby () 方法分组相同，pivot_table () 函数在创建透视表的时候分组键 index 可以有多个，使用 format 和 metric 特征作为索引的透视表。</p>\n<p>当全部数据列数很多时，若要只显示自己关心的列，则可以通过指定 values 参数来实现。</p>\n<h3 id=\"2使用crosstab函数创建交叉表\"><a class=\"anchor\" href=\"#2使用crosstab函数创建交叉表\">#</a> 2）使用 crosstab () 函数创建交叉表</h3>\n<p>交叉表是透视表的一种，crosstab () 函数的参数和 pivot_table () 函数基本相同。</p>\n<p>不同之处在于，对于 crosstab () 函数中的参数 index、columns、values，输入的都是从 DataFrame 中取出的某一列。</p>\n<p>交叉表是一种特殊的透视表，主要用于计算分组频率。利用 pandas 提供的 crosstab 函数可以制作交叉表。</p>\n<p>crosstab () 函数的基本使用格式如下。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pandas<span class=\"token punctuation\">.</span>crosstab<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> columns<span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> rownames<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> colnames<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> aggfunc<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> margins<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> margins_name<span class=\"token operator\">=</span><span class=\"token string\">'All'</span><span class=\"token punctuation\">,</span> dropna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> normalize<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>crosstab () 方法的常用参数及其说明如下表：</p>\n<table>\n<thead>\n<tr>\n<th><strong>函数名称</strong></th>\n<th><strong>参数说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>接收类数组或数组列表。表示行索引键。无默认值</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>接收类数组或数组列表。表示列索引键。无默认值</td>\n</tr>\n<tr>\n<td>values</td>\n<td>接收类数组。表示聚合数据。默认为 None</td>\n</tr>\n<tr>\n<td>rownames</td>\n<td>接收 sequence。表示行分组键名。默认为 None</td>\n</tr>\n<tr>\n<td>colnames</td>\n<td>接收 sequence。表示列分组键名。默认为 None</td>\n</tr>\n<tr>\n<td>aggfunc</td>\n<td>接收 function。表示聚合函数。默认为 None</td>\n</tr>\n<tr>\n<td>margins</td>\n<td>接收 bool。表示汇总（Total）功能的开关，设置为 True 后，结果集中会出现名为 “ALL” 的行和列。默认为 False</td>\n</tr>\n<tr>\n<td>dropna</td>\n<td>接收 bool。表示是否删掉全为 NaN 的列。默认为 True</td>\n</tr>\n<tr>\n<td>normalize</td>\n<td>接收 bool。表示是否对值进行标准化。默认为 False</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "学习类",
                "Python语言",
                "数据分析",
                "Python",
                "期末复习",
                "数据分析"
            ]
        }
    ]
}