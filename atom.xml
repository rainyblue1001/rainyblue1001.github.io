<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://rainyblue.cn</id>
    <title>Radish&#39;blog</title>
    <subtitle></subtitle>
    <icon>http://rainyblue.cn/images/favicon.ico</icon>
    <link href="http://rainyblue.cn" />
    <author>
      <name>萝卜仔</name>
    </author>
    <updated>2024-06-23T04:41:58.867Z</updated>
    <category term="Shoka" />
    <entry>
        <id>http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions2/</id>
        <title>数据分析模拟卷2</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions2/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文章为本次模拟试卷！&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一-选择题-20分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-选择题-20分&#34;&gt;#&lt;/a&gt; 一、选择题  20 分&lt;/h1&gt;
&lt;p&gt;1．以下哪个函数不属于 Pandas 的 DataFrame 对象？&lt;/p&gt;
&lt;p&gt;A. dropna()&lt;/p&gt;
&lt;p&gt;B. sort_values()&lt;/p&gt;
&lt;p&gt;C. mean()&lt;/p&gt;
&lt;p&gt;D. plot()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2．在 Pandas 中，DataFrame 对象通常用来表示：&lt;/p&gt;
&lt;p&gt;A. 一维数组 B. 二维标签化数据结构 C. 图表 D. 统计模型&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;3. 以下哪个不是 Pandas DataFrame 的方法？&lt;/p&gt;
&lt;p&gt;A. head()     B. tail()     C. shape()     D. info()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4. 下列关于 pandas 支持的数据结构的说法错误的是 (	)&lt;/p&gt;
&lt;p&gt;A.pandas 只支持 Series 数据结构&lt;/p&gt;
&lt;p&gt;B.pandas 支持 Series 和 DataFrame&lt;/p&gt;
&lt;p&gt;C.DataFrame 可与带有标记轴 (行和列) 的二维数组一起使用&lt;/p&gt;
&lt;p&gt;D.Series 被定义为能够存储各种类型数据的一维数组&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;5. 下列对 DataFrame 的常用属性说法错误的是 (	)。&lt;/p&gt;
&lt;p&gt;A.values 可以获取元素&lt;/p&gt;
&lt;p&gt;B.index 可查看索引情况&lt;/p&gt;
&lt;p&gt;C.column 可查看 DataFrame 的列名&lt;/p&gt;
&lt;p&gt;D.dtypes 可查看各列的数据类型&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;6. 在下列选项中可以进行横向堆叠的是 (	)。&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. join()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;7. 在下列选项中可以进行重叠合并的是 (	)。&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. append()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;8. 在下列选项中可以进行缺失值替换的是 (	)。&lt;/p&gt;
&lt;p&gt;A.dropna0 方法  B.fllna () 方法&lt;/p&gt;
&lt;p&gt;C.isnull0 方法    D.notnull0 方法&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;9. 在下列选项中不属于检测与处理缺失值的方法的是 (	)&lt;/p&gt;
&lt;p&gt;A. 插值法&lt;/p&gt;
&lt;p&gt;B. 替换法&lt;/p&gt;
&lt;p&gt;C. 哑变量处理&lt;/p&gt;
&lt;p&gt;D. 删除法&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;10. 下列代码中能够为图形添加图例的是 (	)&lt;/p&gt;
&lt;p&gt;A. plt.xticks([0,1,2,3, 4])&lt;/p&gt;
&lt;p&gt;B. plt.plot(x,y)&lt;/p&gt;
&lt;p&gt;C,plt.legend(&#39;y = cos x’)&lt;/p&gt;
&lt;p&gt;D. pit.title (散点图”)&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;11. 下列说法不正确的是 (	)&lt;/p&gt;
&lt;p&gt;A. 散点图可以用于查看数据中的离释值&lt;/p&gt;
&lt;p&gt;B. 折线图可以用于查看数据的数最差和变化趋势&lt;/p&gt;
&lt;p&gt;C. 柱形图可以用于查看整体数据的数量分布&lt;/p&gt;
&lt;p&gt;D. 箱线图可以用于查看特征间的相关关系&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;12. 下列不是系列配置项的是 (	)。&lt;/p&gt;
&lt;p&gt;A. 标记点配置项&lt;/p&gt;
&lt;p&gt;B. 标签配置项&lt;/p&gt;
&lt;p&gt;C. 文本样式配置项&lt;/p&gt;
&lt;p&gt;D. 标题配置项&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;13. 下列说法正确的是 (	)&lt;/p&gt;
&lt;p&gt;A. 基本散点图和 3D 散点图的绘制方法相同&lt;/p&gt;
&lt;p&gt;B. 热力图可用于了解数据集中的变量的相关关系&lt;/p&gt;
&lt;p&gt;C.stripplot 函数接收的数据只能是列表和数据框&lt;/p&gt;
&lt;p&gt;D. 使用 stripplot 函数可以绘制线性回归拟合图&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;14.classification_report 函数用于输出分类模型评价报告，其内容不包括 (	)。&lt;/p&gt;
&lt;p&gt;A. precision&lt;/p&gt;
&lt;p&gt;B. recall&lt;/p&gt;
&lt;p&gt;C.fl-score&lt;/p&gt;
&lt;p&gt;D. true_postive_rate&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;15. 下列算法中属于分类方法的是 (	)&lt;/p&gt;
&lt;p&gt;A.SVC 算法&lt;/p&gt;
&lt;p&gt;B.CLIOUE 算法&lt;/p&gt;
&lt;p&gt;C.CLARANS 算法&lt;/p&gt;
&lt;p&gt;D.K-MEDOIDS 算法&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;16.skleam 中用于对特征进行归一化的函数是 (	)&lt;/p&gt;
&lt;p&gt;A.StandardScaler&lt;/p&gt;
&lt;p&gt;B, Normalizer&lt;/p&gt;
&lt;p&gt;C.Binarizer&lt;/p&gt;
&lt;p&gt;D.MinMaxScaler&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;17. 下列图形常用于分析各分组数据在总数据中所占比例的是（    )&lt;/p&gt;
&lt;p&gt;A. 折线图&lt;/p&gt;
&lt;p&gt;B. 饼图&lt;/p&gt;
&lt;p&gt;C. 柱形图&lt;/p&gt;
&lt;p&gt;D. 箱线图&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;18.skleam 中用于对特征进行归一化的函数是 (	)&lt;/p&gt;
&lt;p&gt;A.StandardScaler&lt;/p&gt;
&lt;p&gt;B, Normalizer&lt;/p&gt;
&lt;p&gt;C.Binarizer&lt;/p&gt;
&lt;p&gt;D.MinMaxScaler&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;19. 下列关于回归模型评价指标说法不正确的是 (	)&lt;/p&gt;
&lt;p&gt;A. 平均绝对误差的值越接近 0，模型性能越好&lt;/p&gt;
&lt;p&gt;B.R 值越接近 1，模型性能越好&lt;/p&gt;
&lt;p&gt;C. 可解释方差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;D. 均方误差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;20.skleam 转换器的主要方法不包据 (	)&lt;/p&gt;
&lt;p&gt;A. fit()&lt;/p&gt;
&lt;p&gt;B. transform()&lt;/p&gt;
&lt;p&gt;C:fa_transform()&lt;/p&gt;
&lt;p&gt;D, fit_transforms()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;二-简答题-10分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-简答题-10分&#34;&gt;#&lt;/a&gt; 二、简答题            10 分&lt;/h1&gt;
&lt;p&gt;1. 阐述 Pandas 的作用&lt;/p&gt;
&lt;p&gt;Pandas 是一个开源数据分析工具，它提供了高效、易用的数据结构 和数据分析工具。它主要引入了两种新的数据结构：DataFrame 和 Series，通过 Pandas，用户可以方便地进行数据导入、清洗、转 换、聚合等操作，支持多种数据类型和文件格式，并提供了丰富的数据分 析和可视化功能。&lt;/p&gt;
&lt;p&gt;2. 列出并解释 Pandas 中用于读写 CSV 数据的相关函数。&lt;/p&gt;
&lt;p&gt;Pandas 库提供了 **read_csv () 和 to_csv ()** 两个主要函数，分别用于读取和写入 CSV 数据。&lt;/p&gt;
&lt;p&gt;read_csv () 函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个函数用于从 CSV 文件中读取数据，将数据转换为 Pandas 的 DataFrame 对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to_csv () 方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此方法用于将 DataFrame 对象写入 CSV 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;三-分析题-10分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-分析题-10分&#34;&gt;#&lt;/a&gt; 三、分析题  10 分&lt;/h1&gt;
&lt;p&gt;1. 熟悉竞赛网站用户行为分析的步骤与流程&lt;br /&gt;
通过对竞赛网站用户访问数据进行分析，使用预处理后的数据构建特征，调用 skleam 库的 KMeans 类对用户进行聚类，以便网站运营商得出差异化服务的策略。画出竞赛网站用户行为分析流程：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623130851953.png&#34; alt=&#34;image-20240623130851953&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 熟悉企业所得税预测的步骤与流程&lt;br /&gt;
画出总体流程，主要包括以下步骤：&lt;br /&gt;
(1) 对原始数据进行探索性分析，了解原始特征之间的相关性。&lt;br /&gt;
(2) 利用 Lasso 特征选择模型进行特征提取。&lt;br /&gt;
(3) 建立单个特征的灰色预测模型 (GM (1,1) 模型) 和支持向量回归预测模型 (SVR&lt;br /&gt;
 模型 )。&lt;br /&gt;
(4) 使用 SVR 预测模型得出 2020 年、2021 年企业所得税的预测值。&lt;br /&gt;
(5) 对建立的企业所得税预测模型进行评价。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623130831415.png&#34; alt=&#34;image-20240623130831415&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;四-综合应用题-60分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-综合应用题-60分&#34;&gt;#&lt;/a&gt; 四、综合应用题        60 分&lt;/h1&gt;
&lt;p&gt;1. 二手手机价格预测&lt;/p&gt;
&lt;p&gt;某回收二手手机的公司为了在公司的交易软件中显示预测的二手手机价格，使用用户在交易软件上的交易数据 (phone.csv)，预测回收二手手机的价格。交易数据的特征说明如表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特征&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;用户编码&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;battery_power&lt;/td&gt;
&lt;td&gt;电池容量（单位：mA）&lt;/td&gt;
&lt;td&gt;1520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blue_tooth&lt;/td&gt;
&lt;td&gt;蓝牙是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clock_speed&lt;/td&gt;
&lt;td&gt;开机时间（单位：min）&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dual_sim&lt;/td&gt;
&lt;td&gt;是否双卡双待。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fc&lt;/td&gt;
&lt;td&gt;前置摄像头像素（单位：px）&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;four_g&lt;/td&gt;
&lt;td&gt;是否支持 4G。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int_memory&lt;/td&gt;
&lt;td&gt;内存剩余大小（单位：GB）&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m_dep&lt;/td&gt;
&lt;td&gt;手机厚度（单位：cm）&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mobile_wt&lt;/td&gt;
&lt;td&gt;手机重量（单位：g）&lt;/td&gt;
&lt;td&gt;192&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n_cores&lt;/td&gt;
&lt;td&gt;处理器内核数&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pc&lt;/td&gt;
&lt;td&gt;主摄像头像素（单位：px）&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;px_height&lt;/td&gt;
&lt;td&gt;像素分辨率高度（单位：px）&lt;/td&gt;
&lt;td&gt;1270&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;px_width&lt;/td&gt;
&lt;td&gt;像素分辨率宽度（单位：px）&lt;/td&gt;
&lt;td&gt;1336&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ram&lt;/td&gt;
&lt;td&gt;运行内存（单位：MB）&lt;/td&gt;
&lt;td&gt;3506&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sc_h&lt;/td&gt;
&lt;td&gt;手机屏幕高度（单位：cm）&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sc_w&lt;/td&gt;
&lt;td&gt;手机屏幕宽度（单位：cm）&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;talk_time&lt;/td&gt;
&lt;td&gt;充满电耗时（单位：h）&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;three_g&lt;/td&gt;
&lt;td&gt;是否支持 3G。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;touch_screen&lt;/td&gt;
&lt;td&gt;触摸屏是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wifi&lt;/td&gt;
&lt;td&gt;Wi-Fi 连接是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;price range&lt;/td&gt;
&lt;td&gt;手机价格等级，其中 0 表示低，1 表示中，2 表示较高，3 表示高&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现需利用交易数据建立分类模型对二手手机价格进行预测，步骤如下。&lt;br /&gt;
(1) 删除有异常值的行 (手机厚度小于等于 0cm)。&lt;br /&gt;
(2) 建立随机森林分类模型对数据进行训练。&lt;br /&gt;
(3) 计算模型准确率，评价分类模型效果。&lt;/p&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 加载所需的函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RandomForestClassifier&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data/phone.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 读取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 处理异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;m_dep&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理手机厚度异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; phone_data1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; phone_data1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将数据划分为训练集测试集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           phone_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           test_size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           random_state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 数据标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_trainStd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_testStd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 建立 RandomForestClassifier 模型 (随机森林)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RandomForestClassifier&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_trainStd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;建立的 rfc 模型为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 预测训练集结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_testStd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测的前 20 个结果为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_pred&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算准确率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;true &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_target_pred &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 求出预测和真实一样的数目&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测对的结果数目为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; true&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测错的的结果数目为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; true&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测结果准确率为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; true &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 钻石价格预测&lt;/p&gt;
&lt;p&gt;某珠宝店新增钻石回收业务，为了对客户提供的钻石更好地进行估价，该店铺收集了行业内近期所售钻石的 4C 等级、尺寸和相应价格等数据，存为钻石价格数据集 (diamond_price.csv), 包括克拉、切工等级、色泽、净度等 9 个特征。钻石价格数据集的特征说明如表 2 所示。&lt;/p&gt;
&lt;p&gt;表 2 钻石价格数据集的特征说明:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特征各称&lt;/th&gt;
&lt;th&gt;特征含义&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;克拉&lt;/td&gt;
&lt;td&gt;钻石的重量&lt;/td&gt;
&lt;td&gt;0.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;切工等级&lt;/td&gt;
&lt;td&gt;包括 5 个等级，其中 1 表示完美；2 表示十分珍贵；3 表示很好；4 表示好；5 表示一般&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;色泽&lt;/td&gt;
&lt;td&gt;钻石色泽从 D 到 J 分为 7 个级别，其中 1 表示 D 级，完全无色；2 表示 E 级，无色；3 表示 F 级，几乎无色；4 表示 G 级，接近无色；5 表示 H 级，接近无色；6 表示 1 级，肉眼可见少量黄色；7 表示 J 级，肉眼可见少量黄色&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;净度&lt;/td&gt;
&lt;td&gt;钻石净度由高到低分为 8 个级别，其中 1 表示 IF, 内无瑕级；2 表示 VVS1, 极轻微内含级 1;3 表示 VVs2, 极轻微内含级 2;4 表示  VS1, 轻微内含级 1; 5 表示 Vs2, 轻微内含级 2;6 表示 SI1, 微含级 1;7 表示 SI2, 微含级 2;8 表示 I1, 内含级&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;台宽比&lt;/td&gt;
&lt;td&gt;钻石桌面的宽度占其平均直径的百分比&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;长度&lt;/td&gt;
&lt;td&gt;钻石的长度&lt;/td&gt;
&lt;td&gt;3.96&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;宽度&lt;/td&gt;
&lt;td&gt;钻石的宽度&lt;/td&gt;
&lt;td&gt;3.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;高度&lt;/td&gt;
&lt;td&gt;钻石的高度&lt;/td&gt;
&lt;td&gt;2.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格 (美元)&lt;/td&gt;
&lt;td&gt;钻石的价格&lt;/td&gt;
&lt;td&gt;326&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用钻石价格数据集，构建回归模型预测回收的钻石价格，具体步骤如下。&lt;/p&gt;
&lt;p&gt;(1) 读取钻石价格数据集。&lt;/p&gt;
&lt;p&gt;(2) 经过观察数据发现，长度、宽度、高度特征存在 0 值，删除该 3 个特征中所有出现 0 值的行数据，并对其他数据进行重新索引。&lt;/p&gt;
&lt;p&gt;(3) 新增价格 (人民币) 特征，假定 1 美元等于 6.50 人民币。&lt;/p&gt;
&lt;p&gt;(4) 拆分特征数据和标签数据，特征数据为克拉、切工等级、色泽、净度、台宽比、长度、宽度、高度，标签数据为价格 (人民币) 特征。&lt;/p&gt;
&lt;p&gt;(5) 划分训练集和测试集，并对训练集和测试集进行标准差标准化。&lt;/p&gt;
&lt;p&gt;(6) 构建 SVR 等至少两种回归模型进行钻石价格预测，并输出回归模型评价指标，查看模型效果。&lt;/p&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 读取数据集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data/diamond_price.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gbk&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#预处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;X(length)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                              &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Y(width)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                              &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Z(Depth)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inplace&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; drop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_RMB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Price(in US dollars)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6.50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 拆分数据和标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 特征列选择&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# from  sklearn.linear_model import  Lasso&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# data_train = (diamond_data-diamond_data.mean())/diamond_data.std()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# lasso = Lasso(alpha=1000).fit(data_train,diamond_target)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# print(lasso.coef_)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# diamond_data = diamond.iloc[:, [0,1,2,3]]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 划分训练集和测试集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; test_size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;random_state&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# # 标准差标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScale &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_trainScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScale&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_testScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScale&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#定义评价函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; explained_variance_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  r2_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;回归模型的可解释方差值为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          explained_variance_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;回归模型的R方值为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          r2_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建回归模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;svm &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; LinearSVR&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 支持向量回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SVR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LinearSVR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SVR_diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;支持向量回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#梯度提升回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  GradientBoostingRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;GBR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; GradientBoostingRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; GBR_diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;梯度提升回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#回归决策树&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tree &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  DecisionTreeRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DTR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  DecisionTreeRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;回归决策树:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#线性回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;linear_model &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; LinearRegression&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;   LinearRegression&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;线性回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#最近邻回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;neighbors &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  KNeighborsRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KNR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  KNeighborsRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;最近邻回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <updated>2024-06-23T04:41:58.867Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions3/</id>
        <title>微信小程序模拟题3</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions3/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 1.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一-单项选择题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-单项选择题-8题216分&#34;&gt;#&lt;/a&gt; 一、单项选择题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 下列选项中，关于微信开发者工具说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. 工具栏 “预览” 按钮用于在微信中进行预览&lt;/p&gt;
&lt;p&gt;B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等&lt;/p&gt;
&lt;p&gt;C. 模拟器可以模拟小程序在微信客户端的运行效果&lt;/p&gt;
&lt;p&gt;D. 编辑器中只能打开一个文件&lt;/p&gt;
&lt;p&gt;2. 下列选项中，不属于表单组件的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;A. input 组件&lt;/p&gt;
&lt;p&gt;B. checkbox 组件&lt;/p&gt;
&lt;p&gt;C. form 组件&lt;/p&gt;
&lt;p&gt;D. swiper 组件&lt;/p&gt;
&lt;p&gt;3. 下列选项中，用于监听页面初次渲染成功的回调函数是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. onHide             B. onLoad                C. onShow             D. onReady&lt;/p&gt;
&lt;p&gt;4. 下列选项中，用于实现非标签页之间的跳转的方法是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  wx.navigateTo()&lt;/p&gt;
&lt;p&gt;B.   wx.navigate()&lt;/p&gt;
&lt;p&gt;C.   wx.navigatorTo()&lt;/p&gt;
&lt;p&gt;D.  wx.navigator()&lt;/p&gt;
&lt;p&gt;5. 下列选项中，关于 map 组件属性说法错误的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.  longitude 为中心经度&lt;/p&gt;
&lt;p&gt;B.   scale 为缩放级别，取值范围为 1~20&lt;/p&gt;
&lt;p&gt;C.   latitude 为中心纬度&lt;/p&gt;
&lt;p&gt;D.  markers 为标记点数组&lt;/p&gt;
&lt;p&gt;6. 下列选项中，关于 openid 的说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  openid 是用户的唯一标识&lt;/p&gt;
&lt;p&gt;B.   openid 不等同于微信用户 id&lt;/p&gt;
&lt;p&gt;C.   同一个微信用户在不同 AppID 的微信小程序中的 openid 是不同的&lt;/p&gt;
&lt;p&gt;D.  openid 是微信小程序的唯一标识&lt;/p&gt;
&lt;p&gt;7. 下列选项中，关于 marker 对象的属性说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  title 标注点名称&lt;/p&gt;
&lt;p&gt;B.   zIndex 表示显示层级&lt;/p&gt;
&lt;p&gt;C.   alpha 表示标注的透明度&lt;/p&gt;
&lt;p&gt;D.  userInfo 表示用户信息对象&lt;/p&gt;
&lt;p&gt;8. 下列选项中，关于数据缓存说法错误的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.  wx.getStorage () 方法用于从本地缓存中异步获取指定 key 内容&lt;/p&gt;
&lt;p&gt;B.   wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key&lt;/p&gt;
&lt;p&gt;C.   wx.setStorage () 方法用于将数据异步存储在本地缓存指定的 key&lt;/p&gt;
&lt;p&gt;D.  在实现数据缓存的方法中，方法名以 Sync 结尾的都是同步方法&lt;/p&gt;
&lt;h1 id=&#34;二-填空题-7题214分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-填空题-7题214分&#34;&gt;#&lt;/a&gt; 二、填空题 7 题 * 2=14 分&lt;/h1&gt;
&lt;p&gt;1. 微信小程序是运行在______之上的应用。&lt;/p&gt;
&lt;p&gt;2.text 组件的 ____属性用于实现长按选中文本内容的效果。&lt;/p&gt;
&lt;p&gt;3. 在微信小程序中，页面加载完成后执行的生命周期函数为 ____。&lt;/p&gt;
&lt;p&gt;4. 微信小程序通过 ____ 方法获取登录凭证 code。&lt;/p&gt;
&lt;p&gt;5. 微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。&lt;/p&gt;
&lt;p&gt;6. 在 Animation 实例的常用方法中，  ____  用于导出动画队列。&lt;/p&gt;
&lt;p&gt;7. 微信小程序通过   ____ 方法创建一个 WebSocket 连接。&lt;/p&gt;
&lt;p&gt;8. 微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。&lt;/p&gt;
&lt;h1 id=&#34;三-判断题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-判断题-8题216分&#34;&gt;#&lt;/a&gt; 三、判断题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 项目成员表示参与微信小程序开发、运行的成员。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;2. 给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;3. 在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;4. 通过调用 wx.request () 方法可以发起网络请求。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;5. 在 &amp;lt;slider&amp;gt; 组件上添加 bindchanging=&amp;quot;sliderChanging&amp;quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;6.canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;  ）&lt;/p&gt;
&lt;p&gt;7. 同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;8. 使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;  ）&lt;/p&gt;
&lt;h1 id=&#34;四-程序题-6题424分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-程序题-6题424分&#34;&gt;#&lt;/a&gt; 四、程序题 6 题 * 4=24 分&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;onPullDownRefresh:function()&amp;#123;
// 需要重置的数据
    Tthis.setData(&amp;#123;
    shoplist:[]
    &amp;#125;)
    this.listData.page = 1
    this.listData.total =0// 重新发起数据请求
    this.getshopList(()=&amp;gt;&amp;#123;
        wx.stopPullDownRefresh()
    &amp;#125;)
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;onLoad()&amp;#123;
    console.log(&#39;页面加载，开始获取数据&#39;)
    this.getshopList()
&amp;#125;,
// 上拉触底
onReachBottom:function()&amp;#123;
    console.log(&#39;触发了上拉触底的事件&#39;)
if(this.listData.page * this.listData.pagesize &amp;gt;= this.listData.total)&amp;#123;
    // 没有下一页的数据了
    return wx.showToast(&amp;#123;
        title:&amp;quot;数据加载完毕!
        icon:&#39;none
    if(this.isLoading)&amp;#123;
        return
    &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;login: function()&amp;#123;
    wx.login(&amp;#123;
        success:res =&amp;gt;&amp;#123;
            console.log(&#39;login code:&#39;+ res.code)
            wx.request(&amp;#123;                               url:&#39;http://127.0.0.1:3000/login&#39;,
            method:&#39;post&#39;
            data :
            code: res.code
            success:res =&amp;gt;&amp;#123;
                        console.log(&#39;token:+ res.data.token)
           // 将 token 保存为公共 数据，用于在所有页面中共享 token

                        this.globalData.token = res.data.token
                        // 将 token 保存到数据缓存

                        wx.setStorage(&amp;#123;
                        key:&#39;token
                        data: res.data.token
                       &amp;#125;)
        &amp;#125;
    &amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button class=&amp;quot;avatar-wrapper&amp;quot; open-type=&amp;quot;chooseAvatar&amp;quot; bindchooseavatar=&amp;quot;onChooseAvatar&amp;quot;&amp;gt;
    &amp;lt;image class=&amp;quot;avatar&amp;quot;src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/image&amp;gt;&amp;lt;/button&amp;gt;

&amp;lt;input type=&amp;quot;nickname&amp;quot; class=&#39;nickname&amp;quot; placeholder=&amp;quot;请输入昵称&amp;quot;/&amp;gt;
                              
&amp;lt;button bindtap=&amp;quot;credit&amp;quot;&amp;gt;获取用户的积分&amp;lt;/button&amp;gt;

&amp;lt;view style=&amp;quot;text-align: center;&amp;quot; wx:if=&amp;quot;&amp;quot;&amp;gt;当前用户积分:&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;navigateTo:function()&amp;#123;
    wx .navigateTo(&amp;#123;
        url:&amp;quot;/pages/target/target?id=1&#39;
        success:()=&amp;gt;&amp;#123;
        console.log(&#39;跳转成功&#39;)
    &amp;#125;,
        fail:()=&amp;gt;&amp;#123;
            console.log(&#39;跳转失败&#39;)
        &amp;#125;
        complete:()=&amp;gt;&amp;#123;
                console.log(&#39;跳转完成&#39;)
        &amp;#125;
&amp;#125;)
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button bindtap=&amp;quot;navigateTo&amp;quot;&amp;gt;路由&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;五-简答题2题1530分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-简答题2题1530分&#34;&gt;#&lt;/a&gt; 五、简答题 2 题 * 15=30 分&lt;/h1&gt;
&lt;p&gt;1. 请简述微信小程序项目的创建过程。&lt;/p&gt;
&lt;p&gt;①打开微信开发者工具时，使用微信扫码登录微信开发者工具&lt;/p&gt;
&lt;p&gt;②进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。&lt;/p&gt;
&lt;p&gt;③将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成&lt;/p&gt;
&lt;p&gt;④单击 “确定” 按钮创建微信小程序项&lt;/p&gt;
&lt;p&gt;2. 简述页面生命周期函数包括哪些。&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数包含以下 5 个。&lt;/p&gt;
&lt;p&gt;①  onLoad () 函数用于监听页面加载，且一个页面只会在创建完成后触发一次。&lt;/p&gt;
&lt;p&gt;②  onShow () 函数用于监听页面显示，只要页面显示就会触发此函数。&lt;/p&gt;
&lt;p&gt;③  onReady () 函数用于监听页面初次渲染完成，一个页面只会调用一次。&lt;/p&gt;
&lt;p&gt;④  onHide () 函数用于监听页面隐藏，只要页面隐藏就会触发此函数。&lt;/p&gt;
&lt;p&gt;⑤  onUnload () 函数用于监听页面卸载，只要页面被释放就会触发此函数。&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2024-06-23T04:30:51.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions2/</id>
        <title>微信小程序模拟题2</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions2/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 2.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一-单项选择题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-单项选择题-8题216分&#34;&gt;#&lt;/a&gt; 一、单项选择题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 下列选项中，关于微信小程序项目目录结构说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.pages 目录用于存放所有微信小程序的页面&lt;/p&gt;
&lt;p&gt;B.app.wxss 文件定义了微信小程序项目的全局样式&lt;/p&gt;
&lt;p&gt;C.sitemap.json 文件是微信小程序项目的全局配置文件&lt;/p&gt;
&lt;p&gt;D.app.js 文件是微信小程序项目的入口文件&lt;/p&gt;
&lt;p&gt;2. 下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. 3              B. 4                  C. 5                    D. 6&lt;/p&gt;
&lt;p&gt;3. 下列选项中，用于监听页面初次渲染成功的回调函数是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. onHide             B. onLoad                C. onShow             D. onReady&lt;/p&gt;
&lt;p&gt;4. 下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;&amp;#123;&amp;#123; &amp;#125;&amp;#125;&lt;/code&gt;              B.   &lt;code&gt;[]&lt;/code&gt;           C.  &lt;code&gt;&amp;#123; &amp;#125;&lt;/code&gt;        D.  &lt;code&gt;[[]]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5. 下列选项中，用于滑动选择某一个值的组件是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. view&lt;/p&gt;
&lt;p&gt;B. slider&lt;/p&gt;
&lt;p&gt;C. input&lt;/p&gt;
&lt;p&gt;D. audio&lt;/p&gt;
&lt;p&gt;6. 下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. start () 方法表示开始录音&lt;/p&gt;
&lt;p&gt;B. pause () 方法表示暂停录音&lt;br /&gt;
 C. resume () 方法表示继续录音&lt;/p&gt;
&lt;p&gt;D. onError () 方法表示停止录音，点击开始录音后会从中断的地方接着继续录音&lt;/p&gt;
&lt;p&gt;7. 下列选项中，用于实现非标签页之间的跳转的方法是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  wx.navigateTo()&lt;/p&gt;
&lt;p&gt;B.   wx.navigate()&lt;/p&gt;
&lt;p&gt;C.   wx.navigatorTo()&lt;/p&gt;
&lt;p&gt;D.  wx.navigator()&lt;/p&gt;
&lt;p&gt;8. 下列选项中，关于 marker 对象的属性说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  title 标注点名称&lt;/p&gt;
&lt;p&gt;B.   zIndex 表示显示层级&lt;/p&gt;
&lt;p&gt;C.   alpha 表示标注的透明度&lt;/p&gt;
&lt;p&gt;D.  userInfo 表示用户信息对象&lt;/p&gt;
&lt;h1 id=&#34;二-填空题-7题214分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-填空题-7题214分&#34;&gt;#&lt;/a&gt; 二、填空题 7 题 * 2=14 分&lt;/h1&gt;
&lt;p&gt;1. 微信小程序项目中的______文件是全局配置文件。&lt;/p&gt;
&lt;p&gt;2. 微信开发者工具中用于保存文件的快捷键是______。&lt;/p&gt;
&lt;p&gt;3.image 组件的____属性用于设置图片的展示模式。&lt;/p&gt;
&lt;p&gt;4.swiper 组件内部只可以放置____组件。&lt;/p&gt;
&lt;p&gt;5. 在列表渲染中，使用____可以指定当前项的变量名。&lt;/p&gt;
&lt;p&gt;6. 下载文件的 API 是 ___。 上传文件的 API 是   ____。&lt;/p&gt;
&lt;p&gt;7.map 组件中地图视野发生变化时触发  ____  事件。&lt;/p&gt;
&lt;p&gt;8. 微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件&lt;/p&gt;
&lt;h1 id=&#34;三-判断题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-判断题-8题216分&#34;&gt;#&lt;/a&gt; 三、判断题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 微信小程序项目中 app.js 文件是全局样式文件。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;2. 微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;3.video 组件专门用于播放音频。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;4. 所有绑定的数据都必须在 data 中进行初始化。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;5. 通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;6.openid 是微信小程序的唯一标识。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;7.animation.export () 方法每次调用后仍保留之前的动画操作。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;8. 同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;h1 id=&#34;四-程序题-6题424分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-程序题-6题424分&#34;&gt;#&lt;/a&gt; 四、程序题 6 题 * 4=24 分&lt;/h1&gt;
&lt;p&gt;1. 重点：掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;view class=&amp;quot;container&amp;quot;&amp;gt;
&amp;#123;&amp;#123;mes&amp;#125;&amp;#125;  //数据绑定&amp;#123;&amp;#123;&amp;#125;&amp;#125;
&amp;lt;view&amp;gt;
    // 绑定事件test()，bind:tap=&amp;quot;test()&amp;quot;
    &amp;lt;button bind:tap=&amp;quot;test()&amp;quot;&amp;gt;按钮1-1&amp;lt;/button&amp;gt;
    &amp;lt;button bind:tap=&amp;quot;test&amp;quot;&amp;gt;按钮1-2&amp;lt;/button
    &amp;lt;button bindtap=&amp;quot;test()&amp;quot;&amp;gt;按钮2-1&amp;lt;/button&amp;gt;
    &amp;lt;button bindtap=&amp;quot;test&amp;quot;&amp;gt;按钮2-2&amp;lt;/button&amp;gt;
    &amp;lt;button bind:tap=&amp;quot;changetext&amp;quot;&amp;gt;按钮&amp;lt;/button&amp;gt;
&amp;lt;/view&amp;gt;
    
&amp;lt;view bind:tap=&amp;quot;viewtap&amp;quot; id=&amp;quot;out&amp;quot;&amp;gt;out 
    &amp;lt;view id=&amp;quot;inner&amp;quot; &amp;gt;inner&amp;lt;/view&amp;gt;
&amp;lt;/view&amp;gt;
    
&amp;lt;view wx:if=&amp;quot;false&amp;quot;&amp;gt;单独view1&amp;lt;/view&amp;gt;
&amp;lt;view wx:elif=&amp;quot;false&amp;quot;&amp;gt;单独view2&amp;lt;/view&amp;gt;
&amp;lt;view wx:else&amp;gt;单独view3&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Page(
    data:&amp;#123;
    [msg:&#39;hello&#39; // 数据绑定]&amp;#123;.red&amp;#125;
    flag:1,
    hid:1,
&amp;#125;,
num1:0,// 保存第 1 个数字
onLoad:function()&amp;#123;
    console.log(this.num1);
    console.log(this.data.msg);
// 报错 //console.log (this.msg);
    console.log(&#39;onload&#39;);
onPullDownRefresh:function()&amp;#123;
    console.log(&#39;onPullDownRefresh&#39;);
[this.setData（this关键字.setData方法）(&amp;#123; ]&amp;#123;.red&amp;#125;
    msg:&#39;hello world
      //num1:42 无效
&amp;#125;);
console.log(this.num1);
test()&amp;#123;
    console.log(&#39;test&#39;);
&amp;#125;,
test()&amp;#123;
    console.log(&#39;test&#39;);
&amp;#125;,
viewtap:function(e)&amp;#123;
    console.log(e);
    [console.log(___(补充触发事件组件的一些属性组合)+&#39;/&#39;+ ___(当前组件的一些属性组合));]&amp;#123;.red&amp;#125;
&amp;#125;,
changetext()&amp;#123;
    this.setData(&amp;#123;
        msg:&#39;新标题&#39;
    &amp;#125;,this.test());
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var hello = require(&#39;../../examplejs/hello&#39;)

Page(&amp;#123;
    data:&amp;#123;
        [name:&#39;初始值&#39;，]&amp;#123;.red&amp;#125;
        [age:0]&amp;#123;.red&amp;#125;
    &amp;#125;,
    onLoad:function()&amp;#123;
        console.log(hello.msg);
    demo(e)&amp;#123;
        this.setData(&amp;#123;
            [name:e.target.dataset.name,]&amp;#123;.red&amp;#125;
            [age:e.target.dataset.infoAge]&amp;#123;.red&amp;#125;
        &amp;#125;);
    &amp;#125;
&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;navigation-bar title=&amp;quot;Weixin&amp;quot; back=&amp;quot;false&amp;quot;color=&amp;quot;black&amp;quot; background=&amp;quot;#FFF&amp;quot;&amp;gt;
&amp;lt;/navigation-bar&amp;gt;
&amp;lt;scroll-view class=&amp;quot;scrollarea&amp;quot; scroll-y type=&amp;quot;list&amp;quot;&amp;gt;
    &amp;lt;view class=&amp;quot;container&amp;quot;
          Weixin
    &amp;lt;view&amp;gt;
    [&amp;lt;button bind:tap=&amp;quot;demo&amp;quot; data-name=&amp;quot;小程序&amp;quot;
            data-info-age=&amp;quot;16&amp;quot;&amp;gt;单击更新数据&amp;lt;/button&amp;gt;]&amp;#123;.red&amp;#125;
    &amp;lt;view&amp;gt;&amp;lt;/view&amp;gt;&amp;lt;view&amp;gt;&amp;lt;/view&amp;gt;
    &amp;lt;/view&amp;gt;
    &amp;lt;/view&amp;gt;
&amp;lt;/scroll-view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;numBtn:function(e) &amp;#123;
// 点击数字按钮，获取对应的数字，将其值赋给 num
    [var num = .target.dataset.val]&amp;#123;.red&amp;#125;
if(this.resultFlag)&amp;#123; 
    // 如果当前使用 = 计算了，则重置
    this.reset()
console.log(&#39;numbtn1&#39;,this.numChangeFlag,this.targetnum,this.numl,this.num2);
    if(this.numChangeFlag)&amp;#123;
        this.numChangeFlag = false
        this.execFlag= true 
        // 代表已输入第 2 个数字
        this.data.num =&#39;0’
        // 将 num 设为 0，避免数字进行拼接
        this.targetnum =&#39;num2&#39;
        // 将 target 切换到第 2 个数
    &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3. 重点：条件渲染&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;view wx:if=&amp;quot;false&amp;quot;&amp;gt;单独view1&amp;lt;/view&amp;gt;
&amp;lt;view wx:elif=&amp;quot;false&amp;quot;&amp;gt;单独view2&amp;lt;/view&amp;gt;
&amp;lt;view wx:else&amp;gt;单独view3&amp;lt;/view&amp;gt;

&amp;lt;block wx:if=&amp;quot;&amp;#123;&amp;#123;flag&amp;#125;&amp;#125;&amp;quot;&amp;gt;
&amp;lt;view&amp;gt;第1个&amp;lt;/view&amp;gt;
&amp;lt;view&amp;gt;第2个&amp;lt;/view&amp;gt;
&amp;lt;/block&amp;gt;

&amp;lt;text hidden=&amp;quot;&amp;#123;&amp;#123;hid&amp;#125;&amp;#125;&amp;quot;&amp;gt;文本hidden&amp;lt;/text&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Page(&amp;#123;
    data:&amp;#123;
        msg:&#39;hello&#39;,
        [flag:1,]&amp;#123;.red&amp;#125;
        hid:1,
    &amp;#125;
num1:0，// 保存第 1 个数字
    onLoad:function()&amp;#123;
       console.log(this.num1);console.log(this.data.msg);
       //console.log (this.msg);   // 报错
       console.log(&#39;onload&#39;);
&amp;#125;,
    onPullDownRefresh:function()&amp;#123;
        console.log(&#39;onPullDownRefresh&#39;);
        this.setData(&amp;#123;
            msg:&#39;hello world&#39;
            //num1:42 无效
        &amp;#125;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. 重点：列表渲染&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;view wx:for=&amp;quot;&amp;quot;wx: key=&amp;quot;*this&amp;quot;&amp;gt;     
&amp;#123;&amp;#123;index&amp;#125;&amp;#125;&amp;#123;&amp;#123;item&amp;#125;&amp;#125;    
&amp;lt;/view&amp;gt;

&amp;lt;viel&amp;gt;-----------&amp;lt;/view&amp;gt;
&amp;lt;view wx:for=&amp;quot;&amp;quot; wx:key=&amp;quot;id&amp;quot;&amp;gt;
&amp;#123;&amp;#123;index&amp;#125;&amp;#125;--&amp;#123;&amp;#123;item.message&amp;#125;&amp;#125;--&amp;#123;&amp;#123;item.id&amp;#125;&amp;#125;
&amp;lt;/view&amp;gt;

&amp;lt;viel&amp;gt;-----------&amp;lt;/view&amp;gt;
&amp;lt;view wx:for=&amp;quot;&amp;#123;&amp;#123;list&amp;#125;&amp;#125;&amp;quot; wx:for-item=&amp;quot;item2&amp;quot;
      wx : for-index=&amp;quot;index2&amp;quot; wx:key=&amp;quot;id&amp;quot;&amp;gt;
      &amp;#123;&amp;#123;index2&amp;#125;&amp;#125;--&amp;#123;&amp;#123;item2.message&amp;#125;&amp;#125;--&amp;#123;&amp;#123;item.id&amp;#125;&amp;#125;
&amp;lt;/view&amp;gt;

&amp;lt;view&amp;gt;--------&amp;lt;/view&amp;gt;
&amp;lt;view wx:for=&amp;quot;&amp;#123;&amp;#123;contract&amp;#125;&amp;#125;&amp;quot; wx:key=&amp;quot;id&amp;quot;&amp;gt;
  &amp;#123;&amp;#123;item.id&amp;#125;&amp;#125;,&amp;#123;&amp;#123;item.name&amp;#125;&amp;#125;,&amp;#123;&amp;#123;item.phone&amp;#125;&amp;#125;
&amp;lt;/view&amp;gt;

&amp;lt;view&amp;gt;
&amp;lt;button bind:tap=&amp;quot;sload&amp;quot;&amp;gt;showLoading--持续1秒&amp;lt;/button&amp;gt;&amp;lt;button bind:tap=&amp;quot;sload2&amp;quot;&amp;gt;showLoading--持续3秒&amp;lt;/button&amp;gt;
&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Page(&amp;#123;
    data:&amp;#123;
        arr:[&#39;a
        list:[
             &amp;#123;message:&#39;梅&#39;,id:1&amp;#125;,
             &amp;#123;message:&#39;兰&#39;,id: 2&amp;#125;,
             &amp;#123;message:&#39;竹&#39;,id:3&amp;#125;,
             &amp;#123;message:&#39;菊&#39;,id:4&amp;#125;
     &amp;#125;,
     contract:[]
onLoad:function()&amp;#123;
    console.log(&#39;页面加载&#39;)
    this.getContract()
&amp;#125;,
getContract:function()&amp;#123;
    wx.request(&amp;#123;
        url:&amp;quot;http://127.0.0.1:3000/data2&#39;
        method:&#39;GET&#39;
        data:&amp;#123;&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;sload()&amp;#123;
    wx.showLoading(&amp;#123;
        title:&#39;加载框&#39;
        duration:1000 // 默认 1500 毫秒
    &amp;#125;)
&amp;#125;
sload2()&amp;#123;
    wx.showLoading(&amp;#123;
        title:&#39;加载框&#39;                   
        setTimeout(function()&amp;#123;
        wx.hideLoading()
    &amp;#125;，3000)
&amp;#125;,
stoast()&amp;#123;
    wx.showToast(&amp;#123;
        title:&#39;提示框&#39;
        duration:3000，// 默认 1500 毫秒
        icon:&amp;quot;error&amp;quot;// 默认为 successicon:
    &amp;#125;)
&amp;#125;,
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;view&amp;gt;
&amp;lt;button bind:tap=&amp;quot;sload&amp;quot;&amp;gt;showLoading--持续1秒&amp;lt;/button&amp;gt;&amp;lt;button bind:tap=&amp;quot;sload2&amp;quot;&amp;gt;showLoading--持续3秒&amp;lt;/button&amp;gt;&amp;lt;button bind:tap=&amp;quot;stoast&amp;quot;&amp;gt;wx.showToast&amp;lt;/button&amp;gt;
&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;五-简答题2题1530分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-简答题2题1530分&#34;&gt;#&lt;/a&gt; 五、简答题 2 题 * 15=30 分&lt;/h1&gt;
&lt;p&gt;1. 简述微信小程序如何实现上拉触底。&lt;/p&gt;
&lt;p&gt;2. 简述 BackgroundAudioManager 实例的属性和方法。&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2024-06-23T04:25:51.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions1/</id>
        <title>微信小程序模拟题1</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/23/Educational/WeChat/WX-Questions1/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习，模拟题 1.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一单项选择题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一单项选择题-8题216分&#34;&gt;#&lt;/a&gt; 一。单项选择题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 下列选项中，关于微信小程序说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. 微信小程序是运行在微信之中应用&lt;/p&gt;
&lt;p&gt;B. 微信小程序的体积非常小&lt;/p&gt;
&lt;p&gt;C. 微信小程序不可以跨平台&lt;/p&gt;
&lt;p&gt;D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序&lt;/p&gt;
&lt;p&gt;2. 下列选项中，用于在微信开发者工具中输出调试信息的面板是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.Wxml&lt;/p&gt;
&lt;p&gt;B.Console&lt;/p&gt;
&lt;p&gt;C.Sources&lt;/p&gt;
&lt;p&gt;D.Network&lt;/p&gt;
&lt;p&gt;3. 下列选项中，用于配置微信小程序所有的页面地址的文件是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;A. app.js&lt;/p&gt;
&lt;p&gt;B. app.json&lt;/p&gt;
&lt;p&gt;C. app.wxss&lt;/p&gt;
&lt;p&gt;D. project.config.json&lt;/p&gt;
&lt;p&gt;4. 下列选项中，不属于 Flex 布局的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;A.  display:flex;&lt;/p&gt;
&lt;p&gt;B.   flex:1;&lt;/p&gt;
&lt;p&gt;C.   float:left;&lt;/p&gt;
&lt;p&gt;D.  flex-flow:column nowrap;&lt;/p&gt;
&lt;p&gt;5. 下列选项中，关于列表渲染说法正确的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.   wx:for-index 可以用于重新定义当前项的变量名&lt;/p&gt;
&lt;p&gt;B.   在列表渲染中，可以使用 item 变量获取当前项的值&lt;/p&gt;
&lt;p&gt;C.   wx:for 可以用于实现页面中的列表渲染&lt;/p&gt;
&lt;p&gt;D.   wx:for-item 可以用于设置当前索引变量的属性名&lt;/p&gt;
&lt;p&gt;6. 下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. wx:for-i&lt;/p&gt;
&lt;p&gt;B.  wx:for-j&lt;/p&gt;
&lt;p&gt;C.  wx:for-item&lt;/p&gt;
&lt;p&gt;D.  wx:for-index&lt;/p&gt;
&lt;p&gt;7. 下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. stop()&lt;/p&gt;
&lt;p&gt;B. seek()&lt;/p&gt;
&lt;p&gt;C. pause()&lt;/p&gt;
&lt;p&gt;D. play()&lt;/p&gt;
&lt;h1 id=&#34;二填空题-7题214分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二填空题-7题214分&#34;&gt;#&lt;/a&gt; 二。填空题 7 题 * 2=14 分&lt;/h1&gt;
&lt;p&gt;1. 微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。&lt;/p&gt;
&lt;p&gt;2. 微信开发者工具中用于保存文件的快捷键是______。&lt;/p&gt;
&lt;p&gt;3. 在 Flex 布局中， ____属性能够设置项目在主轴方向的排列方式。&lt;/p&gt;
&lt;p&gt;4. 在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。&lt;/p&gt;
&lt;p&gt;5. 在 JS 文件中，通过____ 获取 data-* 自定义属性的值。&lt;/p&gt;
&lt;p&gt;6. 在微信小程序中，页面加载完成后执行的生命周期函数为 ____。&lt;/p&gt;
&lt;p&gt;7. 在 scroll-view 组件中，用  ___ 属性用于设置横向滚动条的位置。&lt;/p&gt;
&lt;p&gt;8. 从本地缓存中异步获取指定 key 的内容使用 ____ 方法。&lt;/p&gt;
&lt;h1 id=&#34;三判断题-8题216分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三判断题-8题216分&#34;&gt;#&lt;/a&gt; 三。判断题 8 题 * 2=16 分&lt;/h1&gt;
&lt;p&gt;1. 在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;2. 通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;3.video 组件专门用于播放音频。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;4. 设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;5. 在 canvas 组件中，canvas-id 属性是其唯一标识符。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;6. 通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;7.openid 是微信小程序的唯一标识。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;8.animation.export () 方法每次调用后仍保留之前的动画操作。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;h1 id=&#34;四程序题-6题424分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四程序题-6题424分&#34;&gt;#&lt;/a&gt; 四。程序题 6 题 * 4=24 分&lt;/h1&gt;
&lt;p&gt;1. 组件的概念及常用组件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!--index.wxml--&amp;gt;

&amp;lt;!--配置状态栏--&amp;gt;
&amp;lt;_____(1.补充导航栏配置) title=&amp;quot;我的主页&amp;quot; back=&amp;quot;&amp;#123;&amp;#123;false&amp;#125;&amp;#125;&amp;quot; color=&amp;quot;blue&amp;quot; background=&amp;quot;#bbf&amp;quot;&amp;gt;
&amp;lt;/navigation-bar&amp;gt;

&amp;lt;!-- 头像区域 --&amp;gt;
&amp;lt;view&amp;gt;
    &amp;lt;view class=&#39;container&#39;&amp;gt;    
        &amp;lt;view class=&amp;quot;top&amp;quot;&amp;gt;        
            &amp;lt;_____(2.补充图片组件) src=&amp;quot;/images/avatar.png&amp;quot; _____(3.补充图片组件属性)=&#39;aspectFit&#39;/&amp;gt;
        &amp;lt;/view&amp;gt;
    &amp;lt;/view&amp;gt;        


&amp;lt;!-- 详细信息区域 --&amp;gt;
&amp;lt;view class=&amp;quot;menu&amp;quot;&amp;gt;
	&amp;lt;view class=&amp;quot;item&amp;quot;&amp;gt;姓名：小丽&amp;lt;/view&amp;gt;
	&amp;lt;view class=&amp;quot;item&amp;quot;&amp;gt;年龄：20&amp;lt;/view&amp;gt;
	&amp;lt;view class=&amp;quot;item&amp;quot;&amp;gt;性别：女&amp;lt;/view&amp;gt;
	&amp;lt;view class=&amp;quot;item&amp;quot;&amp;gt;特长：绘画、书法&amp;lt;/view&amp;gt;
	&amp;lt;view class=&amp;quot;item&amp;quot;&amp;gt;爱好：编程&amp;lt;/view&amp;gt;
	&amp;lt;/view&amp;gt; 16 &amp;lt;/view&amp;gt;
&amp;lt;/view&amp;gt;

&amp;lt;!-- 配置页脚 --&amp;gt;
&amp;lt;view class=&amp;quot;footer&amp;quot; hover-class=&#39;bgc&#39; hover-start-time=&amp;quot;1000&amp;quot; hover-stay-time=&amp;quot;3000&amp;quot;&amp;gt;
    &amp;lt;_____(3.补充文本组件)&amp;gt;想联系我吗？&amp;lt;_____(补充文本组件)&amp;gt;&amp;lt;br/&amp;gt;
    &amp;lt;_____(4.补充单选按钮) value=&amp;quot;&amp;quot;/&amp;gt;发邮箱给我dd@qq.com
    &amp;lt;_____(5.补充按钮组件)&amp;gt;发送&amp;lt;/_____(补充按钮组件)&amp;gt;
&amp;lt;/view&amp;gt;
&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;text&amp;gt;pages/life/life.wxml&amp;lt;/text&amp;gt;
&amp;lt;view class=&amp;quot;vd&amp;quot;
      &amp;lt;view classs=&amp;quot;item&amp;quot;
         &amp;lt;_____(1.补充视频组件) src=&amp;quot;http://127.0.0.1:3000/01.mp4“ poster=&amp;quot;http://127.0.0.1:3000/st2.png” controls=&amp;quot;true&amp;quot; loop=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;!-- autoplay=&amp;quot;true--&amp;gt;
        &amp;lt;/view&amp;gt;
&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2. 页面路径、标签栏、导航栏的配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pages&amp;quot;:[
   //1.配置页面路径
   &amp;quot;_____(补充index路径) &amp;quot;
   &amp;quot;_____(补充info路径) &amp;quot;
   &amp;quot;_____(补充life路径)&amp;quot;
],
&amp;quot;window&amp;quot;:&amp;#123;
  // 2.配置设置导航栏
&amp;quot;_____(补充导航栏标题颜色类型) &amp;quot;:&amp;quot;black&amp;quot;,
&amp;quot;_____(补充背景文本颜色类型) &amp;quot;:&amp;quot;light&amp;quot;. 
&amp;quot;____(补充导航栏背景颜色) &amp;quot;:&amp;quot;#fff&amp;quot;,
&amp;quot;____(补充导航栏文字内容) &amp;quot;:&amp;quot;app.json&amp;quot;
&amp;#125;,
&amp;quot;tabBar&amp;quot;:&amp;#123;
 // 3.配置标签栏
&amp;quot;color&amp;quot;:&amp;quot;#000”，
&amp;quot;_____(补充标签栏选择颜色)&amp;quot;:&amp;quot;blue&amp;quot;,
&amp;quot;_____(补充标签栏边框颜色)&amp;quot;: &amp;quot;black&amp;quot;,
&amp;quot;backgroundColor&amp;quot;:&amp;quot;#eee&amp;quot;,
&amp;quot;list&amp;quot;:[&amp;#123;
&amp;quot;pagePath&amp;quot;:&amp;quot;pages/index/index&amp;quot;
&amp;quot;text&amp;quot;:&amp;quot;首页”，
&amp;quot;iconPath&amp;quot;:&amp;quot;images/invite.png&amp;quot;,
&amp;quot;selectedIconPath&amp;quot;:&amp;quot;images/invite.png&#39;
&amp;#125;.
&amp;#123;
&amp;quot;pagePath&amp;quot;:&amp;quot;pages/info/info&amp;quot;,
&amp;quot;text&amp;quot;:&amp;quot;个人信息” ,
&amp;quot;iconPath&amp;quot;:&amp;quot;images/guest.png&amp;quot;,
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3. 重点：swiper 和 swiper-item 组件的使用方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;view style=&amp;quot;height:50px; text-align: center, padding-top:30px;&amp;quot;&amp;gt;本地生活&amp;lt;/view&amp;gt;

&amp;lt;!--轮播图区域的页面结构--&amp;gt;
// 轮播图
&amp;lt;_____(1.补充滑块视图组件) _____(2.补充是否自动切换)=&amp;quot;true&amp;quot; _____(补充是否面板显示指示点)=&amp;quot;true&amp;quot; _____(补充切换时间间隔)=&amp;quot;3000&amp;quot;&amp;gt;
    &amp;lt;_____(补充滑块内容1)&amp;gt;
        &amp;lt;image src=&amp;quot;/images/swiper00.jpg&amp;quot; /&amp;gt;
    &amp;lt;_____(补充滑块内容1)&amp;gt;  
    
    &amp;lt;_____(补充滑块内容2)&amp;gt;
        &amp;lt;image src=&amp;quot;/images/swiper01.jpg&amp;quot; /&amp;gt;
    &amp;lt;_____(补充滑块内容2)&amp;gt;
    
    &amp;lt;_____(补充滑块内容3)&amp;gt;
        &amp;lt;image src=&amp;quot;/images/swiper02.jpg&amp;quot; /&amp;gt;
    &amp;lt;_____(补充滑块内容3)&amp;gt;
    
&amp;lt;_____(补充滑块视图组件)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;swiper&amp;#123;
    height: 350rpx;
&amp;#125;
swiper image&amp;#123;
    width: 100%;      
    height: 100%;
    &amp;#125;

/* 九宫格 */
.grids&amp;#123;
    display:_____(补充flex布局);
    _____(补充是否项目换行): wrap;
    _____(补充主轴方向): column;
    height:760rpx;
&amp;#125;
.grids .item image &amp;#123;
    width: 70rpx;
    height: 70rpx;
&amp;#125;
.grids .item text &amp;#123; 
    color: #999;
    font-size: 28rpx;
    margin-top: 20rpx; 9 
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. 表单组件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;____(补充表单容器) bindsubmit=&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;text&amp;gt;1 输入文本&amp;lt;/text&amp;gt;
    &amp;lt;____(补充输入框1) type=&amp;quot;____(文本输出)&amp;quot;/&amp;gt;
    &amp;lt;text&amp;gt;2 输入数字&amp;lt;/text&amp;gt;
    &amp;lt;____(补充输入框2) type=&amp;quot;____(数字输出)&amp;quot; placeholder=&amp;quot;数字键盘&amp;quot;/&amp;gt;
    &amp;lt;text&amp;gt;3 输入身份证号码&amp;lt;/text&amp;gt;
    &amp;lt;____(补充输入框3) type=&amp;quot;____(身份证输出)&amp;quot;/&amp;gt;
    &amp;lt;text &amp;gt;4 带小数点的数字键盘&amp;lt;/text&amp;gt;
    &amp;lt;____(补充输入框4) type=&amp;quot;____(小数点输出)&amp;quot;/&amp;gt;
    &amp;lt;text&amp;gt;6 密码&amp;lt;/text&amp;gt;
    &amp;lt;____(补充输入框5) type=&amp;quot;text&amp;quot; password=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;____(补充)&amp;gt;普通按钮&amp;lt;/button&amp;gt;
&amp;lt;button size=&amp;quot;mini&amp;quot;&amp;gt;mini普通按钮&amp;lt;/button&amp;gt;
&amp;lt;button type=&amp;quot;primary&amp;quot;&amp;gt;primary主色调按钮&amp;lt;/button&amp;gt;
&amp;lt;button type=&amp;quot;warn&amp;quot;&amp;gt;warn警告按钮&amp;lt;/button)
&amp;lt;____(单选按钮) value=&amp;quot;&amp;quot;/&amp;gt;单个单选按钮
    &amp;lt;view&amp;gt;互斥按钮&amp;lt;/view&amp;gt;
&amp;lt;____(互斥按钮) bindchange=&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;radio value=&amp;quot;0&amp;quot;/&amp;gt;选择1
    &amp;lt;radio value=&amp;quot;1&amp;quot; checked=&amp;quot;true&amp;quot;/&amp;gt;选择2
&amp;lt;/radio-group&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;五简答题2题1530分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五简答题2题1530分&#34;&gt;#&lt;/a&gt; 五。简答题 2 题 * 15=30 分&lt;/h1&gt;
&lt;p&gt;1. 简述 BackgroundAudioManager 实例的属性和方法。&lt;/p&gt;
&lt;p&gt;2. 简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2024-06-23T04:22:51.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions1/</id>
        <title>数据分析模拟卷1</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/23/Educational/python/Data-analysis/Data-Questions1/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文章为本次模拟试卷！&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一-选择题-20分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-选择题-20分&#34;&gt;#&lt;/a&gt; 一、选择题  20 分&lt;/h1&gt;
&lt;p&gt;1．NumPy 中可以获取数组长度的属性是以下的哪个答案（	）。&lt;/p&gt;
&lt;p&gt;A．dtype&lt;/p&gt;
&lt;p&gt;B．shape&lt;/p&gt;
&lt;p&gt;C．ndim&lt;/p&gt;
&lt;p&gt;D．size&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2．在 NumPy 中创建一个元素均为 0 的数组可以使用（	）函数。&lt;/p&gt;
&lt;p&gt;A．zeros()    B．arange()&lt;/p&gt;
&lt;p&gt;C．linspace()   D．logspace()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;3. 下列用于横向组合数组的函数是 (	)&lt;/p&gt;
&lt;p&gt;A. hstack&lt;/p&gt;
&lt;p&gt;B. hsplit&lt;/p&gt;
&lt;p&gt;C.vstack&lt;/p&gt;
&lt;p&gt;D.vsplit&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4. 使用 Python 进行数据分析时，以下不属于数据可视化模块的是？&lt;br /&gt;
A.Matplotlib&lt;br /&gt;
B.sklearn&lt;br /&gt;
C.seaborn&lt;br /&gt;
D.pyecharts&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;5.Python 中用于数据分析和处理的库是： (	)&lt;/p&gt;
&lt;p&gt;A. NumPy&lt;/p&gt;
&lt;p&gt;B. Pandas&lt;/p&gt;
&lt;p&gt;C. Matplotlib&lt;/p&gt;
&lt;p&gt;D. Scikit-learn&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;6. 以下哪个函数不属于 Pandas 的 DataFrame 对象？ (	)&lt;/p&gt;
&lt;p&gt;A. dropna()   B. sort_values()    C. mean()   D. plot()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;7. 在 Pandas 中，读取 CSV 文件通常使用哪个函数？&lt;/p&gt;
&lt;p&gt;A. pd.read_sql()&lt;/p&gt;
&lt;p&gt;B. pd.read_excel()&lt;/p&gt;
&lt;p&gt;C. pd.read_csv()&lt;/p&gt;
&lt;p&gt;D. pd.read_table()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;8. 以下哪个函数可以实现画布的创建？（     ）&lt;/p&gt;
&lt;p&gt;A. subplots()&lt;/p&gt;
&lt;p&gt;B. add_subplot()&lt;/p&gt;
&lt;p&gt;C. figure()&lt;/p&gt;
&lt;p&gt;D. subplot2grid()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;9. 下列关于 apply () 方法说法正确的是 ( 	)&lt;/p&gt;
&lt;p&gt;A.apply () 方法无法应用于分组操作&lt;/p&gt;
&lt;p&gt;B.apply () 方法作用范围:pandas 中的 Series 和 DataFrame&lt;/p&gt;
&lt;p&gt;C.apply () 方法中不能自定义函数&lt;/p&gt;
&lt;p&gt;D.apply () 方法只能对行、列进行操作&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;10. 下列关于分组聚合的说法错误的是 (	)&lt;/p&gt;
&lt;p&gt;A. 使用 pandas 的 groupby () 方法进行分组时，只能对列进行操作&lt;/p&gt;
&lt;p&gt;B.pandas 分组聚合操作能够实现组内标准化&lt;/p&gt;
&lt;p&gt;C.pandas 聚合时能够使用 agg ()、apply ()、transform () 方法&lt;/p&gt;
&lt;p&gt;D.pandas 分组方法只有一个 groupby () 方法&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;11. 使用 pivot_table 函数制作透视表时可用下列 ( ) 参数设置行分组键。&lt;/p&gt;
&lt;p&gt;A. Index&lt;/p&gt;
&lt;p&gt;B. raw&lt;/p&gt;
&lt;p&gt;C. values&lt;/p&gt;
&lt;p&gt;D. data&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;12. 在下列选项中可以进行主键合并的是 ( 	）&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. append()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;13. 在下列选项中可以进行特征删除的是 (	).&lt;/p&gt;
&lt;p&gt;A.dropna () 方法   B.fllna () 方法&lt;/p&gt;
&lt;p&gt;C.isnull0) 方法   D.notnull () 方法&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;14. 下列关于插值法的说法错误的是 (	)&lt;/p&gt;
&lt;p&gt;A. 常见的插值法有线性插值、多项式插值和样条插值&lt;/p&gt;
&lt;p&gt;B. 线性插值通过求解线性方程得到缺失值&lt;/p&gt;
&lt;p&gt;C. 常见的线性插值有拉格朗日插值和牛顿插值&lt;/p&gt;
&lt;p&gt;D.pandas 中的 interpolate () 法可进行插值操作&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;15. 在下列选项中可以进行哑变量处理的是 (	)&lt;/p&gt;
&lt;p&gt;A.cut 函数&lt;/p&gt;
&lt;p&gt;B. get_cut 函数&lt;/p&gt;
&lt;p&gt;C.dummies 函数&lt;/p&gt;
&lt;p&gt;D. get_dummies 函数&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;16.pyplot 使用 re 配置文件来自定义图形的各种默认属性，用于修改线条上点的形状的 rc 参数名称是 (	)&lt;/p&gt;
&lt;p&gt;A.lines,linewidth&lt;/p&gt;
&lt;p&gt;B.lines.markersize&lt;/p&gt;
&lt;p&gt;C. lines.linestyle&lt;/p&gt;
&lt;p&gt;D. lines.marker&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;17. 下列图形常用于分析各分组数据在总数据中所占比例的是（    )&lt;/p&gt;
&lt;p&gt;A. 折线图&lt;/p&gt;
&lt;p&gt;B. 饼图&lt;/p&gt;
&lt;p&gt;C. 柱形图&lt;/p&gt;
&lt;p&gt;D. 箱线图&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;18.skleam 中用于对特征进行归一化的函数是 (	)&lt;/p&gt;
&lt;p&gt;A.StandardScaler&lt;/p&gt;
&lt;p&gt;B, Normalizer&lt;/p&gt;
&lt;p&gt;C.Binarizer&lt;/p&gt;
&lt;p&gt;D.MinMaxScaler&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;19. 下列关于回归模型评价指标说法不正确的是 (	)&lt;/p&gt;
&lt;p&gt;A. 平均绝对误差的值越接近 0，模型性能越好&lt;/p&gt;
&lt;p&gt;B.R 值越接近 1，模型性能越好&lt;/p&gt;
&lt;p&gt;C. 可解释方差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;D. 均方误差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;20.skleam 转换器的主要方法不包据 (	)&lt;/p&gt;
&lt;p&gt;A. fit()&lt;/p&gt;
&lt;p&gt;B. transform()&lt;/p&gt;
&lt;p&gt;C:fa_transform()&lt;/p&gt;
&lt;p&gt;D, fit_transforms()&lt;/p&gt;
&lt;p&gt;答案： &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;二-简答题-10分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-简答题-10分&#34;&gt;#&lt;/a&gt; 二、简答题            10 分&lt;/h1&gt;
&lt;p&gt;1. 阐述 Numpy 中的两大对象及其特点&lt;/p&gt;
&lt;p&gt;NumPy 提供了 两种基本的对象 red： ndarray 和 ufunc&lt;/p&gt;
&lt;p&gt;ndarray（N-dimensional Array Object）：存储单一数据类型的多维数组。&lt;/p&gt;
&lt;p&gt;特点：多维性、数据存储、维度和形状、向量化操作&lt;/p&gt;
&lt;p&gt;ufunc（Universal Function Object）：能够对数组进行处理的函数。&lt;/p&gt;
&lt;p&gt;特点：向量化操作、广播机制、支持多种数据类型&lt;/p&gt;
&lt;p&gt;2. 简述 Pandas 的数据结构及其特点。&lt;/p&gt;
&lt;p&gt;Pandas 的数据结构有 Series 和 DataFrame&lt;/p&gt;
&lt;p&gt;Series（一维数据）：是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。&lt;/p&gt;
&lt;p&gt;DataFrame 是 pandas 中的一个二维的、大小可变的、可以存储多种类型数据的表格型的数据结构，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。&lt;/p&gt;
&lt;h1 id=&#34;三-分析题-10分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-分析题-10分&#34;&gt;#&lt;/a&gt; 三、分析题  10 分&lt;/h1&gt;
&lt;p&gt;通过对某餐饮企业的数据进行分析，构建客户流失预测模型，对客户的流失进行预测，以便企业及时做出应对措施。画出餐饮企业客户流失预测流程：&lt;/p&gt;
&lt;p&gt;(1) 读取本案例所需的客户信息表和订单详情表。&lt;br /&gt;
(2) 探索客户信息表中年龄、性别与客户流失的关系。&lt;br /&gt;
(3) 查看数据中的重复值情况，并对异常值、缺失值进行处理。&lt;br /&gt;
(4) 构建总用餐次数、距观测窗口 (即以 2016 年 7 月 31 日为结束时间，宽度为两年的时间段) 结束时间的天数、人均销售额、总消费金额 4 个客户流失特征。&lt;br /&gt;
(5) 将数据划分为训练集和测试集，并使用决策树和支持向量机构建客户流失预测模型，对客户流失进行预测。&lt;br /&gt;
(6) 使用精确率、召回率、F1 值评价使用决策树和支持向量机构建的模型的效果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240623115704138.png&#34; alt=&#34;image-20240623115704138&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;四-综合应用题-60分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-综合应用题-60分&#34;&gt;#&lt;/a&gt; 四、综合应用题        60 分&lt;/h1&gt;
&lt;p&gt;1.APP 用户群体划分（聚类）&lt;/p&gt;
&lt;p&gt;在 App 上架前需要收集测试用户或人员的体验数据，分析反馈的数据，从而对 App 进行相应的调整。某研发团队为调查所设计的 App 是否可以上架，统计了 13 万左右测试用户的 App 使用数据，并存储于 “某 App 用户信息数据.csv” 数据集中，部分某 App 用户信息数据如表 1 所示。通过对数据进行聚类，以区分不同的用户群体，从而对不同的群体确定是否分享 App, 进而创造流量价值用户，同时将聚类结果与 “是否点击分享” 特征数据进行对比，评价聚类分析结果。&lt;/p&gt;
&lt;p&gt;表 1 部分某 App 用户信息数据:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;用户名&lt;/th&gt;
&lt;th&gt;在线时  长 (分钟)&lt;/th&gt;
&lt;th&gt;时间所  占比例&lt;/th&gt;
&lt;th&gt;不愿分  享概率&lt;/th&gt;
&lt;th&gt;愿意分  享概率&lt;/th&gt;
&lt;th&gt;是否点  击分享&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;George&lt;/td&gt;
&lt;td&gt;1495736&lt;/td&gt;
&lt;td&gt;0.004093442&lt;/td&gt;
&lt;td&gt;NA&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruth&lt;/td&gt;
&lt;td&gt;832959&lt;/td&gt;
&lt;td&gt;0.002279593&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jack&lt;/td&gt;
&lt;td&gt;1124354&lt;/td&gt;
&lt;td&gt;0.003532150&lt;/td&gt;
&lt;td&gt;-0.50&lt;/td&gt;
&lt;td&gt;0.40&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Joy&lt;/td&gt;
&lt;td&gt;342119&lt;/td&gt;
&lt;td&gt;0.00023350&lt;/td&gt;
&lt;td&gt;1.50&lt;/td&gt;
&lt;td&gt;-1.50&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jessica&lt;/td&gt;
&lt;td&gt;1173979&lt;/td&gt;
&lt;td&gt;0.003212876&lt;/td&gt;
&lt;td&gt;0.32&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(1)    处理某 App 用户信息数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。&lt;/li&gt;
&lt;li&gt;将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。&lt;/li&gt;
&lt;li&gt;将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。&lt;/li&gt;
&lt;li&gt;将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) 构建与用户使用信息相关的特征。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义 to_code 函数，用于对用户名特征首字母进行编码。&lt;/li&gt;
&lt;li&gt;对在线时长特征进行分段处理后生成分段在线时长新特征。&lt;/li&gt;
&lt;li&gt;使用 apply 方法构建首字母编码新特征。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(3) 构建 K-Means 聚类模型。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取构建新特征后的数据集，区分标签和数据。&lt;/li&gt;
&lt;li&gt;构建 K-Means 模型，且聚类数为 2。&lt;/li&gt;
&lt;li&gt;使用 FMI 评价法评价聚类模型性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (1)    处理某 App 用户信息数据集。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;F:\3.homework\大三下\数据分析\实验数据data\某APP用户信息数据.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gbk&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fillna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fillna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 4. 将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;T&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (2) 构建与用户使用信息相关的特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 自定义 to_code 函数，用于对用户名特征首字母进行编码。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;coding &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    coding&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;to_code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 名字全部小写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;  s &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; coding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; coding&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 对在线时长特征进行分段处理后生成分段在线时长新特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;分组后在线时长&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qcut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;在线时长&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; labels&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 使用 apply 方法构建首字母编码新特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户编码&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; to_code&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (3) 构建 K-Means 聚类模型。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_feature &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user_clean&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cluster &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; KMeans&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; fowlkes_mallows_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 读取构建新特征后的数据集，区分标签和数据。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;X&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_feature&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;在线时长&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;在线时长占比&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;分组后在线时长&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_feature&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 构建 K-Means 模型，且聚类数为 2。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;model&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;KMeans&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n_clusters&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 使用 FMI 评价法评价聚类模型性能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fowlkes_mallows_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;labels_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 客户服装尺寸预测&lt;/p&gt;
&lt;p&gt;某淘宝成年女装店铺为了能够给客户推荐合适的成年女装尺寸，构建了相应的尺寸预测模型。目前店铺利用已购买服装客户的数据集 (size_data.csv) 进行模型的训练，其中部分尺寸信息数据如表 1 所示。&lt;/p&gt;
&lt;p&gt;表 1 部分尺寸信息数据&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;体重 (kg)&lt;/th&gt;
&lt;th&gt;年龄 (岁)&lt;/th&gt;
&lt;th&gt;身高 (cm)&lt;/th&gt;
&lt;th&gt;尺寸&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;172.72&lt;/td&gt;
&lt;td&gt;XL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;167.64&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;165.1&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;175.26&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;160.02&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(1) 处理尺码信息数据。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用 read_csv 函数读取 size_data.csv.&lt;/li&gt;
&lt;li&gt;查看数据集大小，并利用 dropna () 方法删除缺失值。&lt;/li&gt;
&lt;li&gt;删除年龄、体重异常值 (年龄小于 18 岁，体重低于 30kg)。&lt;/li&gt;
&lt;li&gt;查看数据异常值和缺失值是否删除成功。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) 构建支持向量机、决策树、随机森林几种分类模型预测客户服装尺寸，为改善模型预测效果，根据原有特征构建新特征。使用实训 1 中预处理后的数据，计算 BMI 值并构建 BML_ range 特征。BMI 计算公式下面所示。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;BMI = 体重 (kg)/ 身高 (m2)&lt;/li&gt;
&lt;li&gt;BMI_range 特征的构建规则如下。&lt;/li&gt;
&lt;li&gt;当 BMI&amp;lt;18.5 时，BMI_range 值为 0。&lt;/li&gt;
&lt;li&gt;当 18.5≤BMI&amp;lt;24 时，BMI_range 值为 1。&lt;/li&gt;
&lt;li&gt;当 24≤BMI-28 时，BMI_range 值为 2。&lt;/li&gt;
&lt;li&gt;当 BMI≥28 时，BMI_range 值为 3。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（3）为了提高客户满意度，需要基于客户基本信息为客户推荐合适的服装尺寸。因此需要使用处理后的数据调用支持向量机、决策树、随机森林分类算法构建模型，预测客户服装尺寸。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;构建 BMI_range 特征。&lt;/li&gt;
&lt;li&gt;构建支持向量机、决策树、随机森林分类模型预测服装尺寸。&lt;/li&gt;
&lt;li&gt;评估支持向量机、决策树、随机森林分类模型效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  warnings&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;warnings&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filterwarnings&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ignore&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 读取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;../data/size_data.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看数据大小&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 删除缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnull&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看是否存在缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dropna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 删除缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnull&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看缺失值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 处理异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理年龄异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_age&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;size_data_age&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理体重异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_weight&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;drop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 重新生成索引&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_weight&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看年龄异常值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看体重异常值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 BMI 特征 (体重 / 身高 **2)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;height&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义 BMI 段函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bmi_range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18.5&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt;  data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt;  data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建 BMI 分段特征列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bmi_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# data 与 target 划分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 训练集与测试集划分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; test_size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random_state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;shuffle&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stratify&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;size_target&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; confusion_matrix&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;precision_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;recall_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;f1_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义评价函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_pre&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;混淆矩阵：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; confusion_matrix&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;labels&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;S&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;M&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;L&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;XL&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 混淆矩阵&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;精确率：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; precision_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 精确率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;召回率：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; recall_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 召回率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F1值：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f1_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# F1 值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 数据标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_train_std &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_test_std &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 SVM 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;svm &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; SVC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;svm &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SVC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 预测训练集结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;svc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; svm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SVM 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;svc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 决策树 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tree &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DecisionTreeClassifier &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; DTC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 训练模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dtc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 评价模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;决策树 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dtc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 随机森林 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RandomForestClassifier &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; RFC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RFC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 训练模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 评价模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;随机森林 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;rfc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <updated>2024-06-23T04:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/20/Educational/python/Data-analysis/Data_analysis_review4/</id>
        <title>数据分析复习（第四章）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/20/Educational/python/Data-analysis/Data_analysis_review4/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;第四章-pandas进行数据预处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-pandas进行数据预处理&#34;&gt;#&lt;/a&gt; 第四章、pandas 进行数据预处理&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/1719038031036.png&#34; alt=&#34;1719038031036&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-堆叠合并数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-堆叠合并数据&#34;&gt;#&lt;/a&gt; 一、堆叠合并数据&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143713236.png&#34; alt=&#34;image-20240622143713236&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;1轴向堆叠合并数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1轴向堆叠合并数据&#34;&gt;#&lt;/a&gt; 1. 轴向堆叠合并数据&lt;/h3&gt;
&lt;p&gt;函数：pandas.concat (参数)，concat 函数主要参数如下，axis 是关键，它用于指定合并的轴是行还是列：&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;objs&lt;/td&gt;
&lt;td&gt;接收多个 Series、DataFrame、Panel 的组合。表示参与连接的 pandas 对象的列表的组合。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 int。表示连接的轴向，可选 0 和 1。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;join&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 str。表示其他轴向上的索引是按交集（inner）还是并集（outer）进行合并。默认为 outer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ignore_index&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否不保留连接轴上的索引，产生一组新索引 range (total_length)。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;keys&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 sequence。表示与连接对象有关的值，用于形成连接轴向上的层次化索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;levels&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收包含多个 sequence 的 list。表示在指定 keys 参数后，指定用作层次化索引各级别上的索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;names&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 list。表示在设置了 keys 和 levels 参数后，用于创建分层级别的名称。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;verify_integrity&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。表示检查新连接的轴是否包含重复项，如果发现重复项，那么引发异常。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;sort&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。表示对非连接轴进行排序。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;横向堆叠：行对齐，然后将不同列名称的两张或多张表合并。索引不同，join 参数用于设置连接可选 inner 或 outer，索引完全相同，join 设置任何值都是直接将两个表在 x 轴向拼接在一起。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143940387.png&#34; alt=&#34;image-20240622143940387&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;纵向堆叠：列对齐，将不同行索引的两张或多张表纵向合并。列名并不完全相同，当 join 参数取值为 inner 时，返回的仅仅是列名的交集所代表的列。当 join 参数取值为 outer 时，返回的是两者列名的并集所代表的列。当两张表的列名完全相同时，不论 join 参数的取值是 inner 还是 outer，结果都是将两个表完全按照&lt;em&gt; y&lt;/em&gt; 轴拼接起来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622143946855.png&#34; alt=&#34;image-20240622143946855&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数：append () 方法，方法主要使用格式及参数如下：&lt;/p&gt;
&lt;p&gt;pandas.DataFrame.append (参数)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;other&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 DataFrame 或 Series。表示要添加的新数据。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ignore_index&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。如果输入 True，那么就会对新生成的 DataFrame 使用新的索引（自动产生），而忽略原来数据的索引。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;verify_integrity&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。如果输入 True，那么当 ignore_index 为 False 时，会检查添加的数据索引是否冲突，若冲突，则会添加失败。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;sort&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。如果输入 True，那么会对合并的两个表的列进行排序。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;用于纵向合并两张表。但是使用 append () 方法实现纵向表堆叠的前提条件是两张表的列名需要完全一致。append () 方法的基本使用格式如下。&lt;/p&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randn&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randn&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#默认 axis=0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#默认 join=&#39;ourter&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;inner&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#默认 join=&#39;ourter&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;join&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;inner&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ignore_index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#axis=0 (纵向)，join=inner（内连接交集），ignore_index=True (重新设置索引)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;2-主键合并数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-主键合并数据&#34;&gt;#&lt;/a&gt; 2、主键合并数据&lt;/h3&gt;
&lt;p&gt;通过一个或多个键将两个数据集的行连接起来，类似于关系型数据库的连接方式中的 join。针对两张包含不同特征的表，将根据某几个特征一一对应拼接起来，合并后数据的列数为两个原数据的列数和减去连接键的数量。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144151012.png&#34; alt=&#34;image-20240622144151012&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144155297.png&#34; alt=&#34;image-20240622144155297&#34; /&gt;&lt;/p&gt;
&lt;p&gt;函数：pandas.merge (参数)，函数主要参数如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;left&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 DataFrame 或 Series。表示要添加的新数据 1。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;right&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 DataFrame 或 Series。表示要添加的新数据 2。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;how&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 “inner”“outer”“left” 或 “right”。表示数据的连接方式。默认为 inner&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;on&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 str 或 sequence。表示两个数据合并的主键（必须一致）。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;left_on&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 str 或 sequence。表示 left 参数接收数据用于合并的主键。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;right_on&lt;/td&gt;
&lt;td&gt;接收 str 或 sequence。表示 right 参数接收数据用于合并的主键。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left_index&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否将 left 参数接收数据的 index 作为连接主键。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;right_index&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否将 right 参数接收数据的 index 作为连接主键。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否根据连接键对合并后的数据进行排序。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;suffixes&lt;/td&gt;
&lt;td&gt;接收 tuple。表示用于追加到 left 和 right 参数接收数据列名相同时的后缀。默认为 (&#39;_x&#39;, &#39;_y&#39;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ctg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;AABCB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ticket&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1001&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1002&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1003&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1004&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1005&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;amount&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;24.1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;34.8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;19.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;26.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;merge&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;how&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;inner&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;on&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;new&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结（综上所述）：&lt;/p&gt;
&lt;p&gt;1、concat 实现的只是将两个 df 按行或者列简单进行拼接，并没有实现 sql 中的 join 功能。&lt;/p&gt;
&lt;p&gt;2、要想实现 sql 中的 join，需要使用 merge 方法。&lt;/p&gt;
&lt;h2 id=&#34;二-pandas清洗数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-pandas清洗数据&#34;&gt;#&lt;/a&gt; 二、Pandas 清洗数据&lt;/h2&gt;
&lt;h3 id=&#34;1-检测与处理重复值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-检测与处理重复值&#34;&gt;#&lt;/a&gt; 1、检测与处理重复值&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144416065.png&#34; alt=&#34;image-20240622144416065&#34; /&gt;&lt;/p&gt;
&lt;p&gt;记录重复，同一列不同数据是否相同：pd.dataframe.drop_duplicates (参数)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;subset&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 str 或 sequence。表示进行去重的列。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;keep&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收特定 str。表示重复时保留第几个数据，“first” 表示保留第一个；“last” 表示保留最后一个；False 表示只要有重复都不保留。默认为 first&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;inplace&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否在原表上进行操作。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ignore_index&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否忽略索引。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;特征重复（不同列之间数据是否相同）：使用 corr 方法计算相似度。&lt;/p&gt;
&lt;p&gt;dataframe.corr (method)，method 方法有：pearson（皮尔森，两组变量中任何一组中的值不能都是相同、同一组中的值不能差距太大，即如果有异常值相关性会干扰）、spearman（斯皮尔曼，根据原始数据的排序位置进行求解，异常值不会干扰）、kendall（肯德尔）秩相关系数，它也是一种秩相关系数，不过它所计算的对象主要是分类变量，比如无序的 --- 性别（男、女）、血型（A、B、O、AB），有序的 --- 比如肥胖等级（重度肥胖，中度肥胖、轻度肥胖、不肥胖）。&lt;/p&gt;
&lt;p&gt;但要注意：只能针对数值型特征计算相似度。无法实现对类别型特征计算相似度矩阵，如果遇到特征值可转换。&lt;/p&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;core &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data\core.xlsx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;以下是pearson（皮尔森)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pearson&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#pearson（皮尔森)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;G&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pearson&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#pearson（皮尔森), 有一个列值相同&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pearson&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#pearson（皮尔森)，有异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;以下是spearman（斯皮尔曼)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;G&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;spearman&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#spearman（斯皮尔曼)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;spearman&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#spearman（斯皮尔曼)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;以下是kendall(肯德尔)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;corr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;kendall&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#kendall (肯德尔)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;2-检测与处理缺失值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-检测与处理缺失值&#34;&gt;#&lt;/a&gt; 2、检测与处理缺失值&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144658241.png&#34; alt=&#34;image-20240622144658241&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（1）缺失（空）值判断：pd.isnull (data)、pd.isna (data) 或 data.isnull ()、data.isna ()&lt;/p&gt;
&lt;p&gt;（2）缺失（空）值处理：&lt;/p&gt;
&lt;p&gt;删除：data.dropna (axis),axis 参数用于设置移除行或列&lt;/p&gt;
&lt;p&gt;替换：data.fillna (value,method)&lt;/p&gt;
&lt;p&gt;methodà’bfill’: 后一个值填充，methodà’ffill’: 前一个值填充&lt;/p&gt;
&lt;p&gt;插值：线性插值，多项式插值，样条插值&lt;/p&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#线性插值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; scipy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interpolate &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; interp1d&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;y1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;162&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;y2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; interp1d&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;y1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;kind&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;linear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; interp1d&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;y2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;kind&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;linear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data1&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;3-检测与处理异常值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-检测与处理异常值&#34;&gt;#&lt;/a&gt; 3、检测与处理异常值&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622144949435.png&#34; alt=&#34;image-20240622144949435&#34; /&gt;&lt;/p&gt;
&lt;p&gt;符合正态分布的值：3σ(大写 Σ) 原则 --- 数据量较大、格拉布斯准则 --- 检验较少数据&lt;/p&gt;
&lt;p&gt;3σ 原则又称为拉依达准则，其原则就是先假设一组检测数据只含有随机误差，对原始数据进行计算处理得到标准差，然后按一定的概率确定一个区间，认为误差超过这个区间就属于异常。&lt;/p&gt;
&lt;p&gt;3σ 原则仅适用于对正态或近似正态分布的样本数据进行处理。正态分布数据的 3σ 原则如下表所示，其中 σ 代表标准差 (std)，μ 代表均值 (mean)。数据的数值分布几乎全部集中在区间 (μ-3σ,μ+3σ) 内，超出这个范围的数据仅占不到 0.3%。故根据小概率原理，可以认为超出 3σ 的部分为异常数据。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145008150.png&#34; alt=&#34;image-20240622145008150&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145011041.png&#34; alt=&#34;image-20240622145011041&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#读取 data\core.xlsx 文件中的数据，使用 3σ 原则分析 D 列是否存在异常值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data\core.xlsx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;out_range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    bool_ind &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mean&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;std&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mean&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;std&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ser1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;arange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;bool_ind&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    outrange &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ser1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; outrange&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;out &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; out_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;离散值：箱线图分析&lt;/p&gt;
&lt;p&gt;箱线图提供了识别异常值的一个标准，即异常值通常被定义为小于 QL-1.5IQR 或大于 QU+1.5IQR 的值。&lt;/p&gt;
&lt;p&gt;・QL 称为下四分位数，表示全部观察值中有四分之一的数据取值比它小；&lt;/p&gt;
&lt;p&gt;・QU 称为上四分位数，表示全部观察值中有四分之一的数据取值比它大；&lt;/p&gt;
&lt;p&gt;・IQR 称为四分位数间距，是上四分位数 QU 与下四分位数 QL 之差，其间包含了全部观察值的一半。&lt;/p&gt;
&lt;p&gt;案例：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#读取 data\core.xlsx 文件中的数据，使用箱线图分析年龄异常值。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  matplotlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyplot &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; plt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data\core.xlsx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;figure&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;figsize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dpi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;160&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boxplot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;outlier1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fliers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_ydata&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;savefig&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data/异常.jpg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;show&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;三-pandas量纲化数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-pandas量纲化数据&#34;&gt;#&lt;/a&gt; 三、Pandas 量纲化数据&lt;/h2&gt;
&lt;p&gt;不同特征往往具有不同的量纲，涉及空间距离计算或使用梯度下降法时，不对数据进行处理可能会影响数据分析结果。为了消除因特征之间的量纲和取值范围差异对数据分析可能造成的影响，保证数据的一致性，需要进行规范化（量纲化）处理。量纲化有很多种方式，但具体应该使用那一种方式，并没有固定的标准，而应该结合数据情况或者研究算法，选择最适合的量纲化处理方式，量纲化处理方法常见的有如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145117940.png&#34; alt=&#34;image-20240622145117940&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-归一化数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-归一化数据&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、&lt;/strong&gt; &lt;strong&gt;归一化数据&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;离差标准化是对原始数据的一种线性变换，结果是将原始数据的数值映射到 [0,1] 区间，转换公式如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145123830.png&#34; alt=&#34;image-20240622145123830&#34; /&gt;&lt;/p&gt;
&lt;p&gt;max 为样本数据的最大值，min 为样本数据的最小值，max-min 为极差。&lt;/p&gt;
&lt;p&gt;离差标准化的缺点：若数值集中某个数值很大，则规范化后各其余值会接近于 0，并且将会相差不大。&lt;/p&gt;
&lt;h3 id=&#34;2-标准差标准化数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-标准差标准化数据&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、&lt;/strong&gt; &lt;strong&gt;标准差标准化数据&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;标准差标准化也叫零均值标准化或分数标准化，是当前使用较为广泛的数据标准化方法，经过该方法处理的数据均值为 0，标准差为 1，转化公式如下式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240622145129617.png&#34; alt=&#34;image-20240622145129617&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中，  为原始数据的均值，&lt;em&gt;d&lt;/em&gt; 为原始数据的标准差。标准差标准化后的值区间不局限于 [0,1]，并且存在负值。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; MinMaxScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;北京&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;-5&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;25&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;18&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                     &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上海&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;-2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;27&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                     &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;广州&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;33&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;25&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                     &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;深圳&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;5&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;35&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;28&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;地区&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;最低气温&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;最高气温&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;最常气温&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#标准差（Z-score) 标准化数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s_scaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;标准差（Z-score)标准化数据:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_scaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit_transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#归一化 (离差）标准化数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;归一化(离差）标准化数据:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_min_scaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MinMaxScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;max_min_scaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit_transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pay &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data/user_pay_info.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义离差标准化函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;min_max_scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 对用户每月支出信息表的每月支出数据做离差标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pay_min_max &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; min_max_scale&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pay&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;每月支出&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;离差标准化之前每月支出数据为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pay&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;每月支出&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;离差标准化之后每月支出数据为\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pay_min_max&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义标准差标准化函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;standard_scaler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mean&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;std&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 对用户每月支出信息表的每月支出数据做标准差标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pay_standard &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; standard_scaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pay&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;每月支出&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;标准差标准化之前每月支出数据为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pay&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;每月支出&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;标准差标准化之后每月支出数据为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pay_standard&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;head&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;两种标准化数据的比较：&lt;/p&gt;
&lt;p&gt;离差标准化方法简单，便于理解，标准化后的数据限定在 [0,1] 区间内。&lt;/p&gt;
&lt;p&gt;标准差标准化受数据分布的影响较小，大于 0 说明高于平均水平，小于 0 说明低于平均水平。&lt;/p&gt;
&lt;h2 id=&#34;四-pandas变换数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-pandas变换数据&#34;&gt;#&lt;/a&gt; 四、Pandas 变换数据&lt;/h2&gt;
&lt;h3 id=&#34;1-哑变量处理类别型数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-哑变量处理类别型数据&#34;&gt;#&lt;/a&gt; 1、哑变量处理类别型数据&lt;/h3&gt;
&lt;p&gt;分析模型中有相当一部分的算法模型都要求输入的特征为数值型，但实际数据中，特征的类型不一定只有数值型，还会存在相当一部分的类别型，这部分的特征需要经过哑变量处理才可以放入模型之中。&lt;/p&gt;
&lt;p&gt;使用 pandas 库的 get_dummies 函数对类别型变量作哑变量处理。&lt;/p&gt;
&lt;p&gt;对于一个类别型特征，若其取值有 m 个，则经过哑变量处理后就变成了 m 个二元特征，并且这些特征互斥，每次只有一个激活，这使得数据变得稀疏。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将特定的数据 转化为 可以使用的数据 --- 数据变换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 两种情况：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 第一种：哑变量转化 -- 利用 pandas 库中的 get_dummies () 函数进行哑变量处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 通常与 PCA（主成分分析）一起使用，即构造哑变量产生高维数据后采用 PCA 进行降维。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# pd.get_dummmies(data,prefix,prefix_sep)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# data : 需要转化的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# prefix: 转化之后列名称的前缀&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1、将年龄列（非数值型）数据 -----&gt; 数值型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data\core.xlsx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;newagedata &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_dummies&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;prefix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 哑变量转化为数值型数据，维度两例，可降维（删除其中一列）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;newagedata &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newagedata&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别__男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;newagedata &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newagedata&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rename&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别__女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2、将城市列（非数值型）数据 -----&gt; 数值型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;newcitydata &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_dummies&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;prefix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;newcitydata&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#哑变量转化为数值型数据，维度太多，降维不好处理。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#（1）Label Encoding 给对应进行编号处理，使用 LabelEncoder () 函数将文本类型的数据转换成数字（随机）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; LabelEncoder&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;le &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LabelEncoder&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;label &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; le&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit_transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;label&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; label&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#（2）pandas 库中的 replace () 函数，按特定内容进行替换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 先利用 value_counts () 函数查看 “城市” 列有哪些内容需要替换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value_counts&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;城市&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;北京&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上海&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;广州&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;深圳&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;佛山&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;2-离散化连续型数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-离散化连续型数据&#34;&gt;#&lt;/a&gt; 2、离散化连续型数据&lt;/h3&gt;
&lt;p&gt;某些模型算法，特别是某些分类算法，如 ID3 决策树算法和 Apriori 算法等，要求数据是离散的。&lt;/p&gt;
&lt;p&gt;此时就需要将连续型特征（数值型）变换成离散型特征（类别型），即连续特征离散化。&lt;/p&gt;
&lt;p&gt;离散化涉及两个子任务，即确定分类数以及如何将连续型数据映射到这些类别型数据上。&lt;/p&gt;
&lt;p&gt;等宽法：利用 pandas 的 cut 函数（将数据的值域分成具有相同宽度的区间，区间的个数由数据本身特点或者用户指定。）&lt;/p&gt;
&lt;p&gt;等频法：cut 函数虽然不能够直接实现等频离散化，但是可以通过定义将相同数量的记录放进每个区间。&lt;/p&gt;
&lt;p&gt;聚类分析法：将连续型数据使用聚类算法（k-means）进行聚类，再处理聚类得到的簇，为合并到一个簇的连续型数据做同一种标记。&lt;/p&gt;
&lt;p&gt;①等宽法缺点：若数据分布不均匀，则等宽 cut 之后各个类的数目也会变得不均匀。&lt;/p&gt;
&lt;p&gt;②等频法缺点：频法离散化，相较于等宽法离散化，避免了类分布不均匀的问题，但同时也有可能将数值非常接近的两个值分到不同的区间以满足每个区间对数据个数的要求。&lt;/p&gt;
&lt;p&gt;③聚类分析法（连续型数据用聚类算法，如 k-means），使用频率高。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;all_info &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;data\user_all_info.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;all_info&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fillna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#等宽离散化 -- 将该列中所有的年龄值按设置的等份平均划分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;age_cut &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;all_info&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;等宽离散化后记录的年龄分布为:\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;age_cut&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value_counts&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#等频离散化 -- 将相同数量的记录放置在每个区间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;same_rate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;quantile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;arange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;age_same_rate &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; same_rate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;all_info&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value_counts&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;等频离散化后记录的年龄分布为:\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;age_same_rate&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#聚类离散化 --- 使用 Kmeans 进行聚类，得到簇，用户指定簇的个数，用于决定生成的区间数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;kmean_cut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cluster &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  KMeans&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    kmodel &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; KMeans&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n_clusters&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#用户指定的簇的个数调用 KMeans 算法标记数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    kmodel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reshape&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#训练数据模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;kmodel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cluster_centers_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sort_values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#输出聚类中心并排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rolling&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mean&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#对相邻两项求中点，作为边界点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#把首末边界点加上&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#调用 cut 函数将标记后的数据离散化处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;  data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;all_info&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dropna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inplace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#将表内年龄列为空的数据删除（inplace = True 表示原表操作）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;age_kmeans &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; kmean_cut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;all_info&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value_counts&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;聚类离散化后记录的年龄分布为:\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;age_kmeans&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2024-06-20T00:01:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program5/</id>
        <title>第五章：微信小程序常用API（下）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program5/"/>
        <content type="html">&lt;p&gt;通过案例的方式讲解微信小程序中常用 API 的使用，主要包括如何使用动画 API 制作动画、如何通过登录 API 实现用户登录、如何调用微信开放能力实现用户头像和昵称的获取、如何通过地图 API 实现地图功能，以及如何通过 WebSocketAPI、SocketTask 实现在线聊天。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;p&gt;学习目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握动画 API，能够完成动画的制作&lt;/li&gt;
&lt;li&gt;熟悉登录流程时序，能够归纳微信小程序的登录流程&lt;/li&gt;
&lt;li&gt;掌握登录 API，能够运用 wxlogin () 方法实现用户登录&lt;/li&gt;
&lt;li&gt;掌握数据缓存 API，能够对数据进行存储、获取和移除等操作&lt;/li&gt;
&lt;li&gt;掌握头像昵称填写功能，能够实现头像选择和昵称填写&lt;/li&gt;
&lt;li&gt;掌握腾讯地图 SDK，能够实现腾讯地图 SDK 的接入和使用&lt;/li&gt;
&lt;li&gt;掌握 map 组件，能够灵活运用 map 组件实现地图效果&lt;/li&gt;
&lt;li&gt;掌握地图 API，能够实现地图中地理位置的获取等功能&lt;/li&gt;
&lt;li&gt;掌握位置 API，自能够实现获取当前地理位置的功能&lt;/li&gt;
&lt;li&gt;掌握路由 API，能够利用路由 API 实现页面跳转&lt;/li&gt;
&lt;li&gt;掌握 WebSocket API，能够成功创建 WebSocket 连接&lt;/li&gt;
&lt;li&gt;学握 SocketTask，能够使用 SocketTask 管理 WebSocket 连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1动画api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1动画api&#34;&gt;#&lt;/a&gt; 1. 动画 API&lt;/h1&gt;
&lt;p&gt;概念：动画 API 用于在微信小程序中完成动画效果的制作。在微信小程序中添加动画效果，可以让页面中的内容动起来。动画效果对浏览者的视觉冲击力远远高于静态画面，更能吸引浏览者。&lt;/p&gt;
&lt;p&gt;动画 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createAnimation () 方法获取 Animation 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var animation = wx.createAnimation(Object  object)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// Animation 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;wx.createAnimation () 方法的常用选项：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;动画持续时间，单位毫秒，默认值为 400 毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timingFunction&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;动画的效果，默认值为 linear&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delay&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;动画延迟时间，单位毫秒，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;transformOrigin&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;设置旋转元素的基本位置，默认值为 50% 50% 0, 这 3 个数字分别表示 x 轴、y 轴和 z 轴的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.createAnimation () 方法的 timingFunction 选项有多个合法值，具体如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;合法值&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;linear&lt;/td&gt;
&lt;td&gt;动画从头到尾的速度是相同的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease&lt;/td&gt;
&lt;td&gt;动画以低速开始，然后加快，在结束前变慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in&lt;/td&gt;
&lt;td&gt;动画以低速开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in-out&lt;/td&gt;
&lt;td&gt;动画以低速开始和结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-out&lt;/td&gt;
&lt;td&gt;动画以低速结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step-start&lt;/td&gt;
&lt;td&gt;动画第一帧就跳至结束状态直到结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step-end&lt;/td&gt;
&lt;td&gt;动画一直保持开始状态，最后一帧跳到结束状态&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Animation 实例的常用方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;rotate(number angle)&lt;/td&gt;
&lt;td&gt;旋转。从原点顺时针旋转一个角度，角度取值范围为 [-180,180]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;export()&lt;/td&gt;
&lt;td&gt;导出动画队列。export () 方法每次调用后会清掉之前的动画操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scale(number s x, number sy)&lt;/td&gt;
&lt;td&gt;缩放。当仅有 sx 参数时，表示在 x 轴、y 轴同时缩放 sx 倍数；如果 sx 和 sx 参数都存在，sx 表示 x 轴缩放倍数，sx 表示 y 轴缩放倍数平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translate(number tx, number ty)&lt;/td&gt;
&lt;td&gt;平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx 和 ty 参数都存在，表示在 x 轴偏移 tx, 单位为 px, 在 y 轴偏移 ty, 单位为 px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;skew(number ax, number ay)&lt;/td&gt;
&lt;td&gt;倾斜。相对 x 轴、y 轴倾斜的角度，角度取值范围为 [-180,180]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step(Object object)&lt;/td&gt;
&lt;td&gt;表示一组动画完成。当调用任意多个动画方法组成一组动画时，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opacity(number value)&lt;/td&gt;
&lt;td&gt;设置透明度，范围为 0∼10∼1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor(string value)&lt;/td&gt;
&lt;td&gt;设置背景色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;width(numberstring value)&lt;/td&gt;
&lt;td&gt;设置宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top(numberlstring value)&lt;/td&gt;
&lt;td&gt;设置 top 值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;动画 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createAnimation () 方法获取 Animation 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var  animation = wx.createAnimation(Object object)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;//  Animation 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：调用 Animation 实例的方法实现动画效果。&lt;/p&gt;
&lt;p&gt;动画 API 的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.js 文件的 Page ({}) 中定义页面初始数据 move。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//move 对象用于保存动画队列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxml 文件编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hello world&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;translate&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;动画&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 绑定事件处理函数为 translate () --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/index/index.js 文件的 Page ({}) 中定义 translate () 函数实现动画效果。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; animation &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createAnimation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;timingFunction&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ease&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  animation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; animation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④完成上述代码后，运行程序，单击 “动画” 按钮后，“hello world” 向右下角平移，单击按钮前后的对比效果图如下。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192447959.png&#34; alt=&#34;image-20240608192447959&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-登录流程时序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-登录流程时序&#34;&gt;#&lt;/a&gt; 2. 登录流程时序&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;登录流程时序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：登录流程时序由微信小程序官方文档提供，通过对登录流程时序的学习，可以完成登录功能的开发。微信官方提供的登录功能可以方便地获取微信提供的用户身份标识，从而使开发者服务器能够识别每个微信小程序用户。&lt;/p&gt;
&lt;p&gt;微信小程序官方文档提供的登录流程时序图如下所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192525712.png&#34; alt=&#34;image-20240608192525712&#34; /&gt;&lt;/p&gt;
&lt;p&gt;用户登录流程的参与角色：&lt;/p&gt;
&lt;p&gt;小程序：用户使用的客户端，即微信小程序。&lt;/p&gt;
&lt;p&gt;开发者服务器：微信小程序的后端服务器，用于为微信小程序用户提供服务。&lt;/p&gt;
&lt;p&gt;微信接口服务：微信为开发者服务器提供的接口。&lt;/p&gt;
&lt;p&gt;登录流程：&lt;/p&gt;
&lt;p&gt;①获取 code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;②将 code 发送给开发者服务器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在获取 code 后，使用 wx.request () 方法将 code 发送给开发者服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;③校验登录凭证&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发者服务器将 appid、appsecret 和 code 发送给微信接口服务进行登录凭证校验，如果校验成功，微信接口服务会返回 session_key、openid、unionid 等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;④开发者服务器自定义登录态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在开发者服务器中为登录成功的用户生成一个 token，然后通过验证 token 的有效性来识别用户的登录状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3登录api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3登录api&#34;&gt;#&lt;/a&gt; 3. 登录 API&lt;/h1&gt;
&lt;p&gt;登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。&lt;/p&gt;
&lt;p&gt;wx.login () 方法的常用选项&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;用户登录凭证（有效期 5 分钟）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：code 即为调用 wx.login () 方法获取的用户登录凭证。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;wx.login () 方法的具体用法&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.login(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    if (res.code) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;//res.code 为登录获取的 code   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      wx.request(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 登录成功之后发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/login&#39;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        method&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;post&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; code&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res.code	&lt;span class=&#34;token comment&#34;&gt;// 设置参数，把 code 传递给服务器&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; else &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 登录失败，在控制台输出错误信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      console.log(&#39;登录失败！&#39; + res.errMsg)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;4数据缓存api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4数据缓存api&#34;&gt;#&lt;/a&gt; 4. 数据缓存 API&lt;/h1&gt;
&lt;p&gt;数据缓存 API 可以实现数据的缓存，从而加快读取数据的速度。在微信小程序中，需要保存一些临时数据时，例如，保存用户登录后获取到的 token， 或保存一些经常需要从服务器中下载的数据，提高微信小程序下次打开时的加载速度。&lt;/p&gt;
&lt;p&gt;常见的数据缓存方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;异步&lt;/td&gt;
&lt;td&gt;wx.setStorage()&lt;/td&gt;
&lt;td&gt;将数据存储在本地缓存指定的 key 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorage()&lt;/td&gt;
&lt;td&gt;从本地缓存中异步获取指定 key 的内容&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageInfo()&lt;/td&gt;
&lt;td&gt;异步获取当前 storage 的相关信息&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.removeStorage(0)&lt;/td&gt;
&lt;td&gt;从本地缓存中移除指定 key 的方法&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;同步&lt;/td&gt;
&lt;td&gt;wx.setStorageSync()&lt;/td&gt;
&lt;td&gt;wx.setStorage () 方法的同步版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageSync()&lt;/td&gt;
&lt;td&gt;wx.getStorage () 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageInfoSync()&lt;/td&gt;
&lt;td&gt;wx.getStorageInfo () 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.removeStorageSync()&lt;/td&gt;
&lt;td&gt;wx.removeStorage (0) 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;存储的最大数据长度：&lt;/p&gt;
&lt;p&gt;单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;wx.setStorage () 方法的常用选项如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;本地缓存中指定的 key, 该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;需要存储的内容，只支持原生类型，Date 及能够通过 JSON.stringify () 序列化的对象，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;异步与同步的区别：&lt;/p&gt;
&lt;p&gt;异步方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不会阻塞当前任务&lt;/li&gt;
&lt;li&gt;异步方法需要通过传入回调函数获取结果&lt;/li&gt;
&lt;li&gt;在发生错误时，异步方法会执行 fail () 回调函数返回错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同步方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步方法名以 Sync 结尾&lt;/li&gt;
&lt;li&gt;同步方法直到处理完之后才能继续向下执行&lt;/li&gt;
&lt;li&gt;同步方法通过返回值获取结果&lt;/li&gt;
&lt;li&gt;在发生错误时，同步方法通过 try...catch 捕获异常来获取错误信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用异步方法存储、获取缓存数据示例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setStorage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 存储缓存数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 本地缓存中指定的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 需要存储的内容（支持对象或字符串）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 接口调用成功的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用失败的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getStorage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 获取缓存数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 本地缓存中指定的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用成功的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用失败的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;5头像昵称填写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5头像昵称填写&#34;&gt;#&lt;/a&gt; 5. 头像昵称填写&lt;/h1&gt;
&lt;p&gt;头像昵称是在用户登录小程序后，显示在页面中的头像和昵称。目前，微信小程序不允许开发者在未获得用户同意的情况下展示用户的头像和昵称，当需要展示时，应使用微信小程序的头像昵称填写功能。&lt;/p&gt;
&lt;p&gt;头像选择的使用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 button 组件的 open-type 属性值设置为 chooseAvatar，当用户选择头像之后，可通过 bindchooseavatar 绑定的事件处理函数获取头像信息的临时路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;昵称填写的使用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 input 组件的 type 属性值设置为 nickname，当用户在此 input 进行输入时，键盘上方会展示用户的微信昵称，用户可以使用该昵称，也可以手动填写昵称。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;演示头像昵称填写功能的使用&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.js 文件中编写页面所需的数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; defaultAvatar &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/images/avatar.png&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;avatarUrl&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; defaultAvatar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//defaultAvatar 默认头像途径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar-wrapper&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;open-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;chooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchooseavatar&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;onChooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;nickname&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;nickname&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;placeholder&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;请输入昵称&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/index/index.wxss 文件中编写样式。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.avatar-wrapper&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.avatar&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.nickname&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 80%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid #000000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④在 pages/index/index.js 文件中编写 onChooseAvatar () 函数，获取头像信息的临时路径。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onChooseAvatar&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; avatarUrl &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; avatarUrl &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在手机中预览微信小程序。首先在微信开发者工具中单击 “预览” 按钮，获得预览二维码，然后用手机中的微信客户端扫描二维码打开微信小程序，初始页面效果如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619105810691.png&#34; alt=&#34;image-20240619105810691&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;6ap函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6ap函数&#34;&gt;#&lt;/a&gt; 6.AP () 函数&lt;/h1&gt;
&lt;p&gt;若要在微信小程序启动、显示、隐藏时执行某些操作，或者在各个页面中需要共享一些数据时，可以通过 App () 函数实现。App () 函数用于注册一个微信小程序，该函数必须在 app.js 文件中调用，且只能调用一次。&lt;/p&gt;
&lt;p&gt;App () 函数的参数是一个对象，通过该对象可以指定应用生命周期回调函数和保存一些共享数据。&lt;/p&gt;
&lt;p&gt;应用生命周期函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用生命周期函数是指微信小程序 “启动→运行→销毁” 期间依次调用的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用生命周期回调函数如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onLaunch()&lt;/td&gt;
&lt;td&gt;监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShow()&lt;/td&gt;
&lt;td&gt;监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onError()&lt;/td&gt;
&lt;td&gt;错误监听函数，微信小程序脚本错误或者 API 调用报错时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onHide()&lt;/td&gt;
&lt;td&gt;监听微信小程序切后台，微信小程序从前台进入后台时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onPageNotFound()&lt;/td&gt;
&lt;td&gt;页面不存在监听函数，微信小程序要打开的页面不存在时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;App 实例的获取：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//getApp () 函数获取微信小程序全局唯一的 App 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 getApp () 函数获取 App 实例之后，可以访问 App 实例的属性或调用 App 实例的方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;定义在 App () 函数的参数 {} 中的方法，可以直接使用 this 获取 App 实例，不必使用 getApp () 函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;7腾讯地图sdk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7腾讯地图sdk&#34;&gt;#&lt;/a&gt; 7. 腾讯地图 SDK&lt;/h1&gt;
&lt;p&gt;腾讯地图 SDK 是一套为开发者提供多种地理位置服务的工具，可以使开发者在自己的应用中加入地图相关的功能，轻松访问腾讯地图服务和数据， 更好地实现微信小程序的地图功能。&lt;/p&gt;
&lt;p&gt;腾讯地图 SDK 的使用步骤分为以下 5 步：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619110214364.png&#34; alt=&#34;image-20240619110214364&#34; /&gt;&lt;/p&gt;
&lt;p&gt;腾讯地图 SDK 的使用方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先引入 SDK 核心类，通过 new QQMapWX () 构造函数创建 QQMapWX 实例；&lt;/li&gt;
&lt;li&gt;然后通过该实例的相关属性和方法实现地点搜索等功能。在这里使用 search () 方法搜索周边兴趣点（Point of Interest，POI）信息，例如 “酒店”“餐饮”“学校” 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;search () 方法的常用选项如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;keyword&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;POI 搜索关键词，默认周边搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;location&lt;/td&gt;
&lt;td&gt;string|object&lt;/td&gt;
&lt;td&gt;位置坐标，默认为当前位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;搜索成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;搜索失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通过示例代码演示腾讯地图 SDK 的使用。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 SDK 核心类，js 文件的位置可自行放置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; QQMapWX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;../../libs/qqmap-wx-jssdk.js&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 QQMapWX 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; qqmapsdk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;QQMapWX&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;填写自己申请的开发者密钥&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 实现逻辑代码的编写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 实现逻辑代码的编写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onShow&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        qqmapsdk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 搜索信息 keyword: &#39; 酒店 &#39;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;保存代码后，控制台中可以看到通过 “酒店” 关键词搜索到的周边 POI 信息。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619110510746.png&#34; alt=&#34;image-20240619110510746&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;8map组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8map组件&#34;&gt;#&lt;/a&gt; 8.map 组件&lt;/h1&gt;
&lt;p&gt;在微信小程序中，map 组件可以为用 户提供地图功能。map 组件可以在页 面中显示地图，并且支持移动、缩放、添加标记点等功能。map 组件通过 &amp;lt;map&amp;gt;&amp;lt; /map &amp;gt; 标签来定义。&lt;/p&gt;
&lt;p&gt;map 组件的常用属性如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;中心经度，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;中心纬度，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scale&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;缩放级别，取值范围为 3~20，默认值为 16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;markers&lt;/td&gt;
&lt;td&gt;Array.&lt;marker&gt;&lt;/td&gt;
&lt;td&gt;标记点数组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-location&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示带有方向的当前定位点，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindregionchange&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;视野发生变化时触发的事件处理函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;markers 数组中的每一项为一个表示标记点的 marker 对象，marker 对象的属性如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;标记点 id，在事件处理函数中通过 id 可以识别当前事件对应的标记点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;经度，浮点数，取值范围为 - 180~180，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;纬度，浮点数，取值范围为 - 90~90，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iconPath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;设置标记点的图标路径，支持网络路径、本地路径、代码包路径，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;标记点名，点击时显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zIndex&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;显示层级&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alpha&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;标记点的透明度，默认值为 1，即无透明，取值范围为 0~1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;width&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;标记点的图标宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;标记点的图标高度&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;marker 标记点的定义：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中为 map 组件添加 markers 属性&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;map&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;myMap&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;markers&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxss 中编写样式，让地图组件占满整个页面&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; absolute&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/index/index.js 文件中定义数据&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;markers&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token literal-property property&#34;&gt;iconPath&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/images/gps.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token literal-property property&#34;&gt;longitude&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;113.324520&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token literal-property property&#34;&gt;latitude&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23.099994&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token comment&#34;&gt;// 标记点 id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token comment&#34;&gt;// 图标路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token comment&#34;&gt;// 经度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token comment&#34;&gt;// 维度（广州市&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;9地图api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9地图api&#34;&gt;#&lt;/a&gt; 9. 地图 API&lt;/h1&gt;
&lt;p&gt;地图 API 可以在 map 组件创建地图完成后，在 JS 文件中对地图进行控制。小 程序中，使用 wx.createMapContext () 方法创建 MapContext（Map 上下文） 实例，然后通过该实例的相关方法来 操作 map 组件。&lt;/p&gt;
&lt;p&gt;MapContext 实例的常用方法如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;getCenterLocation()&lt;/td&gt;
&lt;td&gt;获取当前地图中心的经纬度。返回 GCJ-02 坐标系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;moveToLocation()&lt;/td&gt;
&lt;td&gt;将地图中心移至当前定位点&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MapContext 实例的 getCenterLocation () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;iconPath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图标路径，支持网络路径、本地路径、代码包路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数，通过其参数可以获取 longitude  （经度）和 longitude（纬度）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MapContext 实例的 moveToLocation () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;经度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;纬度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;获取当前地图中心经纬度的示例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 getCenterLocation () 方法获取当前地图中心的经度和纬度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mapCtx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCenterLocation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; longitude &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;longitude &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; latitude &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;latitude &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;longitude&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; latitude&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;10位置api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10位置api&#34;&gt;#&lt;/a&gt; 10. 位置 API&lt;/h1&gt;
&lt;p&gt;位置 API 用于实现获取当前地理位置的功能。在日常生活中，通过地图软件可以实时定位自己或者朋友的位置， 方便出行。微信小程序中，通过调用 wx.getLocation () 方法的 success 回调函数获取定位结果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;对于正式项目，若要使用位置 API，需要在微信小程序管理后台的 “开发管理 - 接口设置” 页面中申请开通，并且还需要在 app.json 文件中添加请求用户隐私信息的声明&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 请求用户隐私信息的声明&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;requiredPrivateInfos&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;getLocation&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;wx.getLocation () 方法的常用选项如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;设为 WGS84 可返回 GPS 坐标，设为 GCJ-02 可  以返回用于微信内置地图查看位置的坐标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.getLocation () 方法的 success () 回调函数的参数是一个对象，该对象的属性如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;纬度，取值范围为 - 90~90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;经度，取值范围为 - 180~180&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speed&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;速度，单位为 m/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;altitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;高度，单位为 m&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.getLocation () 方法的使用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 wx.getLocation () 方法获取当前地理位置的经度和纬度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLocation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;gcj02&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; longitude &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;longitude &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; latitude &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;latitude &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;longitude&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; latitude&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;11路由api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11路由api&#34;&gt;#&lt;/a&gt; 11. 路由 API&lt;/h1&gt;
&lt;p&gt;路由 API 的作用：用于实现页面跳转。&lt;/p&gt;
&lt;p&gt;常用的路由 API 方法：&lt;/p&gt;
&lt;p&gt;wx.navigateTo()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于跳转到另一个页面，跳转←后原来的页面会保留，并在导 “航栏左侧提供一个返回按钮，用户可以返回到之前的页面。该方法不能用于标签页切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wx.redirectTo()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于关闭当前页面，跳转到一←众新页面。该方法不能用于标 &amp;lt; 签页切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wx.switchTab()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于跳转到某个标签页，并关 &amp;lt; 团其他所有非标签页的页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由 API 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;需要跳转的路径，路径后可以带参数。参数与路径之间使用 “?” 分隔，参数键与参数值用 “=” 相连，不同参数用 “&amp;amp;” 分隔，如  &#39;path?key=value&amp;amp;key2=value2&#39;，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;路由 API 的使用&lt;/p&gt;
&lt;p&gt;①在 pages/index/index:wxml 文件中编写一见点击按钮时触发、navigateTo () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;button bindtapnavigateTo 路由&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;绑定事件处理函数为 navigateTo ()&lt;/p&gt;
&lt;p&gt;②在 app.json 文件中创建 pages/list/list 页面，然后在 pages/index/index.js&lt;/p&gt;
&lt;p&gt;文件中编写 navigateTo () 函数，实现跳转到 pages/list/list 页面&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;navigateTo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;navigateTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/pages/list/list?id=1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;跳转成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;跳转完成&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/list/list.js 文件中编写 onLoad () 函数，输出 options 参数的值&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④保存上述代码后，运行程序，单击 “路由” 按钮后，在控制台中输出结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619112021773.png&#34; alt=&#34;image-20240619112021773&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过查看控制台中的结果，可以看出从 index 页面成功跳转到 list 页面，并传递了参数 id。&lt;/p&gt;
&lt;h1 id=&#34;12websocket-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12websocket-api&#34;&gt;#&lt;/a&gt; 12.WebSocket API&lt;/h1&gt;
&lt;p&gt;WebSocket API：允许服务器主动向微信小程序发送消息。&lt;/p&gt;
&lt;p&gt;WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议，它会在客户端与服务器之间专门建立一条通道，使客户端与服务器之间的数据交换变得简单。客户端与服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。&lt;/p&gt;
&lt;p&gt;通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接，该方法的常用选项如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器 WSS 接口地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP Header, Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.connectSocket () 方法的使用&lt;/p&gt;
&lt;p&gt;调用 wx.connectSocket () 方法创建 WebSocket 连接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wx.connectSocket(&amp;#123;
  // 服务器地址
  url: &#39;ws://127.0.0.1:3000&#39;      	
&amp;#125;)   
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;13sockettask&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13sockettask&#34;&gt;#&lt;/a&gt; 13.SocketTask&lt;/h1&gt;
&lt;p&gt;当项目中同时存在多个 WebSocket 的连 接 时 ， 使 用 SocketTask 管 理 WebSocket 连接，会使每一条链路的生命周期都更可控。而使用 wx 对象的方法可能会出现一些与预期不一致的情况。&lt;/p&gt;
&lt;p&gt;SocketTask 实例的创建&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//ws1 是一个 SocketTask 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; ws1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connectSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ws://127.0.0.1:3000&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;SocketTask 实例的常用方法如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;send()&lt;/td&gt;
&lt;td&gt;通过 WebSocket 连接发送数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;close()&lt;/td&gt;
&lt;td&gt;关闭 WebSocket 连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onOpen()&lt;/td&gt;
&lt;td&gt;监听 WebSocket 连接打开事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onClose()&lt;/td&gt;
&lt;td&gt;监听 WebSocket 连接关闭事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onError()&lt;/td&gt;
&lt;td&gt;监听 WebSocket 错误事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onMessage()&lt;/td&gt;
&lt;td&gt;监听 WebSocket 连接接收到服务器的消息事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;SocketTask 实例的 send () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;string/ArrayBuffer&lt;/td&gt;
&lt;td&gt;需要发送的内容，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;SocketTask 实例的 close () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;一个数字值，即关闭连接的状态号，表示连接被关闭的原因。默认值为 1000，表示正常关闭连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reson&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;一个可读的字符串，表示连接被关闭的原因&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;一个数字值，即关闭连接的状态号，表示连接被关闭的原因。默认值为 1000，表示正常关闭连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reson&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;一个可读的字符串，表示连接被关闭的原因&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;SocketTask 实例的 onOpen () 方法的属性如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;连接成功的 HTTP 响应 header&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;profile&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;网络请求过程中一些调试信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;SocketTask 的使用：&lt;/p&gt;
&lt;p&gt;n 创建 WebSocket 连接、监听 WebSocket 连接打开事件、监听 WebSocket 接收到服务器的消息事件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 WebSocket 连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; ws1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connectSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听 WebSocket 连接打开事件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ws1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onOpen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听 WebSocket 接收到服务器的消息事件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ws1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建 WebSocket 连接&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; ws1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connectSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ws://127.0.0.1:3000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 本地服务器地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 连接成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;resConnect&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resConnect&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 连接失败&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;resConnectError&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resConnectError&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;监听 WebSocket 连接打开事件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ws1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onOpen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ws1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;123&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;resSend&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resSend&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;resSendError&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resSendError&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;监听 WebSocket 接收到服务器的消息事件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ws1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <updated>2024-06-19T02:49:27.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program4/</id>
        <title>第四章：微信小程序常用API（上）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/19/Educational/WeChat/WeChat_Program4/"/>
        <content type="html">&lt;p&gt;微信小程序为开发者提供了大量的 API。开发者通过 API 可以获得微信底层封装的高级特性， 同时可以很方便地调用微信提供的各种能力，例如网络请求、获取用户信息、本地存储等 能力。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;p&gt;学习目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握 scroll-view 组件，能够完成视图区域的横向滚动或者纵向滚动&lt;/li&gt;
&lt;li&gt;掌握 slider 组件，能够运用 slider 组件完成滑动选择器的制作&lt;/li&gt;
&lt;li&gt;掌握 &amp;lt;include&amp;gt; 标签，能够运用 &amp;lt; include &amp;gt; 标签引用其他文件中的代码&lt;/li&gt;
&lt;li&gt;掌握背景音频 API，能够运用背景音频 API 实现音频后台播放、音频暂停等功能&lt;/li&gt;
&lt;li&gt;掌握录音 API，能够运用录音 API 实现录音功能&lt;/li&gt;
&lt;li&gt;掌握音频 API，能够运用音频 API 实现音频播放、暂停等功能&lt;/li&gt;
&lt;li&gt;掌握选择媒体 API，能够运用 wx.chooseMedia () 方法选择图片或视频&lt;/li&gt;
&lt;li&gt;掌握图片预览 APIreviewlmage () 方法预览图片&lt;/li&gt;
&lt;li&gt;掌握文件上传 API，能够实现将本地资源上传到服务器中&lt;/li&gt;
&lt;li&gt;能够运用 wx.downloadFile0) 方法实现资源文件的下载掌握文件下载 API&lt;/li&gt;
&lt;li&gt;掌握 canvas 组件，能够灵活运用 canvas 组件创建画布&lt;/li&gt;
&lt;li&gt;掌握画布 API，能够运用画布 API 完成图形的绘制&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1scroll-view&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1scroll-view&#34;&gt;#&lt;/a&gt; 1.scroll-view&lt;/h1&gt;
&lt;p&gt;当一个容器中的内容有很多时，如果容器无法完整显示内容，则可以通过滚动操作来查看完整内容。&lt;/p&gt;
&lt;p&gt;在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动， 默认是不滚动的， 需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。&lt;/p&gt;
&lt;p&gt;scroll-view 组件的常用属性如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;scroll-x&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;允许横向滚动，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-y&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;允许纵向滚动，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-top&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;设置竖向滚动条的位置，默认值为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-left&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;设置横向滚动条的位置，默认值为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-into-view&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;当前可在哪个方向滚动，则在哪个方向滚动到该  元素。值为某子元素 id（id 不能以数字开头）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-with-animation&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;在设置滚动条位置时是否使用动画过渡，默认值  为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscrolltoupper&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动到顶部 / 左边时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscrolltolower&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动到底部 / 右边时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscroll&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;允许横向滚动、纵向滚动后， 还需要使 scroll- view 组件中内容的宽度和高度大于 scroll-view 组件本身的宽度和高度，这样才能滚动。&lt;/p&gt;
&lt;p&gt;在实际开发中，由于 scroll-view 组件的默认宽度为 100%，会占满整个屏幕，所以当内容的宽度超出屏幕宽度显示范围时，即可横向滚动。&lt;/p&gt;
&lt;p&gt;若要实现纵向滚动，则需要在样式中为 scroll-view 组件设置一个固定高度，否则 scroll-view 组件会被内容撑大，导致无法纵向滚动。&lt;/p&gt;
&lt;p&gt;scroll-view 组件的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scroll-view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scroll-x&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scroll-y&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindscroll&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;scroll&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;linear-gradient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to bottom right&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; yellow&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;scroll-view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- scroll-view 组件设置了允许横向滚动和纵向滚动。--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中添加 scroll () 事件处理函数输出 e.detail 的值。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;scroll&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过 e.detail 获取滚动时的位置信息。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;拖曳滚动条使 scroll () 函数执行，然后在控制台中查看输出结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608190115198.png&#34; alt=&#34;image-20240608190115198&#34; /&gt;&lt;/p&gt;
&lt;p&gt;e.detail 为自定义事件所携带的数据，下面对上图中获取到的信息进行讲解，具体如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scrollLeft：横向滚动条左侧到视图左边的距离。&lt;/li&gt;
&lt;li&gt;scrollTop：纵向滚动条上端到视图顶部的距离。&lt;/li&gt;
&lt;li&gt;scrollHeight：纵向滚动条在 Y 轴上最大滚动距离。&lt;/li&gt;
&lt;li&gt;scrollWidth：横向滚动条在 X 轴上最大的滚动距离。&lt;/li&gt;
&lt;li&gt;deltaX：横向滚动条的滚动状态。&lt;/li&gt;
&lt;li&gt;deltaY：纵向滚动条的滚动状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2slider组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2slider组件&#34;&gt;#&lt;/a&gt; 2.slider 组件&lt;/h1&gt;
&lt;p&gt;在微信小程序中，通过 slider 组件可以定义一个滑动选择器。&lt;/p&gt;
&lt;p&gt;slider 组件是微信小程序表单组件中的一种， 用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。&lt;/p&gt;
&lt;p&gt;slider 组件的常用属性如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;min&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;最小值，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;最大值，默认值为 100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;步长，取值大于 0，可被 max-min 整除，默认值为 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;当前取值，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;activeColor&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;已选择的颜色，默认值为 #1aad19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;背景条的颜色，默认值为 #e9e9e9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;block-size&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;滑块的大小，取值范围为 12~28，默认值为 28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;block-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;滑块的颜色，默认值为 #ffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-value&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示当前值，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindchange&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;完成一次拖曳后触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindchanging&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;拖曳过程中触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;slider 组件的使用&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;slider&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchanging&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sliderChanging&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;show-value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 当拖曳 slider 组件的滑块时，会执行 sliderChanging () 事件处理函数 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过设置 show-value 属性可将当前值显示出来 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中编写事件处理函数 sliderChanging ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;sliderChanging&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//e.detail.value 表示当前 slider 组件的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;保存代码后，会看到页面中显示了一个滑动选择器。拖曳滑块到 13 的页面效果&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608190317944.png&#34; alt=&#34;image-20240608190317944&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在控制台中可以看到 sliderChanging () 函数执行时输出的当前 slider 值如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619101313690.png&#34; alt=&#34;image-20240619101313690&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-include标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-include标签&#34;&gt;#&lt;/a&gt; 3.&amp;lt;include&amp;gt; 标签&lt;/h1&gt;
&lt;p&gt;&amp;lt;include&amp;gt; 标签用于引用其他文件的代码， 相当于把引用的代码复制到 &amp;lt; include &amp;gt; 标签的位置。&lt;/p&gt;
&lt;p&gt;&amp;lt;include&amp;gt; 标签的用途主要有以下两点，具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当一个 WXML 页面中的代码过多时，会给代码的维护带来麻烦，有时为了找到某一处代码可能需要翻阅几百行。这时可以利用 &amp;lt;include&amp;gt; 标签将代码拆分到多个文件中，从而可以更方便地查找代码。&lt;/li&gt;
&lt;li&gt;当多个 WXML 页面中有相同的部分时，可以将这些公共部分抽取出来，保存到一个单独的 WXML 文件中，然后在用到的地方通过 &amp;lt;include&amp;gt; 标签引入。这样可以减少重复的代码，并且修改时只需要修改一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;include&amp;gt; 标签的使用案例：&lt;/p&gt;
&lt;p&gt;假设在 index.wxml 文件中，页面的头部和尾部是公共部分，可将头部代码抽取到 header.wxml 文件中、尾部代码抽取到 footer.wxml 文件中，然后在 index.wxml 文件中使用&lt;include&gt;标签进行引入。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- index.wxml --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;include&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;header.wxml&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;body&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;include&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;footer.wxml&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/header.wxml 文件中编写头部的页面结构&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;header&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/footer.wxml 文件中编写尾部的页面结构&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;footer&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当上述代码运行后，实际得到的 pages/index/index.wxml 文件的页面结构如下所示&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;header&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;body&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;footer&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4背景音频api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4背景音频api&#34;&gt;#&lt;/a&gt; 4. 背景音频 API&lt;/h1&gt;
&lt;p&gt;在微信小程序中，使用背景音频 API 可以实现音频的后台播放&lt;/p&gt;
&lt;p&gt;在使用背景音频 API 前，需要在 app.json 文件中配置 requiredBackgroundModes 属性，开启微信小程序后台音频播放功能，示例代码如下。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;requiredBackgroundModes&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;audio&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;//requiredBackgroundModes 属性值为数组类型，在数组中添加 audio 项表示开启后台音频播放功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;背景音频 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.getBackgroundAudioManager () 方法获取到一个 BackgroundAudioManager 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioGbam =  wx.getBackgroundAudioManager()  &lt;span class=&#34;token comment&#34;&gt;//BackgroundAudioManager 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 BackgroundAudioManager 实例的相关属性和方法实现背景音频的播放。&lt;/p&gt;
&lt;p&gt;BackgroundAudioManager 实例常用的属性和方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;** 类型                                                            **&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频的数据源，默认值为空字符串，当设置了新的 src 时，会自动开始播放，目前支持的格式有 M4A、AAC、MP3、WAV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;startTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频开始播放的位置（单位：秒）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;title&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频标题，用于原生音频播放器的背景音频标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;playbackRate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;播放速率，范围 0.5∼2.00.5∼2.0 倍，默认值为 1 倍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;duration&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前背景音频的长度（单位：秒），只有在有合法 src 时有效（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;currentTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前背景音频的播放位置（单位：秒），只有在有合法 src 时有效（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;paused&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前是否暂停或停止（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;play()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;播放背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;pause()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;暂停背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;seek()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;跳转到指定位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;stop()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;停止背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onCanplay()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频进入可以播放状态的事件（参数为回调函数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onWaiting()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频加载中事件，当背景音频因为数据不足需要停下来加载时会触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onError()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放错误事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onPlay()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onPause()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频暂停事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onSeeking()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频开始跳转操作事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onSeeked()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频完成跳转操作事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onEnded()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频自然播放结束事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onStop()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频停止事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onTimeUpdate()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放进度更新事件，只有微信小程序在前台时会回调&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;背景音频 API 的使用案例：&lt;/p&gt;
&lt;p&gt;在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onReady&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 创建 BackgroundAudioManager 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBackgroundAudioManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 当开始播放音乐时，输出调试信息     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onPlay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;开始播放&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置背景音频的标题     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;音乐标题&#39;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置背景音频的资源地址     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;src &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://127.0.0.1:3000/1.mp3&#39;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;5录音api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5录音api&#34;&gt;#&lt;/a&gt; 5. 录音 API&lt;/h1&gt;
&lt;p&gt;录音功能在日常生活中使用很广泛，使用该功能可以记录重要的工作内容、优美的歌声等。那么在微信小程序中如何实现录音功能呢？微信小程序为开发者提供了录音 API。&lt;/p&gt;
&lt;p&gt;录音 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.getRecorderManager () 方法获取到一个 RecorderManager 实例，该实例是一个全局唯一的录音管理器，用于实现录音功能；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var recorderManager =  wx.getRecorderManager()  &lt;span class=&#34;token comment&#34;&gt;//RecorderManager 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 RecorderManager 实例的方法实现录音功能。&lt;/p&gt;
&lt;p&gt;RecorderManager 实例的常用方法如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方法名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start()&lt;/td&gt;
&lt;td&gt;开始录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pause()&lt;/td&gt;
&lt;td&gt;暂停录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resume()&lt;/td&gt;
&lt;td&gt;继续录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stop()&lt;/td&gt;
&lt;td&gt;停止录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onStart()&lt;/td&gt;
&lt;td&gt;监听录音开始事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onResume()&lt;/td&gt;
&lt;td&gt;监听录音继续事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onPause()&lt;/td&gt;
&lt;td&gt;监听录音暂停事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onStop()&lt;/td&gt;
&lt;td&gt;监听录音结束事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onFrameRecord&lt;/td&gt;
&lt;td&gt;监听已录制完指定帧大小的文件事件。如果设置了 frameSize, 则会回调此事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onError()&lt;/td&gt;
&lt;td&gt;监听录音错误事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onInterruptionBegin&lt;/td&gt;
&lt;td&gt;监听录音因为系统占用而被中断开始事件。以下场景会触发此事件：微信语音聊天、微信视频聊天，此事件触发后，录音会被暂停。pause 事件在此事件后触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onInterruptionEnd&lt;/td&gt;
&lt;td&gt;监听录音中断结束事件。在收到 interruptionBegin 事件后，微信小程序内所有录音会暂停，收到此事件之后才可再次录音成功&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;录音 API 的使用案例：&lt;/p&gt;
&lt;p&gt;在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取全局唯一的录音管理器 RecorderManager  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; recorderManager &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRecorderManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听录音开始事件  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;录音开始&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听录音停止事件  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onStop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;录音停止&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFilePath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 开始录音  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 5 秒后自动停止录音  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;6音频api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6音频api&#34;&gt;#&lt;/a&gt; 6. 音频 API&lt;/h1&gt;
&lt;p&gt;在微信小程序中，除了背景音频 API 可以实现播放音频的功能外，还可以通过音频 API 来播放音乐。&lt;/p&gt;
&lt;p&gt;背景音频 API 与音频 API 的区别在于背景音频 API 支持后台播放，而音频 API 不支持后台播放。&lt;/p&gt;
&lt;p&gt;音频 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createInnerAudioContext () 方法获取到一个 InnerAudioContext 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioCtx =  wx.createInnerAudioContext()  &lt;span class=&#34;token comment&#34;&gt;//InnerAudioContext 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 InnerAudioContext 实例的属性和方法实现音频播放功能。&lt;/p&gt;
&lt;p&gt;InnerAudioContext 实例常用的属性和方法与 BackgroundAudioManager 实例常用的属性和方法相同，但是 InnerAudioContext 实例没有 title 属性。InnerAudioContext 实例特有的属性和方法如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;默认值&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;是否自动开始播放，默认值为 false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;loop&lt;/td&gt;
&lt;td&gt;是否循环播放，默认值为 false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;volume&lt;/td&gt;
&lt;td&gt;音量，范围 0∼10∼1 , 默认值为 1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;destroy()&lt;/td&gt;
&lt;td&gt;销毁当前实例&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;音频 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 InnerAudioContext 实例  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioCtx =  wx.createInnerAudioContext()  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置音频资源地址  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audioCtx.src =  &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/1.mp3&#39;  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 当开始播放音频时，输出调试信息  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audioCtx.onPlay(() =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console.log(&#39;开始播放&#39;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)  &lt;span class=&#34;token comment&#34;&gt;// 开始播放  audioCtx.play ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;7媒体api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7媒体api&#34;&gt;#&lt;/a&gt; 7. 媒体 API&lt;/h1&gt;
&lt;p&gt;微信小程序提供了选择媒体 API，其用于选择图片或视频，一般用于上传头像、上传照片和上传视频等功能中。&lt;/p&gt;
&lt;p&gt;通过调用 wx.chooseMedia () 方法即可使用选择媒体 API，该方法执行后，会提示用户拍摄图片或视频，或从手机相册中选择图片或视频。&lt;/p&gt;
&lt;p&gt;wx.chooseMedia () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;最多可以选择的文件个数，默认值为 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mediaType&lt;/td&gt;
&lt;td&gt;Array.&amp;lt; string&amp;gt;&lt;/td&gt;
&lt;td&gt;文件类型，默认值为 [&#39;image&#39;, &#39;video&#39;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sourceType&lt;/td&gt;
&lt;td&gt;Array.&amp;lt; string&amp;gt;&lt;/td&gt;
&lt;td&gt;图片和视频选择的来源，默认值为 [&#39;album&#39;, &#39;camera&#39;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maxDuration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;拍摄视频最长拍摄时间，单位秒。时间范围为 3~60 秒之间。  不限制相册，默认值为 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;camera&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;仅在 sourceType 为 camera 时生效，可设置使用前置或后置  摄像头，默认值为 back&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;mediaType 选项的合法值有 3 个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image（只能拍摄图片或从相册选择图片）；&lt;/li&gt;
&lt;li&gt;video（只能拍摄视频或从相册选择视频）；&lt;/li&gt;
&lt;li&gt;mix（可同时选择图片和视频）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sourceType 选项的合法值有 2 个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;album（从相册选择）；&lt;/li&gt;
&lt;li&gt;camera（使用相机拍摄）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;媒体 API 的使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;选择图片&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为按钮绑定了 test () 函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中编写事件处理函数 test ()&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chooseMedia&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 最多可以选择 9 个文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;mediaType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;image&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 文件类型为只能拍摄图片或从相册中选图片 s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;ourceType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;album&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;camera&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 图片来源为从相册选择和使用相机拍摄 success (res) &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 获取用户选择的文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; tempFilePath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFiles&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFilePath&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tempFilePath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;8图片预览api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8图片预览api&#34;&gt;#&lt;/a&gt; 8. 图片预览 API&lt;/h1&gt;
&lt;p&gt;微信小程序提供了图片预览 API，通过图片预览 API 可以预览图片，且在预览过程中用户可以进行保存图片、发送给朋友等操作。&lt;/p&gt;
&lt;p&gt;通过调用 wx.previewImage () 方法即可使用预览图片 API。&lt;/p&gt;
&lt;p&gt;wx.previewImage () 方法的常用选项如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;urls&lt;/td&gt;
&lt;td&gt;Array.&amp;lt; string&amp;gt;&lt;/td&gt;
&lt;td&gt;需要预览的图片链接，为必填项，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;showmenu&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示长按菜单，默认值为 true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;current&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;当前显示图片的链接，默认值为 urls 的第一张&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;urls 选项支持 http 或者 https 协议的网络图片地址，如果使用本地图片进行预览，会出现黑屏加载不出图片的情况。&lt;/p&gt;
&lt;p&gt;通过 wx.previewImage () 方法预览图片：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中定义页面所需的数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://127.0.0.1:3000/tree.jpg&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;定义了 url 属性，表示图片地址，该图片来自本地服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;image src&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt; bindtap&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;previewImage&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为 image 组件绑定 tap 事件，事件处理函数为 previewImage () 函数， 点击按钮可实现图片的预览&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中添加 previewImage () 函数，实现图片的预览&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;previewImage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;previewImage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url	&lt;span class=&#34;token comment&#34;&gt;// 需要预览的图片链接列表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;运行程序，单击图片前后的对比如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619103622537.png&#34; alt=&#34;image-20240619103622537&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;9文件上传api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9文件上传api&#34;&gt;#&lt;/a&gt; 9. 文件上传 API&lt;/h1&gt;
&lt;p&gt;在生活中，经常需要进行文件上传操作，例如更改头像需要将新的头像上传到服务器中。微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。&lt;/p&gt;
&lt;p&gt;wx.uploadFile () 方法的常用选项：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器地址，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP 请求的 Header, Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;文件对应的 key, 开发者在服务器端可以通过这个 key 获取文件的二进制内容，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filePath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;要上传的文件资源的路径（本地路径），该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（接口调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;文件上传 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.uploadFile(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      filePath&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;文件路径&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;image&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/upload&#39;,   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          console.log(res)   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;10下载api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10下载api&#34;&gt;#&lt;/a&gt; 10. 下载 API&lt;/h1&gt;
&lt;p&gt;在生活中，经常需要下载一些文件，例如将网络中某个参考资料下载到本地进行查看。&lt;/p&gt;
&lt;p&gt;微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。&lt;/p&gt;
&lt;p&gt;wx.downloadFile () 方法的常用选项如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;下载资源 url, 该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP 请求的 Header,Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filePath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定文件下载后存储的路径（本地路径）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（接口调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;文件下载 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.downloadFile(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/tree.jpg&#39;,   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 判断服务器响应的状态码    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        if (res.statusCode === &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console.log(res.tempFilePath)    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;11canvas组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11canvas组件&#34;&gt;#&lt;/a&gt; 11.canvas 组件&lt;/h1&gt;
&lt;p&gt;在 HTML 中，&amp;lt;canvas&amp;gt; 标签可用于图形的绘制，也可用于创建图片特效和动画。在微信小程序中，canvas 组件也起着类似作用，可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。&lt;/p&gt;
&lt;p&gt;canvas 组件的常用属性如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定 canvas 组件的类型，支持 2D 和 WebGL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canvas-id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable-scroll&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchstart&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchmove&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸后移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchend&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchcancel&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作被打断，例如来电提醒，弹窗等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindlongtap&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binderror Grill&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当发生错误时触发 error 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;canvas 组件的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;canvas&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;myCanvas&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2d&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;canvas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas 2D 接口。 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxss 文件中编写 canvas 组件的页面样式。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#myCanvas&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 300px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 150px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; relative&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为了方便查看默认 canvas 组件的大小，设置了 1px 的红色实心边框，页面效果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191216979.png&#34; alt=&#34;image-20240608191216979&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;12画布api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12画布api&#34;&gt;#&lt;/a&gt; 12. 画布 API&lt;/h1&gt;
&lt;p&gt;概念：通过 canvas 组件创建画布后，要想在画布中绘制图案，需要通过画布 API 来完成。&lt;/p&gt;
&lt;p&gt;画布 API 的使用方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步：获取 Canvas 实例；&lt;/li&gt;
&lt;li&gt;第二步：通过 Canvas 实例获取 RenderingContext（渲染上下文）实例；&lt;/li&gt;
&lt;li&gt;第三步：通过 RenderingContext 实例的属性和方法完成绘图操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;获取 Canvas 实例的示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.createSelectorQuery()  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.select(&#39;#myCanvas&#39;)             &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 页面中 &amp; lt;canvas &gt; 标签的 id  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.fields(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; node&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.exec(res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取 Canvas 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    const canvas = res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;.node     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 调用 getContext () 方法获取 RenderingContext 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    const ctx = canvas.getContext(&#39;2d&#39;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;RenderingContext 实例的常用属性和方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;width&lt;/td&gt;
&lt;td&gt;画布宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;画布高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;fillStyle&lt;/td&gt;
&lt;td&gt;设置或返回用于填充绘画的颜色、渐变或模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;strokeStyle&lt;/td&gt;
&lt;td&gt;设置描边颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;lineWidth&lt;/td&gt;
&lt;td&gt;设置或返回当前的线条宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;font&lt;/td&gt;
&lt;td&gt;设置或返回文本内容的当前字体属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;textBaseline&lt;/td&gt;
&lt;td&gt;设置或返回在绘制文本时使用的当前文本基线&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;方法表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;rect()&lt;/td&gt;
&lt;td&gt;创建矩形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;fillRect()&lt;/td&gt;
&lt;td&gt;绘制 “被填充” 的矩形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;strokeRect()&lt;/td&gt;
&lt;td&gt;绘制矩形（无填充）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;clearRect()&lt;/td&gt;
&lt;td&gt;在给定的矩形内清除指定的像素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;stroke()&lt;/td&gt;
&lt;td&gt;绘制已定义的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;beginPath()&lt;/td&gt;
&lt;td&gt;开始创建一个路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;closePath()&lt;/td&gt;
&lt;td&gt;创建从当前点回到起始点的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;moveTo()&lt;/td&gt;
&lt;td&gt;把路径移动到画布中的指定点，不创建线条&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;arc()&lt;/td&gt;
&lt;td&gt;创建一条弧线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;rotate()&lt;/td&gt;
&lt;td&gt;以原点为中心顺时针旋转当前坐标轴。多次调用旋转的角度会叠加。原点可以用 translate () 方法修改，旋转角度为正数，顺时针旋转，否则逆时针旋转&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;translate()&lt;/td&gt;
&lt;td&gt;对当前坐标系的原点 (0,0) 进行变换。默认的坐标系原点为页面左上角&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;fillText()&lt;/td&gt;
&lt;td&gt;在画布上绘制被填充的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;restore()&lt;/td&gt;
&lt;td&gt;恢复之前保存的绘图上下文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;save()&lt;/td&gt;
&lt;td&gt;保存绘图上下文&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Canvas 绘制的基本步骤&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;canvas&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;draw&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2d&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;canvas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas  2D 接口。--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中编写代码获取 Canvas 实例。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onReady&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createSelectorQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#draw&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fields&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; canvas &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;node    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; ctx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; canvas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2d&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;drawRect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawRect&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 绘制矩形，在后面的步骤中实现  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 绘制笑脸，在后面的步骤中实现  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③编写绘制矩形函数 drawRect ()。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drawRect&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  function (ctx) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx.fillStyle = &#39;rgba(&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;)&#39;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ctx.fillRect(&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;矩形的绘制效果如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191626985.png&#34; alt=&#34;image-20240608191626985&#34; /&gt;&lt;/p&gt;
&lt;p&gt;④接下来绘制笑脸，先把调用绘制矩形的方法注释起来。&lt;/p&gt;
&lt;p&gt;//  this.drawRect(ctx)&lt;/p&gt;
&lt;p&gt;⑤编写绘制笑脸函数 drawSmile ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置线条颜色为红色，线条宽度为 2px     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strokeStyle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#f00&#39;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lineWidth &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制外部大圆    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;160&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制外部嘴巴线条     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;140&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;             &lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  原有代码……&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制左眼圆圈&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;85&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制右眼圆圈&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;125&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stroke&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;笑脸的绘制效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191856755.png&#34; alt=&#34;image-20240608191856755&#34; /&gt;&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <updated>2024-06-19T00:30:27.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review/</id>
        <title>数据分析试题复习</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。该文件为本次考试内容&lt;/p&gt;
&lt;p&gt;选择题为课本习题（熟悉题型使用）&lt;/p&gt;
&lt;p&gt;简答题为预测&lt;/p&gt;
&lt;p&gt;代码题（4 选 2）&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;一-考试题型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-考试题型&#34;&gt;#&lt;/a&gt; 一、考试题型&lt;/h1&gt;
&lt;p&gt;1、选择题（不定项，Numpy、Pandas、可视化、Sklearn）  20 分&lt;/p&gt;
&lt;p&gt;2、简答题（Numpy、Pandas）             10 分&lt;/p&gt;
&lt;p&gt;3、分析题（根据题目要求绘制项目聚类或分类流程图）  10 分&lt;/p&gt;
&lt;p&gt;读取 &amp;gt; 预处理（缺）&amp;gt; 划分（横、纵）&amp;gt; 标准化 &amp;gt; 分聚回 &amp;gt; 评价&lt;/p&gt;
&lt;p&gt;4、综合应用题（分类、聚类、回归）          60 分&lt;/p&gt;
&lt;h1 id=&#34;二-考试内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-考试内容&#34;&gt;#&lt;/a&gt; 二、考试内容&lt;/h1&gt;
&lt;h2 id=&#34;1-numpy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-numpy&#34;&gt;#&lt;/a&gt; 1、Numpy&lt;/h2&gt;
&lt;p&gt;（1）Numpy 两大对象及特点&lt;/p&gt;
&lt;p&gt;（2）Series 组成&lt;/p&gt;
&lt;p&gt;（3）Numpy 数组的属性&lt;/p&gt;
&lt;p&gt;（4）Numpy 生成数组、矩阵的常用函数、矩阵转置&lt;/p&gt;
&lt;h2 id=&#34;2-pandas&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-pandas&#34;&gt;#&lt;/a&gt; 2、Pandas&lt;/h2&gt;
&lt;p&gt;（1）Pandas 作用&lt;/p&gt;
&lt;p&gt;（2）重复值、缺失值处理函数及方法&lt;/p&gt;
&lt;p&gt;（3）Pandas 数据结构及特点&lt;/p&gt;
&lt;p&gt;（4）读写 CSV 数据的相关函数&lt;/p&gt;
&lt;p&gt;（5）数据合并&lt;/p&gt;
&lt;h2 id=&#34;3-可视化库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-可视化库&#34;&gt;#&lt;/a&gt; 3、可视化库&lt;/h2&gt;
&lt;p&gt;绘制画布、常用图表、坐标轴的函数。&lt;/p&gt;
&lt;h2 id=&#34;4-sklearn应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-sklearn应用&#34;&gt;#&lt;/a&gt; 4、Sklearn 应用&lt;/h2&gt;
&lt;p&gt;APP 用户群体划分、二手手机价格预测、客户服装尺寸预测、钻石价格预测。&lt;/p&gt;
&lt;h1 id=&#34;选择题不定项numpy-pandas-可视化-sklearn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择题不定项numpy-pandas-可视化-sklearn&#34;&gt;#&lt;/a&gt; 选择题：不定项，Numpy、Pandas、可视化、Sklearn&lt;/h1&gt;
&lt;h2 id=&#34;第1章-python-数据分析概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第1章-python-数据分析概述&#34;&gt;#&lt;/a&gt; 第 1 章 Python 数据分析概述&lt;/h2&gt;
&lt;p&gt;课后习题&lt;/p&gt;
&lt;p&gt;(1) 下面关于数据分析说法正确的是 (     )&lt;/p&gt;
&lt;p&gt;A. 数据分析是数学、统计学理论结合科学的统计分析方法&lt;/p&gt;
&lt;p&gt;B. 数据分析是一种数学分析方法&lt;/p&gt;
&lt;p&gt;C. 数据分析是统计学分析方法&lt;/p&gt;
&lt;p&gt;D. 数据分析是大数据分析方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 本题考查数据分析的概念。&lt;/p&gt;
&lt;p&gt;数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，提取有用信息和形成结论而对数据加以详细研究和概括总结的过程。这一过程也是质量管理体系的支持过程。在实用中，数据分析可帮助人们作出判断，以便采取适当行动。&lt;/p&gt;
&lt;p&gt;【答案】 A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) 下列关于数据分析的描述，说法错误的是 (     )&lt;/p&gt;
&lt;p&gt;A. 模型优化步骤可以与分析和建模步骤同步进行&lt;/p&gt;
&lt;p&gt;B. 数据分析过程中最核心的步骤是分析与建模&lt;/p&gt;
&lt;p&gt;C. 数据分析时只能够使用数值型数据&lt;/p&gt;
&lt;p&gt;D. 广义的数据分析包括狭义数据分析和数据挖掘&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 本题考查数据分析。&lt;/p&gt;
&lt;p&gt;数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，提取有用信息和形成结论而对数据加以详细研究和概括总结的过程。这一过程也是质量管理体系的支持过程。在实用中，数据分析可帮助人们作出判断，以便采取适当行动。&lt;/p&gt;
&lt;p&gt;A 项，模型优化步骤可以与分析和建模步骤同步进行，说法正确。&lt;/p&gt;
&lt;p&gt;B 项，数据分析过程中最核心的步骤是分析与建模，说法正确。&lt;/p&gt;
&lt;p&gt;C 项，数据分析时只能够使用数值型数据，说法错误。数据分析可以使用分类数据、顺序数据和数值型数据等。&lt;/p&gt;
&lt;p&gt;D 项，广义的数据分析包括狭义数据分析和数据挖掘，说法正确。 本题要求选择说法错误选项。&lt;/p&gt;
&lt;p&gt;【答案】 C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 下列关于 NumPy 的说法错误的是 (     )&lt;/p&gt;
&lt;p&gt;A.NumPy 可快速高效处理多维数组&lt;/p&gt;
&lt;p&gt;B.NumPy 可提供在算法之间传递数据的容器&lt;/p&gt;
&lt;p&gt;C.NumPy 可实现线性代数运算、傅里叶变换和随机数生成&lt;/p&gt;
&lt;p&gt;D.NumPy 不具备将 C++ 代码继承到 Python 的功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 本题考查 NumPy。&lt;/p&gt;
&lt;p&gt;NumPy 是 Python 的一个库，提供了大量的数学函数和数据结构（特别是数组），用于快速操作数据。&lt;/p&gt;
&lt;p&gt;它支持高级大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。&lt;/p&gt;
&lt;p&gt;A 项，表述正确，NumPy 可快速高效处理多维数组。&lt;/p&gt;
&lt;p&gt;B 项，表述正确，NumPy 可提供在算法之间传递数据的容器。&lt;/p&gt;
&lt;p&gt;C 项，表述正确，NumPy 可实现线性代数运算、傅里叶变换和随机数生成。&lt;/p&gt;
&lt;p&gt;D 项，表述错误，NumPy 具备将 C++ 代码继承到 Python 的功能。 本题要求选择说法错误选项。&lt;/p&gt;
&lt;p&gt;【答案】 D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(4) 下列关于 pandas 说法错误的是 (    )&lt;/p&gt;
&lt;p&gt;A.pandas 是 Python 的数据分析核心库&lt;/p&gt;
&lt;p&gt;B.pandas 能够快捷处理结构化数据&lt;/p&gt;
&lt;p&gt;C.pandas 没有 NumPy 的高性能数字计算功能&lt;/p&gt;
&lt;p&gt;D.pandas 提供复杂精细的索引功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;pandas 是基于 NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。pandas 提供了大量能使我们快速便捷地处理数据的函数和方法，使 Python 成为强大而高效的数据分析环境。&lt;/p&gt;
&lt;p&gt;【答案】 C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(5) 下列不属于数据分析的应用场景的是 (    )&lt;/p&gt;
&lt;p&gt;A. 一周天气预测&lt;/p&gt;
&lt;p&gt;C. 为用户提供个性化服务&lt;/p&gt;
&lt;p&gt;B. 合理预测航班座位需求数量&lt;/p&gt;
&lt;p&gt;D. 某人一生的命运预测&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【答案】 D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(6) 下列不属于 Python 优势的是 ( C )。&lt;/p&gt;
&lt;p&gt;A. 语法简洁，程序开发速度快&lt;/p&gt;
&lt;p&gt;B. 入门简单，功能强大&lt;/p&gt;
&lt;p&gt;C. 程序的运行速度在所有计算机语言的程序中最快&lt;/p&gt;
&lt;p&gt;D. 开源，可以自由阅读源代码并对其进行改动&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【答案】 C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(7) 下列关于 Jupyter Notebook 界面构成说法错误的是 ( D )&lt;/p&gt;
&lt;p&gt;A.Notebook 主要由两种形式的单元构成&lt;/p&gt;
&lt;p&gt;B.Jupyter Notebook 中的代码单元是读者编写代码的地方&lt;/p&gt;
&lt;p&gt;C.Jupyter Notebook 编辑界面有两种编辑模式&lt;/p&gt;
&lt;p&gt;D.Jupyter Notebook 可以将文件分享给他人&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 Notebook 主要由两种形式的单元构成，分别是代码单元和 Markdown 单元。&lt;/p&gt;
&lt;p&gt;代码单元是读者编写代码的地方，而 Markdown 单元可以用来添加注释或者说明。&lt;/p&gt;
&lt;p&gt;Jupyter Notebook 编辑界面有两种编辑模式，分别是编辑模式和命令模式。在编辑模式下，可以对单元中的代码或者文本进行编辑；而在命令模式下，可以在键盘上输入一些命令来对整个文件或者单元进行操作。&lt;/p&gt;
&lt;p&gt;Jupyter Notebook 可以将文件保存为 ipynb 格式，并分享给他人。他人通过 Jupyter Notebook 打开该文件后，不仅可以看到整个分析过程的代码，还可以看到每段代码运行后的结果。&lt;/p&gt;
&lt;p&gt;【答案】 D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(8) 下列关于 Python 数据分析常用库的描述错误的是 ( A )&lt;/p&gt;
&lt;p&gt;A.NumPy 的在线安装不需要其他任何辅助工具&lt;/p&gt;
&lt;p&gt;B.SciPy 主要用于解决科学计算中的各种标准问题&lt;/p&gt;
&lt;p&gt;C.pandas 能够实现对数据的整理工作&lt;/p&gt;
&lt;p&gt;D.scikit-learn 是复杂有效的数据分析工具&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;** 选项 A “NumPy 的在线安装不需要其他任何辅助工具” 是错误的描述。** 实际上，虽然 NumPy 库本身支持在线安装，但在实际操作中，通常需要其他辅助工具如包管理工具 pip 来进行安装。&lt;/p&gt;
&lt;p&gt;【答案】 A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(9) 以下选项中关于 Anaconda 描述错误的是 ( C )&lt;/p&gt;
&lt;p&gt;A.Anaconda 支持 Linux、Windows 系统&lt;/p&gt;
&lt;p&gt;B.Anaconda 支持并集成了 800 多个第三方库&lt;/p&gt;
&lt;p&gt;C.Anaconda 是一个集成开发工具&lt;/p&gt;
&lt;p&gt;D.Anaconda 是免费的，适合数据分析相关工作人员安装使用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;Anaconda 是一个强大的 Python 发行版和包管理工具，但它本身不是一个集成开发环境。它提供了丰富的科学计算和数据分析库，以及多种工具和环境管理器，是 Python 开发者和数据科学家的重要工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第2章-numpy数组计算基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第2章-numpy数组计算基础&#34;&gt;#&lt;/a&gt; 第 2 章 NumPy 数组计算基础&lt;/h2&gt;
&lt;p&gt;1. 选择题&lt;/p&gt;
&lt;p&gt;(1) 下列对 Python 中的 NumPy 描述不正确的是 (    )&lt;/p&gt;
&lt;p&gt;A.NumPy 是用于数据科学计算的基础模块&lt;/p&gt;
&lt;p&gt;B.NumPy 的数据容器能够保存任意类型的数据&lt;/p&gt;
&lt;p&gt;C.NumPy 提供了 ndarray 和 array 两种基本的对象&lt;/p&gt;
&lt;p&gt;D.NumPy 能够对多维数组进行数值运算&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;NumPy 是 Python 中用于科学计算的一个基础库，它提供了高效的多维数组对象和工具。&lt;/p&gt;
&lt;p&gt;A. 正确。NumPy 确实是用于数据科学计算的基础模块。&lt;/p&gt;
&lt;p&gt;B. 正确。NumPy 的主要数据结构是 ndarray，它是一个多维数组对象，设计用于存储和处理数值数据。&lt;/p&gt;
&lt;p&gt;C. 不正确。NumPy 确实提供了 ndarray 和 ufunc 两种基本的对象，在 NumPy 中， &lt;code&gt;ndarray&lt;/code&gt;  是一个多维数组对象，而 &lt;code&gt;array&lt;/code&gt;  实际上是 &lt;code&gt;ndarray&lt;/code&gt;  的一个别名或者是创建 &lt;code&gt;ndarray&lt;/code&gt;  的一种方式。因此，实际上它们指的是同一个概念&lt;/p&gt;
&lt;p&gt;D. 正确。NumPy 能够对多维数组进行数值运算，包括基本的算术运算、统计运算等。&lt;/p&gt;
&lt;p&gt;【答案】 C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) 下列选项中表示数组维度的是 (   ）&lt;/p&gt;
&lt;p&gt;A. ndim&lt;/p&gt;
&lt;p&gt;B. shape&lt;/p&gt;
&lt;p&gt;C. size&lt;/p&gt;
&lt;p&gt;D. dtype&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;ndim&lt;/strong&gt;：此属性表示数组的维度数量，即轴数。它返回一个整数，表示数组有多少个维度。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;shape&lt;/strong&gt;：此属性返回一个元组，描述每个维度中数组的大小。它并不直接给出维度的数量，而是提供了每个维度的长度信息。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;size&lt;/strong&gt;：这个属性用于获取数组中元素的总数量，是所有维度大小的乘积。因此，它也不直接代表数组的维度。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;dtype&lt;/strong&gt;：这是 NumPy 数组中数据的类型，例如 int、float 等。与数组的维度无关。&lt;/p&gt;
&lt;p&gt;综上所述，选项 A 的&lt;strong&gt; ndim&lt;/strong&gt; 是表示数组维度的属性。&lt;/p&gt;
&lt;p&gt;【答案】A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 代码 “np.arange (0,1,0.2)” 的运行结果为 ( A&lt;/p&gt;
&lt;p&gt;A. [0,0.2,0.4,0.6,0.8]&lt;/p&gt;
&lt;p&gt;C. [0.2,0.4, 0.6, 0.8]&lt;/p&gt;
&lt;p&gt;B. [0,0.2,0.4,0.6,0.8, 1.0]&lt;/p&gt;
&lt;p&gt;D. [0.2,0.4,0.6, 0.8, 1.0]&lt;/p&gt;
&lt;p&gt;(4) 代码 “np.linspace (0,10,5)” 的运行结果为 (  D&lt;/p&gt;
&lt;p&gt;A. [0 , 2.5 , 5 , 7.5]&lt;/p&gt;
&lt;p&gt;B. [0,  2.5 ,  5 , 7.5 , 10]&lt;/p&gt;
&lt;p&gt;C. [0. , 2.5. , 5. , 7.5.]&lt;/p&gt;
&lt;p&gt;D.[0. ,2.5. , 5. , 7.5. , 10.]&lt;/p&gt;
&lt;p&gt;(5) 下列用于横向组合数组的函数是 ( A&lt;/p&gt;
&lt;p&gt;A. hstack&lt;/p&gt;
&lt;p&gt;B. hsplit&lt;/p&gt;
&lt;p&gt;C.vstack&lt;/p&gt;
&lt;p&gt;D.vsplit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;在 NumPy 中， &lt;code&gt;hstack&lt;/code&gt;  函数用于横向堆叠数组，即沿水平方向合并数组。这里的 “h” 代表水平（horizontal）。因此，如果你想将几个数组水平组合在一起，你应该使用 &lt;code&gt;hstack&lt;/code&gt;  函数。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;hsplit&lt;/code&gt;  是用来沿着水平方向分割数组的函数，而不是组合。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;vstack&lt;/code&gt;  用于垂直堆叠数组，即沿竖直方向合并数组。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;vsplit&lt;/code&gt;  是用来沿着垂直方向分割数组的函数。&lt;/p&gt;
&lt;p&gt;【答案】 A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第3章pandas统计分析基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第3章pandas统计分析基础&#34;&gt;#&lt;/a&gt; 第 3 章 pandas 统计分析基础&lt;/h2&gt;
&lt;p&gt;1. 选择题&lt;/p&gt;
&lt;p&gt;(1) 下列关于 pandas 数据读 / 写说正确的是 ( 	)&lt;/p&gt;
&lt;p&gt;A.read_csv 函数无法读取文本文档的数据&lt;/p&gt;
&lt;p&gt;B.read_sql 函数能够读取所有数据库的数据&lt;/p&gt;
&lt;p&gt;C.to_csv () 方法能够将结构化数据写入 CSV 文件&lt;/p&gt;
&lt;p&gt;D.to_csv () 方法能够将结构化数据写入 Excel 文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 该选项说法错误， &lt;code&gt;read_csv&lt;/code&gt;  函数不仅可以读取 CSV 文件，也能通过设置适当的参数读取文本格式的数据，只要数据的结构符合 CSV 格式。&lt;/p&gt;
&lt;p&gt;B. 该选项说法过于绝对，错误。 &lt;code&gt;read_sql&lt;/code&gt;  函数需要与特定的数据库连接一起使用，并且只能读取支持 SQL 查询的数据源，不是所有数据库。&lt;/p&gt;
&lt;p&gt;C. 该选项说法正确， &lt;code&gt;to_csv()&lt;/code&gt;  方法确实能够将 DataFrame 等结构化数据写入 CSV 文件中，是 Pandas 中常用的数据导出功能之一。 D. 该选项说法错误，虽然名字类似，但 &lt;code&gt;to_csv()&lt;/code&gt;  并不直接支持写入 Excel 文件，要写入 Excel 文件应使用 &lt;code&gt;to_excel()&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;【答案】C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) 下列关于 pandas 基本操作说法错误的是 (  	)&lt;/p&gt;
&lt;p&gt;A.drop () 方法可以删除某列的数据&lt;/p&gt;
&lt;p&gt;B. 使用 describe () 方法可以对 DataFrame 进行描述性统计&lt;/p&gt;
&lt;p&gt;C. 在创建 DataFrame 的过程中可同时设置索引&lt;/p&gt;
&lt;p&gt;D. 在创建 DataFrame 后可设置索引&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 该选项说法正确， &lt;code&gt;drop()&lt;/code&gt;  方法确实可以用来删除 DataFrame 中的指定列或行。&lt;/p&gt;
&lt;p&gt;B. 该选项说法正确， &lt;code&gt;describe()&lt;/code&gt;  方法会对 DataFrame 进行基本的描述性统计，包括计数、平均值、标准差、最小值、四分位数、最大值等（对于数值型列）。&lt;/p&gt;
&lt;p&gt;C. 该选项说法正确，在创建 DataFrame 时，可以通过指定 index 参数来设置初始索引。&lt;/p&gt;
&lt;p&gt;D. 该选项说法也是正确的，即使在 DataFrame 创建之后，也可以使用 &lt;code&gt;set_index()&lt;/code&gt;  方法重新设置新的索引。&lt;/p&gt;
&lt;p&gt;【答案】按照解析所有选项 A、B、C、D 均为正确描述&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 下列关于 pandas 支持的数据结构的说法错误的是 ( 	)&lt;/p&gt;
&lt;p&gt;A.pandas 只支持 Series 数据结构&lt;/p&gt;
&lt;p&gt;B.pandas 支持 Series 和 DataFrame&lt;/p&gt;
&lt;p&gt;C.DataFrame 可与带有标记轴 (行和列) 的二维数组一起使用&lt;/p&gt;
&lt;p&gt;D.Series 被定义为能够存储各种类型数据的一维数组&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 该选项说法错误，pandas 不仅仅支持 Series 数据结构，还支持其他数据结构，最主要的是 Series 和 DataFrame。&lt;/p&gt;
&lt;p&gt;B. 该选项说法正确，明确指出了 pandas 支持 Series 和 DataFrame 这两种主要数据结构。&lt;/p&gt;
&lt;p&gt;C. 该选项说法正确，DataFrame 是一种二维数据结构，它包含行列标签，可以看作是带有标记轴（行标签和列标签）的二维数组。&lt;/p&gt;
&lt;p&gt;D. 该选项说法正确，Series 是 pandas 中一种一维的数据结构，它可以存储任何数据类型（整数、字符串、浮点数等），并且每个元素都有一个唯一的标签（即索引）。&lt;/p&gt;
&lt;p&gt;根据以上解析，选项 A 表述错误。&lt;/p&gt;
&lt;p&gt;【答案】A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(4) 以下分组操作中不涉及原始对象的是 (	 )&lt;/p&gt;
&lt;p&gt;A. 分割对象&lt;/p&gt;
&lt;p&gt;B. 应用一个函数&lt;/p&gt;
&lt;p&gt;C. 结合结果&lt;/p&gt;
&lt;p&gt;D. 聚合数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;分割对象&lt;/strong&gt;：根据一个或多个列的值将数据分割成不同的组。这一步直接作用于原始对象，但并不改变原始对象，而是创建了按组划分的新视图。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;应用一个函数&lt;/strong&gt;：对每个分组应用某个函数，比如求和、平均、计数等。这一步确实涉及原始对象的数据，但操作是在分组后的视图上进行的。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;结合结果&lt;/strong&gt;：将各分组应用函数后得到的结果合并成一个新的数据结构。这意味着最终产出一个新的对象，而不是修改原始对象。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;聚合数据&lt;/strong&gt;：这是分组操作的目的之一，通过应用函数来汇总每个组的数据，例如计算每组的平均值、最大值等。此步骤同样生成新的汇总信息，并不直接修改原始数据。&lt;/p&gt;
&lt;p&gt;【答案】D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(5) 下列关于 apply () 方法说法正确的是 ( 	)&lt;/p&gt;
&lt;p&gt;A.apply () 方法无法应用于分组操作&lt;/p&gt;
&lt;p&gt;B.apply () 方法作用范围:pandas 中的 Series 和 DataFrame&lt;/p&gt;
&lt;p&gt;C.apply () 方法中不能自定义函数&lt;/p&gt;
&lt;p&gt;D.apply () 方法只能对行、列进行操作&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 该选项说法错误。实际上， &lt;code&gt;apply()&lt;/code&gt;  方法可以非常灵活地应用于分组操作中，是对 DataFrame 或 Series 中的数据进行变换的一种方式，可以在分组后对每个组应用函数。&lt;/p&gt;
&lt;p&gt;B. 该选项说法正确。 &lt;code&gt;apply()&lt;/code&gt;  方法广泛应用于 pandas 的两种主要数据结构 ——Series 和 DataFrame 中，可以对这些结构中的数据执行自定义函数或内置函数。&lt;/p&gt;
&lt;p&gt;C. 该选项说法错误。 &lt;code&gt;apply()&lt;/code&gt;  方法的一个强大之处就在于能够接受自定义函数作为参数，这使得用户可以对数据执行复杂或特定的转换。&lt;/p&gt;
&lt;p&gt;D. 该选项说法错误。 &lt;code&gt;apply()&lt;/code&gt;  方法不仅限于对行或列进行操作，其灵活性在于可以根据需要作用于整个对象、单列、单行，甚至是更复杂的操作，具体取决于函数的定义和传入的参数（如 axis 参数用于指定操作的轴）。&lt;/p&gt;
&lt;p&gt;【答案】B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(6) 下列关于分组聚合的说法错误的是 ( 	)&lt;/p&gt;
&lt;p&gt;A. 使用 pandas 的 groupby () 方法进行分组时，只能对列进行操作&lt;/p&gt;
&lt;p&gt;B.pandas 分组聚合操作能够实现组内标准化&lt;/p&gt;
&lt;p&gt;C.pandas 聚合时能够使用 agg ()、apply ()、transform () 方法&lt;/p&gt;
&lt;p&gt;D.pandas 分组方法只有一个 groupby () 方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 该选项说法错误。 &lt;code&gt;groupby()&lt;/code&gt;  方法不仅仅能对列进行操作，它可以根据一个或多个列进行分组，也可以根据行索引进行分组，甚至可以使用函数或映射进行更复杂的分组逻辑。&lt;/p&gt;
&lt;p&gt;B. 该选项说法正确。Pandas 的分组聚合功能十分强大，能够实现多种统计分析，包括组内标准化，即在每个组内减去平均值并除以标准差等操作。&lt;/p&gt;
&lt;p&gt;C. 该选项说法正确。在 pandas 中，进行分组后的聚合操作确实可以使用  &lt;code&gt;agg()&lt;/code&gt; 、 &lt;code&gt;apply()&lt;/code&gt;  和  &lt;code&gt;transform()&lt;/code&gt;  等方法。 &lt;code&gt;agg()&lt;/code&gt;  用于应用汇总统计函数， &lt;code&gt;apply()&lt;/code&gt;  提供了更多定制化操作的空间，而  &lt;code&gt;transform()&lt;/code&gt;  则会返回一个与原数据形状相同的 DataFrame 或 Series，常用于计算每个分组内部相对值。&lt;/p&gt;
&lt;p&gt;D. 该选项说法错误。虽然  &lt;code&gt;groupby()&lt;/code&gt;  是 pandas 中最常用的分组方法，但并不是唯一的分组方法。例如，在某些特定场景下，也可以使用  &lt;code&gt;pivot_table()&lt;/code&gt;  实现类似分组聚合的功能，尽管它的侧重点在于创建交叉表。&lt;/p&gt;
&lt;p&gt;【答案】A 和 D 都是错误的描述。但是，根据题目要求选择一个错误的说法，A 和 D 都符合题意。如果必须选择一个最直接错误的描述，考虑到 D 选项直接说 “只有一个  &lt;code&gt;groupby()&lt;/code&gt;  方法” 这种绝对化的表述更容易被识别为错误，因此更倾向于选择 &lt;strong&gt;D&lt;/strong&gt; 作为最终答案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(7) 使用 pivot_table 函数制作透视表时可用下列 (      ) 参数设置行分组键。&lt;/p&gt;
&lt;p&gt;A. Index&lt;/p&gt;
&lt;p&gt;B. raw&lt;/p&gt;
&lt;p&gt;C. values&lt;/p&gt;
&lt;p&gt;D. data&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】  &lt;code&gt;pivot_table&lt;/code&gt;  是 pandas 库中用于创建透视表的一个强大函数，它允许用户以灵活的方式对数据进行分组、聚合和重塑。根据题目要求，我们需要找出用于设置行分组键的参数。&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;Index&lt;/strong&gt; - 这个选项正确。在  &lt;code&gt;pivot_table&lt;/code&gt;  函数中， &lt;code&gt;index&lt;/code&gt;  参数用于指定用作行分组键的列名或列名列表。它是创建透视表时定义行结构的关键参数。(columns 表示列分组键)&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;raw&lt;/strong&gt; - 这个选项与行分组键无关。 &lt;code&gt;raw&lt;/code&gt;  参数是一个布尔值，决定聚合函数是接收原始数据还是经过转化的数据。默认为  &lt;code&gt;False&lt;/code&gt; ，意味着聚合函数接收到的是已经经过转化的数据。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;values&lt;/strong&gt; - 此参数用于指定要聚合的值的列名。它并不直接控制行分组，而是与聚合计算相关。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;data&lt;/strong&gt; - 这是  &lt;code&gt;pivot_table&lt;/code&gt;  函数的第一个参数，用于指定要进行透视操作的数据集（DataFrame）。它不直接定义行分组键。&lt;/p&gt;
&lt;p&gt;【答案】A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(8) 下列对 DataFrame 的常用属性说法错误的是 (	)。&lt;/p&gt;
&lt;p&gt;A.values 可以获取元素&lt;/p&gt;
&lt;p&gt;B.index 可查看索引情况&lt;/p&gt;
&lt;p&gt;C.column 可查看 DataFrame 的列名&lt;/p&gt;
&lt;p&gt;D.dtypes 可查看各列的数据类型&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;values&lt;/strong&gt; - 该选项说法正确。 &lt;code&gt;values&lt;/code&gt;  属性可以用来获取 DataFrame 中的所有元素，以 NumPy 数组的形式返回。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;index&lt;/strong&gt; - 该选项说法正确。 &lt;code&gt;index&lt;/code&gt;  属性用于查看 DataFrame 的行索引。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;column&lt;/strong&gt; - 该选项说法错误。正确的属性名称应为  &lt;code&gt;columns&lt;/code&gt; （复数形式），用于查看 DataFrame 的列名。因此，这里提到的 &amp;quot;column&amp;quot; 是错误的表述。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;dtypes&lt;/strong&gt; - 该选项说法正确。 &lt;code&gt;dtypes&lt;/code&gt;  属性可以查看 DataFrame 每一列的数据类型。&lt;/p&gt;
&lt;p&gt;【答案】C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第4章-使用-pandas-进行数据预处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第4章-使用-pandas-进行数据预处理&#34;&gt;#&lt;/a&gt; 第 4 章 使用 pandas 进行数据预处理&lt;/h2&gt;
&lt;p&gt;1、选择题&lt;/p&gt;
&lt;p&gt;(1) 在下列选项中可以进行主键合并的是 ( 	）&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. append()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;merge&lt;/strong&gt; - 这个选项是正确的。 &lt;code&gt;merge&lt;/code&gt;  函数可以用来根据一个或多个键（通常包括主键）来合并两个 DataFrame。这是进行主键合并的典型方法。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;concat&lt;/strong&gt; - 这个选项主要用于纵向或横向堆叠 DataFrame，而不是根据主键进行合并。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;append&lt;/strong&gt; - 虽然  &lt;code&gt;append&lt;/code&gt;  方法可以将一个 DataFrame 添加到另一个 DataFrame 的底部，进行竖直方向上的合并，但它并不根据主键进行合并，也不会解决重复的行问题。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;combine_first&lt;/strong&gt; - 这个方法用于填充缺失值，其中一个对象的缺失值由另一个对象对应的值填充，而不是用于基于主键的合并。&lt;/p&gt;
&lt;p&gt;【答案】A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) 在下列选项中可以进行横向堆叠的是 (	)。&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. join()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;merge&lt;/strong&gt; - 这个选项主要用于根据一个或多个键合并 DataFrame，虽然可以实现某种程度上的横向扩展（通过设置 &lt;code&gt;suffixes&lt;/code&gt;  处理列名冲突），但其主要目的不是横向堆叠。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;concat&lt;/strong&gt; - 正确。 &lt;code&gt;concat&lt;/code&gt;  函数是进行 DataFrame 横向或纵向堆叠的主要工具。通过设置参数  &lt;code&gt;axis=1&lt;/code&gt; ，可以实现 DataFrame 的横向堆叠，即将多个 DataFrame 的列并置在一起。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;join&lt;/strong&gt; - 这个选项在 pandas 中通常指的是 DataFrame 或 Series 的 join 方法，它可以根据索引进行合并，但直接说 “join ()” 不够精确，因为 join 操作本身可以有多种方式，并且通常不是指横向堆叠的直接操作。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;combine_first&lt;/strong&gt; - 这个方法用于用一个对象中的非 NaN 值填补另一个对象中的 NaN 值，与横向堆叠无关。&lt;/p&gt;
&lt;p&gt;【答案】B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 在下列选项中可以进行重叠合并的是 ( 	)。&lt;/p&gt;
&lt;p&gt;A. merge&lt;/p&gt;
&lt;p&gt;B.concat&lt;/p&gt;
&lt;p&gt;C. append()&lt;/p&gt;
&lt;p&gt;D. combine_first()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;merge&lt;/strong&gt; - 虽然 merge 可以合并具有共同列（键）的 DataFrame，但它通常涉及到列的匹配和可能的行对行合并，并不专门指重叠合并或数据填补。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;concat&lt;/strong&gt; - concat 主要用于简单地堆叠或拼接 DataFrame，而不是重叠合并数据以处理缺失值。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;append&lt;/strong&gt; - 类似于 concat，append 主要是进行垂直堆叠，不涉及数据的智能重叠或填补缺失值。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;combine_first&lt;/strong&gt; - 正确。 &lt;code&gt;combine_first()&lt;/code&gt;  方法允许一个对象中的非空值替换另一个对象中对应位置的空值，实现了数据的重叠合并，特别适用于处理缺失数据的情况。&lt;/p&gt;
&lt;p&gt;【答案】D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(4) 下列关于 pandas 中 drop_duplicates () 方法的说法正确的是 (	)&lt;/p&gt;
&lt;p&gt;A.drop_duplicates0) 是常用的主键合并方法，能够实现左连接和右连接&lt;/p&gt;
&lt;p&gt;B.drop_duplicates () 方法只对 DataFrame 有效&lt;/p&gt;
&lt;p&gt;C.drop_duplicatesO 方法仅支持单一特征数据去重&lt;/p&gt;
&lt;p&gt;D.drop_duplicatesO 方法不会改变原数据的排列&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;drop_duplicates () 是常用的主键合并方法，能够实现左连接和右连接&lt;/strong&gt; - 不正确。 &lt;code&gt;drop_duplicates()&lt;/code&gt;  方法主要用于删除数据中的重复行，并不是用于数据合并的操作，更不会实现左连接或右连接。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;drop_duplicates () 方法只对 DataFrame 有效&lt;/strong&gt; - 不完全正确。实际上， &lt;code&gt;drop_duplicates()&lt;/code&gt;  方法既可以用在 DataFrame 上，也可以用在 Series 上，用于删除其中的重复值。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;drop_duplicates () 方法仅支持单一特征数据去重&lt;/strong&gt; - 不正确。此方法可以基于所有列或特定列进行去重，默认情况下会考虑所有列，也可以通过设置参数  &lt;code&gt;subset&lt;/code&gt;  指定根据哪些列进行去重。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;drop_duplicates () 方法不会改变原数据的排列&lt;/strong&gt; - 部分正确。 &lt;code&gt;drop_duplicates()&lt;/code&gt;  本身不会改变原数据的排列顺序，但默认情况下它会返回一个新的对象，其中重复项已被删除，而原始数据保持不变。不过，如果设置  &lt;code&gt;inplace=True&lt;/code&gt; ，则会在原地修改 DataFrame，但这也并不改变非重复项的原有排列顺序。&lt;/p&gt;
&lt;p&gt;【答案】A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(5) 下列关于特征去重的说法错误的是 (	)。&lt;/p&gt;
&lt;p&gt;A.cor () 方法可通过相似度矩阵去重&lt;/p&gt;
&lt;p&gt;B. 可通过 equals () 方法进行特征去重&lt;/p&gt;
&lt;p&gt;C. 相似度矩阵去重可对任意类型的重复特征去重&lt;/p&gt;
&lt;p&gt;D. 相似度矩阵去重只能对数值型的重复特征去重&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;cor () 方法可通过相似度矩阵去重&lt;/strong&gt; - 这个说法不准确。 &lt;code&gt;cor()&lt;/code&gt;  方法在 pandas 中并不存在，但如果你是指计算相关系数的函数（如  &lt;code&gt;corr()&lt;/code&gt; ），它主要用于衡量变量之间的线性关系强度，并不适合直接用于特征去重。特征去重一般涉及到比较特征值是否完全相同或几乎相同，而不是计算它们之间的相关性。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;可通过 equals () 方法进行特征去重&lt;/strong&gt; - 这个说法也不太准确。 &lt;code&gt;equals()&lt;/code&gt;  方法是用来比较两个 DataFrame 或 Series 是否完全相等（包括数据和结构），通常不直接用于特征去重。特征去重更多是针对 DataFrame 内部的重复行或列，而不是比较两个独立的 DataFrame 是否相等。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;相似度矩阵去重可对任意类型的重复特征去重&lt;/strong&gt; - 这个说法错误。相似度矩阵通常用于量化不同特征或样本间的相似程度，它基于数值计算，因此主要用于数值型数据的比较。对于非数值型数据（如分类数据），直接应用相似度矩阵去重并不合适，除非先进行合适的编码转换。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;相似度矩阵去重只能对数值型的重复特征去重&lt;/strong&gt; - 相比之下，这个说法更接近实际情况。相似度计算确实主要适用于数值型数据，因为非数值数据需要转换为可以量化的形式才能进行相似度计算。然而，这个选项表述也存在一定的误导性，因为它暗示了 “相似度矩阵去重” 是一个标准操作，实际上在常规的数据处理中，我们通常不直接使用相似度矩阵进行特征去重，而是利用其他方法，如直接比较或利用 pandas 的  &lt;code&gt;drop_duplicates()&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;【答案】考虑到所有选项的表述都不够准确或存在误导，如果必须选择一个最不符合实际情况的选项，D 选项尽管在概念上部分正确&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(6) 在下列选项中可以进行特征删除的是 ( 	).&lt;/p&gt;
&lt;p&gt;A.dropna () 方法   B.fllna () 方法&lt;/p&gt;
&lt;p&gt;C.isnull0) 方法   D.notnull () 方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;dropna()&lt;/code&gt;  方法：这个方法用于删除包含缺失值（NaN）的行或列，因此它确实可以间接用于特征删除，尤其是当我们基于缺失数据来剔除某些特征时。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;fillna()&lt;/code&gt;  方法：这个方法是用来填充缺失值的，而不是删除特征，因此它不适用于特征删除。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;isnull()&lt;/code&gt;  方法：此方法用于检测数据中的缺失值，返回一个布尔值的数组，指示每个元素是否为 NaN。它不直接进行特征删除。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;notnull()&lt;/code&gt;  方法：与 &lt;code&gt;isnull()&lt;/code&gt;  相反，这个方法用于标识非缺失值的位置，同样不执行特征删除操作。&lt;/p&gt;
&lt;p&gt;【答案】 A. dropna () 方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(7) 在下列选项中可以进行缺失值替换的是 (	)。&lt;/p&gt;
&lt;p&gt;A.dropna0 方法  B.fllna () 方法&lt;/p&gt;
&lt;p&gt;C.isnull0 方法    D.notnull0 方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;dropna()&lt;/code&gt;  方法：这个方法是用来删除包含缺失值（NaN）的行或列，并非用来替换缺失值。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;fillna()&lt;/code&gt;  方法：此方法正是用来填充或替换数据中的缺失值。可以指定一个具体值、使用前一个或后一个有效值填充，或者使用一系列值（如列的均值）进行填充，因此是进行缺失值替换的正确选项。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;isnull()&lt;/code&gt;  方法：此方法用于检查 DataFrame 或 Series 中的值是否为 NaN，返回一个布尔型的 Series 或 DataFrame，指示每个值是否为缺失值，并不做任何替换操作。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;notnull()&lt;/code&gt;  方法：与 &lt;code&gt;isnull()&lt;/code&gt;  相反，用于检查值是否非 NaN，同样不做任何缺失值的替换。&lt;/p&gt;
&lt;p&gt;【答案】 B.  &lt;code&gt;fillna()&lt;/code&gt;  方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(8) 下列关于插值法的说法错误的是 (	 )&lt;/p&gt;
&lt;p&gt;A. 常见的插值法有线性插值、多项式插值和样条插值&lt;/p&gt;
&lt;p&gt;B. 线性插值通过求解线性方程得到缺失值&lt;/p&gt;
&lt;p&gt;C. 常见的线性插值有拉格朗日插值和牛顿插值&lt;/p&gt;
&lt;p&gt;D.pandas 中的 interpolate () 法可进行插值操作&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;A. 描述了常见的几种插值方法类型，包括线性插值、多项式插值和样条插值，这是正确的。&lt;/p&gt;
&lt;p&gt;B. 线性插值确实涉及到通过线性方程来估算数据点之间的缺失值或未知值，通常基于最邻近的两个已知数据点进行简单线性拟合，所以这个描述也是准确的。&lt;/p&gt;
&lt;p&gt;C. 这里存在一个误区。拉格朗日插值和牛顿插值实际上都是多项式插值的具体形式，而非线性插值。线性插值更简单的形式可能是指两点之间直线的插值，而拉格朗日插值和牛顿插值允许使用更高阶的多项式通过多个数据点来进行插值，因此这个选项说法错误。&lt;/p&gt;
&lt;p&gt;D. pandas 库中的 &lt;code&gt;interpolate()&lt;/code&gt;  函数确实提供了多种插值方法，包括线性插值、多项式插值等，用于处理时间序列或其它序列数据中的缺失值，描述正确。&lt;/p&gt;
&lt;p&gt;答案： C. 常见的线性插值有拉格朗日插值和牛顿插值 (这个说法是错误的，因为拉格朗日插值和牛顿插值属于多项式插值，不是线性插值。)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(9) 在下列选项中可以进行哑变量处理的是 ( 	)&lt;/p&gt;
&lt;p&gt;A.cut 函数&lt;/p&gt;
&lt;p&gt;B. get_cut 函数&lt;/p&gt;
&lt;p&gt;C.dummies 函数&lt;/p&gt;
&lt;p&gt;D. get_dummies 函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;哑变量处理通常是指将分类变量转换为数值形式，以便在统计分析或机器学习模型中使用。这种转换允许模型理解不同的类别并为它们分配不同的权重。在 Python 的数据分析库 pandas 中，有一个常用的功能就是将分类变量转换为哑变量（又称虚拟变量）。&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;cut&lt;/code&gt;  函数主要用于将连续变量离散化，即将连续范围切分成几个区间，不适用于哑变量处理。 B.  &lt;code&gt;get_cut&lt;/code&gt;  函数并不是 pandas 或任何常见数据分析库中的标准函数，因此它不是用于哑变量处理的。 C.  &lt;code&gt;dummies&lt;/code&gt;  函数同样并非标准函数，至少不是广泛认知中用于哑变量处理的函数名。 D.  &lt;code&gt;get_dummies&lt;/code&gt;  函数是 pandas 库中的一个函数，专门用于将分类变量转换成哑变量形式，非常适合于本题目的需求。&lt;/p&gt;
&lt;p&gt;【答案】 D. get_dummies 函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(10) 在下列选项中不属于检测与处理缺失值的方法的是 ( 	)&lt;/p&gt;
&lt;p&gt;A. 插值法&lt;/p&gt;
&lt;p&gt;B. 替换法&lt;/p&gt;
&lt;p&gt;C. 哑变量处理&lt;/p&gt;
&lt;p&gt;D. 删除法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 处理数据集中缺失值的方法多种多样，但核心目标都是为了应对数据不完整的情况，确保分析或模型构建的有效性。下面是各个选项的简要说明：&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;插值法&lt;/strong&gt;：这是一种常见的处理缺失值技术，通过在缺失值处估算一个合适的数值来填补空缺。插值方法有很多种，如线性插值、多项式插值、最近邻插值等。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;替换法&lt;/strong&gt;：也称为 “填补法”，可以直接用一个固定值（如平均值、中位数、众数等）、数据集中的其他值或者基于模型预测的值来替换缺失值。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;哑变量处理&lt;/strong&gt;：这不是用来直接处理缺失值的方法。哑变量（或虚拟变量）处理是用来编码分类特征的一种技巧，以便能在统计模型中使用。它并不涉及填补或删除缺失数据。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;删除法&lt;/strong&gt;：即直接删除含有缺失值的观测记录。这是最直接但可能也是最不理想的处理方式，因为它会导致信息丢失，特别是当缺失值较多时。&lt;/p&gt;
&lt;p&gt;【答案】 C. 哑变量处理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第5章-matplotib-seaborn-pyecharts-数据可视化基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第5章-matplotib-seaborn-pyecharts-数据可视化基础&#34;&gt;#&lt;/a&gt; 第 5 章 Matplotib、seaborn、pyecharts 数据可视化基础&lt;/h2&gt;
&lt;p&gt;1. 选择题&lt;/p&gt;
&lt;p&gt;(1) 下列关于绘图的标准流程说法错误的是 (	)&lt;/p&gt;
&lt;p&gt;A. 绘图之前必须先创建画布，不可省略&lt;/p&gt;
&lt;p&gt;B. 加图例必须在绘制图形之后进行&lt;/p&gt;
&lt;p&gt;C. 图流程的最后部分是保存和显示图形&lt;/p&gt;
&lt;p&gt;D. 添加标题、坐标轴标签，绘制图形等步骤没有先后顺序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;A. 绘图之前确实必须先创建画布，这是绘图的基础，不可省略。&lt;/p&gt;
&lt;p&gt;B. 图例通常是在绘制图形之后添加的，因为图例是对图表中元素的解释，需要在图表内容完成后添加，以便准确对应。&lt;/p&gt;
&lt;p&gt;C. 在完成所有绘图元素的设置后，最后一步通常是保存图形到文件以及 / 或者在屏幕上显示图形，这的确是流程的一部分。&lt;/p&gt;
&lt;p&gt;D. 虽然在某些灵活的绘图环境中，添加标题、坐标轴标签等操作的先后顺序可能不会影响最终图形的显示，但从标准流程和清晰组织代码的角度考虑，一般建议先设定图形的整体布局（如标题、坐标轴标签），再进行具体图形元素的绘制。这样有利于逻辑清晰和后续的代码维护。&lt;/p&gt;
&lt;p&gt;因此，虽然 D 选项不一定在所有情况下都错，但在强调标准流程和良好实践的情境下，它表述得不够准确。&lt;/p&gt;
&lt;p&gt;【答案】 D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) pyplot 使用 re 配置文件来自定义图形的各种默认属性，用于修改线条上点的形状的 rc 参数名称是 ( 	)&lt;/p&gt;
&lt;p&gt;A.lines,linewidth&lt;/p&gt;
&lt;p&gt;B.lines.markersize&lt;/p&gt;
&lt;p&gt;C. lines.linestyle&lt;/p&gt;
&lt;p&gt;D. lines.marker&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;A. &lt;strong&gt;lines.linewidth&lt;/strong&gt;：这个参数用于设置线条的宽度，与点的样式无关。&lt;/p&gt;
&lt;p&gt;B. &lt;strong&gt;lines.markersize&lt;/strong&gt;：这个参数用于设置点的大小，虽然涉及点，但并不改变点的形状。&lt;/p&gt;
&lt;p&gt;C. &lt;strong&gt;lines.linestyle&lt;/strong&gt;：这个参数用于设置线条的样式，例如实线、虚线等，同样与点的样式无关。&lt;/p&gt;
&lt;p&gt;D. &lt;strong&gt;lines.marker&lt;/strong&gt;：这个参数直接决定了点的形状，如圆形、方形、菱形等。&lt;/p&gt;
&lt;p&gt;【答案】 D&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 下列代码中能够为图形添加图例的是 ( 	)&lt;/p&gt;
&lt;p&gt;A. plt.xticks([0,1,2,3, 4])&lt;/p&gt;
&lt;p&gt;B. plt.plot(x,y)&lt;/p&gt;
&lt;p&gt;C,plt.legend(&#39;y = cos x’)&lt;/p&gt;
&lt;p&gt;D. pit.title (散点图”)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】：&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;plt.legend(&#39;y = cos x&#39;)&lt;/code&gt;  能够为图形添加图例。这一行代码的作用是添加一个图例到图表中，其中  &lt;code&gt;&#39;y = cos x&#39;&lt;/code&gt;  是图例的文本，表明对应的图形代表什么。在 Matplotlib 库中， &lt;code&gt;plt.legend()&lt;/code&gt;  函数用于此目的。&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;plt.xticks([0,1,2,3,4])&lt;/code&gt;  用来设置 x 轴刻度标记的位置。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;plt.plot(x,y)&lt;/code&gt;  用来在图表中绘制线或者点，其中  &lt;code&gt;x&lt;/code&gt;  和  &lt;code&gt;y&lt;/code&gt;  是数据点的坐标。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;pit.title(&#39;散点图&#39;)&lt;/code&gt;  这里有一个拼写错误，应该是  &lt;code&gt;plt.title(&#39;散点图&#39;)&lt;/code&gt; ，该代码是用于给图表添加标题，而非图例。正确的函数名应该是  &lt;code&gt;plt&lt;/code&gt;  而非  &lt;code&gt;pit&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;【答案】 C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(4) 下列图形常用于分析各分组数据在总数据中所占比例的是（	)&lt;/p&gt;
&lt;p&gt;A. 折线图&lt;/p&gt;
&lt;p&gt;B. 饼图&lt;/p&gt;
&lt;p&gt;C. 柱形图&lt;/p&gt;
&lt;p&gt;D. 箱线图&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】 要分析各分组数据在总数据中所占的比例，最适合的图表类型是能够直观展示各部分占比关系的图形。选项中：&lt;/p&gt;
&lt;p&gt;A. 折线图通常用来展示数据随时间变化的趋势；&lt;/p&gt;
&lt;p&gt;B. 饼图用于展示各部分所占总体的比例，每个部分的大小代表其在整体中的比例，非常适合回答这类问题；&lt;/p&gt;
&lt;p&gt;C. 柱形图显示各个类别之间的比较，虽然也可以通过高度看出比例，但不如饼图直观；&lt;/p&gt;
&lt;p&gt;D. 箱线图则主要用于显示一组数据分散情况，特别是异常值、中位数等统计信息，不适合展示比例。&lt;/p&gt;
&lt;p&gt;【答案】 B. 饼图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(5) 下列说法不正确的是 (	)&lt;/p&gt;
&lt;p&gt;A. 散点图可以用于查看数据中的离释值&lt;/p&gt;
&lt;p&gt;B. 折线图可以用于查看数据的数最差和变化趋势&lt;/p&gt;
&lt;p&gt;C. 柱形图可以用于查看整体数据的数量分布&lt;/p&gt;
&lt;p&gt;D. 箱线图可以用于查看特征间的相关美系&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 散点图确实可以帮助识别数据中的离群点，因为它们会显示出与其他数据点不同的模式或位置，这一点是正确的。&lt;/p&gt;
&lt;p&gt;B. 折线图非常适合展示数据随时间的变化趋势以及观察最大值和最小值（即数量差异），因此这个描述也是正确的。&lt;/p&gt;
&lt;p&gt;C. 柱形图能够有效地展示不同类别的数据量大小，从而反映整体数据的数量分布，这同样是正确的。&lt;/p&gt;
&lt;p&gt;D. 箱线图（又称为盒须图）主要用来展示数据的五数概括（最小值、下四分位数、中位数、上四分位数、最大值）以及识别潜在的异常值，但它并不直接用于查看特征间的相关性。相关性通常通过散点图来分析，因此此选项说法不正确。&lt;/p&gt;
&lt;p&gt;【答案】 D. 箱线图可以用于查看特征间的关系（不正确）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(6) 下列有关 seabom 库说法正确的是 ( 	)&lt;/p&gt;
&lt;p&gt;A. 在 seabomn 库的主题样式中 dankgrid 表示黑色背最&lt;/p&gt;
&lt;p&gt;B. 使用 set_context 函数可以设置主题样式&lt;/p&gt;
&lt;p&gt;C. 使用 despine 函数可以设置图形的边框&lt;/p&gt;
&lt;p&gt;D.seabom 库是 Matplotlib 库的替代者&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. Seaborn 库提供了一系列预设的主题样式，用以改变图表的外观，包括背景颜色。&amp;quot;darkgrid&amp;quot; 是其中一个主题，它确实提供了带有网格线的深色背景，所以此说法是正确的。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;set_context&lt;/code&gt;  函数是用来设置 Seaborn 绘图的上下文 (context)，它会影响图表元素的大小，如文字大小、线条宽度等，以适应不同的展示场景（如论文、演讲或笔记）。虽然它间接影响图表的视觉风格，但直接说它可以 “设置主题样式” 可能不够准确，因为它主要不是用来切换颜色方案或背景风格的。Seaborn 中用于改变主题样式的函数主要是 &lt;code&gt;set_style&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;despine&lt;/code&gt;  函数用于移除图表中的轴脊（spines），即图表边框的部分，默认通常是顶部和右侧的边框，使得图表看起来更加现代化和简洁。因此，此说法是正确的，尽管它的表述没有提及是移除哪些边框或如何移除，但基于 Seaborn 中 despine 的功能，该描述基本正确。&lt;/p&gt;
&lt;p&gt;D. Seaborn 库并不是 Matplotlib 的替代者，而是建立在 Matplotlib 之上的一个高级数据可视化库，它提供了更易于使用的接口来创建统计图形，并且与 Matplotlib 高度兼容，可以用来增强 Matplotlib 的功能。因此，说 Seaborn 是 Matplotlib 的替代者是不准确的，它们更多是互补关系。&lt;/p&gt;
&lt;p&gt;【答案】 A 和 C 的描述是正确的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(7) HS 颜色空间中的日表示为 (	)&lt;/p&gt;
&lt;p&gt;A. 亮度&lt;/p&gt;
&lt;p&gt;B. 色调&lt;/p&gt;
&lt;p&gt;C. 饱和度&lt;/p&gt;
&lt;p&gt;D. 空间大小&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HS 颜色空间通常指的是 HSV（Hue, Saturation, Value）或 HSL（Hue, Saturation, Lightness）颜色空间的误写。在这些颜色空间中，各字母代表的意义为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;（Hue）：色调，表示色彩种类，如红、绿、蓝等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;（Saturation）：饱和度，表示颜色的纯度或者强度，饱和度越高颜色越鲜明，低饱和度则偏向灰色。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt; 或 &lt;strong&gt;L&lt;/strong&gt;（Value/Lightness）：明度 / 亮度，表示颜色的明暗程度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据这一解释，HS 中的 &amp;quot;S&amp;quot; 代表的是：&lt;/p&gt;
&lt;p&gt;C. 饱和度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(8) 下列不是系列配置项的是 (	)。&lt;/p&gt;
&lt;p&gt;A. 标记点配置项&lt;/p&gt;
&lt;p&gt;B. 标签配置项&lt;/p&gt;
&lt;p&gt;C. 文本样式配置项&lt;/p&gt;
&lt;p&gt;D. 标题配置项&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. 标记点配置项 - 通常指图表中数据点的样式设定，如颜色、形状、大小等，是常见的配置项。 B. 标签配置项 - 包括轴标签、图例标签等，用于定义图表中各种标签的显示方式，也是一个标准配置选项。 C. 文本样式配置项 - 涉及图表中所有文本的样式，比如字体、大小、颜色等，属于常见的配置范畴。 D. 标题配置项 - 虽然每个选项看起来都合理，但如果必须选出一个 “不是系列配置项” 的，从字面上理解，“系列” 可能指向数据系列（如柱状图中的不同分类、折线图的不同线条等），标题配置项（如图表的大标题）通常不直接关联到数据系列的展示细节，而是整个图表的高级设置。&lt;/p&gt;
&lt;p&gt;基于上述分析，如果问题旨在区分那些直接关联到数据表现形式的配置项与图表整体设置的话，那么：&lt;/p&gt;
&lt;p&gt;【答案】 D. 标题配置项（如果这里的 “系列配置项” 特指针对数据系列的详细配置，标题则更多关乎整个图表而非特定数据系列。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(9) 下列有关全局配置项说法错误的是 ( C&lt;/p&gt;
&lt;p&gt;A. 全局配置项可以对标题、图例、坐标轴等的配置项进行配置&lt;/p&gt;
&lt;p&gt;B. 使用 TitleOpts 类配置标题配置项&lt;/p&gt;
&lt;p&gt;C.TitleOpts 类和 AxisOpts 类的参数设置完全相同&lt;/p&gt;
&lt;p&gt;D. 使用 LegendOpts 类配置图例配置项&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 全局配置项确实可以用来设置图表的多个基础元素，如标题、图例、坐标轴等的外观和行为，这是正确的描述。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;TitleOpts&lt;/code&gt;  类通常用于配置图表的标题，包括标题文本、位置、字体样式等，符合全局配置项的用途，此描述正确。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;TitleOpts&lt;/code&gt;  类和  &lt;code&gt;AxisOpts&lt;/code&gt;  类虽然都是配置项的类，但是它们设置的参数并不完全相同。 &lt;code&gt;TitleOpts&lt;/code&gt;  主要关注标题的配置，如文本、位置、样式等；而  &lt;code&gt;AxisOpts&lt;/code&gt;  则侧重于坐标轴的配置，包括刻度、标签、标题、网格线等。因此，这个说法是错误的。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;LegendOpts&lt;/code&gt;  类用于配置图表的图例，包括图例的位置、是否显示、图例项的样式等，这也是正确的描述。&lt;/p&gt;
&lt;p&gt;【答案】 C. TitleOpts 类和 AxisOpts 类的参数设置完全相同（错误）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(10) 下列说法正确的是 (  	)&lt;/p&gt;
&lt;p&gt;A. 基本散点图和 3D 散点图的绘制方法相同&lt;/p&gt;
&lt;p&gt;B. 热力图可用于了解数据集中的变量的相关关系&lt;/p&gt;
&lt;p&gt;C.stripplot 函数接收的数据只能是列表和数据框&lt;/p&gt;
&lt;p&gt;D. 使用 stripplot 函数可以绘制线性回归拟合图&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【解析】&lt;/p&gt;
&lt;p&gt;A. 基本散点图和 3D 散点图的绘制方法不相同。基本散点图一般在二维平面上展示，而 3D 散点图则是在三维空间中展示，两者需要不同的函数或者参数来实现，比如在 Matplotlib 中，基本散点图使用 &lt;code&gt;scatter()&lt;/code&gt;  函数，而 3D 散点图则使用 &lt;code&gt;scatter3D()&lt;/code&gt;  或 &lt;code&gt;Axes3D.scatter()&lt;/code&gt;  方法，故该选项错误。&lt;/p&gt;
&lt;p&gt;B. 热力图（Heatmap）通过颜色的深浅变化展示数据矩阵，常用于展示数据集中变量间相关性，颜色越深通常表示相关性越强（正相关或负相关），是探索变量间关系的有效工具，故此选项正确。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;stripplot&lt;/code&gt;  是 Seaborn 库中的一个函数，用于创建简单的散点图，可以接收多种类型的数据输入，包括 Pandas 的 DataFrame、Series 以及 NumPy 数组等，并不仅限于列表和数据框，因此该选项错误。&lt;/p&gt;
&lt;p&gt;D.  &lt;code&gt;stripplot&lt;/code&gt;  函数主要用于创建分组散点图，并不直接用于绘制线性回归拟合图。在 Seaborn 中，通常使用 &lt;code&gt;regplot()&lt;/code&gt;  或 &lt;code&gt;lmplot()&lt;/code&gt;  函数来绘制带有线性回归线的图表，故此选项错误。&lt;/p&gt;
&lt;p&gt;【答案】 B. 热力图可用于了解数据集中的变量的相关关系（正确）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第6章-使用-scikit-learn-构建模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第6章-使用-scikit-learn-构建模型&#34;&gt;#&lt;/a&gt; 第 6 章 使用 scikit-learn 构建模型&lt;/h2&gt;
&lt;p&gt;(1) skleam 转换器的主要方法不包据 ( 	)&lt;/p&gt;
&lt;p&gt;A. fit()&lt;/p&gt;
&lt;p&gt;B. transform()&lt;/p&gt;
&lt;p&gt;C:fa_transform()&lt;/p&gt;
&lt;p&gt;D, fit_transforms()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是&lt;/p&gt;
&lt;p&gt;D,  &lt;code&gt;fit_transforms()&lt;/code&gt; 。在 Scikit-learn 库中，转换器（Transformer）的主要方法包括：&lt;/p&gt;
&lt;p&gt;A.  &lt;code&gt;fit()&lt;/code&gt; : 用于学习数据的统计属性（如均值、方差），该方法不会改变数据，只是拟合模型。&lt;/p&gt;
&lt;p&gt;B.  &lt;code&gt;transform()&lt;/code&gt; : 应用 &lt;code&gt;fit()&lt;/code&gt;  所学到的统计属性对数据进行转换或处理。&lt;/p&gt;
&lt;p&gt;C.  &lt;code&gt;fit_transform()&lt;/code&gt; : 这是一个组合方法，先调用 &lt;code&gt;fit()&lt;/code&gt;  学习数据特性，然后立即调用 &lt;code&gt;transform()&lt;/code&gt;  对同一数据应用变换。这个方法常用于训练阶段。&lt;/p&gt;
&lt;p&gt;但是，没有名为 &lt;code&gt;fit_transforms()&lt;/code&gt;  的方法。因此，选项 D 是不正确的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(2) skleam 中用于对特征进行归一化的函数是 ( 	)&lt;/p&gt;
&lt;p&gt;A.StandardScaler&lt;/p&gt;
&lt;p&gt;B, Normalizer&lt;/p&gt;
&lt;p&gt;C.Binarizer&lt;/p&gt;
&lt;p&gt;D.MinMaxScaler&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是&lt;/p&gt;
&lt;p&gt;B,  &lt;code&gt;Normalizer&lt;/code&gt; 。在 Scikit-learn 库中，用于对特征进行归一化的函数确实包括 &lt;code&gt;Normalizer&lt;/code&gt; 。它通过将每个样本的各个特征缩放到单位范数来实现归一化，这意味着每个样本的欧几里得范式（即各特征值的平方和的平方根）将会变为 1，这通常用于文本数据或任何其他需要向量规范化的情况。&lt;/p&gt;
&lt;p&gt;而其他选项： A.  &lt;code&gt;StandardScaler&lt;/code&gt;  是用于标准化特征，即将特征调整为具有零均值和单位方差的高斯分布，而不是简单的归一化。 C.  &lt;code&gt;Binarizer&lt;/code&gt;  用于二值化特征，根据阈值将连续型特征离散化为二元状态。 D.  &lt;code&gt;MinMaxScaler&lt;/code&gt;  用于缩放特征到一个指定的最小值和最大值之间，通常是 0 和 1，这也是一种归一化方法，但更具体的是最小 - 最大缩放。&lt;/p&gt;
&lt;p&gt;如果问题是特指 “归一化” 到单位范数，那么正确答案是 B,  &lt;code&gt;Normalizer&lt;/code&gt; 。但如果问题意图更广泛地指 “标准化 / 归一化”，则 D,  &lt;code&gt;MinMaxScaler&lt;/code&gt;  也是一个常见的选择，尽管它不符合严格的数学定义下的 “归一化”。因此，请根据上下文判断题目意图。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(3) 下列算法中属于分类方法的是 (	)&lt;/p&gt;
&lt;p&gt;A.SVC 算法&lt;/p&gt;
&lt;p&gt;B.CLIOUE 算法&lt;/p&gt;
&lt;p&gt;D.K-MEDOIDS 算法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. SVC 算法 —— 支持向量机（Support Vector Classifier）是一种常用的分类方法，它能够处理线性和非线性可分数据，通过寻找最优超平面来完成分类任务。&lt;/p&gt;
&lt;p&gt;B. CLIOUE 算法 —— 此选项可能指的是 CLIQUE 算法，通常用于图的社区结构发现，不是一种标准的分类方法，但若为笔误或特殊上下文中的分类应用，则需具体分析。然而，直接从名称看，它不直接对应于典型的分类算法。&lt;/p&gt;
&lt;p&gt;D. K-MEDOIDS 算法 —— 是聚类算法的一种，用于将数据集划分成 K 个簇，每个簇由一个中心对象（medoid）代表，与 K-Means 算法相似，但选择实际数据点作为中心，而不是均值点。这不属于分类方法，而是无监督学习中的聚类方法。&lt;/p&gt;
&lt;p&gt;基于上述分析，如果仅从分类方法的角度考虑，正确答案应是 A.SVC 算法。但请注意，选项列表似乎缺少了 C 选项，且 B 选项的描述可能需要具体情境来精确解读其是否涉及分类。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(4) classification_report 函数用于输出分类模型评价报告，其内容不包括 ( 	)。&lt;/p&gt;
&lt;p&gt;A. precision&lt;/p&gt;
&lt;p&gt;B. recall&lt;/p&gt;
&lt;p&gt;C.fl-score&lt;/p&gt;
&lt;p&gt;D. true postive rate&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是 D. true positive rate（真正率 / 灵敏度）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;classification_report&lt;/code&gt;  函数是 Scikit-learn 库中的一个功能，用于输出多类分类模型的性能评估报告。这个报告通常包含以下指标：&lt;/p&gt;
&lt;p&gt;A. Precision（精确率）：衡量被分类器预测为正例的样本中实际为正例的比例。 B. Recall（召回率）：衡量所有实际正例中被分类器正确识别出来的比例，也就是真正率。 C. F1-score（F 分数）：是 Precision 和 Recall 的调和平均值，用于综合评估模型的精确度和召回率。&lt;/p&gt;
&lt;p&gt;而 D. True Positive Rate（真正率）实际上是 Recall 的另一种说法，所以在 &lt;code&gt;classification_report&lt;/code&gt;  中是直接提供的，并不意味着它不被包含在内。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(5) 下列关于回归模型评价指标说法不正确的是 ( D&lt;/p&gt;
&lt;p&gt;A. 平均绝对误差的值越接近 0，模型性能越好&lt;/p&gt;
&lt;p&gt;B.R 值越接近 1，模型性能越好&lt;/p&gt;
&lt;p&gt;C. 可解释方差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;D. 均方误差越接近 0，模型性能越差&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是 D. 均方误差越接近 0，模型性能越差&lt;/p&gt;
&lt;p&gt;这是不正确的说法。实际上，均方误差（Mean Squared Error, MSE）越接近 0，表示模型预测值与真实值之间的差距越小，也就是说模型的性能越好。因此，正确的描述应该是均方误差越接近 0，模型性能越好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;分析题根据题目要求绘制项目聚类或分类流程图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析题根据题目要求绘制项目聚类或分类流程图&#34;&gt;#&lt;/a&gt; 分析题：根据题目要求绘制项目聚类或分类流程图&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/4e51ba49091c481fbed4dfc7a23be5d.jpg&#34; alt=&#34;4e51ba49091c481fbed4dfc7a23be5d&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/f261e966cada56fb4a6663378821c71.jpg&#34; alt=&#34;f261e966cada56fb4a6663378821c71&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/1fdd8a4002ca1c5b768f527483eec13.jpg&#34; alt=&#34;1fdd8a4002ca1c5b768f527483eec13&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;简答题numpy-pandas&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简答题numpy-pandas&#34;&gt;#&lt;/a&gt; 简答题：Numpy、Pandas&lt;/h1&gt;
&lt;h2 id=&#34;1阐述numpy中的两大对象及其特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1阐述numpy中的两大对象及其特点&#34;&gt;#&lt;/a&gt; 1：阐述 Numpy 中的两大对象及其特点&lt;/h2&gt;
&lt;p&gt;NumPy 提供了 &lt;span class=&#34;red&#34;&gt;两种基本的对象&lt;/span&gt;： ndarray 和 ufunc&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ndarray（N-dimensional Array Object）：存储单一数据类型的多维数组。&lt;/li&gt;
&lt;li&gt;特点：多维性、数据存储、维度和形状、向量化操作&lt;/li&gt;
&lt;li&gt;ufunc（Universal Function Object）：能够对数组进行处理的函数。&lt;/li&gt;
&lt;li&gt;特点：向量化操作、广播机制、支持多种数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2阐述pandas的作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2阐述pandas的作用&#34;&gt;#&lt;/a&gt; 2：阐述 Pandas 的作用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pandas 是一个开源的数据分析和数据处理库，基于 Python 编程语言&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Pandas 提供了易于使用的数据结构和数据分析工具，特别适用于处理结构化数据，如表格型数据。它主要引入了两种新的数据结构：DataFrame 和 Series，使得用户能够轻松地从各种数据源中导入数据，并对数据进行高效的操作和分析。&lt;/p&gt;
&lt;h2 id=&#34;3介绍pandas的数据结构及其特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3介绍pandas的数据结构及其特点&#34;&gt;#&lt;/a&gt; 3：介绍 Pandas 的数据结构及其特点。&lt;/h2&gt;
&lt;p&gt;pandas 有两个强大的利器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;Series（一维数据）&lt;/span&gt;是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。&lt;/li&gt;
&lt;li&gt;特点：&lt;strong&gt;索引与数据对应、一维数据结构、数据类型可不同等&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;DataFrame 是 pandas 中的一个表格型的数据结构&lt;/span&gt;，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。&lt;/li&gt;
&lt;li&gt;特点：&lt;strong&gt;二维表格结构、大小可变、潜在的异质性等&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4列出并解释pandas中用于读写csv数据的相关函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4列出并解释pandas中用于读写csv数据的相关函数&#34;&gt;#&lt;/a&gt; 4：列出并解释 Pandas 中用于读写 CSV 数据的相关函数。&lt;/h2&gt;
&lt;p&gt;Pandas 库提供了 **read_csv () 和 to_csv ()** 两个主要函数，分别用于读取和写入 CSV 数据。&lt;/p&gt;
&lt;p&gt;read_csv () 函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个函数用于从 CSV 文件中读取数据，将数据转换为 Pandas 的 DataFrame 对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to_csv () 方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此方法用于将 DataFrame 对象写入 CSV 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;代码题sklearn-应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码题sklearn-应用&#34;&gt;#&lt;/a&gt; 代码题：Sklearn 应用&lt;/h1&gt;
&lt;h2 id=&#34;app-用户群体划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#app-用户群体划分&#34;&gt;#&lt;/a&gt; APP 用户群体划分&lt;/h2&gt;
&lt;p&gt;在 App 上架前需要收集测试用户或人员的体验数据，分析反馈的数据，从而对 App 进行相应的调整。某研发团队为调查所设计的 App 是否可以上架，统计了 13 万左右测试用户的 App 使用数据，并存储于 “某 App 用户信息数据.csv” 数据集中，部分某 App 用户信息数据如表 1 所示。通过对数据进行聚类，以区分不同的用户群体，从而对不同的群体确定是否分享 App, 进而创造流量价值用户，同时将聚类结果与 “是否点击分享” 特征数据进行对比，评价聚类分析结果。&lt;/p&gt;
&lt;p&gt;表 1 部分某 App 用户信息数据:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;用户名&lt;/th&gt;
&lt;th&gt;在线时  长 (分钟)&lt;/th&gt;
&lt;th&gt;时间所  占比例&lt;/th&gt;
&lt;th&gt;不愿分  享概率&lt;/th&gt;
&lt;th&gt;愿意分  享概率&lt;/th&gt;
&lt;th&gt;是否点  击分享&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;George&lt;/td&gt;
&lt;td&gt;1495736&lt;/td&gt;
&lt;td&gt;0.004093442&lt;/td&gt;
&lt;td&gt;NA&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruth&lt;/td&gt;
&lt;td&gt;832959&lt;/td&gt;
&lt;td&gt;0.002279593&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jack&lt;/td&gt;
&lt;td&gt;1124354&lt;/td&gt;
&lt;td&gt;0.003532150&lt;/td&gt;
&lt;td&gt;-0.50&lt;/td&gt;
&lt;td&gt;0.40&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Joy&lt;/td&gt;
&lt;td&gt;342119&lt;/td&gt;
&lt;td&gt;0.00023350&lt;/td&gt;
&lt;td&gt;1.50&lt;/td&gt;
&lt;td&gt;-1.50&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jessica&lt;/td&gt;
&lt;td&gt;1173979&lt;/td&gt;
&lt;td&gt;0.003212876&lt;/td&gt;
&lt;td&gt;0.32&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(1)    处理某 App 用户信息数据集。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。&lt;/li&gt;
&lt;li&gt;将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。&lt;/li&gt;
&lt;li&gt;将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。&lt;/li&gt;
&lt;li&gt;将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) 构建与用户使用信息相关的特征。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义 to_code 函数，用于对用户名特征首字母进行编码。&lt;/li&gt;
&lt;li&gt;对在线时长特征进行分段处理后生成分段在线时长新特征。&lt;/li&gt;
&lt;li&gt;使用 apply 方法构建首字母编码新特征。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(3) 构建 K-Means 聚类模型。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取构建新特征后的数据集，区分标签和数据。&lt;/li&gt;
&lt;li&gt;构建 K-Means 模型，且聚类数为 2。&lt;/li&gt;
&lt;li&gt;使用 FMI 评价法评价聚类模型性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (1)    处理某 App 用户信息数据集。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 使用 Pandas 库读取 “某 APP 用户信息数据.csv” 数据集。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;F:\3.homework\大三下\数据分析\实验数据data\某APP用户信息数据.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gbk&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 将不愿分享概率与愿意分享概率特征中的缺失值用 0.0 替换。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fillna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fillna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 将不愿分享概率与愿意分享概率特征中负值赋值为 0, 并将大于 1 的值改为 1。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 4. 将是否点击分享特征中的 T 重新赋值为 1, 将 F 重新赋值为 0。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;T&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;F&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (2) 构建与用户使用信息相关的特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 自定义 to_code 函数，用于对用户名特征首字母进行编码。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;coding &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    coding&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# coding = &amp;#123;&#39;a&#39;:0, &#39;b&#39;:1, &#39;c&#39;:2, &#39;d&#39;:3, &#39;e&#39;:4, &#39;f&#39;:5,&#39;g&#39;:6,&#39;h&#39;:7,&#39;i&#39;:8,&#39;j&#39;:9,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#           &#39;k&#39;:10,&#39;l&#39;:11, &#39;T&#39;:12,&#39;n&#39;:13,&#39;o&#39;:14,&#39;p&#39;:15,&#39;q&#39;:16,&#39;r&#39;:17,&#39;s&#39;:18,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#           &#39;t&#39;:19,&#39;u&#39;:20,&#39;v&#39;:21,&#39;w&#39;:22, &#39;x&#39;:23,&#39;y&#39;:24,&#39;z&#39;:25&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;to_code&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 名字全部小写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;  s &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; coding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; coding&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 对在线时长特征进行分段处理后生成分段在线时长新特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;分组后在线时长&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qcut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;在线时长&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; labels&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 使用 apply 方法构建首字母编码新特征。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户编码&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user_clean&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;用户名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; to_code&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# (3) 构建 K-Means 聚类模型。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user_feature &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; user_clean&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cluster &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; KMeans&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; fowlkes_mallows_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 1. 读取构建新特征后的数据集，区分标签和数据。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;X&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_feature&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;不愿分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;愿意分享概率&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;在线时长&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;在线时长占比&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;分组后在线时长&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_feature&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;是否点击分享&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 2. 构建 K-Means 模型，且聚类数为 2。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;model&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;KMeans&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n_clusters&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 3. 使用 FMI 评价法评价聚类模型性能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fowlkes_mallows_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;labels_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;二手手机价格预测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二手手机价格预测&#34;&gt;#&lt;/a&gt; 二手手机价格预测&lt;/h2&gt;
&lt;p&gt;某回收二手手机的公司为了在公司的交易软件中显示预测的二手手机价格，使用用户在交易软件上的交易数据 (phone.csv)，预测回收二手手机的价格。交易数据的特征说明如表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特征&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;用户编码&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;battery_power&lt;/td&gt;
&lt;td&gt;电池容量（单位：mA）&lt;/td&gt;
&lt;td&gt;1520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blue_tooth&lt;/td&gt;
&lt;td&gt;蓝牙是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clock_speed&lt;/td&gt;
&lt;td&gt;开机时间（单位：min）&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dual_sim&lt;/td&gt;
&lt;td&gt;是否双卡双待。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fc&lt;/td&gt;
&lt;td&gt;前置摄像头像素（单位：px）&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;four_g&lt;/td&gt;
&lt;td&gt;是否支持 4G。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int_memory&lt;/td&gt;
&lt;td&gt;内存剩余大小（单位：GB）&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m_dep&lt;/td&gt;
&lt;td&gt;手机厚度（单位：cm）&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mobile_wt&lt;/td&gt;
&lt;td&gt;手机重量（单位：g）&lt;/td&gt;
&lt;td&gt;192&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n_cores&lt;/td&gt;
&lt;td&gt;处理器内核数&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pc&lt;/td&gt;
&lt;td&gt;主摄像头像素（单位：px）&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;px_height&lt;/td&gt;
&lt;td&gt;像素分辨率高度（单位：px）&lt;/td&gt;
&lt;td&gt;1270&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;px_width&lt;/td&gt;
&lt;td&gt;像素分辨率宽度（单位：px）&lt;/td&gt;
&lt;td&gt;1336&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ram&lt;/td&gt;
&lt;td&gt;运行内存（单位：MB）&lt;/td&gt;
&lt;td&gt;3506&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sc_h&lt;/td&gt;
&lt;td&gt;手机屏幕高度（单位：cm）&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sc_w&lt;/td&gt;
&lt;td&gt;手机屏幕宽度（单位：cm）&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;talk_time&lt;/td&gt;
&lt;td&gt;充满电耗时（单位：h）&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;three_g&lt;/td&gt;
&lt;td&gt;是否支持 3G。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;touch_screen&lt;/td&gt;
&lt;td&gt;触摸屏是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wifi&lt;/td&gt;
&lt;td&gt;Wi-Fi 连接是否正常。其中 0 表示否，1 表示是&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;price range&lt;/td&gt;
&lt;td&gt;手机价格等级，其中 0 表示低，1 表示中，2 表示较高，3 表示高&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现需利用交易数据建立分类模型对二手手机价格进行预测，步骤如下。&lt;br /&gt;
(1) 删除有异常值的行 (手机厚度小于等于 0cm)。&lt;br /&gt;
(2) 建立随机森林分类模型对数据进行训练。&lt;br /&gt;
(3) 计算模型准确率，评价分类模型效果。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 加载所需的函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RandomForestClassifier&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data/phone.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 读取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 处理异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;m_dep&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理手机厚度异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; phone_data1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;axis &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; phone_data1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 将数据划分为训练集测试集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           phone_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           test_size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           random_state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 数据标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_trainStd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_testStd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 建立 RandomForestClassifier 模型 (随机森林)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RandomForestClassifier&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_trainStd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;建立的 rfc 模型为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 预测训练集结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;phone_target_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_testStd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测的前 20 个结果为：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_pred&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算准确率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;true &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;phone_target_pred &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 求出预测和真实一样的数目&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测对的结果数目为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; true&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测错的的结果数目为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; true&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;预测结果准确率为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; true &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; phone_target_test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;客户服装尺寸预测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#客户服装尺寸预测&#34;&gt;#&lt;/a&gt; 客户服装尺寸预测&lt;/h2&gt;
&lt;p&gt;某淘宝成年女装店铺为了能够给客户推荐合适的成年女装尺寸，构建了相应的尺寸预测模型。目前店铺利用已购买服装客户的数据集 (size_data.csv) 进行模型的训练，其中部分尺寸信息数据如表 1 所示。&lt;/p&gt;
&lt;p&gt;表 1 部分尺寸信息数据&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;体重 (kg)&lt;/th&gt;
&lt;th&gt;年龄 (岁)&lt;/th&gt;
&lt;th&gt;身高 (cm)&lt;/th&gt;
&lt;th&gt;尺寸&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;172.72&lt;/td&gt;
&lt;td&gt;XL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;167.64&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;165.1&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;175.26&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;160.02&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(1) 处理尺码信息数据。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用 read_csv 函数读取 size_data.csv.&lt;/li&gt;
&lt;li&gt;查看数据集大小，并利用 dropna () 方法删除缺失值。&lt;/li&gt;
&lt;li&gt;删除年龄、体重异常值 (年龄小于 18 岁，体重低于 30kg)。&lt;/li&gt;
&lt;li&gt;查看数据异常值和缺失值是否删除成功。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) 构建支持向量机、决策树、随机森林几种分类模型预测客户服装尺寸&lt;/p&gt;
&lt;p&gt;为改善模型预测效果，根据原有特征构建新特征。使用实训 1 中预处理后的数据，计算 BMI 值并构建 BML_ range 特征。BMI 计算公式下面所示。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;BMI = 体重 (kg)/ 身高 (m2)&lt;/li&gt;
&lt;li&gt;BMI_range 特征的构建规则如下。&lt;/li&gt;
&lt;li&gt;当 BMI&amp;lt;18.5 时，BMI_range 值为 0。&lt;/li&gt;
&lt;li&gt;当 18.5≤BMI&amp;lt;24 时，BMI_range 值为 1。&lt;/li&gt;
&lt;li&gt;当 24≤BMI-28 时，BMI_range 值为 2。&lt;/li&gt;
&lt;li&gt;当 BMI≥28 时，BMI_range 值为 3。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了提高客户满意度，需要基于客户基本信息为客户推荐合适的服装尺寸。因此需要&lt;/p&gt;
&lt;p&gt;使用处理后的数据调用支持向量机、决策树、随机森林分类算法构建模型，预测客户服装尺寸。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;构建 BMI_range 特征。&lt;/li&gt;
&lt;li&gt;构建支持向量机、决策树、随机森林分类模型预测服装尺寸。&lt;/li&gt;
&lt;li&gt;评估支持向量机、决策树、随机森林分类模型效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  warnings&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;warnings&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filterwarnings&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ignore&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 读取数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;../data/size_data.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看数据大小&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 删除缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnull&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看是否存在缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dropna&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 删除缺失值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnull&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看缺失值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 处理异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理年龄异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_age&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;size_data_age&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 处理体重异常值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_weight&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;drop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 重新生成索引&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_weight&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看年龄异常值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看体重异常值是否删除成功&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 BMI 特征 (体重 / 身高 **2)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;weight&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;height&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义 BMI 段函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bmi_range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18.5&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt;  data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt;  data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建 BMI 分段特征列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bmi_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BMI_range&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# data 与 target 划分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size_data_end&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 训练集与测试集划分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; test_size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random_state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;shuffle&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;stratify&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;size_target&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; confusion_matrix&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;precision_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;recall_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;f1_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自定义评价函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_pre&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;混淆矩阵：\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; confusion_matrix&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;labels&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;S&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;M&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;L&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;XL&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 混淆矩阵&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;精确率：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; precision_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 精确率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;召回率：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; recall_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 召回率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F1值：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f1_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_te&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pred&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;average&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;macro&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# F1 值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 数据标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_train_std &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;size_test_std &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScaler&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 SVM 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;svm &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; SVC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;svm &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SVC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 预测训练集结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;svc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; svm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SVM 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;svc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 决策树 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tree &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DecisionTreeClassifier &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; DTC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 训练模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dtc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 评价模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;决策树 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dtc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建 随机森林 模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; RandomForestClassifier &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; RFC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; RFC&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_train_std&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 训练模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rfc_pred &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rfc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_test_std&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 评价模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;随机森林 模型预测结果：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test_pre&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;rfc_pred&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;钻石价格预测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#钻石价格预测&#34;&gt;#&lt;/a&gt; 钻石价格预测&lt;/h2&gt;
&lt;p&gt;某珠宝店新增钻石回收业务，为了对客户提供的钻石更好地进行估价，该店铺收集了行业内近期所售钻石的 4C 等级、尺寸和相应价格等数据，存为钻石价格数据集 (diamond_price.csv), 包括克拉、切工等级、色泽、净度等 9 个特征。钻石价格数据集的特征说明如表 2 所示。&lt;/p&gt;
&lt;p&gt;表 2 钻石价格数据集的特征说明:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特征各称&lt;/th&gt;
&lt;th&gt;特征含义&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;克拉&lt;/td&gt;
&lt;td&gt;钻石的重量&lt;/td&gt;
&lt;td&gt;0.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;切工等级&lt;/td&gt;
&lt;td&gt;包括 5 个等级，其中 1 表示完美；2 表示十分珍贵；3 表示很好；4 表示好；5 表示一般&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;色泽&lt;/td&gt;
&lt;td&gt;钻石色泽从 D 到 J 分为 7 个级别，其中 1 表示 D 级，完全无色；2 表示 E 级，无色；3 表示 F 级，几乎无色；4 表示 G 级，接近无色；5 表示 H 级，接近无色；6 表示 1 级，肉眼可见少量黄色；7 表示 J 级，肉眼可见少量黄色&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;净度&lt;/td&gt;
&lt;td&gt;钻石净度由高到低分为 8 个级别，其中 1 表示 IF, 内无瑕级；2 表示 VVS1, 极轻微内含级 1;3 表示 VVs2, 极轻微内含级 2;4 表示  VS1, 轻微内含级 1; 5 表示 Vs2, 轻微内含级 2;6 表示 SI1, 微含级 1;7 表示 SI2, 微含级 2;8 表示 I1, 内含级&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;台宽比&lt;/td&gt;
&lt;td&gt;钻石桌面的宽度占其平均直径的百分比&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;长度&lt;/td&gt;
&lt;td&gt;钻石的长度&lt;/td&gt;
&lt;td&gt;3.96&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;宽度&lt;/td&gt;
&lt;td&gt;钻石的宽度&lt;/td&gt;
&lt;td&gt;3.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;高度&lt;/td&gt;
&lt;td&gt;钻石的高度&lt;/td&gt;
&lt;td&gt;2.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格 (美元)&lt;/td&gt;
&lt;td&gt;钻石的价格&lt;/td&gt;
&lt;td&gt;326&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用钻石价格数据集，构建回归模型预测回收的钻石价格，具体步骤如下。&lt;/p&gt;
&lt;p&gt;(1) 读取钻石价格数据集。&lt;/p&gt;
&lt;p&gt;(2) 经过观察数据发现，长度、宽度、高度特征存在 0 值，删除该 3 个特征中所有出&lt;/p&gt;
&lt;p&gt;现 0 值的行数据，并对其他数据进行重新索引。&lt;/p&gt;
&lt;p&gt;(3) 新增价格 (人民币) 特征，假定 1 美元等于 6.50 人民币。&lt;/p&gt;
&lt;p&gt;(4) 拆分特征数据和标签数据，特征数据为克拉、切工等级、色泽、净度、台宽比、&lt;/p&gt;
&lt;p&gt;长度、宽度、高度，标签数据为价格 (人民币) 特征。&lt;/p&gt;
&lt;p&gt;(5) 划分训练集和测试集，并对训练集和测试集进行标准差标准化。&lt;/p&gt;
&lt;p&gt;(6) 构建 SVR 等至少两种回归模型进行钻石价格预测，并输出回归模型评价指标，查看模型效果。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 读取数据集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data/diamond_price.csv&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gbk&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#预处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;X(length)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                              &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Y(width)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                              &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Z(Depth)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inplace&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; drop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;price_RMB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  diamond&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Price(in US dollars)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6.50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 拆分数据和标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 特征列选择&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# from  sklearn.linear_model import  Lasso&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# data_train = (diamond_data-diamond_data.mean())/diamond_data.std()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# lasso = Lasso(alpha=1000).fit(data_train,diamond_target)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# print(lasso.coef_)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# diamond_data = diamond.iloc[:, [0,1,2,3]]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 划分训练集和测试集&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model_selection &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; \&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;train_test_split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; test_size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;random_state&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# # 标准差标准化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;preprocessing &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StandardScaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stdScale &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StandardScaler&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_trainScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScale&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;diamond_testScaler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stdScale&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#定义评价函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metrics &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; explained_variance_score&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  r2_score&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;回归模型的可解释方差值为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          explained_variance_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;回归模型的R方值为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          r2_score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 构建回归模型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;svm &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; LinearSVR&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 支持向量回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SVR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LinearSVR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_train&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SVR_diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_data_test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;支持向量回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#梯度提升回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensemble &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  GradientBoostingRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;GBR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; GradientBoostingRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; GBR_diamond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;梯度提升回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#回归决策树&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tree &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  DecisionTreeRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DTR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  DecisionTreeRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;回归决策树:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#线性回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;linear_model &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; LinearRegression&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;   LinearRegression&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; LR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;线性回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#最近邻回归&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sklearn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;neighbors &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;  KNeighborsRegressor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KNR_diamond &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  KNeighborsRegressor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_trainScaler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; diamond_target_train&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_pred5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DTR_diamond &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;predict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_testScaler&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;最近邻回归:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;diamond_target_test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y_pred5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <updated>2024-06-18T04:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review3/</id>
        <title>数据分析复习（第三章）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review3/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;第三章-pandas统计分析基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-pandas统计分析基础&#34;&gt;#&lt;/a&gt; 第三章、pandas 统计分析基础&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;章节考点：&lt;/p&gt;
&lt;p&gt;（1）Pandas 作用&lt;/p&gt;
&lt;p&gt;（2）重复值、缺失值处理函数及方法&lt;/p&gt;
&lt;p&gt;（3）Pandas 数据结构及特点&lt;/p&gt;
&lt;p&gt;（4）读写 CSV 数据的相关函数&lt;/p&gt;
&lt;p&gt;（5）数据合并&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1读写不同数据源的数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1读写不同数据源的数据&#34;&gt;#&lt;/a&gt; 1. 读 / 写不同数据源的数据&lt;/h2&gt;
&lt;h3 id=&#34;1认识pandas库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1认识pandas库&#34;&gt;#&lt;/a&gt; 1）认识 pandas 库&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;pandas 是 Python 的核心数据分析支持库，提供了快速、灵活、明确的数据结构，旨在简单、直观地处理关系型、标记型数据（数值型、文本型、时间序列）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;pandas 建造在 NumPy 之上&lt;/span&gt;，所以使得 pandas 在以 NumPy 为中心的应用中得以容易的使用，而 pandas 库在与其它第三方科学计算支持库结合时也能够完美的进行集成。&lt;/p&gt;
&lt;p&gt;在 Python 中，pandas 库的功能十分强大，它可提供高性能的矩阵运算。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;可用于数据挖掘和数据分析，同时也提供数据清洗功能；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;支持类似 SQL 的数据增、删、查、改，并且带有丰富的数据处理函数；&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;支持时间序列分析功能；支持灵活处理缺失数据等。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2pandas数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2pandas数据结构&#34;&gt;#&lt;/a&gt; 2）Pandas 数据结构&lt;/h3&gt;
&lt;p&gt;pandas 有两个强大的利器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;Series（一维数据）&lt;/span&gt;是一种类似于一维数组的对象，是由一组数据（各种 NumPy 数据类型）以及一组与之相关的数据标签（即索引）组成，而仅由一组数据也可产生简单的 Series 对象。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617220651884.png&#34; alt=&#34;Series&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;DataFrame 是 pandas 中的一个表格型的数据结构&lt;/span&gt;，包含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型等），DataFrame 既有行索引也有列索引，可以被看做是由 Series 组成的字典。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617220727377.png&#34; alt=&#34;DataFrame&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;1series对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1series对象&#34;&gt;#&lt;/a&gt; ①Series 对象&lt;/h4&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; copy&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：data 可以是标量、列表、迭代对象、字典、ndarray 等对象。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;str&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#标量，设置了索引与类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#列表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#迭代对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;H1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;H2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;H3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#字典，键为索引&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;s5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;#ndarray&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 输出结果：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; int64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; int64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;a    H1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;b    H2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;c    H3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    x&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;    y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;    z&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Series 属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;axes：以列表的形式返回所有行索引标签&lt;/li&gt;
&lt;li&gt;dtype：返回对象的数据类型。&lt;/li&gt;
&lt;li&gt;empty：返回一个布尔值，判断数据对象是否为空&lt;/li&gt;
&lt;li&gt;ndim：返回输入数据的维数&lt;/li&gt;
&lt;li&gt;size：返回输入数据的元素数量&lt;/li&gt;
&lt;li&gt;values：以 ndarray 的形式返回 Series 对象&lt;/li&gt;
&lt;li&gt;index：返回一个索引的取值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Series 查询操作&lt;/p&gt;
&lt;p&gt;使用索引、切片方式&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;info &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;张三&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;tel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;13500100203&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hobby&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上网,打游戏,运动&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;info&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sd&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;tel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sd&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sd&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;2dataframe对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2dataframe对象&#34;&gt;#&lt;/a&gt; ②DataFrame 对象&lt;/h4&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; copy&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#构造 DataFrame 数据框架&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：（1）从列表、字典、ndarray 等对象转化为 DataFrame。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;info &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;张三&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;tel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;13500100203&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hobby&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上网,打游戏,运动&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Series&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;info&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;df2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;info&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;tel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hobby&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;df2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;DataFrame 属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;values：DataFrame 所有行的值&lt;/li&gt;
&lt;li&gt;index：DataFrame 行索引&lt;/li&gt;
&lt;li&gt;colums：DataFrame 列名&lt;/li&gt;
&lt;li&gt;dtypes：DataFrame 指定列数据类型&lt;/li&gt;
&lt;li&gt;size：DataFrame 元素的个数&lt;/li&gt;
&lt;li&gt;ndim：DataFrame 维度&lt;/li&gt;
&lt;li&gt;shape：DataFrame 形状&lt;/li&gt;
&lt;li&gt;T: 实现 DataFrame 转置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2读写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2读写文件&#34;&gt;#&lt;/a&gt; 2）读 / 写文件&lt;/h3&gt;
&lt;h4 id=&#34;1文本文件读取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1文本文件读取&#34;&gt;#&lt;/a&gt; ①文本文件读取&lt;/h4&gt;
&lt;p&gt;CSV 文件根据其定义也是一种文本文件。在数据读取过程中可以使用文本文件的读取函数对 CSV 文件进行读取。同时，如果文本文件是字符分隔文件，那么可以使用读取 CSV 文件的函数进行读取。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;pandas 提供了 read_table () 函数读取文本文件，提供了 read_csv () 函数读取 CSV 文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;read_table () 函数和 read_csv () 函数具有许多参数，如果有多个 &amp;lt; expression &amp;gt;，那么表达式之间用逗号隔开，基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_table&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filepath_or_buffer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;infer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; names&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  engine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nrows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; skiprows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filepath_or_buffer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;infer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; names&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  engine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nrows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; skiprows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;read_table () 函数和 read_csv () 函数的多数参数相同，它们的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;filepath&lt;/td&gt;
&lt;td&gt;接收 str。表示文件路径。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sep&lt;/td&gt;
&lt;td&gt;接收 str。表示分隔符。read_csv 函数默认为 “,”，read_table 函数默认为制表符 “Tab”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;接收 int 或列表形式的 int。表示将某行数据作为列名。默认为 infer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;names&lt;/td&gt;
&lt;td&gt;接收 array。表示列名。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_col&lt;/td&gt;
&lt;td&gt;接收 int、sequence 或 False。表示索引列的位置，取值为 sequence 则代表多重索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;read_table () 函数和 read_csv () 函数的多数参数相同，它们的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收字典形式的列名或 type name。表示写入的数据类型（列名为 key，数据格式为 values）。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;engine&lt;/td&gt;
&lt;td&gt;接收 c 语言或 python 语言。表示要使用的数据解析引擎。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nrows&lt;/td&gt;
&lt;td&gt;接收 int。要读取的文件行数。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;skiprows&lt;/td&gt;
&lt;td&gt;接收 list 或 int 或 callable。表示读取数据时跳过开头的行数。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;read_csv 和 read_table 之间的区别:&lt;/p&gt;
&lt;p&gt;函数 pd.read_csv 和 pd.read_table 的内容相同，只是默认分隔符不同。在 read_csv 中 “逗号，” 作为定界符，在 read_table 中定界符为 “\ t”。如果既不是逗号也不是制表符，则可以通过参数（sep 或 delimiter）设置区分符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2文本文件储存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2文本文件储存&#34;&gt;#&lt;/a&gt; ②文本文件储存&lt;/h4&gt;
&lt;p&gt;文本文件的存储和读取类似，对于结构化数据，可以通过 pandas 库中的 to_csv () 方法实现以 CSV 文件格式存储。&lt;/p&gt;
&lt;p&gt;to_csv () 函数同样具有许多参数，如果有多个 &amp;lt; expression&amp;gt;，那么表达式之间用逗号隔开，基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to_csv&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path_or_buf&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; na_rep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_label&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;to_csv () 方法的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path_or_buf&lt;/td&gt;
&lt;td&gt;接收 str。表示文件路径。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sep&lt;/td&gt;
&lt;td&gt;接收 str。表示分隔符。默认为 “,”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;na_rep&lt;/td&gt;
&lt;td&gt;接收 str。表示缺失值。默认为 “”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;columns&lt;/td&gt;
&lt;td&gt;接收 list。表示写出的列名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;接收 bool 或列表形式的 str。表示是否将列名写出。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否将行名（索引）写出。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_label&lt;/td&gt;
&lt;td&gt;接收 sequence 或 str 或 false。表示索引名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mode&lt;/td&gt;
&lt;td&gt;接收特定 str。表示数据写入模式。默认为 w&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;encoding&lt;/td&gt;
&lt;td&gt;接收特定 str。表示存储文件的编码格式。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3读写excel文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3读写excel文件&#34;&gt;#&lt;/a&gt; 3）读 / 写 Excel 文件&lt;/h3&gt;
&lt;h4 id=&#34;1excel文件读取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1excel文件读取&#34;&gt;#&lt;/a&gt; ①Excel 文件读取&lt;/h4&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sheet_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; names&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; skiprows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;read_excel () 函数的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;io&lt;/td&gt;
&lt;td&gt;接收 str。表示文件路径。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sheet_name&lt;/td&gt;
&lt;td&gt;接收 str、int、list 或 None。表示 Excel 表内数据的分表位置。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;接收 int 或列表形式的 int。表示将某行数据作为列名。如果传递整数列表，那么行位置将合并为 MultiIndex。如果没有表头，那么使用 None。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;names&lt;/td&gt;
&lt;td&gt;接收 array。表示要使用的列名列表。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_col&lt;/td&gt;
&lt;td&gt;接收 int 或列表形式的 int。表示将列索引用作 dataframe 的行索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收 dict。表示写入的数据类型（列名为 key，数据格式为 values）。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;skiprows&lt;/td&gt;
&lt;td&gt;接收 list、int 或 callable。表示读取数据开头跳过的行数。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;2excel文件储存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2excel文件储存&#34;&gt;#&lt;/a&gt; ②Excel 文件储存&lt;/h4&gt;
&lt;p&gt;将数据存储至 Excel，可以使用 to_excel () 方法，基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to_excel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;excel_writer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sheet_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sheet1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; na_rep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_label&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;to_excel () 函数的常用参数及其说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;excel_writer&lt;/td&gt;
&lt;td&gt;接收 str。表示文件路径。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sheet_name&lt;/td&gt;
&lt;td&gt;接收 str。表示 Excel 文件中工作簿的名称。默认为 Sheet1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;na_rep&lt;/td&gt;
&lt;td&gt;接收 str。表示缺失值。默认为 “”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;columns&lt;/td&gt;
&lt;td&gt;接收列表形式的 str 或 sequence。表示写出的列名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;接收 bool 或列表形式的 str。表示是否将列名写出。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否将行名（索引）写出。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_label&lt;/td&gt;
&lt;td&gt;接收 sequence 或 str。表示索引名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;encoding&lt;/td&gt;
&lt;td&gt;接收特定 str。表示存储文件的编码格式。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;4读写数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4读写数据库&#34;&gt;#&lt;/a&gt; 4）读 / 写数据库&lt;/h3&gt;
&lt;p&gt;在生产环境中，绝大多数的数据都存储在数据库中。pandas 库提供了读取与存储关系型数据库数据的函数与方法。除了 pandas 库外，还需要使用 SQLAlchemy 库建立对应的数据库连接。&lt;/p&gt;
&lt;p&gt;pandas 支持 MySQL、postgresql、Oracle、SQL Server 和 SQLite 等主流数据库。&lt;/p&gt;
&lt;p&gt;SQLAlchemy 是配合相应数据库的 Python 连接工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 数据库需要安装 mysqlclient 或 pymysql 库。&lt;/li&gt;
&lt;li&gt;Oracle 数据库需要安装 cx_oracle 库。&lt;/li&gt;
&lt;li&gt;使用 create_engine () 函数，建立一个数据库连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面将以 MySQL 数据库为例，介绍 pandas 数据库数据的读取与存储。&lt;/p&gt;
&lt;h4 id=&#34;1数据库数据读取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数据库数据读取&#34;&gt;#&lt;/a&gt; ①数据库数据读取&lt;/h4&gt;
&lt;p&gt;pandas 可实现数据库数据的读取，但前提是读者在进行读取操作前确保已安装数据库，并且数据库可以正常打开及使用。进行数据库的读取可利用 3 种函数进行操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;read_sql_table () 函数只能读取数据库的某一个表格，不能实现查询的操作。&lt;/li&gt;
&lt;li&gt;read_sql_query () 函数则只能实现查询操作，不能直接读取数据库中的某个表。&lt;/li&gt;
&lt;li&gt;read_sql () 函数是两者的综合，既能够读取数据库中的某一个表，也能够实现查询操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在读取数据库数据前，需要先创建数据库连接。Python 提供了 SQLAlchemy 库的 create_engine 函数用于创建数据库连接，在 creat_engine 函数中输入的是一个连接字符串。&lt;/p&gt;
&lt;p&gt;在使用 Python 的 SQLAlchemy 时，MySQL 和 Oracle 数据库连接字符串的格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;数据库产品名 + 连接工具名：&amp;#x2F;&amp;#x2F; 用户名：密码 @数据库 IP 地址：数据库端口号 &amp;#x2F; 数据库名称？charset &amp;#x3D; 数据库数据编码&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;read_sql_table () 函数、read_sql_query () 函数和 read_sql () 函数具有许多参数，参数的表达式之间用逗号隔开，基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_sql_table&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; con&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; coerce_float&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parse_dates&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chunksize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_sql_query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; con&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; coerce_float&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; params&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parse_dates&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chunksize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read_sql&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sql &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; con &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_col &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; coerce_float &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; params &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parse_dates &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chunksize &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;read_sql_table ()、read_sql_query () 和 read_sql () 这 3 个数据库数据读取函数的参数几乎完全一致，唯一的区别在于传入的是语句还是表名。3 个函数的参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sql  or table_name&lt;/td&gt;
&lt;td&gt;接收 str。表示读取的数据的表名或 SQL 语句。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;con&lt;/td&gt;
&lt;td&gt;接收数据库连接或 str。表示数据库连接信息。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_col&lt;/td&gt;
&lt;td&gt;接收 str 或列表形式的 str。表示列设置为索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coerce_float&lt;/td&gt;
&lt;td&gt;接收 bool。表示尝试将非字符串、非数字对象（如十进制）的值转换为浮点。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;columns&lt;/td&gt;
&lt;td&gt;接收 list。表示要从 SQL 表中选择的列名列表。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;2数据库数据储存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2数据库数据储存&#34;&gt;#&lt;/a&gt; ②数据库数据储存&lt;/h4&gt;
&lt;p&gt;将 DataFrame 写入数据库中，同样也要依赖 SQLAlchemy 库的 create_engine 函数创建数据库连接。数据库数据读取有 3 个函数，但数据存储则只有一个 to_sql () 方法。&lt;/p&gt;
&lt;p&gt;to_sql () 方法的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to_sql&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; con&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; if_exists&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fail&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index_label&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chunksize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;to_sql () 函数的常用参数及其说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;接收 str。表示数据库表名。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;con&lt;/td&gt;
&lt;td&gt;接收数据库连接。表示数据库连接信息。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;if_exists&lt;/td&gt;
&lt;td&gt;接收 str。表示对表进行操作的方式，可选 “fail”“replace”“append”。fail 表示如果表名存在，那么不执行写入操作；replace 表示如果表名存在，那么将原数据库表删除，再重新创建；append 则表示在原数据库表的基础上追加数据。默认为 fail&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否将 DataFrame 索引写入列并使用 index_Label 作为表中的列名。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index_label&lt;/td&gt;
&lt;td&gt;接收 str 或 sequence。表示索引列的列标签。如果没有给定（默认）且索引为 True，那么使用索引名称。如果 DataFrame 使用 MultiIndex，那么应该给出序列。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收 dict 或 scalar。表示指定列的数据类型。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2掌握dataframe的常用操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2掌握dataframe的常用操作&#34;&gt;#&lt;/a&gt; 2. 掌握 DataFrame 的常用操作&lt;/h2&gt;
&lt;h3 id=&#34;1dataframe的常用属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1dataframe的常用属性&#34;&gt;#&lt;/a&gt; 1）DataFrame 的常用属性&lt;/h3&gt;
&lt;p&gt;DataFrame 的基础属性如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;values：DataFrame 所有行的值&lt;/li&gt;
&lt;li&gt;index：DataFrame 行索引&lt;/li&gt;
&lt;li&gt;colums：DataFrame 列名&lt;/li&gt;
&lt;li&gt;dtypes：DataFrame 指定列数据类型&lt;/li&gt;
&lt;li&gt;size：DataFrame 元素的个数&lt;/li&gt;
&lt;li&gt;ndim：DataFrame 维度&lt;/li&gt;
&lt;li&gt;shape：DataFrame 形状&lt;/li&gt;
&lt;li&gt;T: 实现 DataFrame 转置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2查改增删dataframe数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2查改增删dataframe数据&#34;&gt;#&lt;/a&gt; 2）查改增删 DataFrame 数据&lt;/h3&gt;
&lt;p&gt;DataFrame 作为一种二维数据表结构，能够像数据库一样实现查改增删操作，如添加一行、删除一行、添加一列、删除一列、修改某一个值、某个区间的值替换等。&lt;/p&gt;
&lt;h4 id=&#34;1查看访问dataframe中的数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1查看访问dataframe中的数据&#34;&gt;#&lt;/a&gt; ①查看访问 DataFrame 中的数据&lt;/h4&gt;
&lt;p&gt;使用索引、切片方式:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame名称&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引编号范围或名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;列索引范围或列名&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame名称&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;列索引范围或列名&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引范围或名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;book_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;book_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;除了可以使用基本的查看方式查看访问 DataFrame 中的数据之外，还可以通过 loc () 方法和 iloc () 方法进行访问。&lt;/p&gt;
&lt;p&gt;使用 iloc (iat) 或 loc (at) 函数:&lt;/p&gt;
&lt;p&gt;使用 loc () 方法和 iloc () 方法可以对 DataFrame 进行多种操作：单列切片、多列切片、取出 DataFrame 中的任意数据。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引名称或条件&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 列索引名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引编号位置&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 列索引编号位置&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;loc () 方法更加灵活多变，代码的可读性更高；&lt;/li&gt;
&lt;li&gt;iloc () 方法的代码简洁，但可读性不高。在数据分析工作中具体使用哪一种方法，应根据情况而定，大多数时候建议使用 loc () 方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;打印第1-3列所有行数据&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;打印第1-3列所有行数据&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;book_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jd_price&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;打印第1-3列前10行数据&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;打印第1-3列前10行数据&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sql_table_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;book_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jd_price&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 DataFrame 提供的方法 head () 和 tail () 也可以得到多行数据，但是用这两种方法得到的数据都是从开始或末尾获取的连续数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;head () 方法和 tail () 方法使用的都是默认参数，所以访问的是前、后 5 行。&lt;/li&gt;
&lt;li&gt;在方法后的 “()” 中输入访问行数，即可实现目标行数的查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2dataframe的loc-iloc访问方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2dataframe的loc-iloc访问方式&#34;&gt;#&lt;/a&gt; ②DataFrame 的 loc、iloc 访问方式&lt;/h4&gt;
&lt;p&gt;pandas 提供了 loc () 和 iloc () 两种更加灵活的方法来实现数据访问。&lt;/p&gt;
&lt;p&gt;loc () 方法是针对 DataFrame 索引名称的切片方法，如果传入的不是索引名称，那么切片操作将无法执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用 loc () 方法，能够实现所有单层索引切片操作。&lt;/li&gt;
&lt;li&gt;iloc () 方法接收的必须是行索引和列索引的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;loc () 方法和 iloc () 方法基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引名称或条件&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 列索引名称&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iloc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;行索引位置&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 列索引位置&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 loc () 方法和 iloc () 方法可以对 DataFrame 进行多种操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单列切片。&lt;/li&gt;
&lt;li&gt;多列切片，其原理是将多列的列名或位置作为一个列表或数据传入。&lt;/li&gt;
&lt;li&gt;取出 DataFrame 中的任意数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用 loc () 方法的时候，如果内部传入的行索引名称为一个区间，那么前后均为闭区间。&lt;/p&gt;
&lt;p&gt;而使用 iloc () 方法时，如果内部传入的行索引位置或列索引位置为区间，那么为前闭后开区间。&lt;/p&gt;
&lt;p&gt;loc () 方法的内部还可以传入表达式，结果会返回满足表达式的所有值。&lt;/p&gt;
&lt;p&gt;iloc () 方法不能接收表达式，原因在于，iloc () 方法可以接收的数据类型并不包括 Series。根据 Series 的构成，应取出该 Series 的 values。&lt;/p&gt;
&lt;h4 id=&#34;3更改dataframe的数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3更改dataframe的数据&#34;&gt;#&lt;/a&gt; ③更改 DataFrame 的数据&lt;/h4&gt;
&lt;p&gt;更改 DataFrame 中的数据的原理是将这部分数据提取出来，重新赋值为新的数据。&lt;/p&gt;
&lt;p&gt;需要注意的是，数据更改是直接对 DataFrame 原数据更改，操作无法撤销。&lt;/p&gt;
&lt;p&gt;如果不希望直接对原数据做出更改，那么需要对更改条件进行确认或对数据进行备份。&lt;/p&gt;
&lt;p&gt;重命名列标签&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DateFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rename&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;k1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;v1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;k2&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;v2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：重命名部分列标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DateFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;新列名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;：重命名全部列标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;4为dataframe增添数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4为dataframe增添数据&#34;&gt;#&lt;/a&gt; ④为 DataFrame 增添数据&lt;/h4&gt;
&lt;p&gt;为 DataFrame 添加一列的方法非常简单，只需要新建一个列索引，并对该索引下的数据进行赋值操作即可。如果新增的一列值是相同的，那么可以直接为其赋值一个常量。&lt;/p&gt;
&lt;p&gt;创建一个新的列索引，对该列索引赋值即可&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stu_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;张三&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;李四&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;王五&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;何六&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;谢七&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;陆九&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;女&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;男&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20000302&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;19990416&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20011214&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20000812&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20010708&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20001017&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;173&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;162&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;182&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;159&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;162&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;178&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;无&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;无&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;无&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;           &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;student &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stu_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#修改 C 列的数据类型为 &#39;datetime64&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;student&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;astype&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;datetime64&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dtypes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#修改列标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;student&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;columns &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;姓名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;性别&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;出生日期&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;身高&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;备注&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#修改备注列中所有空值为 &#34;暂无&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;student&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loc&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;备注&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;备注&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;暂无&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#新增 &#34;专业&#34; 列，数值为 &#34;数据科学与大数据技术&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;student&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;专业&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;数据科学与大数据技术&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;5删除某列或某行数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5删除某列或某行数据&#34;&gt;#&lt;/a&gt; ⑤删除某列或某行数据&lt;/h4&gt;
&lt;p&gt;删除某列或某行数据需要用到 pandas 提供的方法 drop ()。&lt;/p&gt;
&lt;p&gt;drop () 方法的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;labels&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; level&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;inplace&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; errors&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;raise&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;drop () 函数的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;labels&lt;/td&gt;
&lt;td&gt;接收单一标签。表示要删除的索引或列标签。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 0 或 1。表示操作的轴向。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;level&lt;/td&gt;
&lt;td&gt;接收 int 或索引名。表示标签所在级别。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inplace&lt;/td&gt;
&lt;td&gt;接收 bool。表示操作是否对原数据生效。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;删除某行数据，只需要将 drop () 方法参数中的 “labels” 参数换成对应的行索引，将 “axis” 参数设置为 0 即可。&lt;/p&gt;
&lt;h3 id=&#34;3描述分析dataframe数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3描述分析dataframe数据&#34;&gt;#&lt;/a&gt; 3）描述分析 DataFrame 数据&lt;/h3&gt;
&lt;p&gt;描述性统计是用于概括、表述事物整体状况，以及事物间关联、类属关系的统计方法。通过几个统计值可简捷地表示一组数据的集中趋势和离散程度等。&lt;/p&gt;
&lt;h4 id=&#34;1数值型特征的描述性统计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数值型特征的描述性统计&#34;&gt;#&lt;/a&gt; ①数值型特征的描述性统计&lt;/h4&gt;
&lt;p&gt;数值型特征的描述性统计主要包括了计算数值型数据的最小值、均值、中位数、最大值、四分位数、极差、标准差、方差、协方差和变异系数等。&lt;/p&gt;
&lt;p&gt;在 NumPy 库中已经提到了为数不少的统计函数，为方便读者查看，将 NumPy 库简写为 np，部分统计函数如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;函数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;np.min&lt;/td&gt;
&lt;td&gt;最小值&lt;/td&gt;
&lt;td&gt;np.max&lt;/td&gt;
&lt;td&gt;最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;np.mean&lt;/td&gt;
&lt;td&gt;均值&lt;/td&gt;
&lt;td&gt;np.ptp&lt;/td&gt;
&lt;td&gt;极差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;np.median&lt;/td&gt;
&lt;td&gt;中位数&lt;/td&gt;
&lt;td&gt;np.std&lt;/td&gt;
&lt;td&gt;标准差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;np.var&lt;/td&gt;
&lt;td&gt;方差&lt;/td&gt;
&lt;td&gt;np.cov&lt;/td&gt;
&lt;td&gt;协方差&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;pandas 库是基于 NumPy 库的，自然也可以使用表中的统计函数对数据进行描述性统计。&lt;/p&gt;
&lt;p&gt;pandas 还提供了更加便利的方法来进行数值型数据的统计。用 np.mean 函数实现计算某列的均值，也可以通过 pandas 实现。&lt;/p&gt;
&lt;p&gt;作为专门为数据分析而生的 Python 库，pandas 还提供了一个 describe () 方法，能够一次性得出数据框中所有数值型特征如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非空值数目。&lt;/li&gt;
&lt;li&gt;均值。&lt;/li&gt;
&lt;li&gt;四分位数。&lt;/li&gt;
&lt;li&gt;标准差。&lt;/li&gt;
&lt;li&gt;最大值和最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pandas 还提供了与统计相关的主要方法，这些方法能够满足绝大多数数据分析所需要的数值型特征的描述性统计工作，统计方法如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;函数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;min&lt;/td&gt;
&lt;td&gt;最小值&lt;/td&gt;
&lt;td&gt;Max&lt;/td&gt;
&lt;td&gt;最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mean&lt;/td&gt;
&lt;td&gt;均值&lt;/td&gt;
&lt;td&gt;Ptp&lt;/td&gt;
&lt;td&gt;极差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;median&lt;/td&gt;
&lt;td&gt;中位数&lt;/td&gt;
&lt;td&gt;Std&lt;/td&gt;
&lt;td&gt;标准差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;var&lt;/td&gt;
&lt;td&gt;方差&lt;/td&gt;
&lt;td&gt;Cov&lt;/td&gt;
&lt;td&gt;协方差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sem&lt;/td&gt;
&lt;td&gt;标准误差&lt;/td&gt;
&lt;td&gt;Mode&lt;/td&gt;
&lt;td&gt;众数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;skew&lt;/td&gt;
&lt;td&gt;样本偏度&lt;/td&gt;
&lt;td&gt;Kurt&lt;/td&gt;
&lt;td&gt;样本峰度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quantile&lt;/td&gt;
&lt;td&gt;分位数&lt;/td&gt;
&lt;td&gt;Count&lt;/td&gt;
&lt;td&gt;非空值数目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;describe&lt;/td&gt;
&lt;td&gt;描述统计&lt;/td&gt;
&lt;td&gt;Mad&lt;/td&gt;
&lt;td&gt;平均绝对离差&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;2类别型特征的描述性统计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2类别型特征的描述性统计&#34;&gt;#&lt;/a&gt; ②类别型特征的描述性统计&lt;/h4&gt;
&lt;p&gt;描述类别型特征的分布状况，可以使用频数统计。在 pandas 库中实现频数统计的方法为 value_counts ()。&lt;/p&gt;
&lt;p&gt;除了使用 value_counts () 方法分析频率分布外，pandas 提供了 category 类，可以使用 astype () 方法将目标特征的数据类型转换为 category 类型。&lt;/p&gt;
&lt;p&gt;describe () 方法除了支持传统数值型数据以外，还能够支持对 category 类型的数据进行描述性统计，4 个统计量如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列非空元素的数目。&lt;/li&gt;
&lt;li&gt;类别的数目。&lt;/li&gt;
&lt;li&gt;数目最多的类别。&lt;/li&gt;
&lt;li&gt;数目最多类别的数目。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3转换与处理时间序列数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3转换与处理时间序列数据&#34;&gt;#&lt;/a&gt; 3. 转换与处理时间序列数据&lt;/h2&gt;
&lt;h3 id=&#34;1转换字符串时间为标准时间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1转换字符串时间为标准时间&#34;&gt;#&lt;/a&gt; 1）转换字符串时间为标准时间&lt;/h3&gt;
&lt;p&gt;在多数情况下，对时间类型数据进行分析的前提就是将原本为字符串的时间转换为标准时间。pandas 继承了 NumPy 库和 datetime 库的时间相关模块，提供了 6 种时间相关的类如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Timestamp&lt;/td&gt;
&lt;td&gt;最基础的时间类。表示某个时间点。绝大多数的场景中的时间数据都是 Timestamp 形式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Period&lt;/td&gt;
&lt;td&gt;表示某个时间段，如某一天、某一小时等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Timedelta&lt;/td&gt;
&lt;td&gt;表示不同单位的时间，如 1d、1.5h、3min、4s 等，而非具体的某个时间段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DatetimeIndex&lt;/td&gt;
&lt;td&gt;一组 Timestamp 构成的 Index，可以用于作为 Series 或 DataFrame 的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PeriodtimeIndex&lt;/td&gt;
&lt;td&gt;一组 Period 构成的 Index，可以用于作为 Series 或 DataFrame 的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TimedeltaIndex&lt;/td&gt;
&lt;td&gt;一组 Timedelta 构成的 Index，可以用于作为 Series 或 DataFrame 的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Timestamp 是时间类中较为基础的，也是较为常用的。在多数情况下，会将与时间相关的字符串转换成为 Timestamp。pandas 提供的 to_datetime 函数，能够实现这一目标。&lt;/p&gt;
&lt;p&gt;date_range ()：指定时间的起始 start 和结束范围 end、时间间隔 freq、数据数量 periods 等参数。主要用于生成一个固定频率的时间索引，数据类型为：DatetimeIndex。保存在 DataFrame 对象中的每一个时间数据，都会被转换为 Timestamp 类型的数据。可以调用对应的属性获得日期中的部分数据。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;date1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;date_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20230301&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;periods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;date2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;date_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20230301&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;M&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;periods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#输出 date1 中第一个日期的年份&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;month&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; date2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#获取 date2 日期中的年、月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;to_datetime ()：用于实现将规范或不规范的时间数据转换为标准的 datetime 类型数据。可以使用 errors 参数对无效数据进行解析，参数值设置有：接收 “ignore”、“raise”、“coerce”。&lt;/p&gt;
&lt;p&gt;to_datetime 函数的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to_datetime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; errors&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;raise&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dayfirst&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; yearfirst&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; utc&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; exact&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; unit&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; infer_datetime_format&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; origin&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;unix&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cache&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;date1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to_datetime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2023 03 08 9:00&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;to_datetime () 函数的常用参数及其说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;arg&lt;/td&gt;
&lt;td&gt;接收 str、int、float、list、tuple、datetime 或 array。表示需要转换的时间日期对象。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;errors&lt;/td&gt;
&lt;td&gt;接收 “ignore”“raise”“coerce”。表示无效解析。默认为 raise&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dayfirst\yearfirst&lt;/td&gt;
&lt;td&gt;接收 bool。表示指定日期的解析顺序。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Timedelta ()：根据一个指定时间计算未知的时间，Timedelta () 括号内参数可以指定多个参数，如周 weeks、天 days、小时 hours 等。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; pd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;date1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;date_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20230301&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;periods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;date2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;date_range&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20230301&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;M&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;periods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#输出 date1 中第一个日期的年份&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;y_m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;month&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; date2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#获取 date2 日期中的年、月&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y_m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;除了将数据从原始 DataFrame 中直接转换为 Timestamp 格式外，还可以将数据单独提取出来，将其转换为 DatetimeIndex 格式或 PeriodIndex 格式。但 DatetimeIndex 和 PeriodIndex 在日常使用的过程中并无太大区别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DatetimeIndex 是用于指代一系列时间点的一种数据结构。&lt;/li&gt;
&lt;li&gt;PeriodIndex 则是用于指代一系列时间段的数据结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DatetimeIndex 类与 PeriodIndex 类的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pandas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DatetimeIndex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tz&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; normalize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; closed&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ambiguous&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;raise&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dayfirst&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; yearfirst&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; copy&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;pandas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PeriodIndex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ordinal&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; freq&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; copy&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;fields&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;DatetimeIndex 可以用于转换数据，还可以用于创建时间序列数据，常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;接收类数组。表示用可选的类似日期时间的数据来构造索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;freq&lt;/td&gt;
&lt;td&gt;接收 str。表示一种 pandas 周期字符串或相应的对象。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tz&lt;/td&gt;
&lt;td&gt;接收时区或 str。表示设置数据的时区。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收 Numpy.dtype 或 DatetimeTZDtype 或 str。表示数据类型。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;PeriodIndex 可以用于转换数据，还可以用于创建时间序列数据，常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;接收类数组。表示用可选的类似周期的数据来构造索引。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;freq&lt;/td&gt;
&lt;td&gt;接收 str。表示一种 pandas 周期字符串或相应的对象。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收 str 或 PeriodDtype。表示数据类型。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;query ()：Pandas 提供此函数可以实现内容（包括时间）的查询、修改列、创建新列。&lt;/p&gt;
&lt;h3 id=&#34;2提取时间序列数据信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2提取时间序列数据信息&#34;&gt;#&lt;/a&gt; 2）提取时间序列数据信息&lt;/h3&gt;
&lt;p&gt;在多数涉及与时间相关的数据处理、统计分析的过程中，都需要提取时间中的年份、月份等数据。使用对应的 Timestamp 类属性就能够实现这一目的，其常用类属性及说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;属性说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;属性名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;属性说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;year&lt;/td&gt;
&lt;td&gt;年&lt;/td&gt;
&lt;td&gt;week&lt;/td&gt;
&lt;td&gt;一年中第几周&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;month&lt;/td&gt;
&lt;td&gt;月&lt;/td&gt;
&lt;td&gt;quarter&lt;/td&gt;
&lt;td&gt;季节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;day&lt;/td&gt;
&lt;td&gt;日&lt;/td&gt;
&lt;td&gt;weekofyear&lt;/td&gt;
&lt;td&gt;一年中第几周&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hour&lt;/td&gt;
&lt;td&gt;小时&lt;/td&gt;
&lt;td&gt;dayofyear&lt;/td&gt;
&lt;td&gt;一年中的第几天&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minute&lt;/td&gt;
&lt;td&gt;分钟&lt;/td&gt;
&lt;td&gt;dayofweek&lt;/td&gt;
&lt;td&gt;一周第几天&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;second&lt;/td&gt;
&lt;td&gt;秒&lt;/td&gt;
&lt;td&gt;weekday&lt;/td&gt;
&lt;td&gt;一周第几天&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;日期&lt;/td&gt;
&lt;td&gt;is_leap_year&lt;/td&gt;
&lt;td&gt;是否闰年&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3加减时间数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3加减时间数据&#34;&gt;#&lt;/a&gt; 3）加减时间数据&lt;/h3&gt;
&lt;p&gt;时间数据的算术运算在现实中随处可见，例如，2020 年 1 月 1 日减一天就是 2019 年 12 月 31 日。pandas 的时间数据和现实生活中的时间数据一样可以做运算。这时就涉及 pandas 的 Timedelta 类。&lt;/p&gt;
&lt;p&gt;Timedelta 是时间相关类中的一个异类，不仅能够使用正数，还能够使用负数表示单位时间，如 1s、2min、3h 等。使用 Timedelta 类，配合常规的时间相关类能够轻松实现时间的算术运算。&lt;/p&gt;
&lt;p&gt;在 Timedelta 类的时间周期中没有年和月，所有周期名称、对应单位及其说明如下表（注：表中单位采用程序定义的符号，与法定单位符号可能不一致）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;周期名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;单位&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;weeks&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;星期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;days&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;天&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hours&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;小时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minutes&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;td&gt;分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;seconds&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;milliseconds&lt;/td&gt;
&lt;td&gt;ms&lt;/td&gt;
&lt;td&gt;毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;microseconds&lt;/td&gt;
&lt;td&gt;us&lt;/td&gt;
&lt;td&gt;微妙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nanoseconds&lt;/td&gt;
&lt;td&gt;ns&lt;/td&gt;
&lt;td&gt;纳秒&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;4使用分组聚合进行组内计算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4使用分组聚合进行组内计算&#34;&gt;#&lt;/a&gt; 4. 使用分组聚合进行组内计算&lt;/h2&gt;
&lt;h3 id=&#34;1groupby方法拆分数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1groupby方法拆分数据&#34;&gt;#&lt;/a&gt; 1）groupby () 方法拆分数据&lt;/h3&gt;
&lt;p&gt;groupby () 方法提供的是分组聚合步骤中的拆分功能，能够根据索引或特征对数据进行分组，其基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;groupby&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;by&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; level&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; as_index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sort&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; group_keys&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; squeeze&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;no_default&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; observed&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dropna&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;groupby () 方法的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;by&lt;/td&gt;
&lt;td&gt;接收 list、str、mapping、function 或 generator。表示用于确定进行分组的依据，若传入的是一个函数，则对索引进行计算并分组；若传入的是一个字典或 Series，则字典或 Series 的值用于作为分组依据；若传入一个 NumPy 数组，则数据的元素作为分组依据；若传入的是字符串或字符串列表，则使用这些字符串所代表的特征作为分组依据。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 0 或 1。表示操作的轴向。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;level&lt;/td&gt;
&lt;td&gt;接收 int 或索引名。表示标签所在级别。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as_index&lt;/td&gt;
&lt;td&gt;接收 bool。表示聚合后的聚合标签是否以 DataFrame 索引形式输出。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否对分组依据、分组标签进行排序。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;group_keys&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否显示分组标签的名称。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;分组后的结果并不能直接查看，而是被存在内存中，输出的是内存地址。实际上，分组后的数据对象 groupby 类似于 Series 与 DataFrame，是 pandas 提供的一种对象。&lt;/p&gt;
&lt;p&gt;groupby 对象常用的描述性统计方法及说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方法名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方法说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方法名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方法说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;返回各组的计数值，不包括缺失值&lt;/td&gt;
&lt;td&gt;cumcount&lt;/td&gt;
&lt;td&gt;对每个分组中的组员进行标记，0～&lt;em&gt;n&lt;/em&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;head&lt;/td&gt;
&lt;td&gt;返回每组的前&lt;em&gt; n&lt;/em&gt; 个值&lt;/td&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;返回每组的大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max&lt;/td&gt;
&lt;td&gt;返回每组最大值&lt;/td&gt;
&lt;td&gt;min&lt;/td&gt;
&lt;td&gt;返回每组最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mean&lt;/td&gt;
&lt;td&gt;返回每组的均值&lt;/td&gt;
&lt;td&gt;std&lt;/td&gt;
&lt;td&gt;返回每组的标准差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;median&lt;/td&gt;
&lt;td&gt;返回每组的中位数&lt;/td&gt;
&lt;td&gt;sum&lt;/td&gt;
&lt;td&gt;返回每组的和&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;agg () 方法和 aggregate () 方法都支持对每个分组应用某函数，包括 Python 内置函数或自定义函数。同时，这两个方法也能够直接对 DataFrame 进行函数应用操作。&lt;/p&gt;
&lt;p&gt;针对 DataFrame 的 agg () 方法与 aggregate () 方法的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;agg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;kwargs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aggregate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;kwargs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;2使用agg方法聚合数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2使用agg方法聚合数据&#34;&gt;#&lt;/a&gt; 2）使用 agg () 方法聚合数据&lt;/h3&gt;
&lt;p&gt;在正常使用过程中，agg () 方法和 aggregate () 方法对 DataFrame 对象操作时的功能几乎完全相同，因此只需要掌握其中一个方法即可。&lt;/p&gt;
&lt;p&gt;agg () 方法的常用参数及其说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;func&lt;/td&gt;
&lt;td&gt;接收 list、dict、function 或 str。表示用于聚合数据的函数。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 0 或 1。代表操作的轴向。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用 agg () 方法时，对于某个特征希望只做求均值操作，而对另一个特征则希望只做求和操作。此时需要使用字典的方式，将两个特征名分别作为 key，然后将 NumPy 库的求和与求均值的函数分别作为 value。&lt;/p&gt;
&lt;p&gt;如果希望求出某个特征的多个统计量，对某些特征则只需要求一个统计量，此时只需要将字典对应 key 的 value 转换为列表，将列表元素转换为多个目标的统计量即可。&lt;/p&gt;
&lt;p&gt;在 agg () 方法中还可以传入读者自定义的函数。&lt;/p&gt;
&lt;p&gt;在 NumPy 库中的函数 np.mean、np.median、np.prod、np.sum、np.std 和 np.var 能够在 agg () 方法中直接使用。&lt;/p&gt;
&lt;p&gt;在自定义函数中使用 NumPy 库中的这些函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算的时候是单个序列，会无法得出想要的结果。&lt;/li&gt;
&lt;li&gt;多列数据同时计算，才能得到正确的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 agg () 方法也能够实现对每一个特征的每一组使用相同的函数。&lt;/p&gt;
&lt;p&gt;若需要对不同的特征应用不同的函数，则与 DataFrame 中使用 agg () 方法的操作相同。&lt;/p&gt;
&lt;h3 id=&#34;3使用apply方法聚合数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3使用apply方法聚合数据&#34;&gt;#&lt;/a&gt; 3）使用 apply () 方法聚合数据&lt;/h3&gt;
&lt;p&gt;apply () 方法类似于 agg () 方法，能够将函数应用于每一列。不同之处在于，与 apply () 方法相比，agg () 方法传入的函数只能够作用于整个 DataFrame 或 Series，而无法像 agg () 方法一样能够对不同特征应用不同函数来获取不同结果。&lt;/p&gt;
&lt;p&gt;apply () 方法的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; raw&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result_type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;kwargs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;apply () 方法的使用方式和 agg () 方法相同。&lt;/p&gt;
&lt;p&gt;使用 apply () 方法对 GroupBy 对象进行聚合操作的方法和 agg () 方法也相同，但使用 agg () 方法能够实现对不同的特征应用不同的函数，而 apply () 方法则不行。&lt;/p&gt;
&lt;p&gt;apply () 方法的常用参数及其说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;func&lt;/td&gt;
&lt;td&gt;接收 functions。表示应用于每行或每列的函数。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 0 或 1。表示操作的轴向。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;raw&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否直接将 ndarray 对象传递给函数。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;transform () 方法能够对整个 DataFrame 的所有元素进行操作，其基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;kwargs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;transform () 方法的常用参数及其说明如下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;func&lt;/td&gt;
&lt;td&gt;接收 functions、str、类列表或类字典。表示用于转换的函数。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;接收 0 或 &#39;index&#39;、1 或 &#39;columns&#39;。代表操作的轴向。默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;5创建透视表与交叉表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5创建透视表与交叉表&#34;&gt;#&lt;/a&gt; 5. 创建透视表与交叉表&lt;/h2&gt;
&lt;h3 id=&#34;1使用pivot_table函数创建透视表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1使用pivot_table函数创建透视表&#34;&gt;#&lt;/a&gt; 1）使用 pivot_table () 函数创建透视表&lt;/h3&gt;
&lt;p&gt;透视表是各种电子表格和其他数据分析软件中一种常见的数据汇总形式，可根据一个或多个建对数据进行聚和，并根据行或列的分组键将数据划分到各个区域。利用 pivot_table 函数可以实现创建透视表。&lt;/p&gt;
&lt;p&gt;pivot_table () 函数的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;DataFrame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pivot_table&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aggfunc&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mean&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fill_value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; margins&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dropna&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; margins_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;All&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; observed&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;pivot_table () 方法的常用参数及其说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;values&lt;/td&gt;
&lt;td&gt;接收 str。用于指定要聚合的数据特征名，默认使用全部数据。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;接收列、组、数组或前一列的列表。表示行分组键。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;columns&lt;/td&gt;
&lt;td&gt;接收列、组、数组或前一列的列表。表示列分组键。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aggfunc&lt;/td&gt;
&lt;td&gt;接收函数、函数列表、dict。表示聚合函数。默认为 mean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;margins&lt;/td&gt;
&lt;td&gt;接收 bool。表示添加所有行 / 列（如小计 / 总计）。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropna&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否删掉全为 NaN 的列。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用 pivot_talbe () 函数时，若不特殊指定聚合函数的参数 aggfunc，会默认使用 numpy.mean 进行聚合运算，numpy.mean 会自动过滤掉非数值类型数据。读者可以通过指定 aggfunc 参数来修改聚合函数。&lt;/p&gt;
&lt;p&gt;和 groupby () 方法分组相同，pivot_table () 函数在创建透视表的时候分组键 index 可以有多个，使用 format 和 metric 特征作为索引的透视表。&lt;/p&gt;
&lt;p&gt;当全部数据列数很多时，若要只显示自己关心的列，则可以通过指定 values 参数来实现。&lt;/p&gt;
&lt;h3 id=&#34;2使用crosstab函数创建交叉表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2使用crosstab函数创建交叉表&#34;&gt;#&lt;/a&gt; 2）使用 crosstab () 函数创建交叉表&lt;/h3&gt;
&lt;p&gt;交叉表是透视表的一种，crosstab () 函数的参数和 pivot_table () 函数基本相同。&lt;/p&gt;
&lt;p&gt;不同之处在于，对于 crosstab () 函数中的参数 index、columns、values，输入的都是从 DataFrame 中取出的某一列。&lt;/p&gt;
&lt;p&gt;交叉表是一种特殊的透视表，主要用于计算分组频率。利用 pandas 提供的 crosstab 函数可以制作交叉表。&lt;/p&gt;
&lt;p&gt;crosstab () 函数的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pandas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;crosstab&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; columns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; values&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rownames&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; colnames&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aggfunc&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; margins&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; margins_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;All&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dropna&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; normalize&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;crosstab () 方法的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;接收类数组或数组列表。表示行索引键。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;columns&lt;/td&gt;
&lt;td&gt;接收类数组或数组列表。表示列索引键。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;values&lt;/td&gt;
&lt;td&gt;接收类数组。表示聚合数据。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rownames&lt;/td&gt;
&lt;td&gt;接收 sequence。表示行分组键名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;colnames&lt;/td&gt;
&lt;td&gt;接收 sequence。表示列分组键名。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aggfunc&lt;/td&gt;
&lt;td&gt;接收 function。表示聚合函数。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;margins&lt;/td&gt;
&lt;td&gt;接收 bool。表示汇总（Total）功能的开关，设置为 True 后，结果集中会出现名为 “ALL” 的行和列。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dropna&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否删掉全为 NaN 的列。默认为 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;normalize&lt;/td&gt;
&lt;td&gt;接收 bool。表示是否对值进行标准化。默认为 False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2024-06-18T00:01:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review2/</id>
        <title>数据分析复习（第二章）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/18/Educational/python/Data-analysis/Data_analysis_review2/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;第二章-numpy数值计算基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-numpy数值计算基础&#34;&gt;#&lt;/a&gt; 第二章、NumPy 数值计算基础&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;章节考点：&lt;/p&gt;
&lt;p&gt;（1）Numpy 两大对象及特点&lt;/p&gt;
&lt;p&gt;（2）Series （一维数组）组成&lt;/p&gt;
&lt;p&gt;（3）Numpy 数组的属性&lt;/p&gt;
&lt;p&gt;（4）Numpy 生成数组、矩阵的常用函数、矩阵转置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NumPy 提供了 [两种基本的对象]]{.red}：&lt;/p&gt;
&lt;p&gt;ndarray（N-dimensional Array Object）：存储单一数据类型的多维数组。&lt;/p&gt;
&lt;p&gt;ufunc（Universal Function Object）：能够对数组进行处理的函数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]&lt;/p&gt;
&lt;p&gt;考点：Numpy 两大对象及特点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1numpy数组对象ndarray&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1numpy数组对象ndarray&#34;&gt;#&lt;/a&gt; 1.NumPy 数组对象 ndarray&lt;/h2&gt;
&lt;h3 id=&#34;1数组属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数组属性&#34;&gt;#&lt;/a&gt; 1）数组属性&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;属性名称&lt;/th&gt;
&lt;th&gt;属性说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ndim&lt;/td&gt;
&lt;td&gt;返回 int, 表示数组的维数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;shape&lt;/td&gt;
&lt;td&gt;返回 tuple, 表示数组形状的阵列，对于 n 行 m 列的矩阵，形状为 (n,m)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;size&lt;/td&gt;
&lt;td&gt;返回 int, 表示数组的元素总数，等于数组形状的乘积&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;dtype&lt;/td&gt;
&lt;td&gt;返回 data-type, 表示数组中元素的数据类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;itemsize&lt;/td&gt;
&lt;td&gt;返回 int, 表示数组的每个元素的大小（以字节为单位）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;itemsize 解释：例如，一个元素类型为 float64 的数组的 itemsize 属性值为 8（float64 占用 64 个 bits, 每个字节长度为 8，所以 64/8，占用 8 个字节），一个元素类型为 complex32 的数组的 itemsize 属性值为 4，即 32/8&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]&lt;/p&gt;
&lt;p&gt;考点：Numpy 数组的属性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2数组创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2数组创建&#34;&gt;#&lt;/a&gt; 2）数组创建&lt;/h3&gt;
&lt;p&gt;①array 函数&lt;/p&gt;
&lt;p&gt;NumPy 提供的 array 函数可以创建一维或多维数组，其基本使用格式：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;copy&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;order&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;K&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; subok&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ndmin&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; like&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;array 函数主要参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;接收 array_like, 表示所需创建的数组对象，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收 data-type, 表示数组所需的数据类型，如果未给定，那么选择保存对象所需的最小类型，默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ndmin&lt;/td&gt;
&lt;td&gt;接收 int, 表示指定生成数组应该具有的最小维数，默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;②arange 函数&lt;/p&gt;
&lt;p&gt;arange 函数创建数组。arange 函数类似于 Python 自带的函数 range，通过指定开始值、终值和步长来创建一维数组，创建的数组不含终值。arange 函数的基本使用格式：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;arange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;stop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;step&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; like&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;arange 函数常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start&lt;/td&gt;
&lt;td&gt;接收 int 或实数，表示数组的开始值，生成的区间包括该值，默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stop&lt;/td&gt;
&lt;td&gt;接收 int 或实数，表示数组的终值，生成的区间不包括该值，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step&lt;/td&gt;
&lt;td&gt;接收 int 或实数，表示在数组中，值之间的间距，默认为 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收数据类型，表示输出数组的类型，默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;③linspace 函数&lt;/p&gt;
&lt;p&gt;linspace 函数通过指定开始值、终值和元素个数来创建一维数组，默认设置包括终值，这一点需要和 arange 函数区分。linspace 函数的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;linspace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; endpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; retstep&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;linspace 函数的常用参数及其说明如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start&lt;/td&gt;
&lt;td&gt;接受 array_like, 表示起始值，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stop&lt;/td&gt;
&lt;td&gt;接受 array_like, 表示结束值，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;num&lt;/td&gt;
&lt;td&gt;接收 int，表示生成的样本数，默认为 50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收数据类型，表示输出数组的类型，默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;④logspace 函数&lt;/p&gt;
&lt;p&gt;logspace 函数和 linspace 函数类似，它创建的是&lt;u&gt;等比数列&lt;/u&gt;。logspace 函数的基本使用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;logspace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; endpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; base&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 logspace 函数的参数中，除了 base 参数和 linspace 函数的 retstep 参数不同之外，其余均相同&lt;/p&gt;
&lt;p&gt;⑤NumPy 还提供了其他函数用于创建特殊数组，如 zeros、eye、diag 和 ones 函数等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;zeros 函数：用于创建值全部为 0 的数组，即创建的数组值全部填充为 0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eye 函数：用于生成主对角线上的元素为 1，其他的元素为 0 的数组，类似单位矩阵。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;diag 函数：创建类似对角的数组，即除对角线外的其他元素都为 0，对角线上的元素可以是 0 或其他值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ones 函数：用于创建元素全部为 1 的数组，即创建的数组元素全部填充为 1。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3数组数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3数组数据类型&#34;&gt;#&lt;/a&gt; 3）数组数据类型&lt;/h3&gt;
&lt;p&gt;NumPy 极大程度地扩充了原生 Python 的数据类型。&lt;/p&gt;
&lt;p&gt;在 NumPy 中，所有数组的数据类型是同质的，即数组中的所有元素类型必须是一致的。&lt;/p&gt;
&lt;p&gt;将元素类型保持一致可以更容易确定该数组所需要的存储空间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;np.bool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.int 8\16\32\64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.uint 8\16\32\64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.float32/64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.complex 64\128&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.str\ _&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;np.datatime 64&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4生成随机数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4生成随机数&#34;&gt;#&lt;/a&gt; 4）生成随机数&lt;/h3&gt;
&lt;p&gt;手动创建数组往往很难达到数量要求，NumPy 提供了强大的生成随机数的功能。&lt;/p&gt;
&lt;p&gt;①random 函数&lt;/p&gt;
&lt;p&gt;对于 NumPy，与随机数相关的函数都在 random 模块中，其中包括了可以生成服从多种概率分布随机数的函数。&lt;/p&gt;
&lt;p&gt;random 函数是最常见的生成随机数的方法，random 函数的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数 size 接收 int，表示返回的随机浮点数大小，默认为 None&lt;/p&gt;
&lt;p&gt;②rand 函数&lt;/p&gt;
&lt;p&gt;rand 函数可以生成&lt;u&gt;服从均匀分布&lt;/u&gt;的随机数，其使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数 d0, d1, ..., dn 接收 int，表示返回数组的维度必须是非负数。如果没有给出参数，那么返回单个 Python 浮点数，无默认值。&lt;/p&gt;
&lt;p&gt;③randn 函数&lt;/p&gt;
&lt;p&gt;randn 函数可以生成服从正态分布的随机数，randn 函数的使用格式和参数说明与 rand 函数相同。&lt;/p&gt;
&lt;p&gt;④randint 函数&lt;/p&gt;
&lt;p&gt;randint 函数可以生成给定上下限范围的随机数，其基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;low&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; high&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;randint 函数的常用参数及其说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;low&lt;/td&gt;
&lt;td&gt;接收 int 或类似数组的整数。表示数组最小值。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;high&lt;/td&gt;
&lt;td&gt;接收 int 或类似数组的整数。表示数组最大值。默认 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;接收 int 或整数元组。表示输出形状。默认为 None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dtype&lt;/td&gt;
&lt;td&gt;接收数据类型。表示输出数组的类型。默认为 Int&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;random 模块中，其他常用于生成随机数的函数如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;seed&lt;/td&gt;
&lt;td&gt;确定随机数生成器的种子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;permutation&lt;/td&gt;
&lt;td&gt;返回一个序列的随机排列或返回一个随机排列的范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shuffle&lt;/td&gt;
&lt;td&gt;对一个序列进行随机排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binomial&lt;/td&gt;
&lt;td&gt;产生二项分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;normal&lt;/td&gt;
&lt;td&gt;产生正态（高斯）分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;beta&lt;/td&gt;
&lt;td&gt;产生 beta 分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chisquare&lt;/td&gt;
&lt;td&gt;产生卡方分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gamma&lt;/td&gt;
&lt;td&gt;产生 gamma 分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uniform&lt;/td&gt;
&lt;td&gt;产生在 [0,1] 中均匀分布的随机数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;5索引访问数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5索引访问数组&#34;&gt;#&lt;/a&gt; 5）索引访问数组&lt;/h3&gt;
&lt;p&gt;NumPy 通常以提供高效率的数组著称，这主要归功于索引的易用性。&lt;/p&gt;
&lt;p&gt;①一维数组的索引&lt;/p&gt;
&lt;p&gt;一维数组的方法很简单，与 Python 中的 list 的索引方法一致。&lt;/p&gt;
&lt;p&gt;a [start​ : end: step] 正向反向都可&lt;/p&gt;
&lt;p&gt;② 多维数组的索引&lt;/p&gt;
&lt;p&gt;多维数组的每一个维度都有一个索引，各个维度的索引之间用逗号隔开。&lt;/p&gt;
&lt;p&gt;多维数组同样也可以使用整数序列和布尔值索引进行访问。&lt;/p&gt;
&lt;p&gt;a [start:end,start:end] 第一个冒号是行，第二个冒号是列，也可以单行单列罗列。&lt;/p&gt;
&lt;h3 id=&#34;6变换数组的形态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6变换数组的形态&#34;&gt;#&lt;/a&gt; 6）变换数组的形态&lt;/h3&gt;
&lt;p&gt;在 NumPy 中，常用&lt;u&gt;reshape 函数&lt;/u&gt;改变数组的 “形状”，即改变数组的维度。reshape 函数的基本使用格式如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reshape&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; newshape&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; order&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;reshape 函数在改变原始数据的形状的同时不改变原始数据的值。如果指定的维度和数组的元素数目不吻合，那么函数将抛出异常。&lt;/p&gt;
&lt;p&gt;reshape 函数的常用参数及其说明如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数名称&lt;/th&gt;
&lt;th&gt;参数说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;接收 array_like。表示需要变换形态的数组。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;newshape&lt;/td&gt;
&lt;td&gt;接收 int 或 int 型元组。表示变化后的形状的维度。无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;order&lt;/td&gt;
&lt;td&gt;接收 str。表示将元素放入数组中的顺序，可选 C、F、A。默认为 C&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在 NumPy 中，可以使用 ravel 函数完成数组展平工作。&lt;/p&gt;
&lt;p&gt;flatten 函数也可以完成数组展平工作。与 ravel 函数的区别在于，flatten 函数可以选择横向或纵向展平。&lt;/p&gt;
&lt;h3 id=&#34;7数组的组合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7数组的组合&#34;&gt;#&lt;/a&gt; 7）数组的组合&lt;/h3&gt;
&lt;p&gt;除了可以改变数组 “形状” 外，NumPy 也可以对数组进行组合。组合主要有横向组合与纵向组合。使用&lt;u&gt;hstack 函数、vstack 函数和 concatenate 函数&lt;/u&gt;可完成数组的组合。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横向组合是将 ndarray 对象构成的元组作为参数，传给 hstack 函数。&lt;/li&gt;
&lt;li&gt;纵向组合同样是将 ndarray 对象构成的元组作为参数，传给 vstack 函数。&lt;/li&gt;
&lt;li&gt;concatenate 函数也可以实现数组的横向组合和纵向组合，其中当参数 axis=1 时，数组按照横向组合，当参数 axis=0 时，数组按照纵向组合。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8分割数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8分割数组&#34;&gt;#&lt;/a&gt; 8）分割数组&lt;/h3&gt;
&lt;p&gt;除了对数组进行横向和纵向的组合之外，还可以对数组进行分割。NumPy 提供了&lt;u&gt;hsplit、vsplit、dsplit 和 split 函数&lt;/u&gt;，可以将数组分割成相同大小的子数组，也可以指定原数组中需 要分割的位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hsplit 函数：可以对数组进行横向分割，以 ndarray 对象构成的元组作为参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vsplit 函数：可以对数组进行纵向分割，以 ndarray 对象构成的元组作为参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;split 函数：同样可以实现数组分割。当参数 axis=1 时，可以对数组进行横向分割；当参数 axis=0 时，可以对数组进行纵向分割。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2numpy矩阵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2numpy矩阵&#34;&gt;#&lt;/a&gt; 2.NumPy 矩阵&lt;/h2&gt;
&lt;h3 id=&#34;1创建numpy矩阵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1创建numpy矩阵&#34;&gt;#&lt;/a&gt; 1）创建 Numpy 矩阵&lt;/h3&gt;
&lt;p&gt;在 NumPy 中，矩阵是 ndarray 的子类，且数组和矩阵有着重要的区别。&lt;/p&gt;
&lt;p&gt;NumPy 提供了两个基本的对象，分别是&lt;u&gt;N 维数组对象和通用函数对象&lt;/u&gt;，其他对象都是在它们之上构建的。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;矩阵是继承自 NumPy 数组对象的二维数组对象&lt;/u&gt;。与数学概念中的矩阵一样，NumPy 中的矩阵也是二维的。&lt;/p&gt;
&lt;p&gt;使用 mat、matrix 和 bmat 函数可创建矩阵。&lt;/p&gt;
&lt;p&gt;当使用 mat 函数创建矩阵时，如果输入 matrix 或 ndarray 对象，那么不会创建相应副本。因此，调用 mat 函数和调用 matrix (data, copy=False) 函数等价。&lt;/p&gt;
&lt;p&gt;在大多数情况下，用户会根据小的矩阵来创建大的矩阵，即将小矩阵组合成大矩阵。在 NumPy 中，可以使用 bmat 分块矩阵（block matrix）函数实现。&lt;/p&gt;
&lt;p&gt;在 NumPy 中，矩阵计算是针对整个矩阵中的每个元素进行的。与使用 for 循环相比，其在运算速度上更快。&lt;/p&gt;
&lt;p&gt;除了能够实现各类运算外，矩阵还有其特有的属性，如下表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名称&lt;/th&gt;
&lt;th&gt;属性说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;返回自身的转置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;返回自身的共轭转置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;返回自身的逆矩阵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;返回自身数据的二维数组的一个视图（没有做任何的复制）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;2numpy矩阵的常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2numpy矩阵的常用函数&#34;&gt;#&lt;/a&gt; 2）Numpy 矩阵的常用函数&lt;/h3&gt;
&lt;p&gt;①ufunc 函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!IMPORTANT]&lt;/p&gt;
&lt;p&gt;考试内容：Numpy 创建矩阵、矩阵的常用函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3numpy数组对象nfunc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3numpy数组对象nfunc&#34;&gt;#&lt;/a&gt; 3.NumPy 数组对象 nfunc&lt;/h2&gt;
&lt;p&gt;常用的 ufunc 函数运算有四则运算、比较运算和逻辑运算等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;四则运算：ufunc 函数支持全部的四则运算，并且保留习惯的运算符，和数值运算的使用方式一样，但是需要注意的是，操作的对象是数组。数组间的四则运算表示对每个数组中的元素分别进行四则运算，因此进行四则运算的两个数组的形状必须相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比较运算：在 ufunc 函数中也支持完整的比较运算：&amp;gt;、&amp;lt;、==、&amp;gt;=、&amp;lt;=、!=。比较运算返回的结果是一个布尔数组，其每个元素为数组对应元素的比较结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑运算：在 NumPy 逻辑运算中，numpy.all 函数表示逻辑 and，numpy.any 函数表示逻辑 or。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1ufunc函数的广播机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1ufunc函数的广播机制&#34;&gt;#&lt;/a&gt; 1）ufunc 函数的广播机制&lt;/h3&gt;
&lt;p&gt;广播（Broadcasting）是指不同形状的数组之间执行算术运算的方式。&lt;/p&gt;
&lt;p&gt;当使用 ufunc 函数进行数组计算时，ufunc 函数会对两个数组的对应元素进行计算。&lt;/p&gt;
&lt;p&gt;进行这种计算的前提是两个数组的 shape 一致。如果两个数组的 shape 不一致，那么 NumPy 会实行广播机制。&lt;/p&gt;
&lt;p&gt;NumPy 中的广播机制并不容易理解，特别是在进行高维数组计算的时候。&lt;/p&gt;
&lt;p&gt;为了更好地使用广播机制，需要遵循以下 4 个原则。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;让所有的输入数组向其中 shape 最长的数组看齐，shape 中不足的部分通过在前面加 1 补齐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出数组的 shape 是输入数组 shape 的各个轴上的最大值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果输入数组的某个轴和输出数组的对应轴的长度相同或其长度为 1，那么这个数组能够用于计算，否则系统将会出错。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当输入数组的某个轴的长度为 1 时，沿着此轴运算时使用此轴上的第一组值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;4利用numpy进行统计分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4利用numpy进行统计分析&#34;&gt;#&lt;/a&gt; 4. 利用 NumPy 进行统计分析&lt;/h2&gt;
&lt;h3 id=&#34;1读写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1读写文件&#34;&gt;#&lt;/a&gt; 1）读写文件&lt;/h3&gt;
&lt;p&gt;NumPy 的文件读写主要有两种形式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二进制的文件读 / 写&lt;/li&gt;
&lt;li&gt;文件列表形式的数据读 / 写&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NumPy 提供了若干函数，可以将结果保存到二进制或文本文件中。&lt;/p&gt;
&lt;p&gt;除此之外，NumPy 还提供了许多从文件读取数据并将其转换为数组的方法。&lt;/p&gt;
&lt;p&gt;save 函数以二进制的格式保存数据，load 函数从二进制的文件中读取数据，save 函数的语法格式如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;save&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; allow_pickle&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fix_imports&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 file 接收 str，表示要保存的文件的名称，需要指定文件保存的路径，如果未设置，那么将会保存到默认路径下面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 arr 接收 array_like，表示需要保存的数组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;save 函数就是将数组 arr 保存至名称为 “file” 的文件中，其文件的扩展名.npy 是系统自动添加的。&lt;/p&gt;
&lt;p&gt;如果将多个数组保存到一个文件中，那么可以使用 savez 函数，其文件的扩展名为.npz。&lt;/p&gt;
&lt;p&gt;当需要读取二进制文件时，可以使用 load 函数，用文件名作为参数，存储时可以省略扩展名，但读取时不能省略扩展名。&lt;/p&gt;
&lt;p&gt;在实际的数据分析任务中，更多地是使用文本格式的数据，如 TXT 或 CSV 格式，因此通常会使用 savetxt 函数、loadtxt 函数和 genfromtxt 函数执行对文本格式数据的读取任务。&lt;/p&gt;
&lt;p&gt;savetxt 函数可将数组写到以某种分隔符隔开的文本文件中，其基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;savetxt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; X&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fmt&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%.18e&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delimiter&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; newline&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; footer&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; comments&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\# &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 fname 接收 str，表示文件名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 X 接收 array_like，表示数组数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 delimiter 接收 str，表示数据分隔符。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;loadtxt 函数执行的是相反的操作，即将文件加载到一个二维数组中，其基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loadtxt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;\&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;float&#39;&lt;/span&gt;\&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; comments&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\#&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delimiter&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; converters&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; skiprows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; usecols&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; unpack&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ndmin&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bytes&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; max_rows&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; \&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; like&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;loadtxt 函数的常用参数主要有两个，分别是 fname 和 delimiter。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 fname 接收 str，表示需要读取的文件、文件名或生成器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 delimiter 接收 str，表示用于分隔数值的分隔符。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;genfromtxt 函数和 loadtxt 函数相似，只不过 genfromtxt 函数面向的是结构化数组和缺失数据。&lt;/p&gt;
&lt;p&gt;genfromtxt 函数通常使用的参数有 3 个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;即用于存放数据的文件名参数 “fname”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于分隔的字符参数 “delimiter”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否含有列标题参数 “names”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2使用函数进行简单的统计分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2使用函数进行简单的统计分析&#34;&gt;#&lt;/a&gt; 2）使用函数进行简单的统计分析&lt;/h3&gt;
&lt;p&gt;在 NumPy 中，除了可以使用通用函数对数组进行比较、逻辑等运算之外，还可以使用统计函数对数组进行排序、去重、求最大和最小值以及求均值等统计分析。&lt;/p&gt;
&lt;p&gt;①排序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NumPy 的排序方式主要可以概括为直接排序和间接排序两种。&lt;/li&gt;
&lt;li&gt;直接排序指对数值直接进行排序；间接排序是指根据一个或多个键对数据集进行排序。&lt;/li&gt;
&lt;li&gt;在 NumPy 中，直接排序通常是使用 sort 函数，间接排序通常是使用 argsort 函数和 lexsort 函数。&lt;/li&gt;
&lt;li&gt;sort 函数是较为常用的排序方法，无返回值。如果目标函数是一个视图，那么原始数据将会被修改。&lt;/li&gt;
&lt;li&gt;当使用 sort 函数排序时，用户可以指定一个 axis 参数，使得 sort 函数可以沿着指定轴对数据集进行排序。&lt;/li&gt;
&lt;li&gt;使用 argsort 函数和 lexsort 函数，可以在给定一个或多个键时，得到一个由整数构成的索引数组，索引值表示数据在新的序列中的位置。&lt;/li&gt;
&lt;li&gt;lexsort 函数可以一次性对满足多个键的数组执行间接排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;②去重与重复数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在统计分析的工作中，难免会出现 “脏” 数据的情况。重复数据就是 “脏” 数据的情况之一。&lt;/li&gt;
&lt;li&gt;如果一个一个地手动删除，那么将会耗时费力且效率低。&lt;/li&gt;
&lt;li&gt;在 NumPy 中，可以通过 unique 函数查找出数组中的唯一值并返回已排序的结果。&lt;/li&gt;
&lt;li&gt;另一种情况，在统计分析中也经常遇到，即需要将一个数据重复若干次。&lt;/li&gt;
&lt;li&gt;在 NumPy 中主要使用 tile 函数和 repeat 函数实现数据重复。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tile 函数的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reps&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;tile 函数主要有两个参数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 A 接收 array_like，表示输入的数组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 reps 接收 array_like，表示指定数组的重复次数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;repeat 函数的基本使用格式如下。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numpy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;repeat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; repeats&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;repeat 函数主要有 3 个参数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参数 a 接收 array_like，表示输入的数组。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 repeats 接收 int 或整数的数组，表示每个元素的重复次数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数 axis 接收 int，表示用于指定沿着哪个轴进行重复。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tile 函数和 repeat 函数的主要区别在于，tile 函数是对数组进行重复操作，repeat 函数是对数组中的每个元素进行重复操作。&lt;/p&gt;
&lt;p&gt;③统计函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 NumPy 中，有许多可以用于统计分析的函数。&lt;/li&gt;
&lt;li&gt;常见的统计函数有 sum、mean、std、var、min 和 max 等。&lt;/li&gt;
&lt;li&gt;几乎所有的统计函数在针对二维数组计算的时候都需要注意轴的概念。&lt;/li&gt;
&lt;li&gt;当 axis 参数为 0 时，表示沿着纵轴进行计算；当 axis 为 1 时，表示沿着横轴进行计算。&lt;/li&gt;
&lt;li&gt;默认情况下，函数并不按照任一轴向计算，而是计算一个总值。&lt;/li&gt;
&lt;li&gt;聚合计算将直接显示计算的最终结果，在 NumPy 中，cumsum 函数和 cumprod 函数采用不聚合计算，产生一个由中间结果组成的数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5函数代码示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5函数代码示例&#34;&gt;#&lt;/a&gt; 5. 函数代码示例&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 数组对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; np&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 一维数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;一维数组arr1:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;结果：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 二维数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组arr2:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;结果：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二维数组arr2&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组的形状shape：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shape&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组的类型dtype：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组的类型dtype：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dtype&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组的类型size：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;二维数组的存储空间itemsize：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;itemsize&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;结果：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二维数组的形状shape： &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二维数组的类型dtype： int32&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二维数组的类型size： &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;二维数组的存储空间itemsize： &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2024-06-17T16:01:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/17/Educational/WeChat/WX_Exercises/</id>
        <title>微信小程序试题复习</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/17/Educational/WeChat/WX_Exercises/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;第一章-微信小程序入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-微信小程序入门&#34;&gt;#&lt;/a&gt; 第一章、微信小程序入门&lt;/h1&gt;
&lt;p&gt;一、填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;微信小程序是运行在______之上的应用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;微信&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序是运行在&lt;span class=&#34;red&#34;&gt;微信&lt;/span&gt;中的应用，是一种不需要下载即可使用的应用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;小程序管理后台&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序开发完成后，需要通过 “上传” 按钮将代码上传到微信小程序的开发者平台，即&lt;span class=&#34;red&#34;&gt;小程序管理后台&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序项目中的______文件是全局配置文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;app.json&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信开发者工具中用于保存文件的快捷键是______。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;Ctrl+S&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;快捷键 &lt;span class=&#34;kbd&#34;&gt;Ctrl&lt;/span&gt; + &lt;span class=&#34;kbd red&#34;&gt;S&lt;/span&gt;         表示&lt;span class=&#34;kbd&#34;&gt;保存&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在微信小程序中，每个页面由 4 个文件组成，分别是______文件、______文件、______文件和 JS 文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;WXML WXSS JSON&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;JS：用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。&lt;/p&gt;
&lt;p&gt;JSON：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。&lt;/p&gt;
&lt;p&gt;WXML：用于构建页面结构，文件扩展名为.wxml。&lt;/p&gt;
&lt;p&gt;WXSS：用于设置页面样式，文件扩展名为.wxss。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AppID 又称为小程序 ID，是每个小程序的&lt;span class=&#34;red&#34;&gt;唯一&lt;/span&gt;标识，每个小程序账号只有一个 AppID&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序项目中 app.js 文件是全局样式文件。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。&lt;/p&gt;
&lt;p&gt;app.wxss：微信小程序的全局样式文件，文件可以为空。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序是运行在&lt;span class=&#34;red&#34;&gt;微信客户端上的应用&lt;/span&gt;。微信客户端给微信小程序提供的环境就是微信小程序的宿主环境。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目成员表示参与微信小程序开发、运行的成员。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目成员：表示参与微信小程序开发、运行的成员，可登录微信小程序管理后台，包括运营者、开发者及和数据分析者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信小程序说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. 微信小程序是运行在微信之中应用&lt;/p&gt;
&lt;p&gt;B. 微信小程序的体积非常小&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C. 微信小程序不可以跨平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这一说法是错误的，因为微信小序本身是基于微信平台的，但通过跨平台开发工具如 uni-app，可以实现代码一次编写，多端运行，从而达到跨平台的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于微信小程序特点的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. 无须安装            B. 无须卸载              &lt;strong&gt;C. 体积大&lt;/strong&gt;              D. 入口丰富&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特点：无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于在微信开发者工具中输出调试信息的面板是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.Wxml&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B.Console&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C.Sources&lt;/p&gt;
&lt;p&gt;D.Network&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wxml：Wxml 面板，用于查看和调试 WXML 和 WXSS。&lt;/p&gt;
&lt;p&gt;Console：控制台面板，用于输出调试信息，也可以直接编写代码执行。&lt;/p&gt;
&lt;p&gt;Sources：源代码面板，用于显示当前项目的脚本文件，在该面板中开发者看到的文件是经过处理之后的脚本文件。&lt;/p&gt;
&lt;p&gt;Network：网络面板，用于记录网络请求和响应信息，根据它可以进行网络性能优化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信小程序项目目录结构说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.pages 目录用于存放所有微信小程序的页面&lt;/p&gt;
&lt;p&gt;B.app.wxss 文件定义了微信小程序项目的全局样式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C.sitemap.json 文件是微信小程序项目的全局配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;D.app.js 文件是微信小程序项目的入口文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序的全局配置文件是&lt;strong&gt; app.json&lt;/strong&gt;，而不是&lt;strong&gt; sitemap.json&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;app.json 是&lt;strong&gt;全局配置文件&lt;/strong&gt;，主要用于配置小程序的全局属性、页面路径、窗口样式等。&lt;/p&gt;
&lt;p&gt;sitemap.json 是&lt;strong&gt;页面配置文件&lt;/strong&gt;，用于配置小程序的页面路径、页面的标题、页面是否允许分享等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信开发者工具说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. 工具栏 “预览” 按钮用于在微信中进行预览&lt;/p&gt;
&lt;p&gt;B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等&lt;/p&gt;
&lt;p&gt;C. 模拟器可以模拟小程序在微信客户端的运行效果&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D. 编辑器中只能打开一个文件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信开发者工具的编辑器支持同时打开和切换多个文件，以便于开发者进行多任务编辑和查看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;请简述微信小程序的特点。&lt;/p&gt;
&lt;p&gt;①微信小程序具有无须安装、触手可及、用完即走、无须卸载&lt;/p&gt;
&lt;p&gt;②体积小，加载速度快，不占用存储空间。&lt;/p&gt;
&lt;p&gt;③名称唯一、入口丰富和传播能力强&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请简述微信小程序项目的创建过程。&lt;/p&gt;
&lt;p&gt;①打开微信开发者工具时，使用微信扫码登录微信开发者工具&lt;/p&gt;
&lt;p&gt;②进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。&lt;/p&gt;
&lt;p&gt;③将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成&lt;/p&gt;
&lt;p&gt;④单击 “确定” 按钮创建微信小程序项&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二章-微信小程序页面制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-微信小程序页面制作&#34;&gt;#&lt;/a&gt; 第二章、微信小程序页面制作&lt;/h1&gt;
&lt;p&gt;一、填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;image 组件的____属性用于设置图片的展示模式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;mode&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;swiper 组件内部只可以放置____组件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;swiper-item&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Flex 布局中， ____属性能够设置项目在主轴方向的排列方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;justify-content&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;justify-content 设置排列方式&lt;/p&gt;
&lt;p&gt;flex-direction 设置主轴方向&lt;/p&gt;
&lt;p&gt;justify-content 定义了项目在主轴上的对齐方式，默认值为 flex-start，即项目在主轴方向上，与主轴起始位置对齐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;text 组件的 ____属性用于实现长按选中文本内容的效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;user-select&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;user-select 文本是否可选，该属性会使文本节点显示为 inline-block&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;app.json&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flex-direction 决定主轴的方向（即项目的排列方向），默认值为 row，即主轴为从左到右的水平方向，项目按照主轴方向排列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序中的样式文件是 WXSS 文件，但是支持多种尺寸单位，包括 rpx、px、vw、vh 等&lt;/p&gt;
&lt;p&gt;rpx（Responsive Pixel，自适应像素）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;swiper 组件可以实现页面的轮播图效果。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;video 组件专门用于播放音频。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;video    视频&lt;/p&gt;
&lt;p&gt;audio   音频&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于配置微信小程序所有的页面地址的文件是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）&lt;/p&gt;
&lt;p&gt;A. app.js&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B. app.json&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C. app.wxss&lt;/p&gt;
&lt;p&gt;D. project.config.json&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在微信小程序中可以通过&lt;span class=&#34;red&#34;&gt; app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于表单组件的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;A. input 组件&lt;/p&gt;
&lt;p&gt;B. checkbox 组件&lt;/p&gt;
&lt;p&gt;C. form 组件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D. swiper 组件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常见表单组件如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td&gt;表单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox-group&lt;/td&gt;
&lt;td&gt;多项选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio-group&lt;/td&gt;
&lt;td&gt;单项选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;textarea&lt;/td&gt;
&lt;td&gt;多行输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;button&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox&lt;/td&gt;
&lt;td&gt;多选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio&lt;/td&gt;
&lt;td&gt;单选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于 Flex 布局的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt; ）&lt;/p&gt;
&lt;p&gt;A.  display:flex;&lt;/p&gt;
&lt;p&gt;B.   flex:1;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C.   float:left;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;D.  flex-flow:column nowrap;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flex 布局允许开发者沿着主轴（main axis）和交叉轴（cross axis）这两个维度来控制元素的布局，其中主轴是由 &lt;code&gt;flex-direction&lt;/code&gt;  属性决定的，可以是水平或垂直方向。&lt;/p&gt;
&lt;p&gt;选项 A  &lt;code&gt;display:flex;&lt;/code&gt;  是启用 Flex 布局的基本属性，它指定了某个元素作为 Flex 容器。&lt;/p&gt;
&lt;p&gt;选项 B 中的 &lt;code&gt;flex:1;&lt;/code&gt;  则是在 Flex 容器的子项上定义的，表示该项目相对于其他项目的扩展比例。&lt;/p&gt;
&lt;p&gt;C 中的 &lt;code&gt;float:left;&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt;  属性在某些布局场景下仍然有其应用，但它并不属于 Flex 布局的属性范畴&lt;/p&gt;
&lt;p&gt;选项 D 中的 &lt;code&gt;flex-flow:column nowrap;&lt;/code&gt;  是一个简写属性，结合了 &lt;code&gt;flex-direction&lt;/code&gt;  和 &lt;code&gt;flex-wrap&lt;/code&gt;  两个属性的值，用于控制项目的排列方向和是否换行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;C&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. 3              B. 4                  &lt;strong&gt;C. 5&lt;/strong&gt;                    D. 6&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt; 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简述 WXML 和 HTML 的区别。&lt;/p&gt;
&lt;p&gt;①  HTML 和 WXML 使用的标签不同。例如，HTML 经常使用 &amp;lt;div&amp;gt; 标签搭建页面结构，而 WXML 则使用 &amp;lt; view &amp;gt; 标签搭建页面结构；HTML 经常使用 &amp;lt; span &amp;gt; 标签定义行内文本 ，而 WXML 则使用 &amp;lt; text &amp;gt; 标签定义行内文本 。&lt;/p&gt;
&lt;p&gt;②  WXML 提供了和 Vue.js 中模板语法类似的模板语法，例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。&lt;/p&gt;
&lt;p&gt;③  HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。&lt;/p&gt;
&lt;p&gt;④  WXML 中的单标签必须在结尾 “&amp;gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&amp;gt;” 前面的 “/”。&lt;/p&gt;
&lt;p&gt;⑤  WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述 WXSS 和 CSS 的区别。&lt;/p&gt;
&lt;p&gt;①  不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。&lt;/p&gt;
&lt;p&gt;②  在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。&lt;/p&gt;
&lt;p&gt;③  在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url (&#39;/images/1.png&#39;);” 是无效的，而 CSS 可以使用本地图片来设置背景图片。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述 Flex 布局的概念。&lt;/p&gt;
&lt;p&gt;Flex 布局又称为弹性盒（Flexible Box）布局，它为盒子模型提供了很强的灵活性，任何一个容器都可以指定为 Flex 布局。采用 Flex 布局的元素，称为 Flex 容器（简称容器）。 它的所有子元素自动成为容器成员，称为 Flex 项目（简称项目）。容器内有两根轴：主轴（Main Axis）和交叉轴（Cross Axis）, 默认情况下主轴为水平方向，交叉轴为垂直方向，项目默认沿主轴排列，根据实际需要可以更改项目的排列方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第三章-微信小程序页面交互&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-微信小程序页面交互&#34;&gt;#&lt;/a&gt; 第三章、微信小程序页面交互&lt;/h1&gt;
&lt;p&gt;一、填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在页面结构渲染过程中，通过____控制属性完成页面的条件渲染。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx:if&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;条件渲染通过标签的 wx:if 控制属性来完成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在列表渲染中，通过____控制属性可以循环数组中的每一项。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx:for&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;列表渲染通过 wx:for 控制属性来实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在列表渲染中，使用____可以指定当前项的变量名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx:for-item&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 JS 文件中，通过____ 获取 data-* 自定义属性的值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;e.target.dataset&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;data-* 自定义属性的属性值表示要传参的数据。&lt;/p&gt;
&lt;p&gt;在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在微信小程序中，页面加载完成后执行的生命周期函数为 ____。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;onReady()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;onLoad () : 监听页面加载，且一个页面只会在创建完成后触发一次&lt;/p&gt;
&lt;p&gt;onShow (): 监听页面显示，只要页面显示就会触发此函数&lt;/p&gt;
&lt;p&gt;onReady (): 监听页面初次渲染完成，一个页面只会调用一次&lt;/p&gt;
&lt;p&gt;onHide (): 监听页面隐藏，只要页面隐藏就会触发此函数&lt;/p&gt;
&lt;p&gt;onUnload (): 监听页面卸载，只要页面被释放就会触发此函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序可以通过自定义属性来进行传参。&lt;/p&gt;
&lt;p&gt;data-* 自定义属性的属性值表示要传参的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‌所有绑定的数据都必须在 data 中进行初始化。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;绝大多数情况下，页面上需要动态显示或操作的数据确实需要在对应的 JavaScript 文件中的 page 实例的 data 属性里定义和初始化，但也存在一些特例情况&lt;/p&gt;
&lt;p&gt;对于那些不经常变化或者不需要动态响应式更新的数据，可能会选择直接在 WXML 文件中硬编码，而不是在 data 中定义&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;onPullDownRefresh () : 监听用户下拉刷新事件&lt;/p&gt;
&lt;p&gt;启用下拉刷新的方式:&lt;/p&gt;
&lt;p&gt;①全局开启下拉刷新：在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。&lt;/p&gt;
&lt;p&gt;②局部开启下拉刷新：在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过调用 wx.request () 方法可以发起网络请求。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。&lt;/p&gt;
&lt;p&gt;在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过调用 wx.showLoading () 方法可以弹出加载提示框。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在微信小程序中，如果想实现点击一个按钮弹出一个提示框的效果，可以使用以下 2 种方式。&lt;/p&gt;
&lt;p&gt;①wx.showLoading () 方法&lt;/p&gt;
&lt;p&gt;②wx.showToast () 方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于列表渲染说法正确的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.   wx:for-index 可以用于重新定义当前项的变量名&lt;/p&gt;
&lt;p&gt;B.   在列表渲染中，可以使用 item 变量获取当前项的值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C.   wx:for 可以用于实现页面中的列表渲染&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;D.   wx:for-item 可以用于设置当前索引变量的属性名&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案 BC 应该都是对的，但老师给的答案是选 B&lt;/p&gt;
&lt;p&gt;A. 错误：wx:for-index 确实用于重新定义当前项索引变量的名字，默认情况下是 index，例如 wx:for-index=&amp;quot;idx&amp;quot;，但题目描述的是 “当前项的变量名”，这是错误的，应为 item。&lt;/p&gt;
&lt;p&gt;B. 正确：在列表渲染中，使用 wx:for-item=&amp;quot;item&amp;quot; 可以定义一个变量来获取当前项的值，然后在 wxml 模板中通过访问当前项的内容。&lt;/p&gt;
&lt;p&gt;C. 正确：wx:for 指令可以用于实现页面中的列表渲染，其基本语法格式是 wx:for=&amp;quot;&amp;quot;。&lt;/p&gt;
&lt;p&gt;D. 错误：wx:for-item 用于设置当前数据项的变量名，默认是 item，例如 wx:for-item=&amp;quot;itemName&amp;quot;，而不是用于设置当前索引变量的属性名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于监听页面初次渲染成功的回调函数是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. onHide             B. onLoad                C. onShow             &lt;strong&gt;D. onReady&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;onLoad () : 监听页面加载，且一个页面只会在创建完成后触发一次&lt;/p&gt;
&lt;p&gt;onShow (): 监听页面显示，只要页面显示就会触发此函数&lt;/p&gt;
&lt;p&gt;onReady (): 监听页面初次渲染完成，一个页面只会调用一次&lt;/p&gt;
&lt;p&gt;onHide (): 监听页面隐藏，只要页面隐藏就会触发此函数&lt;/p&gt;
&lt;p&gt;onUnload (): 监听页面卸载，只要页面被释放就会触发此函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. wx:for-i&lt;/p&gt;
&lt;p&gt;B.  wx:for-j&lt;/p&gt;
&lt;p&gt;C.  wx:for-item&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D.  wx:for-index&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在微信小程序开发中， &lt;code&gt;wx:for&lt;/code&gt;  是一种控制属性，它允许开发者通过绑定一个数组到组件上，从而使用数组中的每一项数据重复渲染该组件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wx:for-index&lt;/code&gt;  属性允许开发者为当前元素的下标指定一个自定义的变量名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wx:for-item&lt;/code&gt;  属性，用于指定当前元素的变量名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，wx.showToast () 函数的参数属性中包含的回调函数有（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  title、icon 和 mask&lt;/p&gt;
&lt;p&gt;B.  success、fail 和 title&lt;/p&gt;
&lt;p&gt;C.  duration、mask 和 success&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D.  success、fail 和 complete&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：老师答案为 A&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wx.showToast()&lt;/code&gt;  函数是一个常用的 API，用于向用户显示一个简单的提示消息&lt;/p&gt;
&lt;p&gt;该函数的参数属性：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;title&lt;/strong&gt;：这是提示的内容，是 &lt;code&gt;wx.showToast()&lt;/code&gt;  函数的必填参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;icon&lt;/strong&gt;：这是一个可选参数，用于设置提示框的图标类型。支持的图标类型包括&#39;success&#39;、&#39;loading&#39; 等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;duration&lt;/strong&gt;：这也是一个可选参数，定义了提示框显示的持续时间，以毫秒为单位。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mask&lt;/strong&gt;：一个布尔值，表示是否显示透明蒙层以防止触摸穿透，默认为 false。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;success&lt;/strong&gt;：这是接口调用成功的回调函数，它是一个可选参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fail&lt;/strong&gt;：这是接口调用失败的回调函数，同样是一个可选参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;complete&lt;/strong&gt;：无论接口调用成功还是失败，这个回调函数都会被执行。它也属于可选参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A.  &lt;code&gt;&amp;#123;&amp;#123; &amp;#125;&amp;#125;&lt;/code&gt; &lt;/strong&gt;             B.   &lt;code&gt;[]&lt;/code&gt;           C.  &lt;code&gt;&amp;#123; &amp;#125;&lt;/code&gt;        D.  &lt;code&gt;[[]]&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定，可将 data 中的数据通过 Mustache 语法输出到页面上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简述页面生命周期函数包括哪些。&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数包含以下 5 个。&lt;/p&gt;
&lt;p&gt;①  onLoad () 函数用于监听页面加载，且一个页面只会在创建完成后触发一次。&lt;/p&gt;
&lt;p&gt;②  onShow () 函数用于监听页面显示，只要页面显示就会触发此函数。&lt;/p&gt;
&lt;p&gt;③  onReady () 函数用于监听页面初次渲染完成，一个页面只会调用一次。&lt;/p&gt;
&lt;p&gt;④  onHide () 函数用于监听页面隐藏，只要页面隐藏就会触发此函数。&lt;/p&gt;
&lt;p&gt;⑤  onUnload () 函数用于监听页面卸载，只要页面被释放就会触发此函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述 wx:if 控制属性和 hidden 属性的区别。&lt;/p&gt;
&lt;p&gt;wx:if 和 hidden 不同之处在于，wx:if 初始渲染条件为 false，只有条件第一次变为 true 的时候才开始渲染，而 hidden 所在的组件始终会被渲染，只是简单的控制显示与隐藏。&lt;/p&gt;
&lt;p&gt;一般来说，wx:if 有更大的切换开销而 hidden 有更高的初次渲染开销。因此，在需要频繁切换的情境下，用 hidden 更好，而如果运行时条件不太可能会改变，用 wx:if 更好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述微信小程序如何实现下拉刷新。&lt;/p&gt;
&lt;p&gt;微信小程序实现下拉刷新分为 2 个步骤。&lt;/p&gt;
&lt;p&gt;①  开启下拉刷新。在 app.json 的 window 节点中或在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。&lt;/p&gt;
&lt;p&gt;②  调用 onPullDownRefresh () 事件处理函数实现下拉操作执行时的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述微信小程序如何实现上拉触底。&lt;/p&gt;
&lt;p&gt;微信小程序提供 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。&lt;/p&gt;
&lt;p&gt;在默认情况下触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，可以根据实际需求修改默认值。可以在全局或页面的 JSON 配置文件中，通过 onReachBottomDistance 属性来修改上拉触底的距离。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第四章-微信小程序常用api上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-微信小程序常用api上&#34;&gt;#&lt;/a&gt; 第四章、微信小程序常用 API（上）&lt;/h1&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;上传文件的 API 是  ____。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx.uploadFile()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载文件的 API 是 ___。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx.downloadFile()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;scroll-view 组件可以实现 ___ 效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;滚动&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动，默认是不滚动的，需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 scroll-view 组件中，用  ___ 属性用于设置横向滚动条的位置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;scroll-left&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;scroll-x: 允许横向滚动，默认值为 false&lt;br /&gt;
scroll-y: 允许纵向滚动，默认值为 false&lt;br /&gt;
scroll-top: 设置竖向滚动条的位置，默认值为空，类型：number/string&lt;br /&gt;
scroll-left：设置横向滚动条的位置，默认值为空，类型：number/string&lt;br /&gt;
scroll-into-view：当前可在哪个方向滚动，则在哪个方向滚动到该元素。值为某子元素 id (id 不能以数字开头)，类型：string&lt;br /&gt;
scroll-with-animation: 在设置滚动条位置时是否使用动画过渡，默认值为 false&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 slider 组件的属性中，___ 属性用于设置进度条的最大值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;max&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在微信小程序中，通过 slider 组件可以定义一个滑动选择器。&lt;/p&gt;
&lt;p&gt;slider 组件的常用属性:&lt;/p&gt;
&lt;p&gt;min: 进度条的最小值，默认值为 0&lt;/p&gt;
&lt;p&gt;max: 进度条的最大值，默认值为 100&lt;/p&gt;
&lt;p&gt;step：步长，取值大于 0，可被 max-min 整除，默认值为 1&lt;/p&gt;
&lt;p&gt;value：当前取值，默认为 0&lt;/p&gt;
&lt;p&gt;activeColor：已选择的颜色，默认值为 #1aad19&lt;/p&gt;
&lt;p&gt;backgroundColor  ：背景条的颜色，默认值为 #e9e9e9&lt;/p&gt;
&lt;p&gt;block-size：滑块大小，取值范围为 12∼2812∼28 , 默认值为 28&lt;/p&gt;
&lt;p&gt;block-color： 滑块颜色，默认值为 #ffffff&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 canvas 组件中，canvas-id 属性是其唯一标识符。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;canvas 组件可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。&lt;/p&gt;
&lt;p&gt;canvas 组件的常用属性如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定 canvas 组件的类型，支持 2D 和 WebGL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canvas-id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable-scroll&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchstart&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchmove&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸后移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchend&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchcancel&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作被打断，例如来电提醒，弹窗等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindlongtap&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binderror Grill&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当发生错误时触发 error 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &amp;lt;slider&amp;gt; 组件上添加 bindchanging=&amp;quot;sliderChanging&amp;quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bindchange: 完成一次拖曳后触发的事件&lt;/p&gt;
&lt;p&gt;bindchanging: 拖曳过程中触发的事件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;  ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;type 指定 canvas 组件的类型，支持 2D 和 WebGL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件上传 API 使用的方法是 wx.uploadFile ()。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序提供了文件上传 API，调用 wx.uploadFile () 方法即可使用文件上传 API。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过调用 wx.previewImage () 方法可以使用选择媒体 API。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过调用 wx.chooseMedia () 方法即可使用选择媒体 API，该方法执行后，会提示用户拍摄图片或视频，或从手机相册中选择图片或视频。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于滑动选择某一个值的组件是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. view&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B. slider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C. input&lt;/p&gt;
&lt;p&gt;D. audio&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;slider 组件是微信小程序表单组件中的一种，用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A. stop()&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B. seek()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C. pause()&lt;/p&gt;
&lt;p&gt;D. play()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A. stop ()  停止背景音频 *&lt;/p&gt;
&lt;p&gt;B. seek ()  跳转到指定位置&lt;/p&gt;
&lt;p&gt;C. pause () 暂停背景音频&lt;/p&gt;
&lt;p&gt;D. play ()  播放背景音频&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列关于 canvas 组件的说法中，错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A. CSS 动画对 canvas 组件无效&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;B. canvas-id 是 canvas 组件的唯一标识符&lt;/p&gt;
&lt;p&gt;C. canvas 组件用于自定义绘制图形&lt;/p&gt;
&lt;p&gt;D. 在同一个页面中，canvas-id 是唯一的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSS 动画和 &amp;lt;canvas&amp;gt; 元素的结合使用可以创建复杂的视觉效果。&lt;/p&gt;
&lt;p&gt;然而，&amp;lt;canvas&amp;gt; 是一个基于 JavaScript 的图形绘制工具，它不直接支持 CSS 动画。你需要使用 JavaScript 配合 &amp;lt; canvas &amp;gt; 来实现动画。&lt;/p&gt;
&lt;p&gt;canvas-id:canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性&lt;/p&gt;
&lt;p&gt;canvas 组件可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A. start () 方法表示开始录音&lt;/p&gt;
&lt;p&gt;B. pause () 方法表示暂停录音&lt;br /&gt;
 C. resume () 方法表示继续录音&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D. onError () 方法表示停止录音，点击开始录音后会从中断的地方接着继续录音&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实际上，onError () 方法&lt;strong&gt;并不表示停止录音&lt;/strong&gt;。它是用于处理录音过程中发生错误的回调函数，当录音发生错误时会触发该方法。与录音的开始、暂停、继续等操作无关。因此，D 选项中的描述是错误的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简述 BackgroundAudioManager 实例的属性和方法。&lt;/p&gt;
&lt;p&gt;BackgroundAudioMauager 实例的常用属性包含 src（背景音频的数据源）、startTime（背景音频开始播放的位置）、title（背景音频标题）、duration（当前背景音频的长度）、currentTime（当前背景音频的播放位置）和 paused（当前是否暂停或停止）。&lt;/p&gt;
&lt;p&gt;BackgroundAudioMauager 实例的常用方法包含 play ()（播放背景音频）、pause ()（暂停背景音频）、seek ()（跳转到指定位置）和 stop ()（停止背景音频）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述使用画布 API 进行绘图的基本步骤。&lt;/p&gt;
&lt;p&gt;若要使用画布 API，需要先获取 Canvas 实例，然后通过 Canvas 实例获取 RenderingContext（渲染上下文）实例，最后通过 RenderingContext 实例的属性和方法完成绘图操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述如何实现文件上传和文件下载。&lt;/p&gt;
&lt;p&gt;微信小程序提供了文件上传 API，通过调用 wx.uploadFile () 方法可以实现文件上传；同时也提供了文件下载 API，通过调用 wx.downloadFile () 方法即可使用文件下载 API。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第五章-微信小程序常用api下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五章-微信小程序常用api下&#34;&gt;#&lt;/a&gt; 第五章、微信小程序常用 API（下）&lt;/h1&gt;
&lt;p&gt;一、填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从本地缓存中异步获取指定 key 的内容使用 ____ 方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx.getStorage()&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;异步方法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;wx.setStorage()&lt;/td&gt;
&lt;td&gt;将数据存储在本地缓存指定的 key 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorage()&lt;/td&gt;
&lt;td&gt;从本地缓存中异步获取指定 key 的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageInfo()&lt;/td&gt;
&lt;td&gt;异步获取当前 storage 的相关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.removeStorage()&lt;/td&gt;
&lt;td&gt;从本地缓存中移除指定 key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.setStorageSync()&lt;/td&gt;
&lt;td&gt;wx.setStorage () 方法的同步版本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序通过 ____ 方法获取登录凭证 code。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx.login()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序提供了登录 API，调用 wx.login () 方法获取用户登录凭证 code&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;session_key&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;调用 login () 方法，获取到 login code 和 session，并且 session 中包含 session_key 和 openid，说明用户登录凭证 code 验证成功。&lt;/p&gt;
&lt;p&gt;session_key 是用户的会话密钥，需要存储在开发者服务器中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;map 组件中地图视野发生变化时触发  ____  事件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;bindregionchange&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;map 组件可以为用户提供地图功能。map 组件可以在页面中显示地图，并且支持移动、缩放、添加标记点等功能。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;中心经度，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;中心纬度，为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scale&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;缩放级别，取值范围为 3~20，默认值为 16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;markers&lt;/td&gt;
&lt;td&gt;Array.&lt;marker&gt;&lt;/td&gt;
&lt;td&gt;标记点数组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-location&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示带有方向的当前定位点，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindregionchange&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;视野发生变化时触发的事件处理函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Animation 实例的常用方法中，  ____  用于导出动画队列。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;export()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;export (): 导出动画队列。export () 方法每次调用后会清掉之前的动画操作&lt;/p&gt;
&lt;p&gt;scale: 缩放&lt;/p&gt;
&lt;p&gt;translate：平移变化&lt;/p&gt;
&lt;p&gt;skew：倾斜&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序通过   ____ 方法创建一个 WebSocket 连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;wx.connectWebSocket&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;WebSocket API：允许服务器主动向微信小程序发送消息。&lt;/p&gt;
&lt;p&gt;通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;send()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序通过  &lt;code&gt;socket.send()&lt;/code&gt;  方法可以通过 WebSocket 发送数据。在微信小程序中建立 WebSocket 连接后，可以使用 &lt;code&gt;send&lt;/code&gt;  函数来发送数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;onMessage()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信小程序通过  &lt;code&gt;wx.onSocketMessage&lt;/code&gt;  方法监听 WebSocket 接收到服务器的消息事件。当 WebSocket 接收到服务器发送的数据时，这个回调函数会被触发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在微信小程序中，调用 wx.login () 方法可以获取临时登录凭证 code。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序提供了登录 API，调用 wx.login () 方法获取用户登录凭证 code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;openid 是用户在某个小程序中的唯一标识，而当开发者拥有多个小程序时，同一个微信用户在不同的小程序中的 openid 是不一样的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openid 是微信小程序的唯一标识。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在单个小程序内，openid 确实是该用户的唯一标识，但如果跨小程序来看，就不能说 openid 是唯一的，因为它在不同小程序中会有所不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;√&lt;/span&gt;  ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;wx.setStorageSync()&lt;/code&gt;  方法可以将数据同步存储在本地缓存指定的 key 中，这也是正确的。这个方法用于在本地同步地设置或获取数据，非常适合用来保存一些简单的配置信息或用户的登录态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;animation.export () 方法每次调用后仍保留之前的动画操作。（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;×&lt;/span&gt; ）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序的 API 设计， &lt;code&gt;animation.export()&lt;/code&gt;  方法每次调用后并不会保留之前的动画操作。&lt;/p&gt;
&lt;p&gt;相反， &lt;code&gt;export&lt;/code&gt;  方法每次调用后会清掉之前的动画操作。&lt;/p&gt;
&lt;p&gt;这意味着如果你想要创建一个新的动画序列或者更新现有动画，你需要重新初始化和配置动画实例。这是为了确保动画数据的更新能够正确反映最新的动画设置，避免动画状态的混乱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于实现非标签页之间的跳转的方法是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;A&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A.  wx.navigateTo()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;B.   wx.navigate()&lt;/p&gt;
&lt;p&gt;C.   wx.navigatorTo()&lt;/p&gt;
&lt;p&gt;D.  wx.navigator()&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;用于实现非标签页之间的跳转的方法是 A. wx.navigateTo ()&lt;/strong&gt;。在微信小程序中，页面跳转是一个常见的操作，它允许用户在应用的不同页面之间流畅地切换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于 map 组件属性说法错误的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.  longitude 为中心经度&lt;/p&gt;
&lt;p&gt;B.   scale 为缩放级别，取值范围为 1~20&lt;/p&gt;
&lt;p&gt;C.   latitude 为中心纬度&lt;/p&gt;
&lt;p&gt;D.  markers 为标记点数组&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A.  longitude 为中心经度：这个陈述是正确的。在地图应用中，经度（longitude）确实表示地图中心的经度值。在微信小程序的 map 组件中，longitude 属性用于设置地图中心的经度，以确定地图初始显示的地理位置。&lt;/p&gt;
&lt;p&gt;B.scale 为缩放级别，取值范围为 1~20：这个陈述是错误的。在微信小程序的 map 组件中，scale 属性实际上是用来设置地图的缩放比例的，而不是缩放级别。而且，scale 的取值范围并不是 1 到 20，而是任意有效的正数。scale 的值越小，地图的显示范围越大，反之则显示范围越小。&lt;/p&gt;
&lt;p&gt;C.latitude 为中心纬度：这个陈述也是正确的。纬度（latitude）在地理坐标系统中用来表示一个地点的北南位置。在微信小程序的 map 组件中，latitude 属性用于设置地图中心的纬度值，与 longitude 一起确定地图的初始中心位置。&lt;/p&gt;
&lt;p&gt;D.markers 为标记点数组：这个陈述同样是正确的。markers 属性用于在地图上添加标记点。它是一个数组，每个元素代表一个标记点的信息，包括经纬度、名称等。通过 markers 属性，开发者可以在地图上标出特定的地理位置或兴趣点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于 openid 的说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  openid 是用户的唯一标识&lt;/p&gt;
&lt;p&gt;B.   openid 不等同于微信用户 id&lt;/p&gt;
&lt;p&gt;C.   同一个微信用户在不同 AppID 的微信小程序中的 openid 是不同的&lt;/p&gt;
&lt;p&gt;D.  openid 是微信小程序的唯一标识&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;openid 的定义与作用&lt;/strong&gt;：openid 是微信用户在单个小程序中的唯一标识符。这意味着每个用户在一个特定的小程序中都有一个独特的 openid，这个标识符用于在该小程序内部区分不同的用户。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;openid 的获取方式&lt;/strong&gt;：通常通过调用 &lt;code&gt;wx.login()&lt;/code&gt;  方法获取一个临时登录凭证，然后再通过服务器请求微信接口 &lt;code&gt;auth.code2Session&lt;/code&gt;  来换取 openid。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;openid 的范围限制&lt;/strong&gt;：openid 仅在获得它的小程序中有效。如果用户同时使用了开发者的多个小程序，那么在不同的小程序中，用户的 openid 是不同的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于 marker 对象的属性说法错误的是（&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;D&lt;/span&gt; ）。&lt;/p&gt;
&lt;p&gt;A.  title 标注点名称&lt;/p&gt;
&lt;p&gt;B.   zIndex 表示显示层级&lt;/p&gt;
&lt;p&gt;C.   alpha 表示标注的透明度&lt;/p&gt;
&lt;p&gt;D.  userInfo 表示用户信息对象&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;D.userInfo 不是 marker 对象的属性，而是部分地图 API 中提供的一种用于保存用户信息的参数，可以通过自定义属性来实现类似功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于数据缓存说法错误的是（ &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;B&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;A.  wx.getStorage () 方法用于从本地缓存中异步获取指定 key 内容&lt;/p&gt;
&lt;p&gt;B.   wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key&lt;/p&gt;
&lt;p&gt;C.   wx.setStorage () 方法用于将数据异步存储在本地缓存指定的 key&lt;/p&gt;
&lt;p&gt;D.  在实现数据缓存的方法中，方法名以 Sync 结尾的都是同步方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;B 选项说 “wx.removeStorageSync () 方法用于以异步的方式从本地缓存中移除指定 key”，这是不正确的。&lt;/p&gt;
&lt;p&gt;实际上，wx.removeStorageSync () 方法是以同步的方式从本地缓存中移除指定 key 的内容。方法名中的 “Sync” 后缀表示这是一个同步方法，而不是异步方法。&lt;/p&gt;
&lt;p&gt;所以，B 选项的描述是错误的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简述如何获取 Animation 实例。&lt;/p&gt;
&lt;p&gt;通过 wx.createAnimation () 方法可以获取 Animation 实例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;onHide () 和 onPageNotFound () 的作用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（1）onLaunch ()：监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次。&lt;/p&gt;
&lt;p&gt;（2）onShow ()：监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发。&lt;/p&gt;
&lt;p&gt;（3）onError ()：错误监听函数，微信小程序脚本错误或者 API 调用报错时触发。&lt;/p&gt;
&lt;p&gt;（4）onHide ()：监听微信小程序切后台，微信小程序从前台进入后台时触发。&lt;/p&gt;
&lt;p&gt;（5）onPageNotFound ()：页面不存在监听函数，微信小程序要打开的页面不存在时触发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述如何创建 WebSocket 连接。&lt;/p&gt;
&lt;p&gt;使用 wx.connectSocket () 方法创建 WebSocket 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;编程题-重点范围&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编程题-重点范围&#34;&gt;#&lt;/a&gt; 编程题 重点范围&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;程序题 6 题 * 4=24 分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1组件的概念及常用组件imagevideoview等组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1组件的概念及常用组件imagevideoview等组件&#34;&gt;#&lt;/a&gt; 1. 组件的概念及常用组件 (image，video，view 等组件)&lt;/h2&gt;
&lt;p&gt;例题 组件的概念及常用组件 --view、image、text、radio、button&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618220146963.png&#34; alt=&#34;image-20240618220146963&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--index.wxml--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 配置状态栏 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;navigation-bar&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;我的主页&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;back&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;blue&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#bbf&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;navigation-bar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 头像区域 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;container&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;top&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/avatar.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;aspectFit&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 详细信息区域 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;menu&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;姓名：小丽&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;年龄：20&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;性别：女&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;特长：绘画、书法&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;爱好：编程&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 16 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 配置页脚 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;footer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;hover-class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;bgc&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;hover-start-time&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;1000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;hover-stay-time&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;3000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;想联系我吗？&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;发邮箱给我dd@qq.com&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;发送&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;// WXSS配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.top&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #3A4861&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 3	&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 30rpx 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 5 &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token selector&#34;&gt;.top .user-img&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 252rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0 auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.top image&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 252rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 252rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 50%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 6rpx solid #777F92&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 15 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.menu .item&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 96rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;line-height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 96rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border-bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 2rpx solid #ccc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0 40rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 34rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 7 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 50rpx 5rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.footer button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;5rpx solid #aaa&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;#bbf&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;15rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.bgc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;#cdd&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例题 组件的概念及常用组件 -- video&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618220310260.png&#34; alt=&#34;image-20240618220310260&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;pages/life/life.wxml&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;view class=&#34;vd&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &amp;lt;view classs=&#34;item&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &amp;lt;video src=&#34;http://127.0.0.1:3000/01.mp4poster=&#34;http://127.0.0.1:3000/st2.pngcontrols=&#34;true&#34; loop=&#34;true&#34; /&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- autoplay=&#34;true--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.vd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;2rpx solid #4ed&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 80vw&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 80vh&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.vd .item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;2rpx solid #4ed&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 60vw&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 60vw&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;0 auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item video&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;80%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 80%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;2页面路径的配置方法能够运用该方法对页面进行管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2页面路径的配置方法能够运用该方法对页面进行管理&#34;&gt;#&lt;/a&gt; 2. 页面路径的配置方法，能够运用该方法对页面进行管理&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618194400.png%7D&#34; alt=&#34;image-20240618194343394&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pages&#34;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token string&#34;&gt;&#34;pages/info/info&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token string&#34;&gt;&#34;pages/life/life&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;window&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTextstyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;backgroundTextstyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;light&#34;&lt;/span&gt;. &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarBackgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;#fff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;app.json&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;tabBar&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;color&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;#&lt;span class=&#34;token number&#34;&gt;000&lt;/span&gt;”，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;blue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;borderStyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;#eee&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;首页”，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;images/invite.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;images/invite.png&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pages/info/info&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;个人信息” &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;images/guest.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;3掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作&#34;&gt;#&lt;/a&gt; &lt;mark&gt;*3. 掌握 swiper 和 swiper-item 组件的使用方法，能灵活运用 swiper 和 swiper 组件完成轮播图的制作&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618194759.png%7D&#34; alt=&#34;image-20240618194446919&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;50px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;padding-top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;30px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;本地生活&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 轮播图区域的页面结构 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;indicator-dots&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;autoplay&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;3000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/swiper00.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/swiper01.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/swiper02.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 九宫格区域 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;grids&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/shi.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;美食&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/xiu.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;装修&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/yu.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;洗浴&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/che.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;汽车&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;       &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/chang.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;唱歌&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/fang.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;住宿&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/xue.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;学习&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/gong.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;工作&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/images/hun.png&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;结婚&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 38 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 350rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;swiper image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 九宫格 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.grids&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-wrap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; wrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-direction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; column&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;760rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.grids .item image&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 70rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 70rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.grids .item text&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #999&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 28rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 9 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4掌握导航栏的配置方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4掌握导航栏的配置方法&#34;&gt;#&lt;/a&gt; &lt;mark&gt;*4. 掌握导航栏的配置方法&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;在页面配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在全局配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173744741.png&#34; alt=&#34;image-20240608173744741&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;5掌握标签栏的配置方法能够完成页面标签栏的配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5掌握标签栏的配置方法能够完成页面标签栏的配置&#34;&gt;#&lt;/a&gt; 5. 掌握标签栏的配置方法，能够完成页面标签栏的配置&lt;/h2&gt;
&lt;p&gt;例题，页面路径的配置方法 / 标签栏的配置方法 / 导航栏的配置方法&lt;br /&gt;
 2.3 知识点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618194929281.png&#34; alt=&#34;image-20240618194929281&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;tabBar&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;color&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ccc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ff4c91&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;borderStyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#fff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/invite.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/invite.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;邀请函&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/picture/picture&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/marry.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/marry.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;照片&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/video/video&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/video.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/video.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;美好时光&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/guest/guest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/guest.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/guest.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;宾客信息&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    navigationBarTitleText&lt;span class=&#34;token string&#34;&gt;&#34;: &#34;&lt;/span&gt;邀请函&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;6掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作&#34;&gt;#&lt;/a&gt; 6. 掌握表单组件的使用方法，能够灵活运用常用的表单组件完成页面的制作&lt;/h2&gt;
&lt;p&gt;form 表单组件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618221849950.png&#34; alt=&#34;image-20240618221849950&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindsubmit&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1 输入文本&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2 输入数字&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;number&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;placeholder&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;数字键盘&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3 输入身份证号码&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;idcard&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;4 带小数点的数字键盘&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;digit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;6 密码&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;普通按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;mini&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;mini普通按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;primary&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;主色调按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;warn&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;警告按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;radio&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;单个单选按钮&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;互斥按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio-group&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchange&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;选择1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;checked&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;选择2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;7掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用&#34;&gt;#&lt;/a&gt; &lt;mark&gt;*7. 掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;例题，事件绑定 /this，3.1 知识点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618194956822.png&#34; alt=&#34;image-20240618194956822&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;container&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test()&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮1-1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮1-2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test()&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮2-1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮2-2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;changetext&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewtap&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;out &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;inner&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;inner&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;elif&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;viewtap&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;currentTarget&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;changetext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#39;新标题&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例题，数据绑定（插值语法），3.1 知识点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195142811.png&#34; alt=&#34;image-20240618195142811&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;hid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 保存第 1 个数字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;container&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test()&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮1-1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮1-2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test()&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮2-1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮2-2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;changetext&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195204476.png&#34; alt=&#34;image-20240618195204476&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;hid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 保存第 1 个数字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;msg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 报错 //console.log (this.msg);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onPullDownRefresh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#39;hello world&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//num1:42 无效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;8掌握data-自定义属性能够完成data-自定义数据的设置与获取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8掌握data-自定义属性能够完成data-自定义数据的设置与获取&#34;&gt;#&lt;/a&gt; 8. 掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取&lt;/h2&gt;
&lt;p&gt;例题，自定义属性 data- /setData，3.2 知识点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195235946.png&#34; alt=&#34;image-20240618195235946&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var hello = require(&#39;../../examplejs/hello&#39;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Page(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#39;初始值&#39;，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        age&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    onLoad&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;function()&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console.log(hello.msg);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    demo(e)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        this.setData(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;e.target.dataset.name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            age&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;e.target.dataset.infoAge&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;navigation-bar&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Weixin&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;back&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token attr-name&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;black&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#FFF&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;navigation-bar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scroll-view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;scrollarea&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scroll-y&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;container&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token attr-name&#34;&gt;Weixin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token attr-name&#34;&gt;&amp;lt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;小程序&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token attr-name&#34;&gt;data-info-age&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;16&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单击更新数据&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;scroll-view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例题，自定义属性 data- /setData，3.2 案例&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195305327.png&#34; alt=&#34;image-20240618195305327&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;numBtn&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 点击数字按钮，获取对应的数字，将其值赋给 num&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dataset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;val&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resultFlag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果当前使用 = 计算了，则重置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;numbtn1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;numChangeFlag&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;targetnum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;numl&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;numChangeFlag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;numChangeFlag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;execFlag&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 代表已输入第 2 个数字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&#39;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;’&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 将 num 设为 0，避免数字进行拼接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;targetnum &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;num2&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 将 target 切换到第 2 个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;9掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件&#34;&gt;#&lt;/a&gt; &lt;mark&gt;*9. 掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;例题，条件渲染，3.1 知识点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195110504.png&#34; alt=&#34;image-20240618195110504&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;elif&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单独view3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;第1个&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;第2个&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;文本hidden&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;hid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;，&lt;span class=&#34;token comment&#34;&gt;// 保存第 1 个数字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;msg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token comment&#34;&gt;//console.log (this.msg);   // 报错&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onPullDownRefresh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello world&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;//num1:42 无效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;10掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中&#34;&gt;#&lt;/a&gt; &lt;mark&gt;*10. 掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;例题，列表渲染 / 网络请求 / 信息框，3.3 知识点 / 案例&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195549652.png&#34; alt=&#34;image-20240618195549652&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;*this&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;                &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;viel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;-----------&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt; -- &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt; -- &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;viel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;-----------&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token attr-name&#34;&gt;wx&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;for-index&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;index2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;--&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;--&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;--------&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;,&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;,&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sload&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;showLoading--持续1秒&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sload2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;showLoading--持续3秒&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&#39;a&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;梅&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;兰&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;竹&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;菊&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token literal-property property&#34;&gt;contract&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;页面加载&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getContract&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;getContract&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;data2&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195348753.png&#34; alt=&#34;image-20240618195348753&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sload&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;showLoading--持续1秒&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sload2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;showLoading--持续3秒&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;bind:&lt;/span&gt;tap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stoast&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;wx.showToast&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sload&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showLoading&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;加载框&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 默认 1500 毫秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sload2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showLoading&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;加载框&#39;&lt;/span&gt;                   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hideLoading&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;，&lt;span class=&#34;token number&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;stoast&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showToast&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;提示框&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3000&lt;/span&gt;，&lt;span class=&#34;token comment&#34;&gt;// 默认 1500 毫秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;icon&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 默认为 successicon:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例题，3.3 美食列表，上划 / 下拉&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618222213994.png&#34; alt=&#34;image-20240618222213994&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 需要重置的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Tthis&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;shoplist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;listData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;page &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;listData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 重新发起数据请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getshopList&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stopPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;onLoad()&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console.log(&#39;页面加载，开始获取数据&#39;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    this.getshopList()&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 上拉触底&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;onReachBottom&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;function()&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console.log(&#39;触发了上拉触底的事件&#39;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;if(this.listData.page * this.listData.pagesize &gt;= this.listData.total)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 没有下一页的数据了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    return wx.showToast(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        title&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;数据加载完毕!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        icon&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#39;none&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    if(this.isLoading)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        return&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;11掌握登录api能够运用wxlogin方法实现用户登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11掌握登录api能够运用wxlogin方法实现用户登录&#34;&gt;#&lt;/a&gt; 11. 掌握登录 API, 能够运用 wx.login 方法实现用户登录&lt;/h2&gt;
&lt;p&gt;例题，登录 API, 能够运用 wx.login 方法实现用户登录 5.1&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618222306488.png&#34; alt=&#34;image-20240618222306488&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;login code:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;                               &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://127.0.0.1:3000/login&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;post&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;token&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;token&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;           &lt;span class=&#34;token comment&#34;&gt;// 将 token 保存为公共 数据，用于在所有页面中共享 token&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;globalData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;token &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;token&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token comment&#34;&gt;// 将 token 保存到数据缓存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setStorage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#39;token&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;token&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;12掌握头像填写功能能够实现头像选择和昵称填写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12掌握头像填写功能能够实现头像选择和昵称填写&#34;&gt;#&lt;/a&gt; 12. 掌握头像填写功能，能够实现头像选择和昵称填写&lt;/h2&gt;
&lt;p&gt;例题，头像填写功能，能够实现头像选择和昵称填写 5.1&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618195446899.png&#34; alt=&#34;image-20240618195446899&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar-wrapper&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;open-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;chooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchooseavatar&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;onChooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;input type=&#34;nickname&#34; class=&#39;nickname&#34; placeholder=&#34;请输入昵称&#34;/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                              &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;credit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;获取用户的积分&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;当前用户积分:&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;例题，用 wx.navigateTo () 实现非标签页跳转&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240618195738.png%7D&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;navigateTo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;navigateTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&#34;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pages&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;target&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;target&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;跳转成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;跳转失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function-variable function&#34;&gt;complete&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;跳转完成&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;navigateTo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;路由&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;简答题-重点范围&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简答题-重点范围&#34;&gt;#&lt;/a&gt; 简答题 重点范围&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;简答题 2 题 * 15=30 分&lt;/p&gt;
&lt;p&gt;预测：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述使用画布 API 进行绘图的基本步骤。&lt;/li&gt;
&lt;li&gt;简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分点答题，字迹清晰，逻辑清楚！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简述 BackgroundAudioManager 实例的属性和方法。&lt;/p&gt;
&lt;p&gt;①BackgroundAudioMauager 实例的常用属性包含 src（背景音频的数据源）、startTime（背景音频开始播放的位置）、title（背景音频标题）、duration（当前背景音频的长度）、currentTime（当前背景音频的播放位置）和 paused（当前是否暂停或停止）。&lt;/p&gt;
&lt;p&gt;②BackgroundAudioMauager 实例的常用方法包含 play ()（播放背景音频）、pause ()（暂停背景音频）、seek ()（跳转到指定位置）和 stop ()（停止背景音频）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述使用画布 API 进行绘图的基本步骤。&lt;/p&gt;
&lt;p&gt;①获取 Canvas 实例&lt;/p&gt;
&lt;p&gt;②通过 Canvas 实例获取 RenderingContext（渲染上下文）实例&lt;/p&gt;
&lt;p&gt;③最后通过 RenderingContext 实例的属性和方法完成绘图操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述如何实现文件上传和文件下载。&lt;/p&gt;
&lt;p&gt;①微信小程序提供了文件上传 API，通过调用 wx.uploadFile () 方法可以实现文件上传；&lt;/p&gt;
&lt;p&gt;②同时也提供了文件下载 API，通过调用 wx.downloadFile () 方法即可使用文件下载 API。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述如何获取 Animation 实例。&lt;/p&gt;
&lt;p&gt;通过 wx.createAnimation () 方法可以获取 Animation 实例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;onHide () 和 onPageNotFound () 的作用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（1）onLaunch ()：监听微信小程序初始化，微信小程序初始化完成时触发，全局只触发一次。&lt;/p&gt;
&lt;p&gt;（2）onShow ()：监听微信小程序启动或切前台，微信小程序启动或从后台进入前台时触发。&lt;/p&gt;
&lt;p&gt;（3）onError ()：错误监听函数，微信小程序脚本错误或者 API 调用报错时触发。&lt;/p&gt;
&lt;p&gt;（4）onHide ()：监听微信小程序切后台，微信小程序从前台进入后台时触发。&lt;/p&gt;
&lt;p&gt;（5）onPageNotFound ()：页面不存在监听函数，微信小程序要打开的页面不存在时触发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简述如何创建 WebSocket 连接。&lt;/p&gt;
&lt;p&gt;使用 wx.connectSocket () 方法创建 WebSocket 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2024-06-17T04:22:51.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/17/Educational/python/Data-analysis/Data_analysis_review1/</id>
        <title>数据分析复习（第一章）</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/17/Educational/python/Data-analysis/Data_analysis_review1/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《Python 数据分析与应用》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;第一章-python数据分析的概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-python数据分析的概述&#34;&gt;#&lt;/a&gt; 第一章、Python 数据分析的概述&lt;/h1&gt;
&lt;h2 id=&#34;1认识数据分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1认识数据分析&#34;&gt;#&lt;/a&gt; 1. 认识数据分析&lt;/h2&gt;
&lt;h3 id=&#34;1数据分析的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数据分析的概念&#34;&gt;#&lt;/a&gt; 1）数据分析的概念&lt;/h3&gt;
&lt;p&gt;数据分析是指用&lt;u&gt;适当的分析方法对收集来的大量数据进行分析，提取有用信息和形成结论，对数据加以详细研究和概括总结的过程&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;广义的数据分析包括&lt;u&gt;狭义数据分析&lt;/u&gt;和&lt;u&gt;数据挖掘&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;狭义数据分析是指&lt;span class=&#34;red&#34;&gt;根据分析目的&lt;/span&gt;，&lt;span class=&#34;red&#34;&gt;采用&lt;/span&gt;对比分析、分组分析、交叉分析和回归分析等&lt;span class=&#34;red&#34;&gt;分析方法，对收集的数据进行处理与分析，提取有价值的信息，发挥数据的作用，得到一个特征统计量结果的过程。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617003328493.png&#34; alt=&#34;image-20240617003328493&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2数据分析流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2数据分析流程&#34;&gt;#&lt;/a&gt; 2）数据分析流程&lt;/h3&gt;
&lt;p&gt;数据分析的基本流程：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617003421046.png&#34; alt=&#34;image-20240617003421046&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数据分析的核心步骤:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;需求分析→数据获取→数据预处理→分析与建模→模型评价与优化→部署&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240617003435872.png&#34; alt=&#34;image-20240617003435872&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3数据分析应用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3数据分析应用场景&#34;&gt;#&lt;/a&gt; 3）数据分析应用场景&lt;/h3&gt;
&lt;p&gt;&lt;u&gt;客户分析→营销分析→社交媒体分析→网络安全→设备管理→交通物流分析→欺诈行为检测&lt;/u&gt;&lt;/p&gt;
&lt;h3 id=&#34;4分析方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4分析方法&#34;&gt;#&lt;/a&gt; 4）分析方法&lt;/h3&gt;
&lt;p&gt;1）、一般可分为：&lt;/p&gt;
&lt;p&gt;描述性数据分析：最基础的，本月销售多少，哪个商品销量好。&lt;/p&gt;
&lt;p&gt;探索性数据分析：侧重发现数据规律和特征。&lt;/p&gt;
&lt;p&gt;验证性数据分析：先确定对数据使用哪种数据模型，再对假设模型进行验证。&lt;/p&gt;
&lt;p&gt;2）、从技术层面划分：&lt;/p&gt;
&lt;p&gt;统计分析类：基础统计，包括对比分析（每月销售量）、同比分析、差异分析等。&lt;/p&gt;
&lt;p&gt;高级分析类：以建模为主，包括回归分析、聚类分析、矩阵分析等。&lt;/p&gt;
&lt;p&gt;数据挖掘类：机器学习，数据仓库，如推荐功能等。&lt;/p&gt;
&lt;h3 id=&#34;5数据的获取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5数据的获取&#34;&gt;#&lt;/a&gt; 5）数据的获取&lt;/h3&gt;
&lt;p&gt;(1) 公开的数据集&lt;/p&gt;
&lt;p&gt;(2) 爬虫数据&lt;/p&gt;
&lt;p&gt;(3) 数据交易平台。&lt;/p&gt;
&lt;h2 id=&#34;2熟悉python数据分析的工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2熟悉python数据分析的工具&#34;&gt;#&lt;/a&gt; 2. 熟悉 Python 数据分析的工具&lt;/h2&gt;
&lt;h3 id=&#34;1数据分析语言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数据分析语言&#34;&gt;#&lt;/a&gt; 1）数据分析语言&lt;/h3&gt;
&lt;p&gt;主流的数据分析语言主要有 Python、R、MATLAB 这 3 种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 具有丰富和强大的库，同时 Python 常被称为胶水语言，能够将使用其他语言制作的各种模块（尤其是 C/C++）轻松地连接在一起，是一门更易学、更严谨的程序设计语言&lt;/li&gt;
&lt;li&gt;R 语言通常用于统计分析、绘图。R 是属于 GNU 系统的一个自由、免费、源代码开放的软件。&lt;/li&gt;
&lt;li&gt;MATLAB 的作用是进行矩阵运算、绘制函数与数据、实现算法、创建用户界面和连接其他编程语言的程序等，其主要应用于工程计算、控制设计、信号处理与通信、图像处理、信号检测、金融建模设计与分析等领域。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2python数据分析的优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2python数据分析的优势&#34;&gt;#&lt;/a&gt; 2）Python 数据分析的优势&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;语法简单精练。&lt;/li&gt;
&lt;li&gt;含有大量功能强大的库。&lt;/li&gt;
&lt;li&gt;功能强大。&lt;/li&gt;
&lt;li&gt;研究、原型构建和构建生产系统。&lt;/li&gt;
&lt;li&gt;Python 是一门胶水语言。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3python常用库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3python常用库&#34;&gt;#&lt;/a&gt; 3）Python 常用库&lt;/h3&gt;
&lt;p&gt;使用 Python 进行数据分析时所用到的类库主要有 NumPy、SciPy、pandas、Matplotlib、seaborn、pyecharts、scikit-learn 等。&lt;/p&gt;
&lt;p&gt;①NumPy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NumPy 是 Numerical Python 的简称，是一个 Python 科学计算的基础包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NumPy 主要提供了以下内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;快速高效的多维数组对象 ndarray。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对数组执行元素级计算和直接对数组执行数学运算的函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;读 / 写硬盘上基于数组的数据集的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线性代数运算、傅里叶变换和随机数生成的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 C、C++、Fortran 代码集成到 Python 的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为 Python 提供快速的数组处理能力外，NumPy 在数据分析方面还有另外一个主要作用，即作为算法之间传递数据的容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于数值型数据，使用 NumPy 数组存储和处理数据要比使用内置的 Python 数据结构高效得多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此外，由低级语言（如 C 和 Fortran）编写的库可以直接操作 NumPy 数组中数据，无须进行任何数据复制工作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;②SciPy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SciPy 是基于 Python 的开源代码，是一组专门解决科学计算中各种标准问题域的模块的集合，特别是与 NumPy、Matplotlib 和 pandas 这些核心包一起使用时。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;模块名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;scipy.integrate&lt;/td&gt;
&lt;td&gt;数值积分和微分方程求解器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.linalg&lt;/td&gt;
&lt;td&gt;扩展了由 numpy.linalg 提供的线性代数求解和矩阵分解功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.optimize&lt;/td&gt;
&lt;td&gt;函数优化器（最小化器）以及根查找算法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.signal&lt;/td&gt;
&lt;td&gt;信号处理工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.sparse&lt;/td&gt;
&lt;td&gt;稀疏矩阵和稀疏线性系统求解器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.special&lt;/td&gt;
&lt;td&gt;SPECFUN［这是一个实现了许多常用数学函数（如伽马函数）的 Fortran 库］的包装器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.stats&lt;/td&gt;
&lt;td&gt;检验连续和离散概率分布（如密度函数、采样器、连续分布函数等）的函数与方法、各种统计检验的函数与方法，以及各类描述性统计的函数与方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scipy.weave&lt;/td&gt;
&lt;td&gt;利用内联 C++ 代码加速数组计算的工具&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;③pandas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pandas 是 Python 的数据分析核心库，最初被作为金融数据分析工具而开发出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pandas 为时间序列分析提供了很好的支持，它提供了一系列能够快速、便捷地处理结构化数据的数据结构和函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 之所以成为强大而高效的数据分析环境与它息息相关。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pandas 兼具 NumPy 高性能的数组计算功能以及电子表格和关系型数据库（如 SQL）灵活的数据处理功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它提供了复杂精细的索引功能，以便完成重塑、切片与切块、聚合和选取数据子集等操作。pandas 将是本书中使用的主要工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;④Matplotlib&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Matplotlib 是较为流行的用于绘制数据图表的 Python 库，是 Python 的 2D 绘图库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Matplotlib 的操作比较容易，用户只需用几行代码即可生成直方图、功率谱图、条形图、错误图和散点图等图形。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Matplotlib 提供了 pylab 的模块，其中包括了 NumPy 和 pyplot 中许多常用的函数，方便用户快速进行计算和绘图。Matplotlib 与 IPython 的结合，提供了一种非常好用的交互式数据绘图环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绘制的图表也是交互式的，读者可以利用绘图窗口中工具栏中的相应工具放大图表中的某个区域，或对整个图表进行平移浏览。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⑤ seaborn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;seaborn 是基于 Matplotlib 的图形可视化 Python 库，它提供了一种高度交互式界面，便于用户能够做出各种有吸引力的统计图表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;seaborn 是在 Matplotlib 的基础上进行了更高级的 API 封装，使得作图更加容易。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;seaborn 不需要了解大量的底层代码，即可使图形变得精致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在大多数情况下，使用 seaborn 能做出很具有吸引力的图，而使用 Matplotlib 能制作具有更多特色的图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因此，可将 seaborn 视为 Matplotlib 的补充，而不是替代物。同时，seaborn 能高度兼容 NumPy 与 pandas 数据结构以及 scipy 与 statsmodels 等统计模式，可以在很大程度上帮助用户实现数据可视化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⑥pyecharts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Echarts 是一个由百度开源的数据可视化工具，凭借着良好的交互性，精巧的图表设计，得到了众多开发者的认可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;而 Python 是一门富有表达力的语言，很适合用于数据处理。pyecharts 是 Python 与 Echarts 的结合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pyecharts 可以展示动态交互图，对于展示数据更方便，当鼠标悬停在图上时，即可显示数值、标签等。pyecharts 支持主流 Notebook 环境，如 Jupyter Notebook、JupyterLab 等；可轻松集成至 Flask、Django 等主流 Web 框架；高度灵活的配置项，可轻松搭配出精美的图表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pyecharts 囊括了 30 多种常见图表，如 Bar（柱形图 / 条形图）、Boxplot（箱形图）、Funnel（漏斗图）、Gauge（仪表盘）、Graph（关系图）、HeatMap（热力图）、Radar（雷达图）、Sankey（桑基图）、Scatter（散点图）、WordCloud（词云图）等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⑦scikit-learn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scikit-learn 是一个简单有效的数据挖掘和数据分析工具，可以供用户在各种环境下重复使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;scikit-learn 建立在 NumPy、SciPy 和 Matplotlib 基础之上，对一些常用的算法方法进行了封装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前，scikit-learn 的基本模块主要有数据预处理、模型选择、分类、聚类、数据降维和回归 6 个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在数据量不大的情况下，scikit-learn 可以解决大部分问题。对算法不精通的用户在执行建模任务时，并不需要自行编写所有的算法，只需要简单地调用 scikit-learn 库里的模块即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3装python的anaconda了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3装python的anaconda了解&#34;&gt;#&lt;/a&gt; 3. 装 Python 的 Anaconda (了解)&lt;/h2&gt;
&lt;p&gt;Anaconda 发行版 Python 预装了 150 个以上的常用 Packages，囊括了数据分析常用的 NumPy、SciPy、Matplotlib、seaborn、pyecharts、pandas、scikit-learn 库，使得数据分析人员能够更加顺畅、专注地使用 Python 解决数据分析相关问题。&lt;/p&gt;
&lt;h2 id=&#34;4jupyter-notebook了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4jupyter-notebook了解&#34;&gt;#&lt;/a&gt; 4.Jupyter Notebook（了解）&lt;/h2&gt;
&lt;p&gt;jupyter Notebook（此前被称为 IPython Notebook）是一个交互式笔记本，支持运行 40 多种编程语言，其本质上是一个支持实时代码、数学方程、可视化和 Markdown 的 Web 应用程序。&lt;/p&gt;
&lt;p&gt;对于数据分析，Jupyter Notebook 最大的优点是可以重现整个分析过程，并将说明文字、代码、图表、公式和结论都整合在一个文档中。&lt;/p&gt;
&lt;p&gt;用户可以通过电子邮件、Dropbox、GitHub 和 Jupyter Notebook Viewer 将分析结果分享给其他人。&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" />
        <updated>2024-06-16T16:01:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/16/Educational/python/Data-analysis/Anaconda/</id>
        <title>Anaconda的安装</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/16/Educational/python/Data-analysis/Anaconda/"/>
        <content type="html">&lt;p&gt;任务： 安装 Anaconda&lt;br /&gt;
 如何安装 Anaconda？Anaconda 这是一个用于科学计算和数据分析的 Python 发行版。Anaconda 包含了许多常用的库和工具，使得在各种操作系统上轻松地设置和管理 Python 环境，在本地计算机进行 Anaconda 的安装。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;任务-安装anaconda&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#任务-安装anaconda&#34;&gt;#&lt;/a&gt; 任务： 安装 Anaconda&lt;/h2&gt;
&lt;h3 id=&#34;1-anaconda的下载1国内镜像网站-2anaconda官网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-anaconda的下载1国内镜像网站-2anaconda官网&#34;&gt;#&lt;/a&gt; 1、Anaconda 的下载（①国内镜像网站、②Anaconda 官网）&lt;/h3&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2FuYWNvbmRhL2FyY2hpdmUv&#34;&gt;①清华大学开源镜像网站&lt;/span&gt;&lt;br /&gt;
选择电脑选择对应版本（自己下载的版本：Anaconda3-5.3.1-Windows-x86_64.exe）&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image.png&#34; alt=&#34;image&#34; /&gt;&lt;br /&gt;
 下载完成如下：&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-1.png&#34; alt=&#34;image-1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2Rvd25sb2Fk&#34;&gt;②Anaconda 官网&lt;/span&gt;&lt;br /&gt;
进入官网，点击下载图标，官网会根据电脑对应的版本进行下载&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-2.png&#34; alt=&#34;image-2&#34; /&gt;&lt;br /&gt;
 下载完成如下：&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-3.png&#34; alt=&#34;image-3&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-anaconda的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-anaconda的安装&#34;&gt;#&lt;/a&gt; 2、 Anaconda 的安装：&lt;/h3&gt;
&lt;p&gt;①打开刚才下载好的文件（自己选择的是官网下载的 Anaconda3-2023.09-0-Windows-x86_64.exe）出现以下界面，选择 Next&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-4.png&#34; alt=&#34;image-4&#34; /&gt;&lt;br /&gt;
②出现协议告知界面，选择 “I agree”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-5.png&#34; alt=&#34;image-5&#34; /&gt;&lt;br /&gt;
③出现新界面，选择 “All Users”, 然后点击 “next”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-6.png&#34; alt=&#34;image-6&#34; /&gt;&lt;br /&gt;
④出现安装目录（自己选择放在 D:\Python\Anaconda3），然后点击 “next”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-7.png&#34; alt=&#34;image-7&#34; /&gt;&lt;br /&gt;
⑤出现新界面，全部打勾选择（1 创建快捷方式，2 将 Anaconda 注册为系统 Python3.11，3 完成后清除包缓存)，然后点击 “Install”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-8.png&#34; alt=&#34;image-8&#34; /&gt;&lt;br /&gt;
⑥出现安装进度条界面，等待直到出现 “completed”，然后点击 “next”- 继续点击 “next”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-9.png&#34; alt=&#34;image-9&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-10.png&#34; alt=&#34;image-10&#34; /&gt;&lt;br /&gt;
⑦完成安装&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-11.png&#34; alt=&#34;image-11&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-配置环境变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-配置环境变量&#34;&gt;#&lt;/a&gt; 3、配置环境变量&lt;/h3&gt;
&lt;p&gt;①点击 win，进入搜索 “环境”，点击 “编辑系统环境变量 “（也可从 “此电脑” 属性进入 “系统环境变量”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-12.png&#34; alt=&#34;image-12&#34; /&gt;&lt;br /&gt;
②出现新界面，点击 “环境变量（N）“&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-13.png&#34; alt=&#34;image-13&#34; /&gt;&lt;br /&gt;
③选择 “环境变量（S），找到 “Path”，点击编辑，新建以下 5 条目录（根据自己实际安装目录进行改动)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;D:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Python&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Anaconda3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;D:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Python&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Anaconda3&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Scripts&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;D:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Python&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Anaconda3&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Library&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;mingw-w64&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;D:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Python&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Anaconda3&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Library&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;usr&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;D:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Python&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Anaconda3&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Library&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-14.png&#34; alt=&#34;image-14&#34; /&gt;&lt;br /&gt;
 点击确定，保存退出&lt;/p&gt;
&lt;h3 id=&#34;4-测试配置是否成功&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-测试配置是否成功&#34;&gt;#&lt;/a&gt; 4、测试配置是否成功&lt;/h3&gt;
&lt;p&gt;①Win+r，输入 cmd，进入命令提示符&lt;br /&gt;
输入 “python”，检查是否有 python 环境&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-15.png&#34; alt=&#34;image-15&#34; /&gt;&lt;br /&gt;
②输入 conda info 查询 conda 信息 ，如图为 conda 环境配置成功&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-16.png&#34; alt=&#34;image-16&#34; /&gt;&lt;br /&gt;
⑤win 搜索 Anaconda，点击打开 “Anaconda Navigator”&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-17.png&#34; alt=&#34;image-17&#34; /&gt;&lt;br /&gt;
 出现界面如下，即全部完成&lt;br /&gt;
&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240617164013.png%7D&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;到此，完成 Anaonda 安装&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="Python语言" scheme="http://rainyblue.cn/categories/Educational/python/" />
        <category term="数据分析" scheme="http://rainyblue.cn/categories/Educational/python/Data-analysis/" />
        <category term="Python" scheme="http://rainyblue.cn/tags/Python/" />
        <updated>2024-06-16T04:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/09/Educational/Software/software-project-review/</id>
        <title>软件项目管理复习大纲</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/09/Educational/Software/software-project-review/"/>
        <content type="html">&lt;p&gt;题型主要有选择 20 分、填空 10 分、判断题 10 分。&lt;/p&gt;
&lt;p&gt;计算题占 30 分主要集中在进度管理和成本管理这两个章节里面。包括网络图计算。挣值管理，三点估算。&lt;/p&gt;
&lt;p&gt;论述题：10*3=30-- 主要集中在范围、质量。风险管理三个章节&lt;/p&gt;
&lt;h1 id=&#34;1-复习大纲&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-复习大纲&#34;&gt;#&lt;/a&gt; 1、复习大纲&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003000837.png&#34; alt=&#34;image-20240619003000837&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003014165.png&#34; alt=&#34;image-20240619003014165&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003026170.png&#34; alt=&#34;image-20240619003026170&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003036673.png&#34; alt=&#34;image-20240619003036673&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003051584.png&#34; alt=&#34;image-20240619003051584&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003101908.png&#34; alt=&#34;image-20240619003101908&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003112563.png&#34; alt=&#34;image-20240619003112563&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003131956.png&#34; alt=&#34;image-20240619003131956&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003148262.png&#34; alt=&#34;image-20240619003148262&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003200143.png&#34; alt=&#34;image-20240619003200143&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619003208539.png&#34; alt=&#34;image-20240619003208539&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-计算题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-计算题&#34;&gt;#&lt;/a&gt; 2、计算题&lt;/h1&gt;
&lt;p&gt;挣值分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AC=ActualCost---- 实际成本：截止到某时间点实际已经发生的成本，即实际花了多少钱。&lt;/li&gt;
&lt;li&gt;EV=Earned Value---- 挣值：截止到某时间点实际已经完成工作量的价值，即实际做的事的价值。&lt;/li&gt;
&lt;li&gt;PV=Planned Value---- 计划价值：截止到某时间点计划完成工作量的价值，即计划要做的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;挣值分析的 4 个绩效指标：&lt;/p&gt;
&lt;p&gt;CV=Cost Variance---- 成本偏差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CV=EV-AC：表示挣值与实际成本只差&lt;/li&gt;
&lt;li&gt;它是某个给定的时间点，项目预算的亏空 / 盈余&lt;/li&gt;
&lt;li&gt;CV=EV-AC&amp;gt;0：成本节约&lt;/li&gt;
&lt;li&gt;CV=EV-AC&amp;lt;0：成本超支&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SV=Schedule Variance---- 进度偏差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SV=EV-PV : 表示挣值与计划价值之差&lt;/li&gt;
&lt;li&gt;它是某个给定的时间点，项目提前 / 落后的进度&lt;/li&gt;
&lt;li&gt;SV=EV-PV &amp;gt; 0 ，项目进度超前&lt;/li&gt;
&lt;li&gt;SV=EV-PV  &amp;lt; 0 ，项目进度落后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CPl=Cost Performance Index---- 成本绩效指数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPI=EA/AC，挣值与实际成本之比&lt;/li&gt;
&lt;li&gt;CPI=EA/AC&amp;lt;1：说明成本超支&lt;/li&gt;
&lt;li&gt;CPI=EA/AC&amp;gt;1：说明成本节约&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPl=Schedule Performance lndex---- 进度绩效指数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPI=EV/AC：挣值与计划价值之比&lt;/li&gt;
&lt;li&gt;CPI=EV/AC&amp;lt;1：项目进度落后&lt;/li&gt;
&lt;li&gt;CPI=EV/AC&amp;gt;1：项目进度超前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采取措施&lt;/p&gt;
&lt;p&gt;进度落后，成本超支:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用高效人员代替低效人员&lt;/li&gt;
&lt;li&gt;在预防风险的情况下对活动进行并行施工&lt;/li&gt;
&lt;li&gt;减小活动范围或降低活动要求&lt;/li&gt;
&lt;li&gt;通过改进方法或技术提高生产政率&lt;/li&gt;
&lt;li&gt;加强质量管理，及时发现问题，减少返工，从而缩短工期&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进度落后，成本节约&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;赶工加快进度&lt;/li&gt;
&lt;li&gt;使用高效资源来替换低效资源加快进度&lt;/li&gt;
&lt;li&gt;改进方法，提高工作效率&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进度超前，成本节约：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抽调部分人员用手其他项目&lt;/li&gt;
&lt;li&gt;加强质量控制，密切监控项目&lt;/li&gt;
&lt;li&gt;必要时调整计划或基准等方法改进，或者改变相关计划&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进度超前，成本超支&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抽出部分人员，放慢工作进度了&lt;/li&gt;
&lt;li&gt;控制成本&lt;/li&gt;
&lt;li&gt;区分不同任务，采取不同成本及进度措施&lt;/li&gt;
&lt;li&gt;调整成本基准&lt;/li&gt;
&lt;li&gt;优化施工方案、提高效率、加强质量管理、减少返工、加强沟通，降低成本&lt;/li&gt;
&lt;li&gt;确保进度按期完成的基础上，可以降低进度以节约成本。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;预测技手指标：&lt;/p&gt;
&lt;p&gt;BAC=Budget at Completion---- 完工预算：对完成该项目的计划预算 ，也就是完成整个项目计划多少预算 (完工时的 PV 总和)&lt;span class=&#34;red&#34;&gt;(BC 宝面方包含写理了诸备)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ETC=Estimate to Complete---- 完工尚需估算：在某个时点，预测完成剩余工作还需多少成本。&lt;br /&gt;
报据剩乐部分工作 CPI (成本统效指数) 的变化情况&lt;/p&gt;
&lt;p&gt;按照预算单价 (CPI=1) 完成 ETC 工作 (剩余工作);&lt;/p&gt;
&lt;p&gt;非典型 (纠偏): 当前的偏差被视为一种特并且项目团队以为将来不会发生类似偏差。ETC:BAC-EV&lt;br /&gt;
 (2) 按照当前 CPI (挣值 EV / 实际成本 AC) 完成 ETC 工作 (剩余工作)&lt;/p&gt;
&lt;p&gt;典型 (不纠偏): 当前出现的偏差被视为具有典型性，可以代表来来的偏差。ETC=(BAC-EV)/CPI&lt;/p&gt;
&lt;p&gt;VAC= Variance at Completion---- 完工偏差&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VAC=BAC-EAC&lt;/li&gt;
&lt;li&gt;完工时成本偏差&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完工总时间预测：计划总工期 / SPI&lt;/p&gt;
&lt;p&gt;原计划工期 10 个月，目前 SPI 为 0.5, 则预测完工工期 = 10/0.5 =20&lt;/p&gt;
&lt;p&gt;TCPl=To-Complete Performance Index---- 完工尚需绩效指数&lt;/p&gt;
&lt;p&gt;在某个时点，预测如果要在计划的预赞内完成项目，则未来的工作必须要达到的绩效水平。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;未来的项目绩效技照原定预算 BAC 完成 TCPI=(BAC-EV)/（EAC-AC)&lt;/p&gt;
&lt;p&gt;还有多少钱的活 / 手里剩下的钱&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;未来的项目绩效技新的 EAC 完成&lt;/p&gt;
&lt;p&gt;TCPI=（BAC-EV）/（EAC-AC）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;EAC=Estimate at Completion---- 完工估算&lt;/p&gt;
&lt;p&gt;EAC=AC+ETC&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="软件项目管理" scheme="http://rainyblue.cn/categories/Educational/Software/" />
        <updated>2024-06-09T06:09:27.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/08/Educational/WeChat/WX_review/</id>
        <title>微信小程序内容复习</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/08/Educational/WeChat/WX_review/"/>
        <content type="html">&lt;p&gt;应对期末考试，对本学期《微信小程序开发实践》课程学习的内容进行复习。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;题型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型&#34;&gt;#&lt;/a&gt; 题型：&lt;/h1&gt;
&lt;p&gt;1. 单项选择题 8 题 * 2=16 分&lt;/p&gt;
&lt;p&gt;2. 填空题 7 题 * 2=14 分&lt;/p&gt;
&lt;p&gt;3. 判断题 8 题 * 2=16 分&lt;/p&gt;
&lt;p&gt;4. 程序题 6 题 * 4=24 分&lt;/p&gt;
&lt;p&gt;5. 简答题 2 题 * 15=30 分&lt;/p&gt;
&lt;h1 id=&#34;第一章-微信小程序入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-微信小程序入门&#34;&gt;#&lt;/a&gt; 第一章 微信小程序入门&lt;/h1&gt;
&lt;h2 id=&#34;1微信小程序的概念-特点-宿主环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1微信小程序的概念-特点-宿主环境&#34;&gt;#&lt;/a&gt; 1. 微信小程序的概念、特点、宿主环境&lt;/h2&gt;
&lt;p&gt;概念：微信小程序是一种全新的连接用户与服务的应用，它可以在微信内被便捷地获取和传播，同时具有良好的用户体验。微信小程序是运行在&lt;span class=&#34;red&#34;&gt;微信&lt;/span&gt;中的应用，是一种不需要下载即可使用的应用，用户通过微信扫一扫或者搜一搜即可打开，且每个微信小程序的体积&lt;span class=&#34;red&#34;&gt;非常小&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;特点：无须安装、触手可及、用完即走、无须卸载、名称唯一、入口丰富、传播能力强&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无须安装，直接使用，不占用存储空间&lt;/li&gt;
&lt;li&gt;用完即走，无须卸载&lt;/li&gt;
&lt;li&gt;名称唯一：不能使用相同名称&lt;/li&gt;
&lt;li&gt;入口丰富&lt;/li&gt;
&lt;li&gt;传播能力强：微信搜索、好友分享、小程序识别码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;宿主环境&lt;/p&gt;
&lt;p&gt;宿主环境概念：宿主环境（Host Environment）是指程序运行所依赖的环境。&lt;/p&gt;
&lt;p&gt;微信小程序可以跨平台，这是因为微信小程序并不是一个直接安装在 Android 系统或 iOS 系统中的应用，而是运行在&lt;span class=&#34;red&#34;&gt;微信客户端上的应用&lt;/span&gt;。微信客户端给微信小程序提供的环境就是微信小程序的宿主环境。&lt;/p&gt;
&lt;h2 id=&#34;2如何获取微信小程序appidappid的唯一性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2如何获取微信小程序appidappid的唯一性&#34;&gt;#&lt;/a&gt; 2. 如何获取微信小程序 AppID，AppID 的唯一性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;登录微信小程序管理后台&lt;/li&gt;
&lt;li&gt;在左侧边栏中选择 “开发管理”&lt;/li&gt;
&lt;li&gt;选择 “开发设置”&lt;/li&gt;
&lt;li&gt;查看并复制 AppID&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在微信小程序中，AppID 又称为小程序 ID，是每个小程序的&lt;span class=&#34;red&#34;&gt;唯一&lt;/span&gt;标识，每个小程序账号只有一个 AppID，因此每个账号只能发布一个小程序，如果要发布多个小程序，需要注册多个小程序账号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3熟悉微信小程序的项目结构主要配置文件的作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3熟悉微信小程序的项目结构主要配置文件的作用&#34;&gt;#&lt;/a&gt; 3. 熟悉微信小程序的项目结构，主要配置文件的作用&lt;/h2&gt;
&lt;p&gt;项目结构：&lt;/p&gt;
&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;figcaption data-lang=&#34;markdown&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pages&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.eslintrc.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;app.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#123;&amp;#125;app.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;app.wxss&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#123;&amp;#125;project.config.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#123;&amp;#125; project.private.config.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#123;&amp;#125;sitemap.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;- pages：用于存放微信小程序的所有页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- eslintrc.js：用于格式化代码，使代码风格保持一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- app.wxss：微信小程序的全局样式文件，文件可以为空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- project.config.json：在微信开发者工具上做的任何配置都会写入这个文件中，当重新安装工具或者更换计算机工作时，只要栽入同一个项目的代码包，微信开发者工具会根据该文件自动恢复成开发微信小程序时的个性化配置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- project.private.config.json：用于保存微信开发者工具的私人配置，配置的优先级高于 project.config.json。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- sitemap.json：用于配置微信小程序及其页面是否允许被微信索引，如果没有该文件， 则默认为所有页面都允许被索引。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4微信小程序的页面组成能够解释wmxlwxssjs和json文件的作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4微信小程序的页面组成能够解释wmxlwxssjs和json文件的作用&#34;&gt;#&lt;/a&gt; 4. 微信小程序的页面组成，能够解释 WMXL,WXSS,JS 和 JSON 文件的作用&lt;/h2&gt;
&lt;p&gt;一个微信小程序是由一个或多个页面组成的，这些页面被存放在&lt;span class=&#34;red&#34;&gt; pages 目录&lt;/span&gt;中。&lt;/p&gt;
&lt;p&gt;下面以 pages 目录下的 index 页面为例展示其组成部分，index 页面的组成部分&lt;/p&gt;
&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;figcaption data-lang=&#34;markdown&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pages&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; └── index&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ├── index.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ├── index.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ├── index.wxml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      └── index.wxss&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;- JS：类似网页制作中的 JavaScript 语言，用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- JSON（JavaScript Object Notation，JavaScript 对象符号）：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- WXML（WeiXin Markup Language，微信标记语言）：类似于网页制作中的 HTML 语言，用于构建页面结构，文件扩展名为.wxml。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;- WXSS（WeiXin Style Sheets，微信样式表）：类似于网页制作中的 CSS 语言，用于设置页面样式，文件扩展名为.wxss。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5了解微信小程序的通信模型教材13页图1-23&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5了解微信小程序的通信模型教材13页图1-23&#34;&gt;#&lt;/a&gt; 5. 了解微信小程序的通信模型，教材 13 页图 1-23&lt;/h2&gt;
&lt;p&gt;通信模型分为两个部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;渲染层与逻辑层之间的通信，即将逻辑层的数据渲染到页面中&lt;/li&gt;
&lt;li&gt;逻辑层和第三方服务器之间的通信，即通过向第三方服务器发送请求，得到需要的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Native 表示微信客户端的底层，渲染层与逻辑层之间的通信和逻辑层与第三方服务器之间的通信都由微信客户端的底层进行转发。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/20240608164251.png%7D&#34; alt=&#34;image-20240603145720170&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;6熟悉微信开发者工具的主界面熟悉常用的快捷键按钮&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6熟悉微信开发者工具的主界面熟悉常用的快捷键按钮&#34;&gt;#&lt;/a&gt; 6. 熟悉微信开发者工具的主界面，熟悉常用的快捷键按钮&lt;/h2&gt;
&lt;p&gt;快捷键 —— 编辑相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;快捷键&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;项目&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+N&lt;/td&gt;
&lt;td&gt;新建项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;项目&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+W&lt;/td&gt;
&lt;td&gt;关闭当前项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+N&lt;/td&gt;
&lt;td&gt;新建文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+S&lt;/td&gt;
&lt;td&gt;保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+W&lt;/td&gt;
&lt;td&gt;关闭当前文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+S&lt;/td&gt;
&lt;td&gt;全部保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+[&lt;/td&gt;
&lt;td&gt;代码左缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+]&lt;/td&gt;
&lt;td&gt;代码右缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Alt+Shift+F&lt;/td&gt;
&lt;td&gt;格式化代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+[&lt;/td&gt;
&lt;td&gt;折叠代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctr1+Shift+]&lt;/td&gt;
&lt;td&gt;展开代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt + ↑&lt;/td&gt;
&lt;td&gt;代码向上移动一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt + ↓&lt;/td&gt;
&lt;td&gt;代码向下移动一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt+Shift + ↑&lt;/td&gt;
&lt;td&gt;复制并向上粘贴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt+Shift + ↓&lt;/td&gt;
&lt;td&gt;复制并向下粘贴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件跳转&lt;/td&gt;
&lt;td&gt;Ctrl+E&lt;/td&gt;
&lt;td&gt;跳转到最近文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Ctrl+End&lt;/td&gt;
&lt;td&gt;移动到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Ctrl+Home&lt;/td&gt;
&lt;td&gt;移动到文件开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Shift+End&lt;/td&gt;
&lt;td&gt;移动到行尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Shift+Home&lt;/td&gt;
&lt;td&gt;移动到行首&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+F&lt;/td&gt;
&lt;td&gt;在当前文件中查找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+H&lt;/td&gt;
&lt;td&gt;在当前文件中替换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+F&lt;/td&gt;
&lt;td&gt;全局查找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+H&lt;/td&gt;
&lt;td&gt;全局替换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;快捷键 —— 工具相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;快捷键&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+B&lt;/td&gt;
&lt;td&gt;编译项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+R&lt;/td&gt;
&lt;td&gt;焦点在编辑器外，编译项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+P&lt;/td&gt;
&lt;td&gt;预览代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+U&lt;/td&gt;
&lt;td&gt;上传代码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;快捷键 —— 界面相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;快捷键&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+T&lt;/td&gt;
&lt;td&gt;显示或隐藏工具栏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+D&lt;/td&gt;
&lt;td&gt;显示或隐藏模拟器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+E&lt;/td&gt;
&lt;td&gt;显示或隐藏编辑器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+M&lt;/td&gt;
&lt;td&gt;显示或隐藏目录树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+I&lt;/td&gt;
&lt;td&gt;显示或隐藏调试器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;快捷键 &lt;span class=&#34;kbd&#34;&gt;Ctrl&lt;/span&gt; + &lt;span class=&#34;kbd red&#34;&gt;S&lt;/span&gt;   表示&lt;span class=&#34;kbd&#34;&gt;保存&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;7熟悉微信小程序的上线发布流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7熟悉微信小程序的上线发布流程&#34;&gt;#&lt;/a&gt; 7. 熟悉微信小程序的上线发布流程&lt;/h2&gt;
&lt;p&gt;一个微信小程序从开发完到发布上线，一般分为以下 3 个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;上传代码&lt;/p&gt;
&lt;p&gt;打开微信小程序，在微信开发者工具的工具栏中单击 “上传” 按钮，页面中弹出提示框，根据提示填写相应的信息，然后单击 “上传” 按钮，即可上传代码。&lt;/p&gt;
&lt;p&gt;登录微信小程序管理后台，在左侧边栏中单击 “版本管理”，即可进入版本管理页面，查看开发版本，即可查看刚才提交上传的版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提交审核&lt;/p&gt;
&lt;p&gt;单击 “提交审核” 按钮，根据页面提示信息进行操作，即可提交已上传的版本并进行审核。&lt;/p&gt;
&lt;p&gt;提交审核后在审核版本中会出现正在审核的版本，审核需要一定时间，PPT 中不再演示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发布&lt;/p&gt;
&lt;p&gt;审核通过后审核版本中将显示 “发布” 按钮，单击该按钮，即可完成微信小程序的发布。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;8习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8习题&#34;&gt;#&lt;/a&gt; 8. 习题&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;主要考察为选择、判断、填空&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微信小程序是运行在______之上的应用。&lt;/li&gt;
&lt;li&gt;微信小程序开发完成后需要通过 “上传” 按钮将代码上传到______。&lt;/li&gt;
&lt;li&gt;微信小程序项目中的______文件是全局配置文件。&lt;/li&gt;
&lt;li&gt;微信开发者工具中用于保存文件的快捷键是______。&lt;/li&gt;
&lt;li&gt;在微信小程序中，每个页面由 4 个文件组成，分别是______文件、______文件、______文件和 JS 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。（ ）&lt;/li&gt;
&lt;li&gt;微信小程序项目中 app.js 文件是全局样式文件。（ ）&lt;/li&gt;
&lt;li&gt;通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。（ ）&lt;/li&gt;
&lt;li&gt;微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。（ ）&lt;/li&gt;
&lt;li&gt;项目成员表示参与微信小程序开发、运行的成员。（ ）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、 选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信小程序说法错误的是（ ）。&lt;/p&gt;
&lt;p&gt;A. 微信小程序是运行在微信之中应用&lt;/p&gt;
&lt;p&gt;B. 微信小程序的体积非常小&lt;/p&gt;
&lt;p&gt;C. 微信小程序不可以跨平台&lt;/p&gt;
&lt;p&gt;D. 通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于微信小程序特点的是（ ）。&lt;/p&gt;
&lt;p&gt;A. 无须安装          B. 无须卸载&lt;/p&gt;
&lt;p&gt;C. 体积大           D. 入口丰富&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于在微信开发者工具中输出调试信息的面板是（ ）。&lt;/p&gt;
&lt;p&gt;A.Wxml            B.Console&lt;/p&gt;
&lt;p&gt;C.Sources           D.Network&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信小程序项目目录结构说法错误的是（ ）。&lt;/p&gt;
&lt;p&gt;A.pages 目录用于存放所有微信小程序的页面&lt;/p&gt;
&lt;p&gt;B.app.wxss 文件定义了微信小程序项目的全局样式&lt;/p&gt;
&lt;p&gt;C.sitemap.json 文件是微信小程序项目的全局配置文件&lt;/p&gt;
&lt;p&gt;D.app.js 文件是微信小程序项目的入口文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于微信开发者工具说法错误的是（ ）。&lt;/p&gt;
&lt;p&gt;A. 工具栏 “预览” 按钮用于在微信中进行预览&lt;/p&gt;
&lt;p&gt;B. 菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等&lt;/p&gt;
&lt;p&gt;C. 模拟器可以模拟小程序在微信客户端的运行效果&lt;/p&gt;
&lt;p&gt;D. 编辑器中只能打开一个文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、 简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请简述微信小程序的特点。&lt;/li&gt;
&lt;li&gt;请简述微信小程序项目的创建过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二章-微信小程序的页面制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-微信小程序的页面制作&#34;&gt;#&lt;/a&gt; 第二章 微信小程序的页面制作&lt;/h1&gt;
&lt;h2 id=&#34;1了解wxmlwxss的概念及主要特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1了解wxmlwxss的概念及主要特点&#34;&gt;#&lt;/a&gt; 1. 了解 WXML,WXSS 的概念及主要特点&lt;/h2&gt;
&lt;p&gt;WXML 概念：在制作微信小程序页面时，&lt;span class=&#34;red&#34;&gt;页面的结构可以用 WXML 来实现&lt;/span&gt;。WXML 是微信团队为微信小程序开发而设计的一套语言，可以结合微信小程序中的各种组件构建页面结构。&lt;/p&gt;
&lt;p&gt;WXML 与 HTML 的区别:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;HTML 和 WXML 使用的标签不同。&lt;/p&gt;
&lt;p&gt;例如，HTML 经常使用 &amp;lt;div&amp;gt; 标签搭建页面结构，而 WXML 则使用 &amp;lt; view &amp;gt; 标签搭建页面结构；HTML 经常使用 &amp;lt; span &amp;gt; 标签定义行内文本 ，而 WXML 则使用 &amp;lt; text &amp;gt; 标签定义行内文本 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 提供了和 Vue.js 中模板语法类似的模板语法&lt;/p&gt;
&lt;p&gt;例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 中的单标签必须在结尾 “&amp;gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&amp;gt;” 前面的 “/”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;WXSS 概念：在微信小程序的页面制作中，使用 WXML 搭建页面结构以后，也需要设置样式来美化页面。微信小程序通过&lt;span class=&#34;red&#34;&gt; WXSS 可以美化页面样式&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;WXSS 与 CSS 的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。&lt;/li&gt;
&lt;li&gt;在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。&lt;/li&gt;
&lt;li&gt;在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url (&#39;/images/1.png&#39;); ” 是无效的，而 CSS 可以使用本地图片来设置背景图片。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2组件的概念及常用组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2组件的概念及常用组件&#34;&gt;#&lt;/a&gt; 2. 组件的概念及常用组件&lt;/h2&gt;
&lt;p&gt;组件的概念：微信小程序页面和普通网页都是通过标签来定义页面结构的，但是在微信小程序开发中，更习惯将&lt;span class=&#34;red&#34;&gt;这些标签称为组件，这些组件自带微信风格的 UI 样式和特定功能效果&lt;/span&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;view&lt;/td&gt;
&lt;td&gt;视图容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;video&lt;/td&gt;
&lt;td&gt;视频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox&lt;/td&gt;
&lt;td&gt;复选框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;button&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio&lt;/td&gt;
&lt;td&gt;单选按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;image&lt;/td&gt;
&lt;td&gt;图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td&gt;表单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;音频&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;view 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;view 组件表示视图容器，常用于实现页面的布局效果。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- view 组件通过 &amp; lt;view &gt; 标签定义 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; view组件 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;view 组件提供了一些属性，用于实现特殊的效果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hover-class&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定手指按下去的样式。当该属性值为 none 时，没有点击态。（点击态是指手指在屏幕上按下时的状态）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-stop-propagation&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;指定是否阻止本节点的祖先节点出现点击态。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-start-time&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;手指按住后多久出现点击态，单位为毫秒。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-stay-time&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;手指松开后点击态保留时间，单位为毫秒。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608170318567.png&#34; alt=&#34;image-20240608170318567&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;image 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信小程序提供了用于显示图片的 image 组件，支持对图片进行剪裁和缩放。image 组件的默认宽度为 300px，默认高度为 240px。&lt;/p&gt;
&lt;p&gt;image 组件通过 &amp;lt;image&amp;gt; 标签定义，支持单标签和双标签两种写法&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 单标签写法的示例代码 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;sr&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;图片资源地址&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 单双标签写法的示例代码 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;sr&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;图片资源地址&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;image 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图片资源地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mode&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图片剪裁、缩放的模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;webp&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;默认不解析 WebP 格式，只支持网络资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lazy-load&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;图片延迟加载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-menu-by-longpress&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;长按图片显示的菜单，菜单提供发送给朋友、收藏、保存图片、搜一搜等功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binderror&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当错误发生时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindload&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当图片载入完毕时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：图片资源地址 src 可以是本地路径或 URL 地址。如果使用本地路径，可以在项目中创建一个目录，例如 images 目录，并在该目录中放入图片，例如 test.jpg，然后通过本地路径 /images/test.jpg 即可引用图片。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scaleToFill: 不保持宽高比缩放图片，使图片的宽高完全拉伸至填满 image 元素。此合法值为 mode 属性的默认值&lt;/li&gt;
&lt;li&gt;aspectFit: 保持宽高比缩放图片，使图片的长沙能完全显示出来，即可以完整地将图片显示出来&lt;/li&gt;
&lt;li&gt;aspectFill: 保持宽高比缩放图片，只保证图片的短边能完全显示出来，即图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取&lt;/li&gt;
&lt;li&gt;widthFix: 宽度不变，高度自动变化，保持原图宽高比不变&lt;/li&gt;
&lt;li&gt;heightFix: 高度不变，宽度自动变化，保持原图宽高比不变&lt;/li&gt;
&lt;li&gt;top\bottom\center\left\right\top left\top right\bottom left\bottom right: 不缩放图片，只显示对应区域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171236731.png&#34; alt=&#34;image-20240608171236731&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;text 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在微信小程序中，则可以通过 text 组件定义行内文本。需要注意的是，&lt;span class=&#34;red&#34;&gt;text 组件内部只能嵌套 text 组件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;text 常用属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;user-select&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;文本是否可选，该属性会使文本节点显示为 inline-block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;space&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;显示连续空格，可选参数为 &lt;strong&gt;ensp&lt;/strong&gt;（中文字符空格一半大小）、&lt;strong&gt;emsp&lt;/strong&gt;（中文字符空格大小）和 &lt;strong&gt;nbsp&lt;/strong&gt;（根据字体设置的空格大小）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decode&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否解码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;user-select 属性&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171451763.png&#34; alt=&#34;image-20240608171451763&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;video 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信小程序提供了 video 组件用来播放视频，video 组件的默认宽度为 300px，高度为 225px，可通过 WXSS 代码设置宽高。&lt;/p&gt;
&lt;p&gt;video 常见属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;视频的资源地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;指定视频时长&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;controls&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示默认播放控件（播放 / 暂停按钮、播放进度、时间）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;danmu-list&lt;/td&gt;
&lt;td&gt;Object Array&lt;/td&gt;
&lt;td&gt;弹幕列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;danmu-btn&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示弹幕按钮，只在初始化时有效，不能动态变更&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable-danmu&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否展示弹幕，只在初始化时有效，不能动态变更&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否自动播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否循环播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否静音播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;poster&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 属性无效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindplay&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当开始 / 继续播放时触发 play 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindpause&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当暂停播放时触发 pause 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;object-fit&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;当视频大小与 video 组件大小不一致时，调整视频的表现形式，可选值有：contain（包含）、fill（填充）、cover（覆盖），默认值为 contain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;initial-time&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定视频初始播放位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608171638894.png&#34; alt=&#34;image-20240608171638894&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;3页面路径的配置方法能够运用该方法对页面进行管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3页面路径的配置方法能够运用该方法对页面进行管理&#34;&gt;#&lt;/a&gt; 3. 页面路径的配置方法，能够运用该方法对页面进行管理&lt;/h2&gt;
&lt;p&gt;开发一个功能完整的微信小程序时，一般需要制作多个页面。&lt;/p&gt;
&lt;p&gt;在微信小程序中可以通过&lt;span class=&#34;red&#34;&gt; app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;pages 配置项是一个数组，该数组用于指定微信小程序由哪些页面组成，数组中的每一个元素都对应一个页面的路径信息。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;pages&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;pages/logs/logs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上述代码中共配置了两个页面，分别是 pages/index/index 页面和 pages/logs/logs 页面。&lt;/p&gt;
&lt;p&gt;默认情况下，pages 数组中的第一项为微信小程序的初始页面，即 pages/index/index 页面。如果想将其他页面设置为初始页面，读者可以手动调整数组中元素的顺序，将需要设为初始页面的页面路径设为第一项即可。&lt;/p&gt;
&lt;p&gt;pages/index/index 中的 pages 表示存放页面的目录，index/index 中第一个 index 表示 index 目录，第二个 index 表示文件名。 同理，pages/logs/logs 中的 pages 表示存放页面的目录，logs/logs 中第一 logs 表示 logs 目录，第二个 logs 表示文件名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;注意：文件名不需要写后缀名，以 pages/index/index 页面为例，配置成功后，微信开发者工具会自动生成 index.wxml 文件、index.wxss 文件、index.js 文件和 index.json 文件&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;4掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4掌握swiper和swiper-item组件的使用方法能灵活运用swiper和swiper组件完成轮播图的制作&#34;&gt;#&lt;/a&gt; *4. 掌握 swiper 和 swiper-item 组件的使用方法，能灵活运用 swiper 和 swiper 组件完成轮播图的制作&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;重点内容！！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;概念：swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。&lt;/p&gt;
&lt;p&gt;swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;swiper 组件为外层容器，内层有 3 个 swiper-item 组件，表示当前滑块视图内容一共有 3 项。&lt;/p&gt;
&lt;p&gt;滑块视图内容在初始状态下只显示第 1 项，向左滑动显示第 2 项，再向右滑动可以返回第 1 项。&lt;/p&gt;
&lt;p&gt;swiper 组件的常用属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;indicator-dots&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示面板指示点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indicator-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;指示点颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indicator-active-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;当前选中的指示点颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否自动切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;current&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;当前所在滑块的 index, 默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;interval&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;自动切换时间间隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;circular&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否采用衔接滑动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173426528.png&#34; alt=&#34;image-20240608173426528&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;5掌握导航栏的配置方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5掌握导航栏的配置方法&#34;&gt;#&lt;/a&gt; *5. 掌握导航栏的配置方法&lt;/h2&gt;
&lt;p&gt;通过&lt;span class=&#34;red&#34;&gt;页面配置文件或全局配置文件&lt;/span&gt;对导航栏的样式进行配置&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;配置项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarTitleText&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;导航栏标题文字内容，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarBackgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;导航栏背景颜色，默认值为 #000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarTextStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;导航栏标题颜色，仅支持 black 和 white, 默认值为 white&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在页面配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在全局配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608173744741.png&#34; alt=&#34;image-20240608173744741&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;6掌握标签栏的配置方法能够完成页面标签栏的配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6掌握标签栏的配置方法能够完成页面标签栏的配置&#34;&gt;#&lt;/a&gt; 6. 掌握标签栏的配置方法，能够完成页面标签栏的配置&lt;/h2&gt;
&lt;p&gt;通过标签栏可以很方便地在多个页面之间进行切换。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;tabBar 常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏上的文字默认颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;selectedColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏上的文字选中时的颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏的背景色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;borderStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;标签栏上边框的颜色，仅支持 black 和 white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;position&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;标签栏的位置，仅支持 bottom（底部）和 top（顶部）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;custom&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;自定义标签栏&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt; 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 演示 tabBar 配置项的属性使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;tabBar&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;color&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ccc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ff4c91&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;borderStyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#fff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//list 数组中的每个元素都是一个代表标签按钮的对象，通过配置该对象的属性可以对标签栏中的每个标签按钮进行配置。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//list 数组中最少需要配置 2 个标签按钮，最多只能配置 5 个标签按钮。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;标签按钮的相关属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏上的文字默认颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;selectedColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏上的文字选中时的颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;borderStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;标签栏上边框的颜色，仅支持 black 和 white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏的背景色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;标签栏的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//tabBar 配置项的属性使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/home.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/home-active.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;首页&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/list/list&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/contact.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/contact-active.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;联系我们&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 需要注意的是，pages/index/index 和 pages/list/list 这两个页面都必须在 pages 数组中配置并提前创建好对应的文件。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;标签栏的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608174515502.png&#34; alt=&#34;image-20240608174515502&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;7掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7掌握表单组件的使用方法能够灵活运用常用的表单组件完成页面的制作&#34;&gt;#&lt;/a&gt; 7. 掌握表单组件的使用方法，能够灵活运用常用的表单组件完成页面的制作&lt;/h2&gt;
&lt;p&gt;微信小程序在 HTML 基础上做了封装，并且增加了一些组件。&lt;/p&gt;
&lt;p&gt;表单组件通常用于用户信息的填写，以便于把用户填写的信息提交给服务器。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td&gt;表单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox-group&lt;/td&gt;
&lt;td&gt;多项选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio-group&lt;/td&gt;
&lt;td&gt;单项选择器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;textarea&lt;/td&gt;
&lt;td&gt;多行输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;button&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox&lt;/td&gt;
&lt;td&gt;多选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio&lt;/td&gt;
&lt;td&gt;单选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;form 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;form 组件表示表单容器，没有任何样式，需要配合其他表单组件一起使用，&lt;span class=&#34;red&#34;&gt;用于提交用户输入的信息和选择的选项。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;form 组件内部可以包含若干个供用户输入或选择的表单组件，允许提交的表单组件为 switch、input、 checkbox、slider、radio 和 picker 组件。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;表单中携带数据的组件（如输入框）必须带有 name 属性值，否则无法识别提交的内容。&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bindsubmit&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;通过携带 form 组件中的数据触发 submit 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindreset&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;表单重置时会触发 reset 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;button 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;button 组件表示按钮，功能比 HTML 中的 button 按钮丰富。&lt;/p&gt;
&lt;p&gt;button 组件的常用属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;按钮的大小，可选值：default、mini, 默认值为 default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;按钮的样式类型，可选值：primary、default、warn, 默认值为 default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;plain&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;按钮是否镂空，当 plain 属性值为 true 时背景色透明，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;form-type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;form-type 属性值可设为 submit、reset, 点击分别会触发 form 组件中的 submit、reset 事件，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-class&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定按钮点击态效果，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608175154327.png&#34; alt=&#34;image-20240608175154327&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;input 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;input 组件与 HTML 中的 &amp;lt;input&amp;gt; 标签作用类似，&lt;span class=&#34;red&#34;&gt;都用于接收用户的输入&lt;/span&gt;。在微信小程序中，input 组件增加了很多属性，使 input 组件使用起来更加简单、方便。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;value&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;输入框的初始内容，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;input 的类型，默认值为 text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;confirm-type&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;设置键盘右下角按钮的文字，仅在 type=&amp;quot;text&amp;quot; 时生效，可选值：send、search、next、go、done, 默认值为 done&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;password&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;boolean&lt;/td&gt;
&lt;td&gt;是否是密码类型，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;placeholder&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;输入框为空时的占位符，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;placeholder-style&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;指定 placeholder 的样式，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;placeholder-class&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;string&lt;/td&gt;
&lt;td&gt;指定 placeholder 的样式类，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;input 组件的 type 属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;可选值&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;文本输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;数字输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;idcard&lt;/td&gt;
&lt;td&gt;身份证输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;digit&lt;/td&gt;
&lt;td&gt;带小数点的数字键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;safe-password&lt;/td&gt;
&lt;td&gt;密码安全输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nickname&lt;/td&gt;
&lt;td&gt;昵称输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608175311122.png&#34; alt=&#34;image-20240608175311122&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;checkbox 和 checkbox-group 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;checkbox 组件表示多选项目，在进行多项选择时会用到。&lt;/p&gt;
&lt;p&gt;checkbox 组件一般与 checkbox-group 组件搭配使用，checkbox-group 组件表示多项选择器，内部由多个 checkbox 组件组成。&lt;/p&gt;
&lt;p&gt;建议将不同组的 checkbox 组件嵌套在不同的 checkbox-group 组件中，从而方便管理和区分。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;checkbox 组件标识，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checked&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当前是否选中，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;颜色，默认值为 #09BB07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- checkbox 和 checkbox-group 组件的使用 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;蛋糕&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;甜甜圈&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;巧克力&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;radio 和 radio-group 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;radio 组件为单选项目，是表单中常用的组件，用于在从多个选项中选出一个，选项之间是互斥关系。&lt;/p&gt;
&lt;p&gt;radio 组件一般与 radio-group 组件搭配使用，radio-group 组件表示单项选择器，内部由多个 radio 组件组成。&lt;/p&gt;
&lt;p&gt;建议将不同组的 radio 组件分别嵌套在不同的 radio-group 组件中，从而方便管理和区分。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;radio 标识，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checked&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当前是否选中，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;颜色，默认值为 #09BB07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- radio 和 radio-group 组件 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过 radio 和 radio-group 组件实现性别的单项选择 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;男&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;女&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;8习题-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8习题-2&#34;&gt;#&lt;/a&gt; 8. 习题&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;主要考察为选择、判断、填空&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;image 组件的 ____属性用于设置图片的展示模式。&lt;/li&gt;
&lt;li&gt;swiper 组件内部只可以放置____组件。&lt;/li&gt;
&lt;li&gt;在 Flex 布局中，____属性能够设置项目在主轴方向的排列方式。&lt;/li&gt;
&lt;li&gt;text 组件的 ____属性用于实现长按选中文本内容的效果。&lt;/li&gt;
&lt;li&gt;在实现底部标签栏时，tabBar 配置项应在 ____文件中设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给父元素设置 display:flex 后，可以使用 flex 的相关属性，例如通过 flex-direction 属性设置主轴方向。（ ）&lt;/li&gt;
&lt;li&gt;微信小程序中样式文件为 WXSS 文件，只支持 rpx 一种尺寸单位。（ ）&lt;/li&gt;
&lt;li&gt;swiper 组件可以实现页面的轮播图效果。（ ）&lt;/li&gt;
&lt;li&gt;video 组件专门用于播放音频。（ ）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、 选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于配置微信小程序所有的页面地址的文件是（ ）&lt;/p&gt;
&lt;p&gt;A.  app.js   B. app.json   C. app.wxss   D. project.config.json&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于表单组件的是（ ）&lt;/p&gt;
&lt;p&gt;A. input 组件        B. checkbox 组件  C. form 组件     D. swiper 组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，不属于 Flex 布局的是（ ）&lt;/p&gt;
&lt;p&gt;A.  display:flex;&lt;/p&gt;
&lt;p&gt;B.   flex:1;&lt;/p&gt;
&lt;p&gt;C.   float:left;&lt;/p&gt;
&lt;p&gt;D.  flex-flow:column nowrap;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，app.json 文件中的 tabBar 配置项最多允许的页数为（ ）。&lt;/p&gt;
&lt;p&gt;A. 3    B. 4    C. 5    D. 6&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、 简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述 WXML 和 HTML 的区别。&lt;/li&gt;
&lt;li&gt;简述 WXSS 和 CSS 的区别。&lt;/li&gt;
&lt;li&gt;简述 Flex 布局的概念。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第三章-微信小程序的页面交互&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-微信小程序的页面交互&#34;&gt;#&lt;/a&gt; 第三章 微信小程序的页面交互&lt;/h1&gt;
&lt;h2 id=&#34;1熟悉page函数能够归纳page函数及其各个参数的作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1熟悉page函数能够归纳page函数及其各个参数的作用&#34;&gt;#&lt;/a&gt; 1. 熟悉 Page () 函数，能够归纳 Page () 函数及其各个参数的作用&lt;/h2&gt;
&lt;p&gt;Page () 函数概念：在微信小程序中，页面交互的代码写在页面的 JS 文件中，每个页面都需要通过 Page () 函数进行注册。&lt;/p&gt;
&lt;p&gt;需要注意的是，&lt;span class=&#34;red&#34;&gt;Page ( ) 函数只能写在微信小程序每个页面对应的 JS 文件中，并且每个页面只能注册一个。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Page () 函数的参数是一个对象，通过该对象可以指定页面初始数据、页面生命周期回调函数和页面事件处理函数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 Page () 函数的示例代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 页面初始数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 页面生命周期回调函数，以 onLoad () 为例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onLoad()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 页面事件处理函数，以 onPullDownRefresh () 为例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onPullDownRefresh()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;页面初始数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;页面初始数据是指页面第一次渲染时所用到的数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 定义页面初始数据，示例代码如下：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;msg1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;msg2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;World&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;页面生命周期回调函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;页面的生命周期是指每个页面&lt;span class=&#34;red&#34;&gt; “加载→渲染→销毁”&lt;/span&gt; 的过程，每个页面都有生命周期&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;如果想要在某个特定的时机进行特定的处理，则可以通过页面生命周期回调函数来完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数用于实现在特定的时间点执行特定的操作，随着页面生命周期的变化，页面生命周期回调函数会自动执行。&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onLoad()&lt;/td&gt;
&lt;td&gt;监听页面加载，且一个页面只会在创建完成后触发一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShow()&lt;/td&gt;
&lt;td&gt;监听页面显示，只要页面显示就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onReady()&lt;/td&gt;
&lt;td&gt;监听页面初次渲染完成，一个页面只会调用一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onHide()&lt;/td&gt;
&lt;td&gt;监听页面隐藏，只要页面隐藏就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onUnload()&lt;/td&gt;
&lt;td&gt;监听页面卸载，只要页面被释放就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;页面事件处理函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在微信小程序中，用户可能会在页面上进行一些操作，例如上拉、下拉、滚动页面等，如何在发生这些操作的时候进行处理呢？可以通过页面事件处理函数来完成。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;页面事件处理函数用于监听用户的行为。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;常见的页面事件处理函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;函数名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onPullDownRefresh()&lt;/td&gt;
&lt;td&gt;监听用户下拉刷新事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onReachBottom()&lt;/td&gt;
&lt;td&gt;监听页面上拉触底事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onPageScroll()&lt;/td&gt;
&lt;td&gt;页面滚动会连续调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShareAppMessage()&lt;/td&gt;
&lt;td&gt;用户点击页面右上角 &amp;quot;⋯⋯&amp;quot; 按钮，选择 &amp;quot;转发给朋友&amp;quot; 时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2掌握数据绑定事件绑定事件对象this关键字的使用以及setdata方法的使用&#34;&gt;#&lt;/a&gt; 2. 掌握数据绑定，事件绑定，事件对象，this 关键字的使用以及 setData 方法的使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据绑定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定，可将 data 中的数据通过 Mustache 语法输出到页面上。&lt;/p&gt;
&lt;p&gt;通过数据绑定将数据显示在页面中案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 pages/index/index.js 文件，在 data 中定义一个 message 数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello World&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过 Mustache &amp;#123;&amp;#125; 语法将 data 中的数据显示在页面中 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608181250880.png&#34; alt=&#34;image-20240608181250880&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;页面上显示了 message 变量对应的值，也就是把 “Hello World” 渲染到页面代码中所在的位置，实现了从逻辑层到视图层的数据显示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;事件绑定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在微信小程序中，事件是视图层到逻辑层的通信方式，通过给组件绑定事件，可以监听用户的操作行为，然后在对应的事件处理函数中进行相应的业务处理。例如，为页面中的按钮绑定事件，当用户点击按钮时，就产生了事件。&lt;/p&gt;
&lt;p&gt;常见的事件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;类别&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;事件名称&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;触发条件&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;点击事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;tap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后马上离开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;长按事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;longpress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后，超过 350ms 再离开，如果指定了事件回调函数并触发了这个事件，tap 事件将不被触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchstart&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchmove&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchcancel&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作被打断，例如来电提醒、弹窗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchend&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;其他事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;input&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;键盘输入时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;其他事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;submit&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;携带 form 中的数据触发 submit 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;事件分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冒泡事件：指当一个组件上的事件被触发后，该事件会向父组件传递。&lt;/li&gt;
&lt;li&gt;非冒泡事件：指当一个组件上的事件被触发后，该事件不会向父组件传递。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：点击事件、长按事件、触摸事件都属于冒泡事件，其他事件属于非冒泡事件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;为组件绑定事件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若要为组件绑定事件，可以通过为组件添加 “bind + 事件名称” 属性或 “catch + 事件名称” 属性来完成，属性的值为事件处理函数，当组件的事件被触发时，会主动执行事件处理函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;bind 和 catch 的区别在于，bind 不会阻止冒泡事件向上冒泡，而 catch 可以阻止冒泡事件向上冒泡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为组件绑定事件案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中给 button 组件绑定 tap 事件，事件处理函数为 compare () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;compare&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;比较&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;bindtap 表示绑定 tap 事件。&lt;br /&gt;
在触屏手机中，tap 事件在用户手指触摸 button 组件离开后触发，而在微信开发者工具中，tap 事件在鼠标单击 button 组件时触发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中定义 compare () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;比较按钮被点击了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;事件处理函数的简写形式&lt;/p&gt;
&lt;p&gt;由于 compare () 函数是 {} 对象的方法，所以可以将 compare () 函数写成方法的简写形式，即省略 compare 后面的冒号和 function 关键字&lt;/p&gt;
&lt;p&gt;示例代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;compare&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;比较按钮被点击了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;事件对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在开发微信小程序的过程中，有时需要获取事件发生时的一些信息，例如事件类型、事件发生的时间、触发事件的对象等，此时可以通过事件对象来获取。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;当事件处理函数被调用时，微信小程序会将事件对象以参数的形式传给事件处理函数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;事件对象的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;事件类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeStamp&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;事件生成的时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;触发事件的组件的一些属性值集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currentTarget&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;当前组件的一些属性值集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mark&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;事件标记数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;事件对象的使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改 pages/index/index.js 文件中的 compare () 函数，通过参数接收事件对象，并将事件对象输出到控制台。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// 函数参数 e 表示事件对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;事件对象属性中的 target 和 currentTarget 属性的对比。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target 表示获取触发事件的组件的一些属性值集合&lt;/li&gt;
&lt;li&gt;currentTarget 表示获取当前组件的一些的属性值集合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事件对象属性中 target 和 currentTarget 的区别案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewtap&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;outer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  outer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;inner&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      inner&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中添加 viewtap () 事件处理函数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;viewtap&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;currentTarget&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 使用 e.target.id 或 e.currentTarget.id 都可以获取发生事件的组件的 id，由于 outer 和 inner 的 id 不同，因此可以区分这两个组件。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运行程序测试，当单击 outer 时，控制台中的输出结果为 outer-outer，而单击 inner 时，控制台中的输出结果为 inner-outer。&lt;/p&gt;
&lt;p&gt;由此可见，e.target 获取的是子元素的属性值集合，而 e.currentTarget 获取到的是父元素的属性值集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;this 关键字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在微信小程序开发过程中，有时需要在函数中访问页面中定义的一些数据，或者调用页面中定义的一些函数，此时可以通过 this 关键字来实现。&lt;/p&gt;
&lt;p&gt;this 关键字代表当前页面对象。&lt;/p&gt;
&lt;p&gt;this 关键字的使用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义 data 数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义 test () 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 通过 this 关键字访问 data 中的 num 数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;			&lt;span class=&#34;token comment&#34;&gt;// 通过 this 关键字调用 test () 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;setData () 方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在微信小程序开发过程中，虽然通过数据绑定可以将 data 中定义的数据渲染到页面，但是如果数据发生了变化，页面并不会同步更新数据。&lt;/p&gt;
&lt;p&gt;为了实现在数据变化时使页面同步更新，微信小程序提供了 setData () 方法，该方法可以立即改变 data 中的数据，并通过异步的方式将数据渲染到页面上。&lt;/p&gt;
&lt;p&gt;setData () 方法通过 this 关键字调用，该方法的基本语法格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; callback&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;setData () 方法的参数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;当前要改变的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;callback&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;setData () 方法引起的页面更新渲染完毕后的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 个参数 data 是 object 类型的数据，以 key: value 的形式将 data 中的 key 对应值设置成 value；&lt;/li&gt;
&lt;li&gt;第 2 个参数 callback 是回调函数，可以省略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;setData () 方法的使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中编写页面中所需的数据 message 和事件处理函数 changeText ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello World&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;changeText&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hello 微信小程序&#39;&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;changeText&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 给 view 组件绑定了 tap 事件，事件处理函数为 changeText () --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3掌握data-自定义属性能够完成data-自定义数据的设置与获取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3掌握data-自定义属性能够完成data-自定义数据的设置与获取&#34;&gt;#&lt;/a&gt; 3. 掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取&lt;/h2&gt;
&lt;p&gt;概念：微信小程序可以通过自定义属性来进行传参。&lt;/p&gt;
&lt;p&gt;微信小程序中的 data-* 是一个自定义属性，data-* 自定义属性实际上是由 data - 前缀加上一个自定义的属性名组成的，属性名中如果有多个单词，用连字符 “-” 连接。&lt;/p&gt;
&lt;p&gt;data-* 自定义属性的属性值表示要传参的数据。&lt;/p&gt;
&lt;p&gt;在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。&lt;/p&gt;
&lt;p&gt;dataset 属性是一个对象，该对象的属性与 data-* 自定义属性相对应。&lt;/p&gt;
&lt;p&gt;通过设置 data-* 自定义属性实现参数的传递：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xiaochengxu&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-age&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;6&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  获取姓名和年龄&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;姓名：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;年龄：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中编写页面逻辑。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;初始名字&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dataset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dataset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608182842473.png&#34; alt=&#34;image-20240608182842473&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;4掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4掌握条件渲染能够运用条件渲染根据不同的判断结果显示不同的组件&#34;&gt;#&lt;/a&gt; 4. 掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件&lt;/h2&gt;
&lt;p&gt;概念：在微信小程序开发过程中，如果需要根据不同的判断结果显示不同的组件，可以使用条件渲染来实现。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;条件渲染通过标签的 wx:if 控制属性来完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 wx:if=“” 来判断是否需要渲染标签对应的组件，如果变量 val 的值为 true，则渲染组件并输出；变量 val 的值为 false，则不渲染组件&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;True&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过变量 condition 的值来控制是否渲染 view 组件&lt;/p&gt;
&lt;p&gt;给标签设置了 wx:if 控制属性后，可以为后面的标签设置 wx:elif、wx:else 控制属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wx:elif 控制属性表示当前面标签的 if 条件不满足时，继续判断 elif（else if）的条件；&lt;/li&gt;
&lt;li&gt;wx:else 控制属性表示当前面的 if 条件不满足时，渲染 else 对应的组件。&lt;/li&gt;
&lt;li&gt;wx:else 控制属性也可以直接出现在 wx:if 控制属性的后面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;elif&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;5掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5掌握列表渲染能够运用列表渲染将数组中的数据渲染到页面中&#34;&gt;#&lt;/a&gt; 5. 掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中&lt;/h2&gt;
&lt;p&gt;概念：列表渲染通过 wx:for 控制属性来实现。&lt;/p&gt;
&lt;p&gt;微信小程序进行列表渲染时，会根据列表中数据的数量渲染相应数量的内容。&lt;/p&gt;
&lt;p&gt;在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。&lt;/p&gt;
&lt;p&gt;如果不想使用 item 和 index 这两个变量名，还可以通过 wx:for-item 控制属性更改 item 的变量名；通过 wx:for-index 控制属性更改 index 的变量名。&lt;/p&gt;
&lt;p&gt;wx:key 控制属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wx:for 控制属性通常搭配 wx:key 控制属性使用。&lt;/li&gt;
&lt;li&gt;wx:key 控制属性用于为每一项设置唯一标识，这样可以在数据改变后页面重新渲染时，使原有组件保持自身的状态，而不是重新创建，这样可以提高列表渲染的效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置 wx:key&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果 item 本身就是一个具有唯一性的字符串或数字，则可以将 wx:key 的值设置为 * this，*this 表示 item 本身。&lt;/li&gt;
&lt;li&gt;如果给定的数据是一个由对象作为数组元素构成的数组，那么可以将 wx:key 的值设置为对象中的一个 “值具有唯一性” 的属性的名称。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;数组的列表渲染案例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构，通过列表渲染的方式将 arr 数组渲染到页面中。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-wxml&#34;&gt;&amp;lt;view wx:for=&amp;quot;&amp;#123;&amp;#123; arr &amp;#125;&amp;#125;&amp;quot; wx:key=&amp;quot;*this&amp;quot;&amp;gt;
  &amp;#123;&amp;#123; index &amp;#125;&amp;#125; &amp;#123;&amp;#123; item &amp;#125;&amp;#125;
&amp;lt;/view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数组中包含对象情况下的列表渲染案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;梅&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;兰&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;竹&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;菊&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//id 是每条数据的唯一标识&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构，将 list 数组中的数据在页面中显示出来。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;-----&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;=======&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;数组中包含对象情况下的列表渲染的页面效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183458412.png&#34; alt=&#34;image-20240608183458412&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中修改页面结构，实现通过 wx:for-item、wx:for-index 更改 item 和 index 的变量名。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for-index&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;index2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过 wx:for-item 更改 item 的变量名为 item2，通过 wx:for-index 更改 index 的变量名为 index2 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更名后列表渲染的页面效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183658029.png&#34; alt=&#34;image-20240608183658029&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;6掌握网络请求实现能够通过网络请求与服务器进行交互&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6掌握网络请求实现能够通过网络请求与服务器进行交互&#34;&gt;#&lt;/a&gt; 6. 掌握网络请求实现，能够通过网络请求与服务器进行交互&lt;/h2&gt;
&lt;p&gt;客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。&lt;/p&gt;
&lt;p&gt;例如，获取用户的头像信息，需要客户端向服务器发送请求，服务器查询到数据后把数据传递给客户端。&lt;/p&gt;
&lt;p&gt;在微信小程序中实现网络请求时，需要服务器给微信小程序提供服务器接口。&lt;/p&gt;
&lt;p&gt;在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。&lt;/p&gt;
&lt;p&gt;wx.request () 方法的常见选项&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器接口地址，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;string/object/ArrayBuffer&lt;/td&gt;
&lt;td&gt;请求的参数，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;设置请求的 header, 默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;method&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;HTTP 请求方式，默认值为 GET&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dataType&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;返回的数据格式，默认值为 json&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;responseType&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;响应的数据类型，默认值为 text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：method 选项的合法值包括 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE 和 CONNECT，具体使用哪个，以服务器接口的要求为准。&lt;/p&gt;
&lt;p&gt;每个 wx:request () 方法都是一个请求任务，可以通过 abort () 方法将其取消。&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; requestTask &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;URL地址&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//wx.request () 的常见参数……&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消请求任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;requestTask&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 wx.request () 方法发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 abort () 方法取消请求任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 wx.request () 方法发起一个 GET 方式的请求&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;URL地址&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 表示服务器接口地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 表示 HTTP 请求方式为 GET&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;zs&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 设置了请求参数 name&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 定义了接口调用成功的回调函数 success &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;7掌握上拉触底与下拉刷新的实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7掌握上拉触底与下拉刷新的实现&#34;&gt;#&lt;/a&gt; 7. 掌握上拉触底与下拉刷新的实现.&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;上拉触底：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在原生应用或者网页的交互中，经常会有上拉加载这个功能。用户在浏览列表页面时，手指在手机屏幕上进行上拉滑动操作，通过上拉加载请求数据，增加列表数据。&lt;/p&gt;
&lt;p&gt;微信小程序提供了 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。&lt;/p&gt;
&lt;p&gt;onReachBottom () 事件处理函数的示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;onReachBottom&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; function () &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console.log(&#39;触发了上拉触底的事件&#39;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在默认情况下，触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，开发人员可以根据实际需求，在全局或页面的 JSON 配置文件中通过 onReachBottomDistance 属性修改上拉触底的距离。&lt;/p&gt;
&lt;p&gt;在页面的 JSON 文件中配置上拉触底的距离为 200px：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;onReachBottomDistance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;下拉刷新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在原生应用的交互中，经常会有下拉刷新操作，即当用户下拉页面到达顶部时，再进行下拉可以将数据重新加载。&lt;/p&gt;
&lt;p&gt;启用下拉刷新的方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局开启下拉刷新
&lt;ul&gt;
&lt;li&gt;在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局部开启下拉刷新
&lt;ul&gt;
&lt;li&gt;在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开启下拉刷新后，当下拉操作执行时，就会触发 onPullDownRefresh () 事件处理函数。&lt;/p&gt;
&lt;p&gt;onPullDownRefresh () 事件处理函数的示例代码如下。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;onPullDownRefresh&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; function () &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console.log(&#39;触发了下拉刷新的事件&#39;) &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行下拉刷新操作后，页面顶部会出现加载提示，并且页面需要延迟一段时间才会弹回去。&lt;/p&gt;
&lt;p&gt;为了优化用户体验，可以在完成下拉刷新的数据加载后，立即调用 wx.stopPullDownRefresh () 方法停止使用当前页面的下拉刷新加载效果&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.stopPullDownRefresh()&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;8习题-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8习题-3&#34;&gt;#&lt;/a&gt; 8. 习题&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;主要考察为选择、判断、填空&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在页面结构渲染过程中，通过____控制属性完成页面的条件渲染。&lt;/li&gt;
&lt;li&gt;在列表渲染中，通过____控制属性可以循环数组中的每一项。&lt;/li&gt;
&lt;li&gt;在列表渲染中，使用____可以指定当前项的变量名。&lt;/li&gt;
&lt;li&gt;在 JS 文件中，通过____ 获取 data-* 自定义属性的值。&lt;/li&gt;
&lt;li&gt;在微信小程序中，页面加载完成后执行的生命周期函数为 ____。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在微信小程序中，可以通过 data-* 自定义属性来进行传参。（ ）&lt;/li&gt;
&lt;li&gt;‌所有绑定的数据都必须在 data 中进行初始化。（ ）&lt;/li&gt;
&lt;li&gt;设置 enablePullDownRefresh 为 false 时，表示禁止下拉。（ ）&lt;/li&gt;
&lt;li&gt;通过调用 wx.request () 方法可以发起网络请求。（ ）&lt;/li&gt;
&lt;li&gt;通过调用 wx.showLoading () 方法可以弹出加载提示框。（ ）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、 选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，关于列表渲染说法正确的是（ ）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A.   wx:for-index可以用于重新定义当前项的变量名

B.   在列表渲染中，可以使用item变量获取当前项的值

C.   wx:for可以用于实现页面中的列表渲染

D.   wx:for-item可以用于设置当前索引变量的属性名
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，用于监听页面初次渲染成功的回调函数是（ ）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. onHide   B. onLoad     C. onShow     D. onReady
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，可以在 wx:for 中指定当前项索引的变量名的一项是（ ）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. wx:for-i  B.  wx:for-j    C.  wx:for-item    D.  wx:for-index
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，wx.showToast () 函数的参数属性中包含的回调函数有（ ）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A.  title、icon和mask

B.  success、fail和title

C.  duration、mask和success

D.  success、fail和complete
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下列选项中，将页面的 JS 文件中定义的数据绑定到页面上的语法是（ ）。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A. &amp;#123;&amp;#123; &amp;#125;&amp;#125;    B. [ ]     C. &amp;#123; &amp;#125;    D. [[ ]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四、 简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述页面生命周期函数包括哪些。&lt;/li&gt;
&lt;li&gt;简述 wx:if 控制属性和 hidden 属性的区别。&lt;/li&gt;
&lt;li&gt;简述微信小程序如何实现下拉刷新。&lt;/li&gt;
&lt;li&gt;简述微信小程序如何实现上拉触底。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第四章-微信小程序常用api上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-微信小程序常用api上&#34;&gt;#&lt;/a&gt; 第四章 微信小程序常用 API（上）&lt;/h1&gt;
&lt;h2 id=&#34;1掌握scroll-view组件能够运用scroll-view组件完成视图区域的横向与纵向滚动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1掌握scroll-view组件能够运用scroll-view组件完成视图区域的横向与纵向滚动&#34;&gt;#&lt;/a&gt; 1. 掌握 scroll-view 组件，能够运用 scroll-view 组件完成视图区域的横向与纵向滚动&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;scroll-view 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：当一个容器中的内容有很多时，如果容器无法完整显示内容，则可以通过滚动操作来查看完整内容。&lt;/p&gt;
&lt;p&gt;在微信小程序中，可以通过 scroll-view 组件来实现滚动效果，它支持横向滚动和纵向滚动，默认是不滚动的，需要通过 scroll-x 和 scroll-y 属性允许横向和纵向滚动。&lt;/p&gt;
&lt;p&gt;scroll-view 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;scroll-x&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;允许横向滚动，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-y&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;允许纵向滚动，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-top&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;设置竖向滚动条的位置，默认值为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-left&lt;/td&gt;
&lt;td&gt;number/string&lt;/td&gt;
&lt;td&gt;设置横向滚动条的位置，默认值为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-into-view&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;当前可在哪个方向滚动，则在哪个方向滚动到该元素。值为某子元素 id (id 不能以数字开头)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scroll-with-animation&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;在设置滚动条位置时是否使用动画过渡，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscrolltoupper&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动到顶部 / 左边时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscrolltolower&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动到底部 / 右边时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindscroll&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;滚动时触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在允许横向滚动、纵向滚动后，还需要使 scroll-view 组件中内容的宽度和高度大于 scroll-view 组件本身的宽度和高度，这样才能滚动。&lt;/p&gt;
&lt;p&gt;在实际开发中，由于 scroll-view 组件的默认宽度为 100%，会占满整个屏幕，所以当内容的宽度超出屏幕宽度显示范围时，即可横向滚动。若要实现纵向滚动，则需要在样式中为 scroll-view 组件设置一个固定高度，否则 scroll-view 组件会被内容撑大，导致无法纵向滚动。&lt;/p&gt;
&lt;p&gt;scroll-view 组件的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scroll-view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scroll-x&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scroll-y&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindscroll&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;scroll&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 200%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;linear-gradient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to bottom right&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; yellow&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;scroll-view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- scroll-view 组件设置了允许横向滚动和纵向滚动。--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中添加 scroll () 事件处理函数输出 e.detail 的值。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;scroll&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过 e.detail 获取滚动时的位置信息。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;拖曳滚动条使 scroll () 函数执行，然后在控制台中查看输出结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:/Users/86198/AppData/Roaming/Typora/typora-user-images/image-20240608190115198.png&#34; alt=&#34;image-20240608190115198&#34; /&gt;&lt;/p&gt;
&lt;p&gt;e.detail 为自定义事件所携带的数据，下面对上图中获取到的信息进行讲解，具体如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scrollLeft：横向滚动条左侧到视图左边的距离。&lt;/li&gt;
&lt;li&gt;scrollTop：纵向滚动条上端到视图顶部的距离。&lt;/li&gt;
&lt;li&gt;scrollHeight：纵向滚动条在 Y 轴上最大滚动距离。&lt;/li&gt;
&lt;li&gt;scrollWidth：横向滚动条在 X 轴上最大的滚动距离。&lt;/li&gt;
&lt;li&gt;deltaX：横向滚动条的滚动状态。&lt;/li&gt;
&lt;li&gt;deltaY：纵向滚动条的滚动状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2掌握slider组件能够运用slider组件完成滑动选择器的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2掌握slider组件能够运用slider组件完成滑动选择器的制作&#34;&gt;#&lt;/a&gt; 2. 掌握 slider 组件，能够运用 slider 组件完成滑动选择器的制作&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;slider 组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在微信小程序中，通过 slider 组件可以定义一个滑动选择器。&lt;/p&gt;
&lt;p&gt;slider 组件是微信小程序表单组件中的一种，用于滑动选择某一个值。用户可以通过拖曳滑块在一个固定区间内进行选择。&lt;/p&gt;
&lt;p&gt;slider 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;min&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;最小值，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;最大值，默认值为 100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;步长，取值大于 0, 可被 max-min 整除，默认值为 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;当前取值，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;activeColor&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;已选择的颜色，默认值为 #1aad19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;背景条的颜色，默认值为 #e9e9e9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;block-size&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;滑块的大小，取值范围为 12∼2812∼28 , 默认值为 28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;block-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;滑块的颜色，默认值为 #ffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-value&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示当前值，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindchange&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;完成一次拖曳后触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindchanging&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;拖曳过程中触发的事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;slider 组件的使用&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;slider&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchanging&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sliderChanging&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;show-value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 当拖曳 slider 组件的滑块时，会执行 sliderChanging () 事件处理函数 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过设置 show-value 属性可将当前值显示出来 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中编写事件处理函数 sliderChanging ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;sliderChanging&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//e.detail.value 表示当前 slider 组件的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;保存代码后，会看到页面中显示了一个滑动选择器。拖曳滑块到 13 的页面效果&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:/Users/86198/AppData/Roaming/Typora/typora-user-images/image-20240608190317944.png&#34; alt=&#34;image-20240608190317944&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;3掌握背景音频api了解背景音频api的常用属性和方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3掌握背景音频api了解背景音频api的常用属性和方法&#34;&gt;#&lt;/a&gt; 3. 掌握背景音频 API, 了解背景音频 API 的常用属性和方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;音频 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在微信小程序中，使用背景音频 API 可以实现音频的后台播放。&lt;/p&gt;
&lt;p&gt;在使用背景音频 API 前，需要在 app.json 文件中配置 requiredBackgroundModes 属性，开启微信小程序后台音频播放功能，示例代码如下。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;requiredBackgroundModes&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;audio&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;//requiredBackgroundModes 属性值为数组类型，在数组中添加 audio 项表示开启后台音频播放功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;背景音频 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.getBackgroundAudioManager () 方法获取到一个 BackgroundAudioManager 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioGbam =  wx.getBackgroundAudioManager()  &lt;span class=&#34;token comment&#34;&gt;//BackgroundAudioManager 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 BackgroundAudioManager 实例的相关属性和方法实现背景音频的播放。&lt;/p&gt;
&lt;p&gt;BackgroundAudioManager 实例常用的属性和方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;** 类型                                                            **&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频的数据源，默认值为空字符串，当设置了新的 src 时，会自动开始播放，目前支持的格式有 M4A、AAC、MP3、WAV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;startTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频开始播放的位置（单位：秒）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;title&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频标题，用于原生音频播放器的背景音频标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;playbackRate&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;播放速率，范围 0.5∼2.00.5∼2.0 倍，默认值为 1 倍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;duration&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前背景音频的长度（单位：秒），只有在有合法 src 时有效（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;currentTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前背景音频的播放位置（单位：秒），只有在有合法 src 时有效（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;paused&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;当前是否暂停或停止（只读）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;play()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;播放背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;pause()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;暂停背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;seek()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;跳转到指定位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;stop()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;停止背景音频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onCanplay()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;背景音频进入可以播放状态的事件（参数为回调函数）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onWaiting()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频加载中事件，当背景音频因为数据不足需要停下来加载时会触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onError()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放错误事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onPlay()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onPause()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频暂停事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onSeeking()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频开始跳转操作事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onSeeked()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频完成跳转操作事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onEnded()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频自然播放结束事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onStop()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频停止事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;onTimeUpdate()&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;监听背景音频播放进度更新事件，只有微信小程序在前台时会回调&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;背景音频 API 的使用案例：&lt;/p&gt;
&lt;p&gt;在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onReady&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 创建 BackgroundAudioManager 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBackgroundAudioManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 当开始播放音乐时，输出调试信息     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onPlay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;开始播放&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置背景音频的标题     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;音乐标题&#39;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置背景音频的资源地址     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;src &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://127.0.0.1:3000/1.mp3&#39;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4掌握录音api了解录音api的常用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4掌握录音api了解录音api的常用方法&#34;&gt;#&lt;/a&gt; 4. 掌握录音 API, 了解录音 API 的常用方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;录音 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：录音功能在日常生活中使用很广泛，使用该功能可以记录重要的工作内容、优美的歌声等。那么在微信小程序中如何实现录音功能呢？微信小程序为开发者提供了录音 API。&lt;/p&gt;
&lt;p&gt;录音 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.getRecorderManager () 方法获取到一个 RecorderManager 实例，该实例是一个全局唯一的录音管理器，用于实现录音功能；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var recorderManager =  wx.getRecorderManager()  &lt;span class=&#34;token comment&#34;&gt;//RecorderManager 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 RecorderManager 实例的方法实现录音功能。&lt;/p&gt;
&lt;p&gt;RecorderManager 实例的常用方法如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方法名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start()&lt;/td&gt;
&lt;td&gt;开始录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pause()&lt;/td&gt;
&lt;td&gt;暂停录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resume()&lt;/td&gt;
&lt;td&gt;继续录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stop()&lt;/td&gt;
&lt;td&gt;停止录音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onStart()&lt;/td&gt;
&lt;td&gt;监听录音开始事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onResume()&lt;/td&gt;
&lt;td&gt;监听录音继续事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onPause()&lt;/td&gt;
&lt;td&gt;监听录音暂停事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onStop()&lt;/td&gt;
&lt;td&gt;监听录音结束事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onFrameRecord&lt;/td&gt;
&lt;td&gt;监听已录制完指定帧大小的文件事件。如果设置了 frameSize, 则会回调此事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onError()&lt;/td&gt;
&lt;td&gt;监听录音错误事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onInterruptionBegin&lt;/td&gt;
&lt;td&gt;监听录音因为系统占用而被中断开始事件。以下场景会触发此事件：微信语音聊天、微信视频聊天，此事件触发后，录音会被暂停。pause 事件在此事件后触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onInterruptionEnd&lt;/td&gt;
&lt;td&gt;监听录音中断结束事件。在收到 interruptionBegin 事件后，微信小程序内所有录音会暂停，收到此事件之后才可再次录音成功&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;录音 API 的使用案例：&lt;/p&gt;
&lt;p&gt;在 pages/index/index.js 文件中的 onReady () 函数中编写如下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取全局唯一的录音管理器 RecorderManager  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; recorderManager &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRecorderManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听录音开始事件  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;录音开始&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监听录音停止事件  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onStop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;录音停止&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFilePath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 开始录音  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 5 秒后自动停止录音  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    recorderManager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;5掌握音频api了解音频api的常用属性和方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5掌握音频api了解音频api的常用属性和方法&#34;&gt;#&lt;/a&gt; 5. 掌握音频 API, 了解音频 API 的常用属性和方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;音频 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在微信小程序中，除了背景音频 API 可以实现播放音频的功能外，还可以通过音频 API 来播放音乐。&lt;/p&gt;
&lt;p&gt;背景音频 API 与音频 API 的区别在于背景音频 API 支持后台播放，而音频 API 不支持后台播放。&lt;/p&gt;
&lt;p&gt;音频 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createInnerAudioContext () 方法获取到一个 InnerAudioContext 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioCtx =  wx.createInnerAudioContext()  &lt;span class=&#34;token comment&#34;&gt;//InnerAudioContext 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：通过 InnerAudioContext 实例的属性和方法实现音频播放功能。&lt;/p&gt;
&lt;p&gt;InnerAudioContext 实例常用的属性和方法与 BackgroundAudioManager 实例常用的属性和方法相同，但是 InnerAudioContext 实例没有 title 属性。InnerAudioContext 实例特有的属性和方法如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;默认值&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;是否自动开始播放，默认值为 false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;loop&lt;/td&gt;
&lt;td&gt;是否循环播放，默认值为 false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;volume&lt;/td&gt;
&lt;td&gt;音量，范围 0∼10∼1 , 默认值为 1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;destroy()&lt;/td&gt;
&lt;td&gt;销毁当前实例&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;音频 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 InnerAudioContext 实例  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var audioCtx =  wx.createInnerAudioContext()  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置音频资源地址  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audioCtx.src =  &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/1.mp3&#39;  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 当开始播放音频时，输出调试信息  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audioCtx.onPlay(() =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console.log(&#39;开始播放&#39;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)  &lt;span class=&#34;token comment&#34;&gt;// 开始播放  audioCtx.play ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;6掌握文件上传api能够运用wxuploadfile方法实现将本地资源上传到服务器中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6掌握文件上传api能够运用wxuploadfile方法实现将本地资源上传到服务器中&#34;&gt;#&lt;/a&gt; 6. 掌握文件上传 API, 能够运用 wx.uploadFile () 方法实现将本地资源上传到服务器中&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;上传 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在生活中，经常需要进行文件上传操作，例如更改头像需要将新的头像上传到服务器中。微信小程序提供了文件上传 API，使用文件上传 API 可以在微信小程序中发起一个 POST 请求，将本地资源上传到服务器。通过调用 wx.uploadFile () 方法即可使用文件上传 API。&lt;/p&gt;
&lt;p&gt;wx.uploadFile () 方法的常用选项：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器地址，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP 请求的 Header, Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;文件对应的 key, 开发者在服务器端可以通过这个 key 获取文件的二进制内容，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filePath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;要上传的文件资源的路径（本地路径），该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（接口调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;文件上传 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.uploadFile(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      filePath&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;文件路径&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;image&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/upload&#39;,   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          console.log(res)   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;7掌握文件下载api能够运行wxdownloadfile方法实现资源文件的下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7掌握文件下载api能够运行wxdownloadfile方法实现资源文件的下载&#34;&gt;#&lt;/a&gt; 7. 掌握文件下载 API, 能够运行 wx.downloadFile () 方法实现资源文件的下载&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;下载 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：在生活中，经常需要下载一些文件，例如将网络中某个参考资料下载到本地进行查看。&lt;/p&gt;
&lt;p&gt;微信小程序提供了文件下载 API，使用文件下载 API 可以实现文件下载功能。通过调用 wx.downloadFile () 方法即可使用文件下载 API。&lt;/p&gt;
&lt;p&gt;wx.downloadFile () 方法的常用选项如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;下载资源 url, 该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP 请求的 Header,Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filePath&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定文件下载后存储的路径（本地路径）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（接口调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;文件下载 API 的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.downloadFile(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/tree.jpg&#39;,   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 判断服务器响应的状态码    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        if (res.statusCode === &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            console.log(res.tempFilePath)    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;8掌握canvas组件了解画布api以及如何使用画布api进行绘图的基本步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8掌握canvas组件了解画布api以及如何使用画布api进行绘图的基本步骤&#34;&gt;#&lt;/a&gt; 8. 掌握 canvas 组件，了解画布 API 以及如何使用画布 API 进行绘图的基本步骤&lt;/h2&gt;
&lt;p&gt;canvas 组件&lt;/p&gt;
&lt;p&gt;概念：在 HTML 中，&lt;canvas&gt;标签可用于图形的绘制，也可用于创建图片特效和动画。在微信小程序中，canvas 组件也起着类似作用，可用于自定义绘制图形，该组件支持 2D 和 WebGL 的绘图。&lt;/p&gt;
&lt;p&gt;canvas 组件的常用属性如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定 canvas 组件的类型，支持 2D 和 WebGL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;canvas-id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;canvas 组件的唯一标识符，若指定了 type 属性则无须再指定该属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable-scroll&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动及下拉刷新，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchstart&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchmove&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸后移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchend&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindtouchcancel&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指触摸动作被打断，例如来电提醒，弹窗等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindlongtap&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;手指长按 500 毫秒之后触发，触发了长按事件后进行移动不会触发屏幕的滚动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binderror Grill&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当发生错误时触发 error 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;canvas 组件的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;canvas&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;myCanvas&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2d&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;canvas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas 2D 接口。 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxss 文件中编写 canvas 组件的页面样式。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#myCanvas&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 300px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 150px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; relative&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为了方便查看默认 canvas 组件的大小，设置了 1px 的红色实心边框，页面效果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191216979.png&#34; alt=&#34;image-20240608191216979&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;画布 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：通过 canvas 组件创建画布后，要想在画布中绘制图案，需要通过画布 API 来完成。&lt;/p&gt;
&lt;p&gt;画布 API 的使用方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步：获取 Canvas 实例；&lt;/li&gt;
&lt;li&gt;第二步：通过 Canvas 实例获取 RenderingContext（渲染上下文）实例；&lt;/li&gt;
&lt;li&gt;第三步：通过 RenderingContext 实例的属性和方法完成绘图操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;获取 Canvas 实例的示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.createSelectorQuery()  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.select(&#39;#myCanvas&#39;)             &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 页面中 &amp; lt;canvas &gt; 标签的 id  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.fields(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; node&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.exec(res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取 Canvas 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    const canvas = res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;.node     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 调用 getContext () 方法获取 RenderingContext 实例     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    const ctx = canvas.getContext(&#39;2d&#39;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;RenderingContext 实例的常用属性和方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;width&lt;/td&gt;
&lt;td&gt;画布宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;画布高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;fillStyle&lt;/td&gt;
&lt;td&gt;设置或返回用于填充绘画的颜色、渐变或模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;strokeStyle&lt;/td&gt;
&lt;td&gt;设置描边颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;lineWidth&lt;/td&gt;
&lt;td&gt;设置或返回当前的线条宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;font&lt;/td&gt;
&lt;td&gt;设置或返回文本内容的当前字体属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;textBaseline&lt;/td&gt;
&lt;td&gt;设置或返回在绘制文本时使用的当前文本基线&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;方法表&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;rect()&lt;/td&gt;
&lt;td&gt;创建矩形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;fillRect()&lt;/td&gt;
&lt;td&gt;绘制 “被填充” 的矩形&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;strokeRect()&lt;/td&gt;
&lt;td&gt;绘制矩形（无填充）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;clearRect()&lt;/td&gt;
&lt;td&gt;在给定的矩形内清除指定的像素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;stroke()&lt;/td&gt;
&lt;td&gt;绘制已定义的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;beginPath()&lt;/td&gt;
&lt;td&gt;开始创建一个路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;closePath()&lt;/td&gt;
&lt;td&gt;创建从当前点回到起始点的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;moveTo()&lt;/td&gt;
&lt;td&gt;把路径移动到画布中的指定点，不创建线条&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;arc()&lt;/td&gt;
&lt;td&gt;创建一条弧线&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;rotate()&lt;/td&gt;
&lt;td&gt;以原点为中心顺时针旋转当前坐标轴。多次调用旋转的角度会叠加。原点可以用 translate () 方法修改，旋转角度为正数，顺时针旋转，否则逆时针旋转&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;translate()&lt;/td&gt;
&lt;td&gt;对当前坐标系的原点 (0,0) 进行变换。默认的坐标系原点为页面左上角&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;fillText()&lt;/td&gt;
&lt;td&gt;在画布上绘制被填充的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;restore()&lt;/td&gt;
&lt;td&gt;恢复之前保存的绘图上下文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;td&gt;save()&lt;/td&gt;
&lt;td&gt;保存绘图上下文&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Canvas 绘制的基本步骤&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;canvas&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;draw&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2d&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;canvas&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 定义了 canvas 组件，用于创建画布。其中，type 属性值为 2d，表示使用 Canvas  2D 接口。--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.js 文件中编写代码获取 Canvas 实例。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onReady&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createSelectorQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#draw&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fields&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; canvas &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;node    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; ctx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; canvas&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2d&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;drawRect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawRect&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 绘制矩形，在后面的步骤中实现  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 绘制笑脸，在后面的步骤中实现  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③编写绘制矩形函数 drawRect ()。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drawRect&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  function (ctx) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx.fillStyle = &#39;rgba(&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;)&#39;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ctx.fillRect(&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;矩形的绘制效果如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191626985.png&#34; alt=&#34;image-20240608191626985&#34; /&gt;&lt;/p&gt;
&lt;p&gt;④接下来绘制笑脸，先把调用绘制矩形的方法注释起来。&lt;/p&gt;
&lt;p&gt;//  this.drawRect(ctx)&lt;/p&gt;
&lt;p&gt;⑤编写绘制笑脸函数 drawSmile ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 设置线条颜色为红色，线条宽度为 2px     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strokeStyle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#f00&#39;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lineWidth &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制外部大圆    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;160&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制外部嘴巴线条     &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;140&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;             &lt;span class=&#34;token function-variable function&#34;&gt;drawSmile&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  原有代码……&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制左眼圆圈&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;85&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// 移动画笔坐标位置，绘制右眼圆圈&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;moveTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;125&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;arc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stroke&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;笑脸的绘制效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608191856755.png&#34; alt=&#34;image-20240608191856755&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;9习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9习题&#34;&gt;#&lt;/a&gt; 9. 习题&lt;/h2&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上传文件的 API 是___。&lt;/li&gt;
&lt;li&gt;下载文件的 API 是___。&lt;/li&gt;
&lt;li&gt;scroll-view 组件可以实现___效果。&lt;/li&gt;
&lt;li&gt;在 scroll-view 组件中，用 ___属性用于设置横向滚动条的位置。&lt;/li&gt;
&lt;li&gt;在 slider 组件的属性中，___属性用于设置进度条的最大值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 canvas 组件中，canvas-id 属性是其唯一标识符。（ ）&lt;/li&gt;
&lt;li&gt;在&lt;slider&gt;组件上添加 bindchanging=&amp;quot;sliderChanging&amp;quot; 后，当滑块被拖曳时就会执行 sliderChanging () 事件处理函数。（ ）&lt;/li&gt;
&lt;li&gt;canvas 组件将 type 属性值设置为 2D 表示使用 Canvas 2D 接口。（ ）&lt;/li&gt;
&lt;li&gt;文件上传 API 使用的方法是 wx.uploadFile ()。（ ）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、 选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下列选项中，用于滑动选择某一个值的组件是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A. view     B. slider    C. input      D. audio
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;下列 BackgroundAudioManager 实例的方法中，可以将音乐跳转到指定位置的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A. stop()     B. seek()    C. pause()     D. play()
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;下列关于 canvas 组件的说法中，错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A. CSS动画对canvas组件无效

B. canvas-id是canvas组件的唯一标识符

C. canvas组件用于自定义绘制图形

D. 在同一个页面中，canvas-id是唯一的
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;下列选项中，关于 wx.getRecorderManager () 方法说法错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A. start()方法表示开始录音

B. pause()方法表示暂停录音
    
C. resume()方法表示继续录音

D. onError()方法表示停止录音，点击开始录音后会从中断的地方接着继续录音
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;四、 简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述 BackgroundAudioManager 实例的属性和方法。&lt;/li&gt;
&lt;li&gt;简述使用画布 API 进行绘图的基本步骤。&lt;/li&gt;
&lt;li&gt;简述如何实现文件上传和文件下载。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第五章-微信小程序常用api下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五章-微信小程序常用api下&#34;&gt;#&lt;/a&gt; 第五章 微信小程序常用 API（下）&lt;/h1&gt;
&lt;h2 id=&#34;1掌握动画api了解如何获取animation实例导出动画队列所用的方法能够完成动画的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1掌握动画api了解如何获取animation实例导出动画队列所用的方法能够完成动画的制作&#34;&gt;#&lt;/a&gt; 1. 掌握动画 API，了解如何获取 Animation 实例，导出动画队列所用的方法，能够完成动画的制作&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;动画 API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：动画 API 用于在微信小程序中完成动画效果的制作。在微信小程序中添加动画效果，可以让页面中的内容动起来。动画效果对浏览者的视觉冲击力远远高于静态画面，更能吸引浏览者。&lt;/p&gt;
&lt;p&gt;动画 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createAnimation () 方法获取 Animation 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var animation = wx.createAnimation(Object  object)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;// Animation 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;wx.createAnimation () 方法的常用选项：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;动画持续时间，单位毫秒，默认值为 400 毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timingFunction&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;动画的效果，默认值为 linear&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delay&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;动画延迟时间，单位毫秒，默认值为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;transformOrigin&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;设置旋转元素的基本位置，默认值为 50% 50% 0, 这 3 个数字分别表示 x 轴、y 轴和 z 轴的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.createAnimation () 方法的 timingFunction 选项有多个合法值，具体如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;合法值&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;linear&lt;/td&gt;
&lt;td&gt;动画从头到尾的速度是相同的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease&lt;/td&gt;
&lt;td&gt;动画以低速开始，然后加快，在结束前变慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in&lt;/td&gt;
&lt;td&gt;动画以低速开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in-out&lt;/td&gt;
&lt;td&gt;动画以低速开始和结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-out&lt;/td&gt;
&lt;td&gt;动画以低速结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step-start&lt;/td&gt;
&lt;td&gt;动画第一帧就跳至结束状态直到结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step-end&lt;/td&gt;
&lt;td&gt;动画一直保持开始状态，最后一帧跳到结束状态&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Animation 实例的常用方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;rotate(number angle)&lt;/td&gt;
&lt;td&gt;旋转。从原点顺时针旋转一个角度，角度取值范围为 [-180,180]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;export()&lt;/td&gt;
&lt;td&gt;导出动画队列。export () 方法每次调用后会清掉之前的动画操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scale(number s x, number sy)&lt;/td&gt;
&lt;td&gt;缩放。当仅有 sx 参数时，表示在 x 轴、y 轴同时缩放 sx 倍数；如果 sx 和 sx 参数都存在，sx 表示 x 轴缩放倍数，sx 表示 y 轴缩放倍数平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translate(number tx, number ty)&lt;/td&gt;
&lt;td&gt;平移变换。当只有 tx 参数时，表示 x 轴偏移 tx, 单位为 px; 如果 tx 和 ty 参数都存在，表示在 x 轴偏移 tx, 单位为 px, 在 y 轴偏移 ty, 单位为 px&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;skew(number ax, number ay)&lt;/td&gt;
&lt;td&gt;倾斜。相对 x 轴、y 轴倾斜的角度，角度取值范围为 [-180,180]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step(Object object)&lt;/td&gt;
&lt;td&gt;表示一组动画完成。当调用任意多个动画方法组成一组动画时，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opacity(number value)&lt;/td&gt;
&lt;td&gt;设置透明度，范围为 0∼10∼1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor(string value)&lt;/td&gt;
&lt;td&gt;设置背景色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;width(numberstring value)&lt;/td&gt;
&lt;td&gt;设置宽度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top(numberlstring value)&lt;/td&gt;
&lt;td&gt;设置 top 值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;动画 API 的使用方法如下：&lt;/p&gt;
&lt;p&gt;第一步：通过 wx.createAnimation () 方法获取 Animation 实例；&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var  animation = wx.createAnimation(Object object)  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token comment&#34;&gt;//  Animation 实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：调用 Animation 实例的方法实现动画效果。&lt;/p&gt;
&lt;p&gt;动画 API 的使用案例：&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.js 文件的 Page ({}) 中定义页面初始数据 move。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//move 对象用于保存动画队列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxml 文件编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hello world&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;translate&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;动画&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 绑定事件处理函数为 translate () --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/index/index.js 文件的 Page ({}) 中定义 translate () 函数实现动画效果。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; animation &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createAnimation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;timingFunction&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ease&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  animation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; animation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④完成上述代码后，运行程序，单击 “动画” 按钮后，“hello world” 向右下角平移，单击按钮前后的对比效果图如下。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192447959.png&#34; alt=&#34;image-20240608192447959&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-熟悉登录流程时序教材152页图5-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-熟悉登录流程时序教材152页图5-7&#34;&gt;#&lt;/a&gt; 2. 熟悉登录流程时序，教材 152 页图 5-7&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;登录流程时序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概念：登录流程时序由微信小程序官方文档提供，通过对登录流程时序的学习，可以完成登录功能的开发。微信官方提供的登录功能可以方便地获取微信提供的用户身份标识，从而使开发者服务器能够识别每个微信小程序用户。&lt;/p&gt;
&lt;p&gt;微信小程序官方文档提供的登录流程时序图如下所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608192525712.png&#34; alt=&#34;image-20240608192525712&#34; /&gt;&lt;/p&gt;
&lt;p&gt;用户登录流程的参与角色：&lt;/p&gt;
&lt;p&gt;小程序：用户使用的客户端，即微信小程序。&lt;/p&gt;
&lt;p&gt;开发者服务器：微信小程序的后端服务器，用于为微信小程序用户提供服务。&lt;/p&gt;
&lt;p&gt;微信接口服务：微信为开发者服务器提供的接口。&lt;/p&gt;
&lt;p&gt;登录流程：&lt;/p&gt;
&lt;p&gt;①获取 code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;②将 code 发送给开发者服务器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在获取 code 后，使用 wx.request () 方法将 code 发送给开发者服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;③校验登录凭证&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发者服务器将 appid、appsecret 和 code 发送给微信接口服务进行登录凭证校验，如果校验成功，微信接口服务会返回 session_key、openid、unionid 等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;④开发者服务器自定义登录态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在开发者服务器中为登录成功的用户生成一个 token，然后通过验证 token 的有效性来识别用户的登录状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3掌握登录api能够运用wxlogin方法实现用户登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3掌握登录api能够运用wxlogin方法实现用户登录&#34;&gt;#&lt;/a&gt; 3. 掌握登录 API, 能够运用 wx.login 方法实现用户登录&lt;/h2&gt;
&lt;p&gt;作用：登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。&lt;/p&gt;
&lt;p&gt;wx.login () 方法的常用选项&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;用户登录凭证（有效期 5 分钟）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：code 即为调用 wx.login () 方法获取的用户登录凭证。&lt;/p&gt;
&lt;p&gt;wx.login () 方法的具体用法&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx.login(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    if (res.code) &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;//res.code 为登录获取的 code   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      wx.request(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 登录成功之后发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:3000/login&#39;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        method&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;post&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; code&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res.code	&lt;span class=&#34;token comment&#34;&gt;// 设置参数，把 code 传递给服务器&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; else &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 登录失败，在控制台输出错误信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      console.log(&#39;登录失败！&#39; + res.errMsg)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4掌握头像填写功能能够实现头像选择和昵称填写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4掌握头像填写功能能够实现头像选择和昵称填写&#34;&gt;#&lt;/a&gt; 4. 掌握头像填写功能，能够实现头像选择和昵称填写&lt;/h2&gt;
&lt;p&gt;头像昵称填写：&lt;/p&gt;
&lt;p&gt;概念：头像昵称是在用户登录小程序后，显示在页面中的头像和昵称。目前，微信小程序不允许开发者在未获得用户同意的情况下展示用户的头像和昵称，当需要展示时，应使用微信小程序的头像昵称填写功能。&lt;/p&gt;
&lt;p&gt;头像选择的使用方法&lt;/p&gt;
&lt;p&gt;将 button 组件的 open-type 属性值设置为 chooseAvatar，当用户选择头像之后，可通过 bindchooseavatar 绑定的事件处理函数获取头像信息的临时路径。&lt;/p&gt;
&lt;p&gt;昵称填写的使用方法&lt;/p&gt;
&lt;p&gt;将 input 组件的 type 属性值设置为 nickname，当用户在此 input 进行输入时，键盘上方会展示用户的微信昵称，用户可以使用该昵称，也可以手动填写昵称。&lt;/p&gt;
&lt;p&gt;演示头像昵称填写功能的使用&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.js 文件中编写页面所需的数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; defaultAvatar &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/images/avatar.png&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;avatarUrl&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; defaultAvatar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//defaultAvatar 默认头像途径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar-wrapper&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;open-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;chooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindchooseavatar&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;onChooseAvatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;avatar&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;nickname&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;nickname&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;placeholder&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;请输入昵称&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/index/index.wxss 文件中编写样式。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.avatar-wrapper&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.avatar&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 160rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.nickname&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 80%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100rpx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid #000000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④在 pages/index/index.js 文件中编写 onChooseAvatar () 函数，获取头像信息的临时路径。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onChooseAvatar&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; avatarUrl &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; avatarUrl &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;5什么是websocket以及如何创建websocket连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5什么是websocket以及如何创建websocket连接&#34;&gt;#&lt;/a&gt; 5. 什么是 WebSocket 以及如何创建 WebSocket 连接&lt;/h2&gt;
&lt;p&gt;WebSocket API：允许服务器主动向微信小程序发送消息。&lt;/p&gt;
&lt;p&gt;WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议，它会在客户端与服务器之间专门建立一条通道，使客户端与服务器之间的数据交换变得简单。客户端与服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。&lt;/p&gt;
&lt;p&gt;通过 wx.connectSocket () 方法可以创建一个 WebSocket 连接，该方法的常用选项如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器 WSS 接口地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;HTTP Header, Header 中不能设置 Referer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;超时时间，单位为毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.connectSocket () 方法的使用&lt;/p&gt;
&lt;p&gt;调用 wx.connectSocket () 方法创建 WebSocket 连接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wx.connectSocket(&amp;#123;
  // 服务器地址
  url: &#39;ws://127.0.0.1:3000&#39;      	
&amp;#125;)   
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;6本地缓存异步同步的区别主要api及其作用教材154页表5-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6本地缓存异步同步的区别主要api及其作用教材154页表5-6&#34;&gt;#&lt;/a&gt; 6. 本地缓存异步，同步的区别，主要 API 及其作用，教材 154 页表 5-6&lt;/h2&gt;
&lt;p&gt;数据缓存 API：&lt;/p&gt;
&lt;p&gt;作用：数据缓存 API 可以实现数据的缓存，从而加快读取数据的速度。在微信小程序中，需要保存一些临时数据时，例如，保存用户登录后获取到的 token，或保存一些经常需要从服务器中下载的数据，提高微信小程序下次打开时的加载速度。&lt;/p&gt;
&lt;p&gt;常见的数据缓存方法如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;方式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;异步&lt;/td&gt;
&lt;td&gt;wx.setStorage()&lt;/td&gt;
&lt;td&gt;将数据存储在本地缓存指定的 key 中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorage()&lt;/td&gt;
&lt;td&gt;从本地缓存中异步获取指定 key 的内容&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageInfo()&lt;/td&gt;
&lt;td&gt;异步获取当前 storage 的相关信息&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.removeStorage(0)&lt;/td&gt;
&lt;td&gt;从本地缓存中移除指定 key 的方法&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;同步&lt;/td&gt;
&lt;td&gt;wx.setStorageSync()&lt;/td&gt;
&lt;td&gt;wx.setStorage () 方法的同步版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageSync()&lt;/td&gt;
&lt;td&gt;wx.getStorage () 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.getStorageInfoSync()&lt;/td&gt;
&lt;td&gt;wx.getStorageInfo () 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wx.removeStorageSync()&lt;/td&gt;
&lt;td&gt;wx.removeStorage (0) 方法的同步版本&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;存储的最大数据长度：单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。&lt;/p&gt;
&lt;p&gt;wx.setStorage () 方法的常用选项如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;本地缓存中指定的 key, 该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;需要存储的内容，只支持原生类型，Date 及能够通过 JSON.stringify () 序列化的对象，该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;异步与同步的区别：&lt;/p&gt;
&lt;p&gt;异步方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不会阻塞当前任务&lt;/li&gt;
&lt;li&gt;异步方法需要通过传入回调函数获取结果&lt;/li&gt;
&lt;li&gt;在发生错误时，异步方法会执行 fail () 回调函数返回错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同步方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步方法名以 Sync 结尾&lt;/li&gt;
&lt;li&gt;同步方法直到处理完之后才能继续向下执行&lt;/li&gt;
&lt;li&gt;同步方法通过返回值获取结果&lt;/li&gt;
&lt;li&gt;在发生错误时，同步方法通过 try...catch 捕获异常来获取错误信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用异步方法存储、获取缓存数据示例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setStorage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 存储缓存数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 本地缓存中指定的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 需要存储的内容（支持对象或字符串）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;// 接口调用成功的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用失败的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getStorage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 获取缓存数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 本地缓存中指定的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用成功的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 接口调用失败的回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;7登录凭证code所使用的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7登录凭证code所使用的方法&#34;&gt;#&lt;/a&gt; 7. 登录凭证 code 所使用的方法&lt;/h2&gt;
&lt;p&gt;在微信小程序中通过 wx.login () 方法获取临时登录凭证 code。&lt;/p&gt;
&lt;p&gt;登录 API 可以完成登录功能的开发。微信小程序提供了登录 API，其使用方法是，调用 wx.login () 方法获取用户登录凭证 code，获取后，将它发送给开发者服务器。&lt;/p&gt;
&lt;p&gt;success 回调函数执行后，其参数会接收到一个对象，对象中有一个 code 属性，如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;用户登录凭证（有效期 5 分钟）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;code 即为调用 wx.login () 方法获取的用户登录凭证。&lt;/p&gt;
&lt;h2 id=&#34;8能够用wxnavigateto实现非标签页跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8能够用wxnavigateto实现非标签页跳转&#34;&gt;#&lt;/a&gt; 8. 能够用 wx.navigateTo () 实现非标签页跳转&lt;/h2&gt;
&lt;p&gt;路由 API 的作用：用于实现页面跳转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用的路由 API 方法&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;wx.navigateTo()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于跳转到另一个页面，跳转后原来的页面会保留，并在导航栏左侧提供一个返回按钮，用户可以返回到之前的页面。该方法不能用于标签页切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wx.redirectTo()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于关闭当前页面，跳转到一个新页面。该方法不能用于标签页切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wx.switchTab()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于跳转到某个标签页，并关闭其他所有非标签页的页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由 API 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;需要跳转的路径，路径后可以带参数。参数与路径之间使用 “？” 分隔，参数键与参数值用 “=” 相连，不同参数用 “&amp;amp;” 分隔，如 &#39;path?key=value&amp;amp;key2=value2&#39;, 该项为必填项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;路由 API 的使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;①在 pages/index/index.wxml 文件中编写一个按钮，实现点击按钮时触发 navigateTo () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;navigateTo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;路由&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;!--绑定事件处理函数为navigateTo()&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;②在 app.json 文件中创建 pages/list/list 页面，然后在 pages/index/index.js 文件中编写 navigateTo () 函数，实现跳转到 pages/list/list 页面。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Page(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  navigateTo&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; function () &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx.navigateTo(&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &#39;/pages/list/list?id=&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      success&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; () =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console.log(&#39;跳转成功&#39;)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      fail&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; () =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console.log(&#39;跳转失败&#39;)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      complete&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; () =&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;console.log(&#39;跳转完成&#39;)&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;③在 pages/list/list.js 文件中编写 onLoad () 函数，输出 options 参数的值。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;④保存上述代码后，运行程序，单击 “路由” 按钮后，在控制台中输出结果。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608193335249.png&#34; alt=&#34;image-20240608193335249&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过查看控制台中的结果，可以看出从 index 页面成功跳转到 list 页面，并传递了参数 id。&lt;/p&gt;
&lt;h2 id=&#34;9习题-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9习题-2&#34;&gt;#&lt;/a&gt; 9. 习题&lt;/h2&gt;
&lt;p&gt;一、 填空题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从本地缓存中异步获取指定 key 的内容使用____方法。&lt;/li&gt;
&lt;li&gt;微信小程序通过 ____方法获取登录凭证 code。&lt;/li&gt;
&lt;li&gt;微信接口服务返回的信息中， ____   是用户的会话密钥，需要存储在开发者服务器中。&lt;/li&gt;
&lt;li&gt;map 组件中地图视野发生变化时触发  ____  事件。&lt;/li&gt;
&lt;li&gt;在 Animation 实例的常用方法中，  ____  用于导出动画队列。&lt;/li&gt;
&lt;li&gt;微信小程序通过   ____ 方法创建一个 WebSocket 连接。&lt;/li&gt;
&lt;li&gt;微信小程序通过   ____ 方法可以通过 WebSocket 发送数据。&lt;/li&gt;
&lt;li&gt;微信小程序通过  ____  方法监听 WebSocket 接收到服务器的消息事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、 判断题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在微信小程序中，调用 wx.login () 方法可以获取临时登录凭证 code。（ ）&lt;/li&gt;
&lt;li&gt;同一个微信用户在 AppID 不同的微信小程序中的 openid 是不同的。（ ）&lt;/li&gt;
&lt;li&gt;openid 是微信小程序的唯一标识。（ ）&lt;/li&gt;
&lt;li&gt;使用 wx.setStorageSync () 方法可以将数据同步存储在本地缓存指定的 key 中。（ ）&lt;/li&gt;
&lt;li&gt;animation.export () 方法每次调用后仍保留之前的动画操作。（ ）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、 选择题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下列选项中，用于实现非标签页之间的跳转的方法是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A.  wx.navigateTo()

B.   wx.navigate()

C.   wx.navigatorTo()

D.  wx.navigator()
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;下列选项中，关于 map 组件属性说法错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A.  longitude为中心经度

B.   scale为缩放级别，取值范围为1~20

C.   latitude为中心纬度

D.  markers为标记点数组
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;下列选项中，关于 openid 的说法错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A.  openid是用户的唯一标识

B.   openid不等同于微信用户id

C.   同一个微信用户在不同AppID的微信小程序中的openid是不同的

D.  openid是微信小程序的唯一标识
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;下列选项中，关于 marker 对象的属性说法错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A.  title标注点名称

B.   zIndex表示显示层级

C.   alpha表示标注的透明度

D.  userInfo表示用户信息对象
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;下列选项中，关于数据缓存说法错误的是（ ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;A.  wx.getStorage()方法用于从本地缓存中异步获取指定key内容

B.   wx.removeStorageSync()方法用于以异步的方式从本地缓存中移除指定key

C.   wx.setStorage()方法用于将数据异步存储在本地缓存指定的key

D.  在实现数据缓存的方法中，方法名以Sync结尾的都是同步方法
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;四、 简答题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述如何获取 Animation 实例。&lt;/li&gt;
&lt;li&gt;简述微信小程序中应用生命周期回调函数 onLaunch ()、onShow ()、onError ()、onHide () 和 onPageNotFound () 的作用。&lt;/li&gt;
&lt;li&gt;简述如何创建 WebSocket 连接。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <category term="期末复习" scheme="http://rainyblue.cn/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/" />
        <updated>2024-06-08T08:22:51.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/05/Educational/Software/2023-Software-project-review/</id>
        <title>2023年软件项目管理复习提纲</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/05/Educational/Software/2023-Software-project-review/"/>
        <content type="html">&lt;h1 id=&#34;第一章-it项目管理概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-it项目管理概述&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第一章 IT 项目管理概述&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&#34;一-项目的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-项目的概念&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、项目的概念&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-项目的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-项目的定义&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、项目的定义&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目是一个特殊的将被完成的有限任务。它是在一定时间内，满足一系列特定目标的多项相关工作的总称。—— 中国项目管理研究委员会&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为提供一项独特产品、服务或成果所做的临时性努力。—— PMI 项目管理知识体系指南（PMBOK）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-项目的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-项目的特点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、项目的特点&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;明确的目标，其结果只可能是一种期望的产品或服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;独特性，每一个项目都是唯一的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时限性，有确定的开始时间和结束时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;约束性，每个项目的资源、成本和时间都是有限的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目标的渐进性，目标逐步完善，需求逐渐明晰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创新性，方法、技术、管理模式、信息化成果创新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高风险性，需求模糊性、执行可见度低，项目的过程和结果都存在很多不确定因素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智力密集型，高素质人力资源需求。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-项目与运作的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-项目与运作的区别&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3、项目与运作的区别&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目：提供一项独特产品、服务或成果所做的临时性努力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运作：连续不断周而复始的活动&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二-项目管理概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-项目管理概述&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、项目管理概述&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-项目管理的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-项目管理的定义&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、项目管理的定义&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目管理是为了满足甚至超越项目相关方对项目的需求和期望而将知识、技能、工具和技术应用到项目的活动中去。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目管理是以项目为对象的系统管理方法，它通过一个临时性的、专门的柔性组织，对项目进行高效率的计划、组织、指导和控制，以实现对项目全过程的动态管理和对项目目标的综合协调与优化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-项目管理的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-项目管理的特征&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、项目管理的特征&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目管理的对象是项目：针对项目特点形成的一种管理方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统工程思想贯穿项目管理的全过程：将项目看成是一个完整的、有生命周期的系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目管理组织具有一定的特殊性：以项目本身作为一个组织单元；临时性；柔性；协调、控制和沟通&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目管理的方式是目标管理：多层次的目标管理方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于团队的项目经理负责制：项目经理是组织法定代表人在项目上的代表人&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目管理具有创造性：继承积累性 + 综合性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-项目管理的知识体系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-项目管理的知识体系&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3、项目管理的知识体系&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;PMBOK 把项目管理过程组分为 5 类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）启动过程组。&lt;/li&gt;
&lt;li&gt;（2）规划过程组。&lt;/li&gt;
&lt;li&gt;（3）执行过程组。&lt;/li&gt;
&lt;li&gt;（4）监控过程组。&lt;/li&gt;
&lt;li&gt;（5）收尾过程组。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三-软件项目管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-软件项目管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三、软件项目管理&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-软件项目管理的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-软件项目管理的特点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、软件项目管理的特点&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;软件项目是设计型项目：需要创造和创新，需要技术人员&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件过程模型：选用瀑布模型、原型模型、迭代模型、螺旋模型等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需求变化频繁：软件需求的不确定性或变化频繁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作量估算困难：缺乏有效的软件工作量度量方法和手段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以人为本的管理：人性化管理，主要成本是人力成本&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-软件项目管理与软件工程的不同&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-软件项目管理与软件工程的不同&#34;&gt;#&lt;/a&gt; 2、&lt;strong&gt;软件项目管理与软件工程的不同&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在软件项目管理中，项目的启动、规划、执行、控制和收尾等管理过程 (组) 则属于项目管理的范畴。&lt;/p&gt;
&lt;p&gt;软件工程是：将系统化的、严格约束的、可量化的方法应用于软件的开发、运行和维护，即将工程化应用于软件；以及对上述方法的研究。在软件开发项目中，需求分析、概要设计、详细设计测试等工作，都属于软件工程的范畴。&lt;/p&gt;
&lt;h4 id=&#34;3-软件项目管理的成功&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-软件项目管理的成功&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3、软件项目管理的成功&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;项目成功的表现主要包括以下几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在规定的时间内完成项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目成本控制在预算之内。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;产品功能特性达到规格说明书所要求的水平。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目通过客户的验收。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目范围变化最小或是可控的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有干扰或严重影响整个开发组织的主要工作流程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有改变企业文化或改进了企业的文化等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619114241018.png&#34; alt=&#34;image-20240619114241018&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;第二章-组织环境与项目管理过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-组织环境与项目管理过程&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第二章 组织环境与项目管理过程&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&#34;一-it项目管理的环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-it项目管理的环境&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、IT 项目管理的环境&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-项目环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-项目环境&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、项目环境&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;（1）经济环境对 IT 项目的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IT 项目组织的运行机制、工作内容及范围、方法体系、投资与运行等方面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）社会人文、政策法律对 IT 项目的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;知识产权的界定、识别、运用和纠纷&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;社会伦理、文化价值取向；职业道德规范&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;社会信用体系、社会公信力要求、社会福利水平&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）企业文化对 IT 项目的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组织的价值观、行为准则、信仰、期望、组织的政策程序、上下级关系的观点等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-组织结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-组织结构&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、组织结构&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;组织结构是组织中的成员以怎样的形式组织起来，使他们在组织的不同位置上发挥作用。&lt;/p&gt;
&lt;p&gt;职能型组织结构缺点与优点：&lt;/p&gt;
&lt;p&gt;（1）职能型组织结构具有以下优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在人员使用上具有较大的灵活性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术专家可以同时为几个项目服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同一部门的专业人员在一起易于交流知识和经验，这可使项目获得部门内所有的知识和技术支持，对创造性地解决项目的技术问题非常有利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当有成员离开项目组时，职能部门可作为保持项目技术连续性的基础。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;职能部门可以为本部门的专业人员提供一条正常的晋升途径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）职能型组织结构具有以下缺点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这种组织结构使得客户不是活动和关心的焦点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这种结构导致没有一个人承担项目的全部责任（责任淡化）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目常常得不到很好的支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调配给项目的人员其积极性往往不是很高，也不把项目看成是他的主要工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术复杂的项目通常需要多个职能部门的共同合作，但他们往往更注重本领域，而忽略整个项目的目标，并且跨部门的交流沟通也比较困难。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目型组织结构缺点与优点：&lt;/p&gt;
&lt;p&gt;（1）项目型组织结构具有以下优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目经理有充分的权力调动项目内外资源，对项目全权负责。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;权力的集中使决策的速度可以加快，整个项目的目标单一，项目组能够对客户的需要做出更快的响应。在进度、成本、质量等方面的控制也较为灵活。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这种结构有利于使命令协调一致，每个成员只有一个领导，排除了多重领导的可能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目组内部的沟通更加顺畅、快捷。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）项目型组织结构具有以下缺点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由于项目组对资源具有独占的权力，在项目与项目之间的资源共享方面会存在一些问题，可能在成本方面效率低下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目经理与项目成员之间有着很强的依赖关系，而与项目外的其他部门之间的沟通比较困难。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在相对封闭的项目环境中，容易造成对公司的规章制度执行的不一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目成员缺乏归属感，不利于职业生涯的发展。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;矩阵型组织结构缺点与优点：&lt;/p&gt;
&lt;p&gt;（1）矩阵型组织结构具有以下优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目是工作的重点，项目经理负责管理整个项目，矩阵型组织具有项目型组织的长处。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以有效地利用资源，项目可以分享各个部门的技术、人才和设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这种结构更加注重客户的需求和促进项目成员之间的学习和知识交流。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）矩阵型组织结构具有以下缺点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;矩阵型组织通常是多个或多重领导，存在双层或多层汇报关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多个项目在进度、费用和质量方面能够取得平衡，工作受到影响，这既是矩阵型组织的优点也是它的缺点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;许多因素使矩阵项目团队非常难以管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目与职能部门的责权不清。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240619114421648.png&#34; alt=&#34;image-20240619114421648&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-it项目生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-it项目生命周期&#34;&gt;#&lt;/a&gt; 二、IT 项目生命周期&lt;/h2&gt;
&lt;p&gt;IT 项目生命周期分为 IT 项目前期、IT 项目建设期和 IT 项目运营期&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;检查点：是指在规定的时间间隔内对项目进行检查，比较实际与计划之间的差异，并根据差异进行调整。一般每周一次，项目经理通过召开项目例会或上交周报等方式来检查项目进展情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;里程碑：里程碑是项目中完成阶段性工作的标志。里程碑的建立必须连带（中间）交付物，交付物必须让客户确认。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;三、项目经理的责任和权力&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-项目经理的职责&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-项目经理的职责&#34;&gt;#&lt;/a&gt; 1、项目经理的职责&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确保项目目标实现。项目经理运用合同把项目各方统一到项目目标和合同条款上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定开发计划。制定项目阶段性目标和项目总体控制计划。计划、计划、再计划。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组织实施。设计团队组织结构，安排合适人选，合理分配任务，营造高效环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目控制。时刻监控项目的运行。对项目进行全方位全过程管理监控。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-项目经理的权利&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-项目经理的权利&#34;&gt;#&lt;/a&gt; 2、项目经理的权利&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;生产指挥权。根据资源变化情况进行指挥调度（资源调配），对组织计划进行优化调整。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目团队的组建权。项目经理管理班子的组建权，项目团队成员的选拔权。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;财权。承包范围内的财务决策权：利益分配权，制定奖惩制度，费用控制权。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术决策权。审查和批准重大技术措施和技术方案。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-项目经理的能力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-项目经理的能力&#34;&gt;#&lt;/a&gt; 3、项目经理的能力&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获得项目资源的能力。获得符合质量和数量要求的资源和人员，确保项目有恰当等级的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消除障碍和解决问题的能力。处理各种纠纷、冲突和矛盾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;领导能力和权衡能力。领导团队的每一个人。权衡项目的成本、进度、质量和绩效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;沟通能力。良好的人际交往能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管理时间的能力。时间管理，辨明先后主次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;灵敏性。敏锐的政治触角，对冲突有灵敏的感觉，IT 技术敏感，具有应变能力，灵活性和创造性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第三章-it项目整体管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-it项目整体管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第三章 IT 项目整体管理&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&#34;一-项目启动和可行性分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-项目启动和可行性分析&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、项目启动和可行性分析&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-准备和启动过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-准备和启动过程&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、准备和启动过程&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在项目管理中，启动阶段是识别和启动一个新项目或项目新阶段的过程。&lt;/p&gt;
&lt;p&gt;完整的项目启动过程是指从项目的产生、项目概念的开发、机会研究，然后通过可行性分析、选择、优化，确定所要进行的项目，直到最后项目的正式启动。&lt;/p&gt;
&lt;p&gt;（1）项目建议书&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目的背景。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目的意义和必要性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目产品或服务的市场预测。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目规模项目建设的必要条件，已具备和尚不具备的条件分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;投资估算和资金筹措的设想。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目经济效益、市场前景初步分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他需要说明的情况等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）项目的核准和立项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IT 项目只有在可行性研究或初步计划完成之后才能正式启动，一般包括编写立项报告，在通过审批后召开启动会议，项目正式启动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于一个小项目，只要可行、合法，不必经过有关部门的批准就可以实施。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于大项目一般需要申报到有关部门进行核准，审批通过后才能启动。这一过程称为项目立项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个阶段需要决定项目是自己开发还是采购。采购的话会进入招标环节，自己开发则开始筹备项目启动。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）招标投标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;招标投标是在市场经济条件下进行大宗货物的买卖、工程建设项目有发包与承包，以及服务项目的采购与提供时，所采用的一种交易方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（4）项目启动&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;立项启动准备&lt;/p&gt;
&lt;p&gt;项目考核管理制度。&lt;/p&gt;
&lt;p&gt;项目费用管理制度。&lt;/p&gt;
&lt;p&gt;项目例会管理制度。&lt;/p&gt;
&lt;p&gt;项目通报制度。&lt;/p&gt;
&lt;p&gt;项目计划管理制度：明确各级项目计划的制订、检查流程，如整体计划、阶段计划、周计划。&lt;/p&gt;
&lt;p&gt;项目文件管理流程：明确各种文件名称的管理和制定文件的标准模板，如汇报模板、例会模板、日志、问题列表等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;召开项目启动会议&lt;/p&gt;
&lt;p&gt;项目开工的正式宣告，参加人应该包括项目组织机构中的关键角色，如管理层、项目经理、供应商代表、客户代表、项目监理、技术人员代表等。项目启动会的任务包括下面几项内容。&lt;/p&gt;
&lt;p&gt;阐述项目背景、价值、目标。&lt;/p&gt;
&lt;p&gt;项目交付物介绍。&lt;/p&gt;
&lt;p&gt;项目组织机构及主要成员职责介绍。&lt;/p&gt;
&lt;p&gt;使双方人员彼此认识，明确各个层次的接口。&lt;/p&gt;
&lt;p&gt;项目初步计划与风险分析。&lt;/p&gt;
&lt;p&gt;项目管理制度。&lt;/p&gt;
&lt;p&gt;项目将要使用的工作方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（5）制定项目章程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;编写一份正式批准项目，并授权项目经理在项目活动中使用组织资源的文件的过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;明确地给出了项目的定义，说明了它的特点和最终结果，规定了项目的发起人、项目经理和团队领导。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主要作用是正式宣布项目的存在，粗略规定项目的范围，并任命项目经理等。项目章程应当由项目团队之外的、适当级别的、并为项目出资的项目发起人或投资人发布。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-可行性研究&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-可行性研究&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、可行性研究&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;可行性研究是对拟选的技术方案、项目需求进行先期的调查和研究，分析投资收益比，研究项目的可行性，提出初步的系统目标和项目计划，必要时提出对用户业务流程等进行重组等改进建议。&lt;/p&gt;
&lt;p&gt;可行性分析一般包括初步可行性分析、详细可行性分析和提交可行性研究报告 3 个阶段。根据项目情况可以跨越阶段进行。&lt;/p&gt;
&lt;p&gt;（1）初步可行性研究&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分析项目的前途，从而决定是否应该继续深入调查研究。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初步估计和确定项目中的关键技术核心问题，以确定是否有可能解决。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初步估计必须进行的辅助研究，以解决项目的核心问题，并判断是否具备必要的技术、实验、人力条件作为支持。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）详细可行性研究&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;详细可行性研究是项目决策前进行详尽的、系统的、全面的调查、研究、分析和论证，对可能的技术方案进行详细的论证、比较，对项目建设完成后可能产生的经济、社会效益进行预测和评价，最终提交的可行性研究报告将作为进行项目决策和评估的依据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可行性研究的内容一般包括技术可行性分析、经济可行性、运行环境可行性和可行性研究报告。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（1）技术可行性分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在现有的技术条件下，能否达到用户所提出的要求，所需要的各种资源是否具备、是否能得到。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;① 项目开发的技术风险。限制范围和时间期限内，能否设计出逾期的系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;② 人力资源的有效性。技术人员队伍的建立、数量和能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;③ 技术能力的可能性。相关技术的发展趋势和当前所掌握的技术是否支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;④ 设备（产品）的可用性。用于建立系统的其他资源。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）经济可行性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;估计项目的成本和效益，分析项目在经济上是否合理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;① 成本分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开发成本：设备、机房及附属设施费用、软件开发费用等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;维护成本：系统维护费、系统运行费等&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;② 直接经济效益分析。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;资金折现公式为：资金折现值 = 资金未来值 /(1 + t) T 其中，t 是银行利率，T 是年份。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;衡量经济效益的指标主要有以下几项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;纯收入。资金收益折现值 - 成本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;投资回收期。资金收益折现值 = 成本时所需要的时间。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）运行环境可行性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从管理制度、管理方法、规章制度、人员素质、数据资源、硬件平台等评估，重点评估是否可以建立系统顺利运行所需要的环境，以及建立这个环境所需要进行的工作，以便可以纳入项目计划中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（4）可行性研究报告。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;结论需要明确：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目各方面条件已经基本具备，可以立即开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目实施的基本条件不具备，可建议终止项目或推迟到具备某些条件后再进行（资金缺口大，技术难突破等）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;某些条件准备不充分，可建议修改调整原来的系统目标，使其成为可行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二-项目管理计划&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-项目管理计划&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、项目管理计划&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;项目管理计划包括项目整体介绍、如何组织开展项目的描述、项目运用的管理技术与方法、时间进度表和预算等。&lt;/p&gt;
&lt;p&gt;（1）项目管理计划的内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1）项目名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2）项目需求的简要描述。项目的目标和组织项目的原因，以及大致的时间和成本估算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3）发起人的名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4）项目经理与主要成员的简介。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5）项目可交付成果。软件、硬件设备、技术报告、培训材料、维护手册等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;6）重要资料清单。前期项目形成的过程、范围管理计划、进度管理计划、成本管理计划、质量管理计划、人员管理计划、沟通管理计划、风险管理计划、采购管理计划等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;7）有关定义和缩写词的说明。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）项目管理计划的作用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确定项目的工作规范、遵循标准，成为项目实施的依据和指南。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;明确项目组各成员及其工作责任范围，以及相应的职权。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使项目组成员明确自己的工作目标、工作方法、工作途径、工作期限要求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保证项目进行过程中项目组成员和项目干系人之间的交流、沟通与协作，使得项目各项工作协调一致，增加客户满意度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为项目的跟踪控制提供基础。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目计划在项目中起到承上启下的作用，计划批准后应当作为项目的工作指南。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）编制项目管理计划的注意事项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1）注意项目计划的弹性。滚动计划方法按照 “近细远粗” 的原则调整和修订。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2）注意项目计划的层次性。按照高级、分阶段、详细等层次制定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3）注意计划的现实有用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;充分鼓励、积极接纳项目干系人来参与项目计划的制订。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;充分利用历史数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4）重视与客户的沟通。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三-项目计划执行-监控与变更控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-项目计划执行-监控与变更控制&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三、项目计划执行、监控与变更控制&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-指导与管理项目执行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-指导与管理项目执行&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、指导与管理项目执行&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;项目计划执行是执行项目计划的主要过程，项目产品是在这个过程中产生的，管理团队需要协调、管理各种技术和组织间的接口，花费大部分的资源。&lt;/p&gt;
&lt;h3 id=&#34;2-监控项目工作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-监控项目工作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、监控项目工作&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;监控项目工作监视和控制启动、规划、执行和结束项目所需的各个过程。贯穿项目始终。&lt;/p&gt;
&lt;p&gt;主要监控对象包括如下几方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对照项目管理计划比较项目的实际表现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;评价项目的绩效，判断是否出现需要采取纠正或预防措施的迹象，并在必要时提出采取行动的建议。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析、跟踪并监视项目风险，执行适当的风险应对计划。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立有关项目产品及有关文件的准确和及时的信息库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为状态报告、绩效测量和预测提供信息支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为更新当前的成本和进度信息提供预测。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3、项目整体变更控制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目整体变更控制是在项目声明周期的整个过程中对变更进行识别、评价和管理。&lt;/p&gt;
&lt;p&gt;主要目标包括如下几方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对引起变更的各种因素施加影响，以保证这些变更是征得同意的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确认变更是否已经发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当变更发生时，对实际变更进行管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;维护绩效测量基准计划的完整性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确保产品范围的变更反映在项目范围定义中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在各个知识域中协调变更。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四-项目收尾与验收&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-项目收尾与验收&#34;&gt;#&lt;/a&gt; &lt;strong&gt;四、项目收尾与验收&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;（1）结束项目或阶段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目收尾工作是项目全过程的最后阶段，包括验收、正式移交运行、项目评价等工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）项目验收&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目范围确认、质量验收、项目资料验收&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）项目移交与清算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目移交是在项目收尾后，将全部的产品和服务交付给客户和用户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目验收是项目移交的前提，移交是项目收尾阶段的最后工作内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目清算是不能成功结束的项目，需要尽快终止项目并清算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第四章-it项目范围管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-it项目范围管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第四章 IT 项目范围管理&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&#34;一-项目范围与范围管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-项目范围与范围管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;一、项目范围与范围管理&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;项目范围管理包括确保项目做且只做所需的全部工作，以成功完成项目的各个过程。&lt;/p&gt;
&lt;p&gt;管理项目范围主要在于定义和控制哪些工作应该包括在项目内，哪些不应该包括在项目内。&lt;/p&gt;
&lt;p&gt;项目范围管理的过程包括以下内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（1）规划范围管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（2）收集需求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（3）范围定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（4）创建工作分解结构（Work Breakdown Structure，WBS）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（5）范围核实。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（6）范围变更控制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IT 项目范围管理的重要性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）提高费用、时间和资源估算的准确性。&lt;/li&gt;
&lt;li&gt;（2）确定进行测量和控制的基准。&lt;/li&gt;
&lt;li&gt;（3）有助于项目分工。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二-规划范围管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-规划范围管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、规划范围管理&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;规划范围管理是为记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。在整个项目期间对如何管理范围提供指南和方向。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;范围管理计划：如何管理项目范围以及如何将变更纳入到项目范围之内，项目范围稳定性评价，包括项目范围变化的可能原因、频率和幅度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需求管理计划：项目管理计划的部分，包含如何规划、跟踪和报告各项需求活动，配置管理活动、需求优先级排序、测量指标等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三-收集需求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-收集需求&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三、收集需求&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-收集需求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-收集需求&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1、收集需求&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;收集需求是为实现目标而确定、记录并管理干系人的需要和需求的过程。为定义产品范围和项目范围奠定基础。需求收集活动出现大的误差将是方向性的重大错误。&lt;/p&gt;
&lt;p&gt;收集需求 —— 工具与技术&lt;/p&gt;
&lt;p&gt;访谈：与干系人直接交谈。&lt;/p&gt;
&lt;p&gt;焦点小组会议：把预先选定的干系人和主题专家集中在一起，了解他们对所提议产品、服务或成果的期望和态度。由一位受过训练的主持人引导大家进行互动式讨论。&lt;/p&gt;
&lt;p&gt;引导式研讨会：邀请主要的跨职能干系人一起参加会议，对产品需求进行集中讨论与定义。&lt;/p&gt;
&lt;p&gt;名义小组法。小组成员独立思考，写下自己的备选方案和意见。再按次序陈述自己的方案和意见。由小组成员对全部备选方案进行投票，根据投票结果，赞成人数最多的备选方案即为所要的方案，当然，管理者最后仍有权决定是接受还是拒绝这一方案。&lt;/p&gt;
&lt;p&gt;群体决策技术。一致同意、大多数原则、相对多数原则、独裁。&lt;/p&gt;
&lt;p&gt;观察法。核对清单法、级别量表法、记叙性描述。&lt;/p&gt;
&lt;p&gt;原型法。在实际制造预期产品之前，先造出该产品的模型，并据此征求对需求的早期反馈。&lt;/p&gt;
&lt;p&gt;需求文件：描述各种单一需求将如何满足与项目相关的业务需求。包含业务需求、可跟踪业务目标和项目目标、功能需求、非功能要求、质量要求、验收标准、体现组织指导原则的业务原则、对组织内部和外部团队的影响、对支持和培训的需求、与需求有关的假设条件和制约因素。&lt;/p&gt;
&lt;p&gt;需求跟踪矩阵：把产品需求从其来源连接到能满足需求的可交付成果的一种表格。&lt;/p&gt;
&lt;h3 id=&#34;2-软件项目的需求管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-软件项目的需求管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2、软件项目的需求管理&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;需求管理过程是保证软件需求以一种技术性是描述一个产品应该具有的功能、性能、性质等。从需求获取开始贯穿于整个项目生命周期。保证开发过程的一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（1）定义需求：形成经过评审的书面文档《需求规格说明书》&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（2）需求确认：沟通对不一致的需求剔除；双方承诺共同理解或用户认可的部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（3）建立需求状态：用户需求的一种状态变换过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（4）需求评审：正式的技术评审（开发方和客户方组成）；非正式技术评审（开发方内部）。正确性、清晰性、无二义性、一致性、必要性、完整性、可实现性、可验证性、可测性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（5）需求承诺：开发方和客户方的责任人对通过了同行评审的需求阶段的工作产品做出承诺。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（6）需求跟踪：建立和维护从用户需求开始到测试之间的一致性与完整性。正向跟踪（检查《需求规格说明书》的每个需求是否在后续工作产品中找到对应点）和逆向跟踪（检查设计文档、代码、测试用例等工作产品是否在《需求规格说明书》中找到）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（7）需求变更控制：正确判断内在或外在原因的变更所带来的影响，并且调整开发过程以控制和适应这些变化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四-范围定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-范围定义&#34;&gt;#&lt;/a&gt; &lt;strong&gt;四、范围定义&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;定义范围是制定项目和产品详细描述的过程。描述产品、服务或成果的边界和验收标准。&lt;/p&gt;
&lt;p&gt;项目范围定义是根据范围管理计划，采取一定的办法，逐步得到精确的项目范围的过程。&lt;/p&gt;
&lt;p&gt;项目范围说明书：项目目标与项目范围指标、产品描述、项目可交付成果的规定、验收标准、约束条件、假定、项目配置关系及其管理要求。&lt;/p&gt;
&lt;h2 id=&#34;五-创建工作分解结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-创建工作分解结构&#34;&gt;#&lt;/a&gt; &lt;strong&gt;五、创建工作分解结构&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;工作分解结构是以项目的可交付成果为中心，为了完成项目的目标和创造项目的可交付成果，由项目团队进行的一种对项目工作有层次的分解。&lt;/p&gt;
&lt;p&gt;要把整个项目工作分解为工作包，通常需要开展以下活动：&lt;/p&gt;
&lt;p&gt;・识别和分析可交付成果及相关工作&lt;/p&gt;
&lt;p&gt;・确定 WBS 的结构和编排方法&lt;/p&gt;
&lt;p&gt;・自上而下逐层细化分解&lt;/p&gt;
&lt;p&gt;・为 WBS 组成部分制定和分配标识编码&lt;/p&gt;
&lt;p&gt;・核实可交付成果分解的程度是否恰当&lt;/p&gt;
&lt;p&gt;分解注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(1) WBS 必须是面向可交付成果的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2) WBS 必须符合项目的范围。WBS 必须包括，也仅包括为了完成项目的可交付成果的活动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(3) WBS 的底层应该支持计划和控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(4) WBS 中的元素必须有人负责，而且只由一个人负责，尽管实际上可能需要多个人参与。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(5) WBS 的指导。作为指导而不是原则，WBS 应控制在 4~6 层。当然，大项目可以超过 6 层。一个工作单元只能从属于某个上层单元，避免交叉从属。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(6) WBS 应包括项目管理工作也要包括分包出去的工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(7) WBS 的编制需要所有 (主要) 项目干系人的参与，需要项目团队成员的参与。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(8) WBS 并非是一成不变的，在完成了 WBS 之后的工作中，仍然有可能需要对 WBS 进行修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;范围基准是由批准的项目范围说明书、WBS、和 WBS 词典组成。&lt;/p&gt;
&lt;p&gt;WBS 词典：对每一工作包包括的详细内容进行表述，包括：编号、名称、如何做、投入资源、结果、完成的标准 / 质量、由谁做...&lt;/p&gt;
&lt;h2 id=&#34;六-项目范围核实&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-项目范围核实&#34;&gt;#&lt;/a&gt; &lt;strong&gt;六、项目范围核实&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;检查。开展测量、审查与确认等活动，来判断工作和可交付成果是否符合需求和产品验收标准。检査有时也被称为审查、产品审查、审计、走查和巡检等。在某些应用领域，这些术语具有独特和具体的含义。&lt;/p&gt;
&lt;p&gt;决策。可用于本过程的决策技术包括 (但不限于) 投票。当由项目团队和其他相关方进行验收时，使用投票来形成结论。&lt;/p&gt;
&lt;p&gt;可交付成果。指的是在某一过程、阶段或项目完成时，经过 “指导与管理项目工作” 过程产出的任何独特并可核实的产品、成果或服务【研发完成】&lt;/p&gt;
&lt;p&gt;核实的可交付成果。是指已经完成，并经过 “控制质量” 过程检查为正确的可交付成果。【内测通过】&lt;/p&gt;
&lt;p&gt;验收的可交付成果。是指对核实的可交付成果，经过 “确认范围” 过程由客户或发起人确认为满足既定验收标准的产品、结果或服务。【甲方试用通过】&lt;/p&gt;
&lt;p&gt;最终的成果、产品或服务的移交。是指对验收的可交付成果，经过 “结束项目或阶段” 过程，最终移交给客户的产品、结果或服务。&lt;/p&gt;
&lt;h2 id=&#34;七-项目范围控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七-项目范围控制&#34;&gt;#&lt;/a&gt; &lt;strong&gt;七、项目范围控制&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;项目范围控制是监督项目和产品的范围状态，管理范围基准变更的过程。在整个项目期间保持对范围基准的维护，且需要在整个项目期间开展。&lt;/p&gt;
&lt;p&gt;IT 项目范围变更控制过程：&lt;/p&gt;
&lt;p&gt;提交变更请求：变更请求应被记录，并提交给 CCB。&lt;/p&gt;
&lt;p&gt;复审变更请求：在 CCB 复审会议中对变更请求进行初始复审，以确定是否为有效请求。&lt;/p&gt;
&lt;p&gt;安排或分配工作：对于确认并批准的变更请求，实施工作分配和安排。&lt;/p&gt;
&lt;p&gt;进行变更：对需要采取措施的地方确定应采取的具体措施。&lt;/p&gt;
&lt;p&gt;核实或测试工作版本中的变更。&lt;/p&gt;
&lt;p&gt;发布工作版本中的变更。&lt;/p&gt;
&lt;p&gt;估计所采取的纠正措施的效果，如果所采取的纠正措施仍无法获得满意的范围调整，则重复以上步骤。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第五章 IT 项目进度管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、规划进度管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划进度管理是为规划、编制、管理、执行和控制项目进度而制定政策、程序和文档的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，为如何在整个项目期间管理项目进度提供指南和方向。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、定义活动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义活动是识别和记录为完成项目可交付成果而须采取的具体行动的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，将工作包分解为进度活动，作为对项目工作进行进度估算、规划、执行、监督和控制的基础。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、排列活动顺序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;排列活动顺序是识别和记录项目活动之间的关系的过程。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/1f425af2c2bf9dc1749d93b27cd9800d.png&#34; alt=&#34;&#34; /&gt;本过程的主要作用是定义工作之间的逻辑顺序，以便在既定的所有项目制约因素下获得最高的效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、紧前关系绘图法（PDM）的活动关系类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、前导图法 (Precedence Diagramming Method , PDM)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/85dc2aac05210379651d90328b6237bc.png&#34; alt=&#34;&#34; /&gt;也称紧前关系绘图法，也被称作单代号网络图 (只有节点需要编号) 或活动节点图 ( Active On Node,AON)，是用于编制项目进度网络图的一种方法，它使用方框或者长方形 (被称作节点) 代表活动，节点之间用箭头连接，以显示节点之间的逻辑关系。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/f352861b956b1585fa46041ec609777a.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;media/18a79cb6ba0545d2dee74f9ac924479a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;编制前导图时要注意以下几个问题：&lt;/p&gt;
&lt;p&gt; 一个网络图只有一个开始点和一个结束点。&lt;/p&gt;
&lt;p&gt; 网络图是有方向的，不应该出现循环回路。&lt;/p&gt;
&lt;p&gt; 网络图中不能出现无箭头箭线和双箭头箭线。&lt;/p&gt;
&lt;p&gt; 网络图中不能出现无节点的箭线。&lt;/p&gt;
&lt;p&gt; 在同一个网络图中的所有节点，不能出现相同的编号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、箭线图法（Arrow Diagramming Method,ADM）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用箭线表示活动、节点表示事件的一种网络图绘制方法。也称为双代号网络图（节点和箭线都要编号）或活动箭线图（Active On the Arrow,AOA）。&lt;/p&gt;
&lt;p&gt;虚活动不消耗时间，也不消耗资源，只是为了弥补箭线图在表达活动依赖关系方面的不足。在复杂的网络图中，为避免多个起点或终点引起的混淆，我们可以用虚活动来解，借助虚活动，我们可以更好地、更清楚地表达活动之间的关系。&lt;/p&gt;
&lt;p&gt;编制双代号网络图时要注意以下几个问题。&lt;/p&gt;
&lt;p&gt;在一个图中的所有节点，不能出现相同的编号。&lt;/p&gt;
&lt;p&gt;任意两项活动的紧前事件和紧后事件至少有一个不相同，节点序号沿箭线方向越来越大。&lt;/p&gt;
&lt;p&gt;流入（流出）同一节点的活动，均有共同的紧后活动（或紧前活动）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;media/9ac6111b70d578fc357bbbdc7d6f1b65.png&#34; alt=&#34;&#34; /&gt;4、提前量与滞后量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提前量 (Lead) 是相对于紧前活动，紧后活动可以提前的时间量。提前量往往表示负数。&lt;/p&gt;
&lt;p&gt;滞后量 (Lag) 是相对于紧前活动，紧后活动需要推迟的时间量。滞后量往往表示正数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、估算活动资源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;估算活动资源是对执行项目所需的团队人力资源，以及材料、设备和用品的类型和数量进行估算的过程.&lt;/p&gt;
&lt;p&gt;主要作用：确定出完成项目所需的资源种类、数量和特性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、估算活动持续时间 —— 工具与技术&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;专家判断。具备团队和物质资源的规划和估算方面的专业知识或接受过相关培训的个人或小组。&lt;/p&gt;
&lt;p&gt;类比估算。将以往类似项目的资源相关信息作为估算未来项目的基础。&lt;/p&gt;
&lt;p&gt;参数估算。基于历史数据和项目参数，使用某种算法或历史数据与其他变量之间的统计关系，来计算活动所需的资源数量。&lt;/p&gt;
&lt;p&gt;自下而上估算。团队和实物资源首先在活动级别上进行估算，然后汇总成工作包、控制账户和总体项目层级上的估算。&lt;/p&gt;
&lt;p&gt;数据分析。本过程建议使用：备选方案分析和储备分析。&lt;/p&gt;
&lt;p&gt;项目管理信息系统。可以包括资源管理软件，这些软件有助于规划、组织与管理资源库，以及编制资源估算。&lt;/p&gt;
&lt;p&gt;会议。项目团队可能会召开会议来估算活动资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、估算活动持续时间 —— 输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;资源需求。识别了各个工作包或工作包中每个活动所需的资源类型和数量&lt;/p&gt;
&lt;p&gt;估算资源&lt;/p&gt;
&lt;p&gt;・对资源估算时所需的支持信息，它的数量和种类因应用领域的不同而不同。&lt;/p&gt;
&lt;p&gt;・支持信息可以包括：估算方法；用于估算的资源；与估算有关的假设条件；已知的制约因素；估算范围；&lt;/p&gt;
&lt;p&gt;资源分解结构。是资源按照类别和类型的层级展现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;media/e9e34dcc2c76da402efb0da21bc93280.png&#34; alt=&#34;&#34; /&gt;五、估算活动持续时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;估算活动持续时间是根据资源估算的结果，估算完成单项活动所需工作时段数的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，确定完成每个活动所需花费的时间量。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/35df2013beb048924c8211918daf8bad.png&#34; alt=&#34;&#34; /&gt;&lt;strong&gt;六、制定进度计划&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;制定进度计划是分析活动顺序、持续时间、资源需求和进度制约因素，创建进度模型，从而落实项目执行和监控的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，为完成项目活动而制定具有计划日期的进度模型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、关键路径法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于在进度模型中估算项目最短工期，确定逻辑网络路径的进度灵活性大小。&lt;/p&gt;
&lt;p&gt;这种进度网络分析技术在不考虑任何资源限制的情况下，沿进度网络路径使用顺推与逆推法，计算出所有活动的最早开始 ES 最早结束 EF、最晚开始 LS 和最晚完成 LF 日期。&lt;/p&gt;
&lt;p&gt;（1）关键路径&lt;/p&gt;
&lt;p&gt;关键路径决定了项目完成的最短时间。&lt;/p&gt;
&lt;p&gt;是时间浮动为 0（Float=0）的路径。&lt;/p&gt;
&lt;p&gt;网络图中最长的路径。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/8146dd0aa3d29ed01cafd3882f259c4b.png&#34; alt=&#34;&#34; /&gt;关键路径上的任何活动延迟，都会导致整个项目完成时间的延迟。关键路径上的活动称为关键活动。&lt;/p&gt;
&lt;p&gt;明确关键路径后，可以合理安排进度。&lt;/p&gt;
&lt;p&gt;关键路径可能不止一条，在项目的进行过程中，关键路径可能会改变。&lt;/p&gt;
&lt;p&gt;（2）自由浮动和总浮动时间&lt;/p&gt;
&lt;p&gt;自由浮动 (Free Float)：在不影响紧后活动最早开始时间的情况下本活动可以延迟的时间。&lt;/p&gt;
&lt;p&gt;计算方法：紧后活动最早开始时间的最小值减去本活动的最早完成时间。&lt;/p&gt;
&lt;p&gt;总浮动 (Total Float)：在不影响项目最早完成时间的情况下本活动可以延迟的时间。&lt;/p&gt;
&lt;p&gt;计算方法：本活动的最迟完成时间减去本活动的最早完成时间，或本活动的最迟开始时间减去本活动的最早开始时间。正常情况下，关键活动的总浮动时间为 0。&lt;/p&gt;
&lt;p&gt;（3）正推法和逆推法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正推法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照时间顺序来计算路径中每项活动的最早开始时间和最早完成时间。&lt;/p&gt;
&lt;p&gt;建立项目的开始时间。&lt;/p&gt;
&lt;p&gt;项目的开始时间就是网络图中第一个活动的最早开始时间。&lt;/p&gt;
&lt;p&gt;按网络图从左到右，从上到下的顺序进行计算。所用公式为：&lt;/p&gt;
&lt;p&gt;ES + 工期（Duration）=EF&lt;/p&gt;
&lt;p&gt;EF + 滞后量（Lag）=ESs 或 EF - 提前量（Lead）=ESs&lt;/p&gt;
&lt;p&gt;当一个活动有多个前置时，选择其中最大的最早完成时间 (加上滞后量 Lag 或减去提前量 Lead) 作为其后置任务的最早开始时间。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img data-src=&#34;media/17967f3d5855b8f03667fc143787b170.png&#34; alt=&#34;&#34; /&gt;逆推法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照逆时间顺序计算路径中每项活动的最晚开始时间和最晚完成时间。&lt;/p&gt;
&lt;p&gt;首先建立项目的结束时间。&lt;/p&gt;
&lt;p&gt;项目的结束时间就是网络图中最后一个活动的最晚完成时间。&lt;/p&gt;
&lt;p&gt;从右到左，从上到下进行计算。所用公式为：&lt;/p&gt;
&lt;p&gt;LF - 工期（Duration）=LS&lt;/p&gt;
&lt;p&gt;LS - 滞后量（Lag）=LFp 或 LS + 提前量（Lead）=LFp&lt;/p&gt;
&lt;p&gt;当一个任务有多个后置任务时，选择其中最小的最晚开始时间 (减去滞后量 Lag 或加上提前量 Lead) 作为其前置任务的最晚完成时间。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/e019bf07e4543da03ed90794d8021b00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、关键链法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是一种进度规划方法，允许项目团队在任何项目进度路径上设置缓冲，以应对资源限制和项目的不确定性。这种方法建立在关键路径法之上，考虑了资源分配、资源优化、资源平衡和活动历时不确定性对关键路径的影响。&lt;/p&gt;
&lt;p&gt;关键链法增加了作为 “非工作活动” 的持续时间缓冲，用来应对不确定性。如图，放置在关键链末端的缓冲称为项目缓冲，用来保证项目不因关键链的延误而延误。其他缓冲，即接驳缓冲，则放置在非关键链与关键链的接合点，用来保护关键链不受非关键链延误的影响。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/af074b84710deb6d97c32f3d447f39a7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、资源优化技术&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）资源平衡，为了在资源需求与资源供给之前取得平衡，根据资源制约对开始日期和结束日期进行调整的一种技术。如果共享资源或关键资源只在特定时间可用，数量有限，或被过度分配，如一个资源在同一时间内被分配至两个或多个活动，就需要进行资源平衡。也可以为保持资源使用量处于均衡水平而进行资源平衡。资源平衡往往导致关键路径改变，通常是延长。&lt;/p&gt;
&lt;p&gt;（2）资源平滑，对进度模型中的活动进行调整，从而使项目资源需求不超过预定的资源限制的一种技术。相对资源平衡而言，资源平滑不会改变项目关键路径，完工日期也不会延迟。也就是说，活动只在其自由浮动时间和总浮动时间内延迟。因此，资源平滑技术可能无法实现所有资源的优化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、甘特图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;甘特图（Gantt Chart 或 Bar Chart）是表示项目各阶段任务开始时间与结束时间的图形，它把计划和进度安排组织在一起。&lt;/p&gt;
&lt;p&gt;甘特图用水平线段表示阶段任务，线段的起点和终点分别对应于任务的开始时间和结束时间，线段的长度表示完成任务所需要的时间。&lt;/p&gt;
&lt;p&gt;甘特图的优点是表明了任务的进度计划和当前进度，能直观反映项目的进展情况。&lt;/p&gt;
&lt;p&gt;甘特图的缺点是不能反映某一项任务的进度变化对整体项目的影响，它把各项任务看成是独立的工作，没有考虑项目之间存在着因果和逻辑关系。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/9369a29a219ae22d90412f28e2551762.png&#34; alt=&#34;&#34; /&gt;5**、计划评审技术（PERT）**&lt;/p&gt;
&lt;p&gt;与三点估算的计算方法相同，三点估算用于估算单个活动历时，是活动历时估算过程中用到的技术；而 PERT 是一种进度表编制技术，用于制订进度表的过程中。&lt;/p&gt;
&lt;p&gt;在 PERT 图中，用箭号表示事件，即要完成的任务。箭头旁给出子任务的名称和完成该子任务所需要的时间。用圆圈节点表示事件的起点和终点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;media/77ccb29c31652543ec289d86087e3fb3.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;media/791000a08d5ebc99ae2d5fff63517ef3.png&#34; alt=&#34;&#34; /&gt;6、进度压缩&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;赶工：通过增加资源，以最小的成本代价来压缩进度工期的一种技术。&lt;/p&gt;
&lt;p&gt;快速跟进：一种进度压缩技术，将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;进度控制&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;控制进度是监督项目状态，以更新项目进度和管理进度基准变更的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是在整个项目期间保持对进度基准的维护，且需要在整个项目期间开展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第六章 IT 项目成本管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目成本管理概述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、项目成本管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目成本管理包括为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程，从而确保项目在批准的预算内完工。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、软件项目成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）软件产品的生产不是一个重复的制造过程，项目成本是以 “一次性” 开发过程中所花费的代价来计算的。&lt;/p&gt;
&lt;p&gt;从系统生命周期构成的开发阶段和维护阶段看，IT 项目的成本由开发成本和维护成本构成。&lt;/p&gt;
&lt;p&gt;其中开发成本由软件开发成本、硬件成本和其他成本组成，包括软件的分析 / 设计费用（包含系统调研、需求分析、系统设计）、实施费用（包含编程 / 测试、硬件购买与安装、系统软件购置、数据收集、人员培训）及系统切换等方面的费用。&lt;/p&gt;
&lt;p&gt;维护成本包括运行费用（包含人工费、材料费、固定资产折旧费、专有技术及技术资料购置费）、管理费（包含审计费、系统服务费、行政管理费）及维护费（包含纠错性维护费用及适应性维护费用等）。&lt;/p&gt;
&lt;p&gt;（2）在产品或系统的整个使用生命期内，在获得阶段（设计、生产、安装和测试等活动，即项目存续期间）、运营与维护及生命周期结束时对产品的处置所发生的全部成本。&lt;/p&gt;
&lt;p&gt;直接成本是与开发的具体项目直接相关的成本，例如人员的工资，材料费，外包外购成本等，包括开发成本，管理成本，质量成本等。&lt;/p&gt;
&lt;p&gt;间接成本不能归属于一个具体的项目，是企业的运营成本，可以分摊到各个项目中。例如房租，水电，保安，员工福利，保险，税收，行政管理，市场费用。&lt;/p&gt;
&lt;p&gt;成本基准是经批准的按时间安排的成本支出计划，并随时反映了经批准的项目变更（所增加或减少的资金项目），被用于度量和监督项目的实际执行成本。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img data-src=&#34;media/67db47e8ac2d9a063d10ff2d4742fda6.png&#34; alt=&#34;&#34; /&gt;&lt;strong&gt;规划成本管理&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;规划成本管理是为规划、管理、花费和控制项目成本而制定政策、程序和文档的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是在整个项目中为如何管理项目成本提供指南和方向。&lt;/p&gt;
&lt;p&gt;成本管理计划：项目管理计划的组成部分，描述将如何规划、安排和控制项目成本。包括计量单位、精确度、准确度、控制临界值、绩效测量规则、报告格式、其他细节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、估算成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;估算成本是对完成项目工作所需资源成本进行近似估算的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是确定完成项目所需的成本数额。&lt;/p&gt;
&lt;p&gt;・估算成本步骤&lt;/p&gt;
&lt;p&gt;（1）识别并分析成本的构成科目。&lt;/p&gt;
&lt;p&gt;（2）根据已识别的项目成本构成，估算每一科目的成本大小。&lt;/p&gt;
&lt;p&gt;（3）分析成本估算结果，找出各种可以相互替代的成本，协调各种成本之间的比例关系。&lt;/p&gt;
&lt;p&gt;・软件项目规模度量单位：&lt;/p&gt;
&lt;p&gt;LOC (Lines of Code)：源代码程序长度的测量&lt;/p&gt;
&lt;p&gt;FP (Function Point)：系统功能数量的测量&lt;/p&gt;
&lt;p&gt;・软件项目工作量是指为了提供软件的功能而必须完成的软件工程任务量。其度量单位为：人月、人天、人年：人在单位时间内完成的任务量&lt;/p&gt;
&lt;p&gt;为了确定工作量度量单位，可设定一个 “标准程序员”，例如具有 15~18 个月开发经验的程序员。&lt;/p&gt;
&lt;p&gt;・工作量是成本的主要考虑因素，项目的工作量估算和成本估算常常同时进行。&lt;/p&gt;
&lt;p&gt;・如果确定了单位工作量的成本，则可根据项目工作量直接计算出项目成本。&lt;/p&gt;
&lt;p&gt;例如：如果一个软件项目的工作量是 20 人月，而企业的人力成本参数是 2 万元 / 人月，则项目的成本是 40 万元。&lt;/p&gt;
&lt;p&gt;・代码行估算&lt;/p&gt;
&lt;p&gt;某软件公司统计发现该公司每一万行 C 语言源代码形成的源文件（.c 和.h 文件）约为 250K。某项目的源文件大小为 3.75M，则可估计该项目源代码大约为 15 万行，该项目累计投入工作量为 240 人月，每人月费用为 10000 元（包括人均工资、福利、办公费用等）&lt;/p&gt;
&lt;p&gt;则该项目中 1LOC 的价值为：（240×10000）/150000＝16 元 / L&lt;/p&gt;
&lt;p&gt;1、类比估算&lt;/p&gt;
&lt;p&gt;使用场景：&lt;/p&gt;
&lt;p&gt;（1）类比方法常在项目详细信息有限的情况下使用；&lt;/p&gt;
&lt;p&gt;（2）通常在项目早期计划编制阶段使用；&lt;/p&gt;
&lt;p&gt;（3）类比估算的费用较低，精确度通常也差。&lt;/p&gt;
&lt;p&gt;2、自下而上估算&lt;/p&gt;
&lt;p&gt;（1）估算具体活动或工作包括的成本；&lt;/p&gt;
&lt;p&gt;（2）将它们汇总得出项目总成本；&lt;/p&gt;
&lt;p&gt;（3）比其他估算法更为准确 — 当所有人都能如实估算其负责的工作包成本时；&lt;/p&gt;
&lt;p&gt;（4）各项目组进行估算时可能发生 “虚报” 现象。&lt;/p&gt;
&lt;p&gt;3、参数估算&lt;/p&gt;
&lt;p&gt;（1）以数学模型为特征；&lt;/p&gt;
&lt;p&gt;（2）需要准确的历史信息；&lt;/p&gt;
&lt;p&gt;（3）可以根据参数的不同赋予不同的权重；&lt;/p&gt;
&lt;p&gt;（4）准确度取决于模型的复杂性等因素。&lt;/p&gt;
&lt;p&gt;4、三点估算&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/800b879beb9f1eb5d3dfe0955e81360e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、制定成本预算&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;制定成本预算是汇总所有单个活动或工作包的估算成本，建立一个经批准的成本基准的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，确定可据以监督和控制项目绩效的成本基准。&lt;/p&gt;
&lt;p&gt;・制定成本预算步骤&lt;/p&gt;
&lt;p&gt;（1）将项目总成本分摊到项目工作分解结构的各个工作包。&lt;/p&gt;
&lt;p&gt;（2）将各个工作包成本再分配到该工作包所包含的各项活动上。&lt;/p&gt;
&lt;p&gt;（3）确定各项成本预算支出的时间计划及项目成本预算计划。&lt;/p&gt;
&lt;p&gt;储备分析 - 准备金分析&lt;/p&gt;
&lt;p&gt;（1）应急储备应对 “已知的未知” 包含在成本基线当中，根据定量风险分析的结果；&lt;/p&gt;
&lt;p&gt;（2）管理储备应对 “未知的未知” 花费前需获得批准，不是成本基线的一部分，但是包含在预算之内。&lt;/p&gt;
&lt;p&gt;资金限制平衡&lt;/p&gt;
&lt;p&gt;（1）在资金支出的界限内平衡；&lt;/p&gt;
&lt;p&gt;（2）可以作为限制条件；&lt;/p&gt;
&lt;p&gt;（3）有时需要对工作进度进行调整。&lt;/p&gt;
&lt;p&gt;成本基准：经过批准的、按时间段分配的项目预算，不包括任何管理储备，只有通过正式的变更控制程序才能变更，用作与实际结果进行比较的依据。成本基准是不同进度活动经批准的预算的总和。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/6b25f49591e6cceaef2e6346f456c9fe.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;项目资金需求：&lt;/p&gt;
&lt;p&gt;根据成本基准，确定总资金需求和阶段性（如季度或年度）资金需求。成本基准中既包括预计&lt;/p&gt;
&lt;p&gt;支出及预计债务。项目资金通常以增量的方式投入，并且可能是非均衡的，如果有管理储备，&lt;/p&gt;
&lt;p&gt;则总资金需求等于成本基准加管理储备。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、控制成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制成本是监督项目状态，以更新项目成本和管理成本基准变更的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，在整个项目期间保持对成本基准的维护。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、挣值管理 (Earned Value Management)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(1) 是一种测量项目绩效的客观方法，综合考虑了项目的范围、时间和成本；&lt;/p&gt;
&lt;p&gt;(2) 能够有效地测量项目的健康状况和项目的执行绩效；&lt;/p&gt;
&lt;p&gt;(3) 并且能够预测项目的未来绩效和完成情况&lt;/p&gt;
&lt;p&gt;(4) 在某一时间点进行评估。&lt;/p&gt;
&lt;p&gt;计划工作的预算成本 PV (Planned value),BCWS ( budgeted cost of workscheduled) 按预算价格和预算工作量计算。&lt;/p&gt;
&lt;p&gt;PV = 预算价格 × 预算工作量&lt;/p&gt;
&lt;p&gt;已完成工作的实际成本 AC (Actual cost), 也称 ACWP ( actual cost of workperformed), 按实际价格和实际已完成工作量计算。&lt;/p&gt;
&lt;p&gt;AC = 实际价格 × 已完成工作量&lt;/p&gt;
&lt;p&gt;已完成工作的预算成本 EV (Earned Value)), 也称 BCWP ( budgeted cost of work performed), 按预算价格和实际已完成工作量计算。&lt;/p&gt;
&lt;p&gt;EV = 预算价格 × 已完成工作量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成本绩效分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;成本偏差 CV (Cost variance)，CV=EV-AC&lt;/p&gt;
&lt;p&gt;CV&amp;gt;0, 结余；C&amp;lt;0, 超支；CV=0, 实际成本与预算相符。&lt;/p&gt;
&lt;p&gt;成本绩效指数 CPl (Cost Performed Index)，CPl=EV/AC&lt;/p&gt;
&lt;p&gt;CPI&amp;gt;1, 实际成本低于预算成本，效益好；CPI&amp;lt;1, 效益不好；CPI=1, 实际成本与预算成本吻合，效益达到预定目标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进度绩效分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进度偏差值 SV (Schedule variance)，SV=EV-PV&lt;/p&gt;
&lt;p&gt;SV&amp;gt;0, 进度提前；SV&amp;lt;0, 进度延误；SV=0, 实际进度与计划相符。&lt;/p&gt;
&lt;p&gt;进度绩效指数 SPI (Schedule performed index)，SPI=EV/PV&lt;/p&gt;
&lt;p&gt;**&lt;img data-src=&#34;media/5ed7f4fdbd1324e9ce9fc3b6dfa12a24.png&#34; alt=&#34;&#34; /&gt;**SPI&amp;gt;1, 进度提前；SPI&amp;lt;1, 进度延误；SPI=1, 实际进度与计划进度吻合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目绩效评估 - 预测技术：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(1) 假定项目未完成部分将按照目前的效率去进行的预测方法&lt;/p&gt;
&lt;p&gt;EAC =AC+(BAC-EV)/CPI=BAC/CPI，ETC=(BAC-EV)/CPI（典型偏差）&lt;/p&gt;
&lt;p&gt;(2) 假定项目未完成部分将按计划规定的效率进行的预测方法&lt;/p&gt;
&lt;p&gt;EAC =AC+(BAC-EV)，ETC=BAC-EV（非典型偏差）&lt;/p&gt;
&lt;p&gt;(3) 用重估所有剩余工作量的成本作出预测的方法&lt;/p&gt;
&lt;p&gt;EAC=AC + 重估剩余工作量&lt;/p&gt;
&lt;p&gt;** 练习 1：** 项目进行到第 8 周末，利用成本绩效分析和进度绩效分析方法分析成本、进度情况。&lt;/p&gt;
&lt;p&gt;项目进行到第 8 周末，计算剩余工作量。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/5d17539ffc13dcff3cc059b8455ded8b.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;media/08422513e0d785cf68f38669f1f8e051.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;media/7e62ca5bb4406fe4acef8e0ff00e5478.png&#34; alt=&#34;&#34; /&gt;成本绩效分析：成本超支&lt;/p&gt;
&lt;p&gt;CV=EV-AC=27000-34000=-7000&amp;lt;0&lt;/p&gt;
&lt;p&gt;CPI=EV/AC=27000/34000=0.79&amp;lt;1&lt;/p&gt;
&lt;p&gt;进度绩效分析：进度滞后&lt;/p&gt;
&lt;p&gt;SV=EV-PV==27000−32000=−5000&amp;lt;0&lt;/p&gt;
&lt;p&gt;SPI=EV/PV=27000/32000=0.84&amp;lt;1&lt;/p&gt;
&lt;p&gt;剩余工作按现在的效率 0.79 进行&lt;/p&gt;
&lt;p&gt;EAC =BAC/CPI=50000/0.79=63290&lt;/p&gt;
&lt;p&gt;剩余工作按计划效率进行&lt;/p&gt;
&lt;p&gt;EAC =AC+(BAC-EV)=34000+(50000-27000)=57000&lt;/p&gt;
&lt;p&gt;剩余工作重新评估后进行 (项目实际与计划严重背离时使用)&lt;/p&gt;
&lt;p&gt;EAC=AC + 重估剩余工作量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;练习 2：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/d30fe1abf94b945f8ed06da8e26e952e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/19042d29e90a526c564aadadd636c337.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第七章 IT 项目质量管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目质量管理概述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、质量标准&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ISO9000 系列质量标准是国际标准化组织颁布的在全世界范围内通用的关于质量管理方面的系列标准。8 项基本原则：&lt;/p&gt;
&lt;p&gt;（1）以顾客为中心（2）领导作用（3）全员参与（4）过程方法&lt;/p&gt;
&lt;p&gt;（5）管理的系统方法（6）持续改进（7）基于事实的决策方法（8）与供方互利的关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、软件质量属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正确性：系统满足规格说明和用户的程度，即在预定环境下能正确地完成预期功能的程度；&lt;/p&gt;
&lt;p&gt;健壮性：在硬件发生故障、输入的数据无效或操作错误等意外环境下，系统能够做出适当响应的程度；&lt;/p&gt;
&lt;p&gt;效率：为了完成预定的功能，系统需要的计算资源的多少；&lt;/p&gt;
&lt;p&gt;完整性：对未经授权的人使用软件或数据的企图，系统能够控制的程度；&lt;/p&gt;
&lt;p&gt;可用性：系统在完成预定应该完成的功能时令人满意的概率；&lt;/p&gt;
&lt;p&gt;风险性：按预定的成本和进度把系统开发出来，并且使用户感到满意；&lt;/p&gt;
&lt;p&gt;可理解性：理解和使用该系统的容易程度；&lt;/p&gt;
&lt;p&gt;可维修性：诊断和改正在运行现场发生的错误所需要的概率；&lt;/p&gt;
&lt;p&gt;灵活性：修改或改正在运行的系统需要的工作量的多少；&lt;/p&gt;
&lt;p&gt;可测试性：软件容易测试的程度；&lt;/p&gt;
&lt;p&gt;可移植性：把程序从一种硬件配置和（或）软件环境转移到另一种配置和环境时，需要的工作量多少；&lt;/p&gt;
&lt;p&gt;可重用性：在其他应用中该程序可以被再次使用的程度（或范围）；&lt;/p&gt;
&lt;p&gt;可运行性：把该系统和另外一个系统结合起来的工作量的多少。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、规划质量管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划质量管理识别项目及其可交付成果的质量要求和 / 或标准，并书面描述项目将如何证明符合质量要求或标准的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，为在整个项目期间如何管理和核实质量提供指南和方向。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、成本效益分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对每个质量活动进行成本效益分析，就是要比较其可能成本与预期效益。减少返工、提高生产率、降低成本、提升干系人满意度及提升盈利能力等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、标杆对照&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将待实施的项目实践与可比项目（标杆项目）的实践进行对照，以便识别最佳质量实践，形成改进意见，并为质量绩效考核提供依据。标杆对照也允许用不同应用领域的项目做类比。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、实验设计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用来识别哪些因素会对正在生产的产品或正在开发流程的特定变量产生影响。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、质量成本法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;质量成本指在产品生命周期中发生的所有成本，包括为预防不符合要求、为评价产品或服务是否符合要求，以及因未达到要求而发生的成本。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/db17f60c65e6f7ec849c4b6a66982553.png&#34; alt=&#34;&#34; /&gt;质量成本包含一致性成本和非一致性成本。一致性成本包含预防成本和评估成本，非一致性成本包含内部失败成本和外部失败成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、七种基本质量工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;老七工具：包括因果图、流程图、核查表、直方图、帕累托图、控制图、散点图&lt;/p&gt;
&lt;p&gt;新七工具：包括亲和图、过程决策程序图、关联图、树形图、优先矩阵、活动网络图和矩阵图&lt;/p&gt;
&lt;p&gt;老七工具&lt;/p&gt;
&lt;p&gt;（1） 因果图 (shikawa 图，石川图或鱼骨图)&lt;/p&gt;
&lt;p&gt;因果图，又称 “鱼骨图” 和 “石川图”, 将问题陈述的原因分解为离散的分支，有助于识别问题的主要原因或根本原因。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/1f34776cd824b95bf9f3c13f9e2d026c.png&#34; alt=&#34;&#34; /&gt;（2）流程图&lt;/p&gt;
&lt;p&gt;流程图展示了引发缺陷的一系列步骤。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/a5cde764338744c41993a1b2352918ce.png&#34; alt=&#34;&#34; /&gt;（3）核查表（经常用于质量控制）&lt;/p&gt;
&lt;p&gt;用于收集数据的核对清单，合理排列各种事项，以便有效地收集关于潜在质量问题的有用数据。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/d9b9f109617312fcb767600dcd15df3e.png&#34; alt=&#34;&#34; /&gt;（4）直方图&lt;/p&gt;
&lt;p&gt;直方图是一种展示数字数据的条形图，可以展示每个可交付成果的缺陷数量、缺陷成因的排列、各个过程的不合规次数，或项目或产品缺陷的其他表现形式。用于描述集中趋势、分散程度和统计分布形状。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/fc612e4df21bce33127b0083f8b72bad.png&#34; alt=&#34;&#34; /&gt;（5）帕累托图&lt;/p&gt;
&lt;p&gt;用于识别造成大多数问题的少数重要原因。在帕累托图中，通常按类别排列条形，以测量频率或后果。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/b97efa37b18dc720f29bb697a7d37440.png&#34; alt=&#34;&#34; /&gt;一般 80% 的问题是由 20% 的原因（帕累托法则 80/20 原则）造成的。从而可以知悉问题的主要原因或找出事情发生的主要矛盾。&lt;/p&gt;
&lt;p&gt;（6）控制图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/854f09c16ae4a0e895381b4a629d20e8.png&#34; alt=&#34;&#34; /&gt; 用于确定一个过程是否稳定，或者是否具有可预测的绩效。规格上限和下限是根据要求制定的，反映了可允许的最大值和最小值。&lt;/p&gt;
&lt;p&gt;（7）散点图&lt;/p&gt;
&lt;p&gt;散点图是一种展示两个变量之间的关系的图形，它能够展示两支轴的关系，一支轴表示过程、环境或活动的任何要素，另一支轴表示质量缺陷。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/313d4aded5a049169ce5979045c02f2e.png&#34; alt=&#34;&#34; /&gt;新七工具&lt;/p&gt;
&lt;p&gt;（1）亲和图&lt;/p&gt;
&lt;p&gt;亲和图与心智图相似。针对某个问题，产生出可联成有组织的想法模式的各种创意。&lt;/p&gt;
&lt;p&gt;亲和图的核心是头脑风暴法，属于根据结果找原因。通过将大量创意进行分类，以便审查和分析。分类依据是创意之间的相似性。&lt;/p&gt;
&lt;p&gt;（2）过程决策程序图（PDPC）&lt;/p&gt;
&lt;p&gt;用于理解一个目标与达成此目标的步骤之间的关系。PDPC 有助于制订应急计划，因为它能帮助团队预测那些可能破坏目标实现的中间环节。&lt;/p&gt;
&lt;p&gt;（3）关联图&lt;/p&gt;
&lt;p&gt;用来分析事物之间 “原因与结果”、“目的与手段” 等复杂关系的一种图表，它能够帮助人们从事物之间的逻辑关系中，寻找出解决问题的办法。适合中等复杂情形中创新性地解决问题。&lt;/p&gt;
&lt;p&gt;（4）树形图&lt;/p&gt;
&lt;p&gt;也称系统图，可用于表现诸如 WBS、RBS（风险分解结构）和 OBS（组织分解结构）的层次分解结构。&lt;/p&gt;
&lt;p&gt;（5）优先矩阵&lt;/p&gt;
&lt;p&gt;用来识别关键事项和合适的备选方案，并通过一系列决策，排列出备选方案的优先顺序。先对标准排序和加权，再应用于所有备选方案，计算出数学得分，对备选方案排序。&lt;/p&gt;
&lt;p&gt;（6）活动网络图&lt;/p&gt;
&lt;p&gt;包括两种格式的网络图：AOA（活动箭线图）和最常用的 AON（活动节点图）。活动网络图连同项目进度计划编制方法一起使用，如计划评审技术 (PERT)、关键路径法 (CPM) 和紧前关系绘图法 (PDM)。&lt;/p&gt;
&lt;p&gt;（7）矩阵图&lt;/p&gt;
&lt;p&gt;从多维问题的事件中，找出成对的因素，排列成矩阵图，然后根据矩阵图来分析问题，确定关键点的方法，它是一种通过多因素综合思考，探索问题的好方法。在行列交叉的位置展示因素、原因和目标之间的关系强弱。&lt;/p&gt;
&lt;p&gt;在复杂的质量问题中，往往存在许多成对的质量因素，将这些成对因素找出来，分别排列成行和列，其交点就是其相互关联的程度，在此基础上再找出存在的问题及问题的形态，从而找到解决问题的思路。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、质量管理计划：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;质量管理计划包括（但不限于）以下组成部分：&lt;/p&gt;
&lt;p&gt;项目采用的质量标准；项目的质量目标；质量角色与职责；需要质量审查的项目可交付成果和过程；为项目规划的质量控制和质量管理活动；项目使用的质量工具；与项目有关的主要程序，例如处理不符合要求的情况、纠正措施程序，以及持续改进程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、质量测量指标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;质量测量指标专用于描述项目或产品属性，以及控制质量过程将如何验证符合程度。&lt;/p&gt;
&lt;p&gt;质量测量指标包括：按时完成的任务的百分比、以 CI 测量的成本绩效、故障率、识别的日缺陷数量、每月总停机时间、每个代码行的错误、客户满意度分数，以及测试计划所涵盖的需求的百分比即测试覆盖度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6、质量核对单&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;核对单是一种结构化工具，通常列出特定组成部分，用来核实所要求的一系列步骤是否已得到执行或检查需求列表是否已得到满足。基于项目需求和实践，核对单可简可繁。许多组织都有标准化的核对单，用来规范地执行经常性任务。在某些应用领域，核对单也可从专业协会或商业性服务机构获取。质量核对单应该涵盖在范围基准中定义的验收标准。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、实施质量保证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实施质量保证是审计质量要求和质量控制测量结果，确保采用合理的质量标准和操作性定义的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，促进质量过程改进。&lt;/p&gt;
&lt;p&gt;质量保证旨在建立对未来输出或未完输出（也称正在进行的工作）将在完工时满足特定的需求和期望的信心。质量保证部门或类似部门经常要对质量保证活动进行监督。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、软件质量保证思想&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）在产品开发的同时进行产品测试&lt;/p&gt;
&lt;p&gt;测试工作提前，可以有效地防止 “失之毫厘，谬以千里” 的严重后果。&lt;/p&gt;
&lt;p&gt;（2）在项目的各个阶段保证质量的稳定性&lt;/p&gt;
&lt;p&gt;每隔一段时期，项目组织就应花费相应的时间对当期完成的产品特性进行测试、稳定和集成。&lt;/p&gt;
&lt;p&gt;（3）尽可能早地使项目质量测试自动化&lt;/p&gt;
&lt;p&gt;利用自动化测试平台不仅可以降低测试成本，而且可以提高测试效率。自动化测试工具：IBM Rational Quality Manager&lt;/p&gt;
&lt;p&gt;（4）确保项目成员和企业文化都重视质量&lt;/p&gt;
&lt;p&gt;产品质量是每个人的事情，而不仅是测试人员的事情&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、质量保证体系的总体要求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于软件项目来说，质量保证体系需要负责调整所有影响产品质量的因素，例如：&lt;/p&gt;
&lt;p&gt; 使用的方法和工具；&lt;/p&gt;
&lt;p&gt; 在开发和维护过程中应用的标准；&lt;/p&gt;
&lt;p&gt; 对开发和维护过程所进行的组织管理；&lt;/p&gt;
&lt;p&gt; 软件生产环境；&lt;/p&gt;
&lt;p&gt; 软件开发中人员的组织和管理；&lt;/p&gt;
&lt;p&gt; 工作人员的熟练程度；&lt;/p&gt;
&lt;p&gt; 对工作人员的奖励和工作条件的改善情况；&lt;/p&gt;
&lt;p&gt; 对外部项目转包商交付的产品的质量控制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、质量审计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;又称质量保证体系审核，是对具体质量管理活动的结构性的评审。&lt;/p&gt;
&lt;p&gt;质量审计的目标是：&lt;/p&gt;
&lt;p&gt;（1）识别全部正在实施的良好及最佳实践&lt;/p&gt;
&lt;p&gt;（2）识别全部违规做法、差距及不足&lt;/p&gt;
&lt;p&gt;（3）分享所在组织或行业中类似项目的良好实践&lt;/p&gt;
&lt;p&gt;（4）积极、主动地提供协助，以改进过程的执行，从而帮助团队提高生产效率&lt;/p&gt;
&lt;p&gt;（5）强调每次审计都应对组织经验教训的积累做出贡献&lt;/p&gt;
&lt;p&gt;质量审计可以是事先安排，也可以随机进行。在具体领域中有专长的内部审计师或第三方组织都可以实施质量审计，可以由内部或外部审计师进行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、过程分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;过程分析是指按照过程改进计划中概括的步骤来识别所需的改进。&lt;/p&gt;
&lt;p&gt;过程分析包括根本原因分析 —— 用于识别问题、探究根本原因，并制定预防措施的一种具体技术。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、控制质量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制质量是为了评估绩效，确保项目输出完整、正确且满足客户期望，而监督和记录质量管理活动执行结果的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，核实项目可交付成果和工作已经达到主要干系人的质量要求，可供最终验收。&lt;/p&gt;
&lt;p&gt;质量控制是监督并记录质量活动执行结果，以便评估绩效，并推荐必要的变更的过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 软件项目常见的质量问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）违背软件项目规律：如未经可行性论证；任意修改设计；不经过必要的测试；……&lt;/p&gt;
&lt;p&gt;（2）技术方案本身的缺陷&lt;/p&gt;
&lt;p&gt;（3）基本部件不合格（选购的软件组件、中间件、硬件设备等）&lt;/p&gt;
&lt;p&gt;（4）实施中的管理问题（计划、监控、沟通障碍……）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、控制质量过程的目的和方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制质量过程的目的是在用户验收和最终交付之前测量产品或服务的完整性、合规性和适用性。本过程通过测量所有步骤、属性和变量，来核实与规划阶段所描述规范的一致性和合规性。&lt;/p&gt;
&lt;p&gt;软件项目质量控制采用的主要方法是技术评审、代码走查、代码会审、单元测试、集成测试、系统测试、验收测试、缺陷追踪等。&lt;/p&gt;
&lt;p&gt;（1）技术评审（技术评审会议）&lt;/p&gt;
&lt;p&gt;软件项目中主要的评审对象有：软件需求规格说明书、软件设计方案、测试计划、用户手册、维护手册、系统开发规程、产品发布说明等&lt;/p&gt;
&lt;p&gt;（2）代码走查&lt;/p&gt;
&lt;p&gt;代码走查的第一个目的是通过人工模拟执行源程序的过程，特别是一些关键算法和控制过程，检查软件设计的正确性。第二个目的是检查程序书写的规范性。&lt;/p&gt;
&lt;p&gt;（3）代码会审&lt;/p&gt;
&lt;p&gt;代码会审是由一组人通过阅读、讨论和争议对程序进行静态分析的过程。会审小组由组长、2～3 名程序设计和测试人员及程序员组成。&lt;/p&gt;
&lt;p&gt;（4）软件测试&lt;/p&gt;
&lt;p&gt;软件测试所处的阶段（单元 / 集成 / 验收测试）不同，测试的目的和方法也不同。例如，单元测试是指对软件中的最小可测试单元进行检查和验证。&lt;/p&gt;
&lt;p&gt;（5）缺陷跟踪&lt;/p&gt;
&lt;p&gt;从缺陷发现开始，一直到缺陷改正为止的全过程为缺陷追踪。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、质量保证与质量控制的区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实施质量保证是针对过程改进和设计的，强调的是过程改进和信心保证。&lt;/p&gt;
&lt;p&gt;实施质量控制是按照质量要求，检查具体可交付成果的质量，强调的是具体的可交付成果。&lt;/p&gt;
&lt;p&gt;质量保证（QA）是针对项目实施过程的管理手段，质量控制（QC）是针对项目产品的技术手段。&lt;/p&gt;
&lt;p&gt;QA 只要检查项目按照过程进行了某项活动没有，产出了某个产品没有；而 QC 来检查产品是否符合质量要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第八章 IT 项目人力资源管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目人力资源管理的概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、项目人力资源管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目人力资源管理就是根据项目的目标、项目活动进展情况和外部环境的变化，采取科学的方法，对项目团队成员的思想、心理和行为进行有效的管理，充分发挥他们的主观能动性，实现项目的最终目标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、软件项目人力资源的特点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;知识型员工具有较高的知识、能力，具有相对稀缺性和难以替代性。&lt;/p&gt;
&lt;p&gt;知识型员工工作自主性要求高。&lt;/p&gt;
&lt;p&gt;知识型员工大多崇尚智能，蔑视权威。&lt;/p&gt;
&lt;p&gt;知识型员工成就动机强，追求卓越。&lt;/p&gt;
&lt;p&gt;知识型员工的能力与贡献之间差异较大，内在需求具有较多的不确定性和多样性，会出现交替混合的需求模式。&lt;/p&gt;
&lt;p&gt;知识型员工工作中的定性成分较大，工作过程一般难以量化，因而不易控制。&lt;/p&gt;
&lt;p&gt;对于知识型员工，更需要新型的管理方式，员工希望：&lt;/p&gt;
&lt;p&gt;（1）“以人为本” 给予知识型员工充分的尊重与认可。&lt;/p&gt;
&lt;p&gt;（2）创造一种自由、民主、公平的工作氛围，提倡民主参与的决策方式要更优于高度集权。&lt;/p&gt;
&lt;p&gt;（3）在完成任务的同时，员工不断进步，其知识、能力、素质不断提高，实现全面发展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、规划人力资源管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划人力资源管理是识别和记录项目角色、职责、所需技能、报告关系，并编制人员配备管理计划的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，为在整个项目期间如何管理人力资源提供指南和方向。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、团队角色和职责的确定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;软件项目团队中常见的角色包括：项目经理、系统分析人员、架构师、开发人员、测试人员、质量保证人员、项目管理和支持人员、市场人员、用户支持人员等。&lt;/p&gt;
&lt;p&gt;项目经理的权利&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;职位权力，来源于管理者在组织中的职位和职权&lt;/li&gt;
&lt;li&gt;惩罚权力，使用降职、扣薪、惩罚、批评、威胁等负面手段的能力&lt;/li&gt;
&lt;li&gt;奖励权力，给予下属奖励的能力&lt;/li&gt;
&lt;li&gt;专家权力，来源于个人的专业技能&lt;/li&gt;
&lt;li&gt;参照权力，由于成为别人学习参照榜样所拥有的力量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;职位权力、惩罚权力、奖励权力来自于组织的授权，专家权力和参照权力来自于管理者自身&lt;/p&gt;
&lt;p&gt;可釆用多种格式来记录团队成员的角色与职责。大多数格式属于以下三类 (如图所示): 层级型、矩阵型和文本型。通常，层级型可用于规定高层级角色，而文本型更适合用于记录详细职责。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、责任分配分配矩阵 (RAM)&lt;/strong&gt;: 将所分解的工作任务落实到项目有关部门或个人，并明确表示出他们在组织工作中的关系、责任和地位的一种方法和工具。通过责任分配矩阵可以显示工作包或活动与项目团队成员之间的关系，可以确保任何一项任务都只有一个人负责，从而避免职权不清造成的混乱。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、项目组织图的确定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在大型软件项目中，通常根据软件的功能模块将从事开发的人员划分为若干小组 (Team)，每个小组负责一个功能模块的开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、人员配置管理计划的编制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;人员配置管理计划描述何时以何种方式满足项目的人力资源需求。包括：人员招募、资源日历（每种资源可用工作日和工作班次等信息）、人员遣散计划、培训需要、认可与奖励、合规性、安全等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、组建项目团队&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;组建项目团队是根据项目团队的角色和职责、项目组织结构图和人员配备管理计划，获取完成项目工作所需的人力资源。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是概述和指导人力资源的选择，并将其分配给相应的活动&lt;/p&gt;
&lt;p&gt;预分派：在某些情况下，一些成员已预先分派到项目中工作，例如在竞标过程中承诺分配特定人员到项目中，或项目的成功依赖于特定人员的专有技能。&lt;/p&gt;
&lt;p&gt;谈判：大多数人员的获取需要经过谈判。例如项目经理需要与职能部门经理或其他部门负责人谈判，以获得所需要的人员。在谈判时，项目的影响力会起作用。&lt;/p&gt;
&lt;p&gt;招募：当企业缺少完成项目所需的内部人才时，就需要从外部获得所需服务，包括招聘和分包。在获取和任用项目团队人员时，除考虑人员的专业技能外，最好能结合人员的性格特征和兴趣，做到 “知人善任”。。&lt;/p&gt;
&lt;p&gt;虚拟团队：具有共同目标、在完成角色任务的过程中很少或没有时间面对面工作的一群人。&lt;/p&gt;
&lt;p&gt;多标准决策分析：使用多标准决策分析工具制定出标准，用于对潜在人员进行评级或打分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、建设项目团队&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建设项目团队是是提高工作能力，促进团队成员互动，改善团队整体氛围，以提高项目绩效的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，改进团队协作、增强人际关系技能、激励员工、减少摩擦以及提升整体项目绩效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、塔克曼阶梯理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）形成阶段&lt;/p&gt;
&lt;p&gt;在本阶段，团队成员相互认识，并了解项目情况及他们在项目中的正式角色与职责。团队成员倾向于相互独立，不一定开诚布公。有疑问和焦虑的情绪。&lt;/p&gt;
&lt;p&gt;为减轻人们的焦虑，项目经理领导风格应该是指导型的，让团队成员着手参与一些具体工作，如制订项目计划。&lt;/p&gt;
&lt;p&gt;（2）震荡阶段&lt;/p&gt;
&lt;p&gt;在本阶段，团队开始从事项目工作，制定技术决策和讨论项目管理方法，一般会遇到超出预想的困难，希望被现实打破。个体之间开始争执，互相指责，并且开始怀疑项目经理的能力。&lt;/p&gt;
&lt;p&gt;这是项目经理创造一个充满理解和支持的工作环境的好时机，要允许成员表达他们所关注的问题，项目经理要致力于解决矛盾。在这个阶段，项目经理的领导风格应该是影响型的。&lt;/p&gt;
&lt;p&gt;（3）规范阶段&lt;/p&gt;
&lt;p&gt;在规范阶段，团队成员开始协同工作，并调整各自的工作习惯和行为来支持团队，团队成员开始相互信任，项目经理能够得到团队的认可。&lt;/p&gt;
&lt;p&gt;在本阶段，项目经理应尽量减少指导性工作，经常对项目团队所取得的进步给予公开的表扬，培育团队文化，注重培养成员对团队的认同感、归属感、努力营造出相互协作、相互帮助、相互关爱、勇于奉献的精神氛围。在这个阶段，项目经理的领导风格应该是参与型的。&lt;/p&gt;
&lt;p&gt;（4）成熟阶段&lt;/p&gt;
&lt;p&gt;进入这一阶段后，团队就像一个组织有序的单位那样工作。团队成员之间相互依靠，平稳高效地解决问题。项目团队能开放、坦诚、及时地进行沟通。对项目经理的信任加强。这时团队成员的集体荣誉感会非常强。&lt;/p&gt;
&lt;p&gt;在本阶段，项目经理应完全授权，赋予团队成员权力。在这个阶段，项目经理的领导风格应该是授权型的。&lt;/p&gt;
&lt;p&gt;（5）解散阶段&lt;/p&gt;
&lt;p&gt;在解散阶段，团队完成所有工作，团队成员离开项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、激励理论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）马洛斯的需求层次理论&lt;/p&gt;
&lt;p&gt;人的需要可按等级层次向上或向下移动，当一个层次的需要被满足之后，这一需要就不再是激励的因素了，而更高层次的需要就成为新的激励因素。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;media/832148aa6a3d504d4d5ca724f4a8e546.png&#34; alt=&#34;&#34; /&gt;双因素理论（心理学家赫茨伯格）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/1a68d1034c655b9f8f530d4e5f6adad6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;media/d804fdf0fc9283ecfaa45fdd92b5555a.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;media/87bf6d5db1c19bed7d92a8b342acb9a4.png&#34; alt=&#34;&#34; /&gt; （3）X 理论和 Y 理论（对激励问题研究比较全面）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/2fdff9b04a0817212e3b1c2519fb47ea.png&#34; alt=&#34;&#34; /&gt;（4）期望理论（对激励问题研究比较全面）&lt;/p&gt;
&lt;p&gt;动力（激励力量）= 效价 × 期望值&lt;/p&gt;
&lt;p&gt;其中，效价是个人对于某一成果的价值估计，期望值是指通过某种行为会导致一个预期成果的概率和可能性。&lt;/p&gt;
&lt;p&gt;当人们有需要，又有达到这个需要的可能，其积极性才高。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;img data-src=&#34;media/649c631ef4958a8c48377bb2ecaea80e.png&#34; alt=&#34;&#34; /&gt;团队绩效评价&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对项目团队的有效性进行正式或非正式的评价。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际上是对你已经进行的团队建设活动成果的评价，目的是为了了解我们已经使用的团队建设工具和方法的有效性，以便决定是否要继续进行团队建设活动。&lt;/p&gt;
&lt;p&gt;指标包括：&lt;/p&gt;
&lt;p&gt;・个人技能的改进；&lt;/p&gt;
&lt;p&gt;・团队能力的改进；&lt;/p&gt;
&lt;p&gt;・团队成员离职率的降低；&lt;/p&gt;
&lt;p&gt;・团队凝聚力的加强。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、管理项目团队&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;管理项目团队是跟踪团队成员工作表现，提供反馈，解决问题并管理团队变更，以优化项目绩效的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，影响团队行为、管理冲突以及解决问题。本过程需要在整个项目期间开展。&lt;/p&gt;
&lt;p&gt;**1、观察和交谈：** 可通过观察和交谈，随时了解项目团队成员的工作和态度。&lt;/p&gt;
&lt;p&gt;**2、项目绩效评估：** 包括澄清角色与职责，向团队成员提供建设性反馈，发现未知或未决问题，制定个人培训计划，以及确立未来目标。&lt;/p&gt;
&lt;p&gt;软件团队绩效考核指标&lt;/p&gt;
&lt;p&gt;（1）定性指标。&lt;/p&gt;
&lt;p&gt; 工作态度：如责任心、敬业精神、工作热情等。&lt;/p&gt;
&lt;p&gt; 工作氛围：如团队士气如何，精神状态如何等。&lt;/p&gt;
&lt;p&gt; 工作经验：如工作方法高效与否，知识的传递正确、及时与否。&lt;/p&gt;
&lt;p&gt; 应变能力：对于变更的控制、计划、实施和监督的效果如何。&lt;/p&gt;
&lt;p&gt; 处理问题的能力：对于出现的问题能否及时、正确地解决。&lt;/p&gt;
&lt;p&gt;（2）定量指标。&lt;/p&gt;
&lt;p&gt; 工作量&lt;/p&gt;
&lt;p&gt; 工作效率&lt;/p&gt;
&lt;p&gt; 工作质量&lt;/p&gt;
&lt;p&gt; 按时完成&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、冲突管理&lt;/strong&gt;：撤退 / 回避，缓和 / 包容，妥协 / 调解，强迫 / 命令，合作 / 解决问题。&lt;/p&gt;
&lt;p&gt;**4、人际关系技能：** 恰当地使用人际关系技能，可充分发挥全体团队成员的优势。&lt;/p&gt;
&lt;p&gt;项目经理常见的人际关系技能有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;领导力（成功的项目需要强有力的领导技能，例如，项目不同阶段，领导风格不一样）&lt;/li&gt;
&lt;li&gt;影响力（具有一定影响项目干系人的能力，对保证项目成功非常关键）&lt;/li&gt;
&lt;li&gt;有效决策力（包括判断能力等）&lt;/li&gt;
&lt;li&gt;激励&lt;/li&gt;
&lt;li&gt;冲突管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第九章 IT 项目沟通管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目沟通管理概述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目沟通管理就是通过开发工件以及执行用于有效交换信息的各种活动，来确保项目及其相关方的信息需求得以满足的各个过程。也就是为了确保信息及时且恰当地规划、收集、生成、发布、存储、检索、管理、控制、监督和最终处置所需的各个过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、项目经理在沟通中的作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目经理 75%-90% 的时间用于沟通，沟通是项目经理成功领导的重要手段&lt;/p&gt;
&lt;p&gt;项目经理必须熟练掌握与高层管理者、项目团队、客户及项目以外的干系人的沟通技巧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、项目经理在沟通中的角色&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目沟通的中枢，必须掌握沟通的主动权&lt;/p&gt;
&lt;p&gt;冲突的解决者和谈判者&lt;/p&gt;
&lt;p&gt;计划的制定者，过程的监控者，渠道的建立者&lt;/p&gt;
&lt;p&gt;沟通的聆听者、解释者&lt;/p&gt;
&lt;p&gt;沟通的协调者和促进者&lt;/p&gt;
&lt;p&gt;信息的综合者，障碍的消除者&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、沟通活动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;内部 / 外部：内部沟通活动针对项目内部或组织内部的干系人。外部沟通活动针对外部干系人，如客户、供应商、其他项组织、政府、公众和环保倡导者等。&lt;/p&gt;
&lt;p&gt;正式 / 非正式：正式沟通可以采用报告、正式会议 (定期及临时)、会议议程和记录、干系人简报和演示等。而非正式沟通可以采用电子邮件、社交媒体、网站以及非正式临时讨论的一般沟通活动。&lt;/p&gt;
&lt;p&gt;向上 / 向下 / 横向的层级沟通：这是根据干系人或干系人群体相对于项目团队的位置来进行划分的。如果是针对高层干系人，就是向上沟通；如果针对承担项目工作的团队和其他人员，就是向下沟通；横向沟通就是针对项目经理或团队的同级人员。&lt;/p&gt;
&lt;p&gt;官方 / 非官方沟通：比如说年报、呈交监管机构或政府部门的报告就是官方沟通，而非官方沟通就是采用灵活的手段，往往是非正式的手段，来建立和维护项目团队及其干系人对项目情况的了解和认可，并在他们之间建立强有力的关系。&lt;/p&gt;
&lt;p&gt;书面 / 口头沟通：口头及非口头，社交媒体和网站、媒体发布等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、规划沟通管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划沟通管理是基于每个干系人或干系人群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是为及时向干系人提供相关信息，引导干系人有效参与项目而编制书面沟通计划。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;沟通需求分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分析沟通需求，确定项目干系人的信息需求，包括所需信息的类型和格式以及信息对干系人的价值。&lt;/p&gt;
&lt;p&gt;（1）需要给哪些干系人发信息；&lt;/p&gt;
&lt;p&gt;（2）谁需要什么样的信息；&lt;/p&gt;
&lt;p&gt;（3）谁什么时候需要何种信息；&lt;/p&gt;
&lt;p&gt;（4）如何将信息发送给不同的干系人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、沟通技术&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在沟通过程中使用的具体手段和工具，如谈话、会议、书面文件、在线资料查询等。&lt;/p&gt;
&lt;p&gt;（1）会议沟通&lt;/p&gt;
&lt;p&gt;成本较高，沟通的时间一般比较长，因此常用于解决较重大、较复杂的问题。&lt;/p&gt;
&lt;p&gt;（2）Email 沟通&lt;/p&gt;
&lt;p&gt;成本低，方便快捷，小范围沟通，有时间思考斟酌等；&lt;/p&gt;
&lt;p&gt;（3）口头沟通&lt;/p&gt;
&lt;p&gt;是一种自然、亲近的沟通技术。加深彼此之间的友谊、加速问题的解决。几种应用场景：办公距离近；存有误会，采用 Email 无效等&lt;/p&gt;
&lt;p&gt;（4）电话沟通&lt;/p&gt;
&lt;p&gt;成本较低，距离远无法当面沟通，问题相对简单，采用 Email 无效等情况下适用。&lt;/p&gt;
&lt;p&gt;（5）即时通讯&lt;/p&gt;
&lt;p&gt;QQ/MSN/ 微信（群），快捷，方便，可以群讨论，但是闲聊可能会影响工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、沟通模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以是最基本的线性（发送方和接收方）沟通过程，也可以是增加了反馈元素（发送方、接收方和反馈）、更具互动性的沟通形式，甚至可以是融合了发送方或接收方的人性因素、试图考虑沟通复杂性的更加复杂的沟通模型。&lt;/p&gt;
&lt;p&gt;沟通模型的关键要素&lt;/p&gt;
&lt;p&gt;(1) 编码。把思想或想法转化为他人能理解的语言。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/5b1e28b7a21f18f3175d7c4f64b79c14.png&#34; alt=&#34;&#34; /&gt;(2) 信息和反馈信息。编码过程所得到的结果&lt;/p&gt;
&lt;p&gt;(3) 媒介。用来传递信息的方法。&lt;/p&gt;
&lt;p&gt;(4) 噪声。干扰信息传输和理解的一切因素 (如距离、新技术、缺乏背景信息等)。&lt;/p&gt;
&lt;p&gt;(5) 解码。把信息还原成有意义的思想或想法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、沟通方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;・交互式沟通：在两方或多方之间进行多向信息交换，确保全体参与者对特定话题达成共识的最有效的方法，如会议、电话，即时通讯、视频会议等。&lt;/p&gt;
&lt;p&gt;・推式沟通：把信息发送给需要接收这些信息的特定接收方，可以确保信息的发送，但不能确保信息送达受众或被目标受众理解，如新闻、公告、电子邮件、报告、日志等。&lt;/p&gt;
&lt;p&gt;・拉式沟通：用于信息量很大或受众很多的情况，要求接收者自主自行地访问信息内容，如企业内网、电子在线资源、经验教训数据库、知识库等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、管理沟通&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;管理沟通是确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是促成项目团队与干系人之间的有效信息流动。&lt;/p&gt;
&lt;p&gt;报告绩效：收集和发布绩效信息，包括状况报告、进展测量结果及预测结果。应该定期收集基准数据与实际数据，进行对比分析，以便了解和沟通项目进展与绩效，并对项目结果做出预测。&lt;/p&gt;
&lt;p&gt;项目管理信息系统（PMIS）：项目管理信息系统能够确保干系人及时便利地获取所需信息。用来管理和分发项目信息的工具主要包括电子项目管理工具、电子沟通管理工具和社交媒体管理工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、控制沟通&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制沟通是在整个项目生命周期中对沟通进行监督和控制的过程，以确保满足项目干系人对信息的需求。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，随时确保所有沟通参与者之间的信息流动的最优化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、沟通障碍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在项目管理工作中，存在信息的沟通，也就必然存在沟通障碍。项目经理的任务在于正视这些障碍，采取一切可能的方法来消除这些障碍，为有效的信息沟通创造条件。有三类沟通障碍：&lt;/p&gt;
&lt;p&gt;（1）主观障碍&lt;/p&gt;
&lt;p&gt;个人的性格、气质、态度、情绪、见解等的差别，使信息在沟通过程中受个人素质、心理因素的制约。&lt;/p&gt;
&lt;p&gt;知觉选择偏差所造成的障碍。&lt;/p&gt;
&lt;p&gt;经理人员和下级之间相互不信任，这主要是由于经理人员考虑不周，伤害了员工的自尊心，或决策错误所造成的，而相互不信任则会影响沟通的顺利进行。&lt;/p&gt;
&lt;p&gt;沟通者的畏惧感以及个人心理品质也会造成沟通障碍。&lt;/p&gt;
&lt;p&gt;信息传递者在团队中的地位、信息传递链、团队规模等因素也都会影响有效的沟通。许多研究表明，地位的高低对沟通的方向和频率有很大的影响。&lt;/p&gt;
&lt;p&gt;（2）客观障碍&lt;/p&gt;
&lt;p&gt;信息的发送者和接收者如果空间距离太远、接触机会少，就会造成沟通障碍。社会文化背景不同、种族不同，而形成的社会距离也会影响信息沟通。&lt;/p&gt;
&lt;p&gt;信息沟通往往是依据组织系统分层次逐渐传递的。&lt;/p&gt;
&lt;p&gt;（3）沟通联络方式的障碍&lt;/p&gt;
&lt;p&gt;语言系统所造成的障碍。&lt;/p&gt;
&lt;p&gt;沟通方式选择不当，原则、方法使用不当所造成的障碍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、冲突管理的技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做好团队的思想工作&lt;/p&gt;
&lt;p&gt;有意识地培养心理相容&lt;/p&gt;
&lt;p&gt;公平竞争，减少冲突&lt;/p&gt;
&lt;p&gt;冲突发生，迅速解决&lt;/p&gt;
&lt;p&gt;帮助双方学习提高&lt;/p&gt;
&lt;p&gt;运用权威&lt;/p&gt;
&lt;p&gt;制定预警方案&lt;/p&gt;
&lt;p&gt;引发建设性冲突&lt;/p&gt;
&lt;p&gt;（1）鼓励冲突。&lt;/p&gt;
&lt;p&gt;（2）引进冲突机制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、有效沟通的方法和技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）沟通要有明确目的&lt;/p&gt;
&lt;p&gt;（2）提高沟通的心理水平&lt;/p&gt;
&lt;p&gt;要克服沟通的障碍必须注意以下心理因素的作用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在沟通过程中要认真感知，集中注意力，以便信息准确而又及时地传递和接受，避免信息错传和接受时减少信息的损失。&lt;/li&gt;
&lt;li&gt;增强记忆的准确性是消除沟通障碍的有效心理措施，记忆准确性水平高的人，传递信息可靠，接受信息也准确。&lt;/li&gt;
&lt;li&gt;提高思维能力和水平是提高沟通效果的重要心理因素，较高的思维能力和水平对于正确地传递、接受和理解信息，起着重要的作用。&lt;/li&gt;
&lt;li&gt;培养镇定情绪和良好的心理气氛，创造一个相互信任、有利于沟通的小环境，有助于人们真实地传递信息和正确地判断信息，避免因偏激而歪曲信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（3）沟通中 “听、说、问” 交替出现&lt;/p&gt;
&lt;p&gt;（4）避免无休止的争论&lt;/p&gt;
&lt;p&gt;（5）保持畅通的沟通渠道&lt;/p&gt;
&lt;p&gt;（6）充分利用信息技术加强沟通&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、识别干系人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;识别干系人是定期识别项目干系人，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是使项目团队能够建立对每个干系人或干系人群体的适度关注。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、干系人分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统的收集和分析各种定量与定性信息，以便确定在整个项目中应该考虑哪些人的利益。通过干系人分析，识别出干系人的利益、期望和影响，并把他们与项目的目的联系起来。干系人分析也有助于了解干系人之间的关系，以便利用这些关系来建立联盟或者伙伴合作，从而提高项目成功的可能性。在项目的不同阶段应该对干系人施加不同的影响。&lt;/p&gt;
&lt;p&gt;干系人分析的步骤：&lt;/p&gt;
&lt;p&gt;(1) 识别干系人及其相关信息&lt;/p&gt;
&lt;p&gt;(2) 分析干系人可能的影响并把他们分类和排序&lt;/p&gt;
&lt;p&gt;(3) 评估干系人对不同情况可能做岀的反应，以便制定相应策略对他们施加正面影响。&lt;/p&gt;
&lt;p&gt;干系人的参与程度可按照如下标准分类。(1) 不知晓。(2) 抵制。(3) 中立。(4) 支持。(5) 领导。&lt;/p&gt;
&lt;p&gt;权利 / 利益方格&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、干系人登记册&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;应包括如下内容：&lt;/p&gt;
&lt;p&gt;（1）基本信息，如姓名、在组织中的职位、地点、在项目中的角色、联系方式等；&lt;/p&gt;
&lt;p&gt;（2）评估信息，如主要要求、主要期望、对项目的潜在影响、与项目生命周期的哪个阶段最密切；&lt;/p&gt;
&lt;p&gt;（3）干系人分类，如内部 / 外部，支持者 / 中立者 / 反对者等。&lt;/p&gt;
&lt;p&gt;应定期查看并更新干系人登记册，因为在整个项目生命周期中干系人可能发生变化，也可能识别出新的干系人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第十章 IT 项目风险管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目风险管理概述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、风险概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;风险是不确定的事件，一旦发生，将会造成消极影响。&lt;/p&gt;
&lt;p&gt;风险的三要素：一个未来的事件、事件发生的概率、事件的影响&lt;/p&gt;
&lt;p&gt;风险发生的概率越高，造成的影响越大，就越是高风险，否则就是中等风险或低风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、风险分类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从风险的范围角度上看，可将软件项目的风险分为若干类型：&lt;/p&gt;
&lt;p&gt;管理风险：潜在的预算、进度、资源、用户和需求等方面的问题。&lt;/p&gt;
&lt;p&gt;技术风险：实现和交付产品过程中所应用的各种技术所包含的风险。技术的正确性、不确定性、复杂性、技术陈旧等因素都可带来技术风险。&lt;/p&gt;
&lt;p&gt;商业风险：与市场、企业产品策略等因素有关的风险。&lt;/p&gt;
&lt;p&gt;人员风险：与参与项目的软件人员的稳定性、总体技术水平及项目经验相关的风险。&lt;/p&gt;
&lt;p&gt;开发环境风险：与用以开发产品的工具的可用性和质量相关的风险。&lt;/p&gt;
&lt;p&gt;客户风险：与客户的素质以及开发者与客户的定期沟通相关的风险。&lt;/p&gt;
&lt;p&gt;过程风险：与软件过程被定义的程度以及它们被开发组织所遵守的程度相关的风险。&lt;/p&gt;
&lt;p&gt;从风险可预测的程度来看，可将风险分为以下三种类型：&lt;/p&gt;
&lt;p&gt;已知风险：通过评估项目计划、项目的商业和技术环境以及其它可靠的信息来源之后可以发现的那些风险。&lt;/p&gt;
&lt;p&gt;可预测风险：能够从过去的项目经验中推测出的风险。&lt;/p&gt;
&lt;p&gt;不可预测风险：事先很难识别出来的风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、风险的基本性质&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;客观性：首先表现在风险的存在是不以人的意志为转移的。不管风险主体是否意识到风险的存在，在一定条件下风险都可能变为现实。其次，风险的客观性还表现在它无时不有、无所不在，它潜在于各种活动之中。&lt;/p&gt;
&lt;p&gt;不确定性：风险何时何地有可能变为现实是不能确定的。由于人们对客观世界的认识受到各种条件的限制，不可能准确预测风险的发生。&lt;/p&gt;
&lt;p&gt;不利性：风险一旦发生，就会给风险主体带来挫折、失败、甚至损失，对风险主体不利。&lt;/p&gt;
&lt;p&gt;可变性：在一定条件下风险可以转化，风险可以转化为非风险，非风险的事件也可转化为风险事件。&lt;/p&gt;
&lt;p&gt;相对性：对于相同的风险，不同的风险主体的承受能力不同，不同的组织和个人往往对风险有着不同的容忍限度。&lt;/p&gt;
&lt;p&gt;风险和利益的对称性：风险和利益总是同时存在的，风险是利益的代价，利益是风险的报酬。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、IT 项目的风险主要表现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）用户需求不一致、变化大。&lt;/p&gt;
&lt;p&gt;（2）技术变革。&lt;/p&gt;
&lt;p&gt;（3）系统部署风险。&lt;/p&gt;
&lt;p&gt;（4）流程重组风险。&lt;/p&gt;
&lt;p&gt;（5）组织与人力资源变动。&lt;/p&gt;
&lt;p&gt;（6）开发方式风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、风险管理的力度（4 个层次）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;危机管理：风险已经造成麻烦后才着手处理。&lt;/p&gt;
&lt;p&gt;风险缓解：事先制定好风险发生后的补救措施，但不制定任何防范措施。&lt;/p&gt;
&lt;p&gt;着力预防：将风险防范作为项目的一部分加以规划和执行。&lt;/p&gt;
&lt;p&gt;消灭根源：识别和消灭可能产生风险的根源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6、项目风险管理的作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有效的风险管理可以提高项目的成功率。&lt;/p&gt;
&lt;p&gt;提前对风险制定对策，就可以在风险发生时迅速做出反应，避免忙中出错造成更大损失。&lt;/p&gt;
&lt;p&gt;风险管理可以增加团队的健壮性。&lt;/p&gt;
&lt;p&gt;有效的风险管理可以帮助项目经理抓住工作重点，将主要精力集中于重大风险，将工作方式从被动救火转变为主动防范。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、规划风险管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划风险管理是定义如何实施项目风险管理活动的过程。&lt;/p&gt;
&lt;p&gt;确保风险管理的水平、方法和可见度与项目风险程度，以及项目对组织和其它干系人的重要程度相匹配。&lt;/p&gt;
&lt;p&gt;本过程仅开展一次或仅在项目的预定义点开展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、风险管理计划&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）风险管理战略。管理项目风险的一般方法。&lt;/p&gt;
&lt;p&gt;（2）角色与职责。确定风险管理计划中每个活动的领导者和支持者，以及风险管理团队的成员，并明确其职责。&lt;/p&gt;
&lt;p&gt;（3）预算。制定应急储备和管理储备的使用方案。&lt;/p&gt;
&lt;p&gt;（4）时间安排。确定风险管理的时间和频率，风险管理活动并纳入项目进度计划中。&lt;/p&gt;
&lt;p&gt;（5）风险类别。通常借助风险分解结构 (Risk Breakdown Structure，RBS) 来构建风险类别。&lt;/p&gt;
&lt;p&gt;（6）干系人风险偏好。可把干系人的风险偏好表述成可测量的风险临界值。&lt;/p&gt;
&lt;p&gt;（7）风险概率和影响的定义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、识别风险&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;识别单个项目风险以及整体项目风险的来源，并记录风险特征的过程。&lt;/p&gt;
&lt;p&gt;记录现有的单个项目风险，以及整体项目风险的来源；同时，汇集相关信息，以便项目团队能够恰当应对已识别的风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、识别风险的过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;识别并确定项目有哪些潜在的风险&lt;/p&gt;
&lt;p&gt;识别引起这些风险的主要影响因素&lt;/p&gt;
&lt;p&gt;识别项目风险可能引起的后果&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、软件项目风险&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）需求风险（IT 项目最大的风险是所完成的产品不能让用户满意）&lt;/p&gt;
&lt;p&gt;识别需求风险时，重点分析以下因素：&lt;/p&gt;
&lt;p&gt;用户是否充分参与需求分析。&lt;/p&gt;
&lt;p&gt;优先需求是否得到满足。&lt;/p&gt;
&lt;p&gt;需求变化的程度。&lt;/p&gt;
&lt;p&gt;有无有效的需求变化管理过程。&lt;/p&gt;
&lt;p&gt;（2）技术风险（信息技术的发展和更新速度极快）&lt;/p&gt;
&lt;p&gt;识别技术风险时，可以分析以下因素：&lt;/p&gt;
&lt;p&gt;对方法、工具和新技术的理解程度。&lt;/p&gt;
&lt;p&gt;应用领域经验。&lt;/p&gt;
&lt;p&gt;产品需求是否要求采用特殊的功能和接口。&lt;/p&gt;
&lt;p&gt;需求中是否有过分的产品性能要求和约束。&lt;/p&gt;
&lt;p&gt;客户所要求的功能是否技术可行。&lt;/p&gt;
&lt;p&gt;是否有恰当的技术培训。&lt;/p&gt;
&lt;p&gt;（3）商业风险&lt;/p&gt;
&lt;p&gt;与商业风险有关的因素有：&lt;/p&gt;
&lt;p&gt;本产品是否得到应有的高管层重视与支持。&lt;/p&gt;
&lt;p&gt;交付期限的合理性如何。&lt;/p&gt;
&lt;p&gt;本产品是否满足了用户的需求。&lt;/p&gt;
&lt;p&gt;最终用户的水平如何。&lt;/p&gt;
&lt;p&gt;延迟交付所造成的成本消耗如何。&lt;/p&gt;
&lt;p&gt;产品缺陷所造成的成本消耗如何。&lt;/p&gt;
&lt;p&gt;（4）开发方式的风险&lt;/p&gt;
&lt;p&gt;自主开发往往面临技术实力不足的问题；外包可能存在合作和沟通的问题。采用多方合作方式时，风险就可能来自合作伙伴、技术及设备供应商等方面。&lt;/p&gt;
&lt;p&gt;（5）数据迁移风险&lt;/p&gt;
&lt;p&gt;系统集成环境复杂，需要迁移的数据量庞大，而且数据迁移对数据的准确性和完整性有着很高的要求。数据质量风险也不可忽视。&lt;/p&gt;
&lt;p&gt;（6）进度风险&lt;/p&gt;
&lt;p&gt;进度风险是指由于种种不确定性因素的存在而导致项目完工期拖延的风险。&lt;/p&gt;
&lt;p&gt;（7）组织与人力资源风险&lt;/p&gt;
&lt;p&gt;软件行业的人员流动性大、沟通难度大。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、风险登记册&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;风险登记册：风险登记册记录已识别单个项目风险的详细信息。随着实施定性风险分析、规划风险应对、实施风险应对和监督风险等过程的开展，这些过程的结果也要记进风险登记册。取决于具体的项目变量（如规模和复杂性），风险登记册可能包含有限或广泛的风险信息。当完成识别风险过程时，风险登记册的内容可能包括（但不限于）：&lt;/p&gt;
&lt;p&gt;・已识别风险的清单。在风险登记册中，每项单个项目风险都被赋予一个独特的标识号。要以所需的详细程度对已识别风险进行描述，确保明确理解。可以使用结构化的风险描述，来把风险本身与风险原因及风险影响区分开来。&lt;/p&gt;
&lt;p&gt;・潜在风险责任人。如果已在识别风险过程中识别出潜在的风险责任人，就要把该责任人记录到风险登记册中。随后将由实施定性风险分析过程进行确认。&lt;/p&gt;
&lt;p&gt;・潜在风险应对措施清单。如果已在识别风险过程中识别出某种潜在的风险应对措施，就要把它记录到风险登记册中。随后将由规划风险应对过程进行确认。&lt;/p&gt;
&lt;p&gt;根据风险管理计划规定的风险登记册格式，可能还要记录关于每项已识别风险的其它数据，包括：简短的风险名称、风险类别、当前风险状态、一项或多项原因、一项或多项对目标的影响、风险触发条件（显示风险即将发生的事件或条件）、受影响的 WBS 组件，以及时间信息（风险何时识 别、可能何时发生、何时可能不再相关，以及采取行动的最后期限）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、实施定性风险分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实施定性风险分析是通过评估单个项目风险发生的概率和影响以及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。&lt;/p&gt;
&lt;p&gt;本过程的作用重点关注高优先级的风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、风险数据质量评估&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;风险数据是开展定性风险分析的基础。风险数据质量评估旨在评价关于单个项目风险的数据的准确性和可靠性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、风险概率和影响评估&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;风险概率评估考虑的是特定风险发生的可能性，而风险影响评估考虑的是风险对一项或多项项目目标的潜在影响，如进度、成本、质量或绩效。威胁将产生负面的影响，机会将产生正面的影响。要对每个已识别的单个项目风险进行概率和影响评估。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、概率和影响矩阵&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;概率和影响矩阵：把每个风险发生的概率和一旦发生对项目目标的影响映射起来的表格。基于风险的概率和影响，对风险进行优先级排序，以便未来进一步分析并制定应对措施。采用风险管理计划中规定的风险概率和影响定义，逐一对单个项目风险的发生概率及其对一项或多项项目目标的影响（若发生）进行评估。然后，基于所得到的概率和影响的组合，使用概率和影响矩阵，来为单个项目风险分配优先级别。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、风险紧迫性评估&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以把近期就需要应对的风险确定为更紧迫的风险。此外，风险的可监测性、风险应对的时间要求、风险征兆和预警信号，以及风险等级等，都是确定风险优先级应考虑的指标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、风险分类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目风险可依据风险来源（如采用风险分解结构 [RBS]）、受影响的项目领域（如采用 工作分解结构 [WBS]），以及其他实用类别（如项目阶段、项目预算、角色 和职责）来分类，确定哪些项目领域最容易被不确定性影响；风险还可以根据共同的根本原因进行分类。应该在风险管理计划中规定可用于项目的风险分类方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、实施定量风险分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实施定量风险分析是就已识别的单个项目风险和不确定性的其他来源对整体项目目标的影响进行定量分析的过程。&lt;/p&gt;
&lt;p&gt;本过程的作用量化整体项目风险敞口，并提供额外的定量风险信息，以支持风险应对规划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、敏感性分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把所有其他不确定因素固定在基准值，考察每个因素的变化会对目标产生多大程度的影响，有助于确定哪些风险对项目具有最大的潜在影响。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、决策树分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;预期货币价值分析（EMV) 用以计算在将来某种情况发生或不发生情况下的平均结果（即不确定状态下的分析）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、模拟&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目模拟一般采用蒙特卡洛技术。在模拟中，项目模型经过多次计算 (叠加), 其随杋依据值来自于根据毎项变量的概率分布，为每个迭加过程选择的概率分布函数 (例如，项目元素的成本或进度活动的持续时间)。据此计算概率分布 (例如，总成本或完成日期。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、规划风险应对&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划风险应对是针对项目目标，制定提高机会、降低威胁的方案和措施的过程。&lt;/p&gt;
&lt;p&gt;本过程的作用制定应对整体项目风险和单个项目风险的适当方法；本过程还将分配资源，并根据需要将相关活动添加进项目文件和项目管理计划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、消极风险或威胁的应对策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规避和减轻策略通常适用于高影响的严重风险，而转移和接受则更适用于低影响的不太严重威胁。&lt;/p&gt;
&lt;p&gt;规避。风险规避是指项目团队釆取行动来消除威胁，或保护项目免受威胁的影响。&lt;/p&gt;
&lt;p&gt;转移。转移涉及到将应对威胁的责仼转移给第三方，让第三方管理风险并承担威胁发生的影响。&lt;/p&gt;
&lt;p&gt;减轻。风险减轻是指采取措施来降低威胁发生的概率和 (或) 影响。&lt;/p&gt;
&lt;p&gt;接受。风险接受是指承认威胁的存在，但不主动采取措施。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、积极风险或机会的应对策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开拓。如果组织想确保把握住高优先级的机会，就可以选择开拓策略。&lt;/p&gt;
&lt;p&gt;分享。分享涉及到将应对机会的责任转移给第三方，使其享有机会所带来的部分收益。&lt;/p&gt;
&lt;p&gt;提高。提高策略用于提高机会出现的概率和（或）影响。&lt;/p&gt;
&lt;p&gt;接受。接受机会是指当机会发生时乐于利用，但不主动追求机会。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、应急应对策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以针对某些特定事件，专门设计一些应对措施。对于有些风险，比如不可预测的风险，项目团队可以制定应急应对策略，即只有在某些预定（触发）条件发生时才能实施的应对计划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七、监控风险&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;监控风险是在整个项目中规划风险应对、跟踪已识别风险、监督残余风险、识别新风险，以及评估风险过程有效性的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是使项目决策都基于关于整体项目风险和单个项目风险的当前信息。&lt;/p&gt;
&lt;p&gt;・实施的风险应对是否有效；&lt;/p&gt;
&lt;p&gt;・整体项目风险级别是否已改变；&lt;/p&gt;
&lt;p&gt;・已识别单个项目风险的状态是否已改变；&lt;/p&gt;
&lt;p&gt;・是否出现新的单个项目风险；&lt;/p&gt;
&lt;p&gt;・风险管理方法是否依然适用；&lt;/p&gt;
&lt;p&gt;・项目假设条件是否仍然成立；&lt;/p&gt;
&lt;p&gt;・风险管理政策和程序是否已得到遵守；&lt;/p&gt;
&lt;p&gt;・成本或进度应急储备是否需要修改；&lt;/p&gt;
&lt;p&gt;・项目策略是否仍然有效……&lt;/p&gt;
&lt;p&gt;风险再评估。对新风险进行识别并对风险进行重新评估。&lt;/p&gt;
&lt;p&gt;风险审计。是检查并记录风险应对措施在处理已识别风险及其根源方面的有效性，以及风险管理过程的有效性。&lt;/p&gt;
&lt;p&gt;技术绩效测量。把执行期间所取得的技术成果与关于取得技术成果的计划进行比较。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第十一章 IT 项目采购管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、项目采购管理概述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目采购管理包括从项目团队外部采购或获得所需产品、服务或成果的各个过程。&lt;/p&gt;
&lt;p&gt;项目组织既可以是项目产品、服务或成果的买方，也可以是卖方。项目采购管理过程围绕包括合同在内的协议来进行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、项目采购的方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）公开竞争性招标。&lt;/p&gt;
&lt;p&gt;（2）有限竞争性招标。&lt;/p&gt;
&lt;p&gt;（3）竞争性谈判。&lt;/p&gt;
&lt;p&gt;（4）询价采购。&lt;/p&gt;
&lt;p&gt;（5）直接签订合同。&lt;/p&gt;
&lt;p&gt;（6）自制或自己提供服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、项目采购的重要性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）降低成本。&lt;/p&gt;
&lt;p&gt;（2）可以把主要精力放在核心业务上。&lt;/p&gt;
&lt;p&gt;（3）可以从外界获得专门的技能和技术。&lt;/p&gt;
&lt;p&gt;（4）提高灵活性。&lt;/p&gt;
&lt;p&gt;（5）提高责任性。&lt;/p&gt;
&lt;p&gt;（6）能有效减少贪污、浪费等现象的发生。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、规划采购管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;规划采购管理是记录项目采购决策、明确采购方法，及识别潜在卖方的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，确定是否从项目外部获取货物和服务；如果是，则还要确定将在什么时间、以什么方式获取什么货物和服务。货物和服务可从执行组织的其他部门采购，或者从外部渠道采购。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、自制或外购分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;制定自制或外购決策时应考虑的因素包括；组织当前的资源配置及其技能和能力，对专业技术的需求，不愿承担永久雇用的义务，以及对独特技术专长的需求；还要评估与每个自制或外购决策相关的风险。&lt;/p&gt;
&lt;p&gt;在自制或外购分析中，可以使用回收期、投资回报率 (ROI)、内部报酬率 (IRR)、现金流贴现、浄现值 (NPV)、收益成本 (BCA) 或其他分析技术，来确定某种货物或服务是应该在项目内部自制，还是从外部购买。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、合同类型选择&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）总价合同&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作任务和范围、目标和验收标准很明确，且项目设计已具备详细细节&lt;/li&gt;
&lt;li&gt;工程量小、工期短（1 年内），施工环境因素变化小，工程条件稳定&lt;/li&gt;
&lt;li&gt;如果卖方承担成本风险&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（2）成本补偿合同&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作性质、工作范围都不清楚或项目存在较高风险&lt;/li&gt;
&lt;li&gt;如果买方承担成本风险&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（3）工料合同&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作性质清楚，但范围不是很清楚，工作不复杂，又需要快速签订合同&lt;/li&gt;
&lt;li&gt;如果双方分担风险&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（4）单边合同（订购单）&lt;/p&gt;
&lt;p&gt;购买标准产品，且数量不大&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、采购管理计划&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;包含要在采购过程中开展的各种活动。它应该记录是否要开展国际竞争性招标、国内竞争性招标、当地招标等。如果项目由外部资助，资金的来源和可用性应符合采购管理计划和项目进度计划的规定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、供方选择标准&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在确定评估标准时，买方要努力确保选岀的建议书将提供最佳质量的所需服务。这个标准用于从潜在的卖方中选中符合要求的、合格的卖方。&lt;/p&gt;
&lt;p&gt;它包括：能力和潜能、产品成本和生命周期成本、交付日期、技术专长和方法、具体的相关经验、用于响应工作说明书的工作方法和工作计划、关键员工的资质、可用性和胜任力、公司的财务稳定性、管理经验、知识转移计划，包括培训计划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、采购工作说明书&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对所购买的产品、成果或服务来说，采购工作说明书定义了与合同相关的那部分项目范围。每个采购工作说明书来自于项目范围基准。&lt;/p&gt;
&lt;p&gt;采购工作说明书会充分详细地描述拟采购的产品、服务或成果，以便潜在卖方确定是否有能力提供此类产品、服务或成果。根据采购品的性质、买方的需求，或拟采用的合同形式，工作说明书的详细程度会有较大不同。工作说明书的内容包括：规格、所需数量、质量水平、绩效数据、履约期间、工作地点和其他要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、实施采购&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实施采购是获取卖方应答、选择卖方并授予合同的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，选定合格卖方并签署关于货物或服务交付的法律协议。本过程的最后成果是签订的协议，包括正式合同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、采购实施过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有如下过程，它们可能相互重叠。&lt;/p&gt;
&lt;p&gt;（1）采购计划编制。包括确定采购产品需求，自制或外购决策，合同类型，编制采购管理计划和采购工作说明书等。&lt;/p&gt;
&lt;p&gt;（2）招标计划编制。包括：编写并发布采购文件，制定招标评审标准。&lt;/p&gt;
&lt;p&gt;（3）招标。包括：发布采购广告；召开投标会议；获得标书或建议书。&lt;/p&gt;
&lt;p&gt;（4）选择承包商或供应商。&lt;/p&gt;
&lt;p&gt;（5）合同管理。包括监督合同的履行，支付及合同的修改等&lt;/p&gt;
&lt;p&gt;（6）合同收尾。包括产品检验、结束合同、文件归档等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、招标书的主要内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;招标书主要分为 3 大部分：程序条款、技术条款、商务条款。&lt;/p&gt;
&lt;p&gt;一般包含下列主要内容：招标公告（邀请函）；投标人须知；招标项目的技术要求及附件；投标书格式；投标保证文件；合同条件（合同的一般条款及特殊条款）；设计规范与标准；投标企业资格文件；合同格式等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、投标决策&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;企业要进行投标决策时主要考虑以下几个方面的内容。&lt;/p&gt;
&lt;p&gt; 竞争对手分析。&lt;/p&gt;
&lt;p&gt; 风险分析。&lt;/p&gt;
&lt;p&gt; 目标分析。&lt;/p&gt;
&lt;p&gt; 声誉与经验分析。&lt;/p&gt;
&lt;p&gt; 客户资金分析。&lt;/p&gt;
&lt;p&gt; 项目所需资源分析。&lt;/p&gt;
&lt;p&gt; 客户本身的资信问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、采购谈判&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;采购谈判是指在合同签署之前，对合同的结构、要求及其他条款加以澄清，以取得一致意见。&lt;/p&gt;
&lt;p&gt;谈判的内容应包括责任、进行变更的权限、适用的条款和法律、技术和商务管理方法、所有权、合同融资、技术解决方案、总体进度计划、付款和价格等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、合同管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一旦卖方选定，接下来就应该签订采购合同。采购合同中包括条款和条件，也可包括其他条目，如买方就卖方应实施的工作或应交付的产品所做的规定。 签订软件项目采购合同时应注意：&lt;/p&gt;
&lt;p&gt;（1）规定项目实施的有效范围。经验表明，软件项目合同范围定义不当而导致管理失控是项目成本超支、时间延迟及质量低劣的主要原因。&lt;/p&gt;
&lt;p&gt;（2）合同的付款方式。对于软件项目的合同而言，很少有一次性付清合同款的做法。付款条件是一个比较敏感的问题，签订合同时在付款条件上规定得越详细、越清楚越好。&lt;/p&gt;
&lt;p&gt;（3）合同变更索赔带来的风险。在软件的设计与开发过程中，存在着很多不确定因素，因此，变更和索赔通常是合同执行过程中必然要发生的事情。&lt;/p&gt;
&lt;p&gt;（4）系统验收的方式。从严格意义上说，成果一经客户认可，便不再有返工之说，只有索赔或变更之理。因此，客户必须高度重视系统验收这道手续。&lt;/p&gt;
&lt;p&gt;（5）维护期问题。系统最终验收通过之后，一般都有一个较长的系统维护期，这期间客户通常保留着 5%～10% 的合同费用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需方（甲方）合同管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;验收过程是需方对供方的产品或服务进行验收检验，以保证它满足合同条款的要求。&lt;/p&gt;
&lt;p&gt;违约事件处理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;供方（乙方）合同管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目计划的执行，用以授权软件提供商在适当的时候进行工作。&lt;/p&gt;
&lt;p&gt;执行报告，监控合同方的成本、进度和技术绩效。&lt;/p&gt;
&lt;p&gt;质量控制，检验合同方的产品是否合格。&lt;/p&gt;
&lt;p&gt;变更控制，确保变更被正确地批准，以及需要了解情况的人知晓变更的发生。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、控制采购&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制采购是管理采购关系，监督合同绩效，实施必要的变更和纠偏，以及关闭合同的过程。&lt;/p&gt;
&lt;p&gt;本过程的主要作用是，确保买卖双方履行法律协议，满足项目需求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、索赔管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果买卖双方不能就变更补偿达成一致意见，或对变更是否发生存在分歧，那么被请求的变更就成为有争议的变更或潜在的推定变更。此类有争议的变更称为索赔。&lt;/p&gt;
&lt;p&gt;在整个合同生命周期中，通常应该按照合同规定对索赔进行记录、处理、监督和管理。谈判是解决所有索赔和争议的首选方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、检查与审计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;检查是指对承包商正在执行的工作进行结构化审查，可能涉及对可交付成果的简单审查，或对工作本身的实地审查。&lt;/p&gt;
&lt;p&gt;审计是对采购过程的结构化审查。应该在采购合同中明确规定与审计有关的权利和义务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、数据分析（绩效审查）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;依据合同来审查卖方在规定的成本和进度内完成项目范围和达到质量要求的情况。绩效审查的目标在于发现履约情况的好坏。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、结束采购&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;采购结束管理的一个重要工作就是采购审计，采购审计是指对从采购管理规划过程到采购控制过程的所有采购过程进行结构化审查。其目的是找出合同准备或管理方面的成功经验与失败教训，供本项目其他采购合同或执行组织内其他项目的采购合同借鉴。&lt;/p&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="软件项目管理" scheme="http://rainyblue.cn/categories/Educational/Software/" />
        <updated>2024-06-05T06:09:27.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/04/Educational/WeChat/WeChat_Program3/</id>
        <title>第三章：微信小程序页面交互</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/04/Educational/WeChat/WeChat_Program3/"/>
        <content type="html">&lt;p&gt;通过第 2 章的学习，读者已可以在微信小程序项目中实现页面结构和样式效果，但是这些页面并不能进行交互。在实际的微信小程序项目中，用户是可以与微信小程序页面发生交互的，即可以通过触摸、长按等操作实现各种各样的功能。本章将对微信小程序页面交互的相关知识进行详细讲解。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;p&gt;学习目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;熟悉 Page () 函数，能够归纳 Page () 函数及其各个参数的作用&lt;br /&gt;
掌握数据绑定能够运用数据绑定实现页面中数据的显示与修改&lt;/li&gt;
&lt;li&gt;掌握事件绑定，能够在组件触发时执行对应的事件处理函数&lt;/li&gt;
&lt;li&gt;熟悉事件对象，能够总结事件对象的属性及其作用&lt;/li&gt;
&lt;li&gt;掌握 this 关键字的使用，能够运用 this 关键字访问当前页面中的数据或者函数&lt;/li&gt;
&lt;li&gt;掌握 setData () 方法的使用，能够完成数据的设置与更改&lt;br /&gt;
掌握条件渲染，能够运用条件渲染根据不同的判断结果显示不同的组件&lt;/li&gt;
&lt;li&gt;掌握 &amp;lt;block&amp;gt; 标签，能够运用 &amp;lt; block &amp;gt; 标签同时显示或隐藏多个组件&lt;/li&gt;
&lt;li&gt;熟悉 hidden 属性，能够区分其与 wx:if 控制属性的区别&lt;/li&gt;
&lt;li&gt;掌握 data-* 自定义属性，能够完成 data-* 自定义数据的设置与获取&lt;/li&gt;
&lt;li&gt;掌握模块的使用能够完成模块的创建和引入&lt;/li&gt;
&lt;li&gt;掌握列表渲染，能够运用列表渲染将数组中的数据渲染到页面中&lt;/li&gt;
&lt;li&gt;掌握网络请求的实现，能够通过网络请求与服务器进行交互&lt;/li&gt;
&lt;li&gt;掌握提示框的实现，能能够在页面中显示消息提示框&lt;/li&gt;
&lt;li&gt;掌握 WXS 的使用，能够运用 WXS 处理页面中的数据&lt;/li&gt;
&lt;li&gt;掌握上拉触底的实现，能够运用上拉触底实现数据的动态加载&lt;/li&gt;
&lt;li&gt;掌握下拉刷新的实现，能够运用下拉刷新实现数据的重新加载&lt;/li&gt;
&lt;li&gt;掌握双向数据绑定，，能够运用双向绑定实现数据的动态更改、&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1page函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1page函数&#34;&gt;#&lt;/a&gt; 1.Page () 函数&lt;/h1&gt;
&lt;p&gt;在微信小程序中，页面交互的代码写在页面的 JS 文件中，每个页面都需要通过 Page () 函数进行注册。需要注意的是，Page () 函数只能写在微信小程序每个页面对应的 JS 文件中，并且每个页面只能注册一个。&lt;/p&gt;
&lt;p&gt;Page () 函数的参数是一个对象，通过该对象可以指定页面初始数据、页面生命周期回调函数和页面事件处理函数。调用 Page () 函数的示例代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 页面初始数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 页面生命周期回调函数，以 onLoad () 为例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onLoad()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 页面事件处理函数，以 onPullDownRefresh () 为例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;onPullDownRefresh()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;页面初始数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#页面初始数据&#34;&gt;#&lt;/a&gt; 页面初始数据&lt;/h2&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;msg1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;msg2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;World&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;页面生命周期回调函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#页面生命周期回调函数&#34;&gt;#&lt;/a&gt; 页面生命周期回调函数&lt;/h2&gt;
&lt;p&gt;在微信小程序中，页面的生命周期是指每个页面 “加载→渲染→销毁” 的过程，每个页面都有生命周期。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;如果想要在某个特定的时机进行特定的处理，则可以通过页面生命周期回调函数来完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数用于实现在特定的时间点执行特定的操作，随着页面生命周期的变化，页面生命周期回调函数会自动执行。&lt;/p&gt;
&lt;p&gt;页面生命周期回调函数如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onLoad()&lt;/td&gt;
&lt;td&gt;监听页面加载，且一个页面只会在创建完成后触发一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShow()&lt;/td&gt;
&lt;td&gt;监听页面显示，只要页面显示就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onReady()&lt;/td&gt;
&lt;td&gt;监听页面初次渲染完成，一个页面只会调用一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onHide()&lt;/td&gt;
&lt;td&gt;监听页面隐藏，只要页面隐藏就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onUnload()&lt;/td&gt;
&lt;td&gt;监听页面卸载，只要页面被释放就会触发此函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;页面事件处理函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#页面事件处理函数&#34;&gt;#&lt;/a&gt; 页面事件处理函数&lt;/h2&gt;
&lt;p&gt;在微信小程序中，用户可能会在页面上进行一些操作，例如上拉、下拉、滚动页面等，如何在发生这些操作的时候进行处理呢？可以通过页面事件处理函数来完成。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;页面事件处理函数用于监听用户的行为。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;常见的页面事件处理函数如下表所示:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onPullDownRefresh()&lt;/td&gt;
&lt;td&gt;监听用户下拉刷新事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onReachBottom()&lt;/td&gt;
&lt;td&gt;监听页面上拉触底事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onPageScroll()&lt;/td&gt;
&lt;td&gt;页面滚动会连续调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShareAppMessage()&lt;/td&gt;
&lt;td&gt;用户点击页面右上角 “...” 按钮，选择 “转发给朋友” 时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2数据绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2数据绑定&#34;&gt;#&lt;/a&gt; 2. 数据绑定&lt;/h1&gt;
&lt;p&gt;微信小程序提供了 Mustache 语法（又称为双大括号语法）用于实现数据绑定 ， 可 将 data 中 的 数 据 通 过 Mustache 语法输出到页面上。&lt;/p&gt;
&lt;p&gt;通过数据绑定将数据显示在页面中案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 pages/index/index.js 文件，在 data 中定义一个 message 数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello World&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过 Mustache &amp;#123;&amp;#125; 语法将 data 中的数据显示在页面中 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608181250880.png&#34; alt=&#34;image-20240608181250880&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;页面上显示了 message 变量对应的值，也就是把 “Hello World” 渲染到页面代码中所在的位置，实现了从逻辑层到视图层的数据显示。&lt;/p&gt;
&lt;h1 id=&#34;3事件绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3事件绑定&#34;&gt;#&lt;/a&gt; 3. 事件绑定&lt;/h1&gt;
&lt;p&gt;在微信小程序中，事件是视图层到逻辑层的通信方式，通过给组件绑定事件，可以监听用户的操作行为，然后在对应的事件处理函数中进行相应的业务处理。例如，为页面中的按钮绑定事件，当用户点击按钮时，就产生了事件。&lt;/p&gt;
&lt;p&gt;在微信小程序中，常见的事件如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;类别&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;事件名称&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;触发条件&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;点击事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;tap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后马上离开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;长按事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;longpress&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后，超过 350ms 再离开，如果指定了事件回调函数并触发了这个事件，tap 事件将不被触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchstart&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchmove&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸后移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchcancel&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作被打断，例如来电提醒、弹窗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;触摸事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;touchend&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;手指触摸动作结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;其他事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;input&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;键盘输入时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;其他事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;submit&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;携带 form 中的数据触发 submit 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;事件分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冒泡事件：指当一个组件上的事件被触发后，该事件会向父组件传递。&lt;/li&gt;
&lt;li&gt;非冒泡事件：指当一个组件上的事件被触发后，该事件不会向父组件传递。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：点击事件、长按事件、触摸事件都属于冒泡事件，其他事件属于非冒泡事件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;组件绑定事件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若要为组件绑定事件，可以通过为组件添加&lt;span class=&#34;red&#34;&gt; “bind + 事件名称” 属性或 “catch + 事件名称” 属性&lt;/span&gt;来完成，属性的值为事件处理函数，当组件的事件被触发时，会主动执行事件处理函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;bind 和 catch 的区别在于，bind 不会阻止冒泡事件向上冒泡，而 catch 可以阻止冒泡事件向上冒泡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为组件绑定事件案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中给 button 组件绑定 tap 事件，事件处理函数为 compare () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;compare&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;比较&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;bindtap 表示绑定 tap 事件。&lt;br /&gt;
在触屏手机中，tap 事件在用户手指触摸 button 组件离开后触发，而在微信开发者工具中，tap 事件在鼠标单击 button 组件时触发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中定义 compare () 函数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;比较按钮被点击了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;事件处理函数的简写形式&lt;/p&gt;
&lt;p&gt;由于 compare () 函数是 {} 对象的方法，所以可以将 compare () 函数写成方法的简写形式，即省略 compare 后面的冒号和 function 关键字&lt;/p&gt;
&lt;p&gt;示例代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;compare&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;比较按钮被点击了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;4事件对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4事件对象&#34;&gt;#&lt;/a&gt; 4. 事件对象&lt;/h1&gt;
&lt;p&gt;概念：在开发微信小程序的过程中，有时需要获取事件发生时的一些信息，例如事件类型、事件发生的时间、触发事件的对象等，此时可以通过事件对象来获取。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;当事件处理函数被调用时，微信小程序会将事件对象以参数的形式传给事件处理函数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;事件对象的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;事件类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeStamp&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;事件生成的时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;触发事件的组件的一些属性值集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currentTarget&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;当前组件的一些属性值集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mark&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;事件标记数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;事件对象的使用&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;修改 pages/index/index.js 文件中的 compare () 函数，通过参数接收事件对象，并将事件对象输出到控制台。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token comment&#34;&gt;// 函数参数 e 表示事件对象  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单击 “比较” 按钮，控制台中输出的结果如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618234427693.png&#34; alt=&#34;image-20240618234427693&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从上图中可以看出，控制台成功输出了事件对象的相关信息&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;target 属性和 currentTarget 属性&lt;/p&gt;
&lt;p&gt;事件对象属性中的 target 和 currentTarget 属性的对比。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target 表示获取触发事件的组件的一些属性值集合&lt;/li&gt;
&lt;li&gt;currentTarget 表示获取当前组件的一些的属性值集合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事件对象属性中 target 和 currentTarget 的区别案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewtap&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;outer&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    outer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;inner&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        inner&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中添加 viewtap () 事件处理函数。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;viewtap&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;currentTarget&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 e.target.id 或 e.currentTarget.id 都可以获取发生事件的组件的 id，由于 outer 和 inner 的 id 不同，因此可以区分这两个组件。&lt;/p&gt;
&lt;p&gt;运行程序测试，当单击 outer 时，控制台中的输出结果为 outer-outer，而单击 inner 时，控制台中的输出结果为 inner-outer。&lt;/p&gt;
&lt;p&gt;由此可见，e.target 获取的是子元素的属性值集合，而 e.currentTarget 获取到的是父元素的属性值集合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;5this关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5this关键字&#34;&gt;#&lt;/a&gt; 5.this 关键字&lt;/h1&gt;
&lt;p&gt;在微信小程序开发过程中，有时需要在函数中访问页面中定义的一些数据，或者调用页面中定义的一些函数，此时可以通过 this 关键字来实现。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;this 关键字代表当前页面对象。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;this 关键字的使用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义 data 数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token function-variable function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义 test () 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test()函数执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 通过 this 关键字访问 data 中的 num 数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 通过 this 关键字调用 test () 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;6setdata方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6setdata方法&#34;&gt;#&lt;/a&gt; 6.setData () 方法&lt;/h1&gt;
&lt;p&gt;在微信小程序开发过程中，虽然通过数据绑定可以将 data 中定义的数据渲染到页面，但是如果数据发生了变化，页面并不会同步更新数据。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;为了实现在数据变化时使页面同步更新，微信小程序提供了 setData () 方法&lt;/span&gt;，该方法可以立即改变 data 中的数据，并通过异步的方式将数据渲染到页面上。&lt;/p&gt;
&lt;p&gt;setData () 方法通过 this 关键字调用，该方法的基本语法格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; callback&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;setData () 方法的参数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;当前要改变的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;callback&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;setData () 方法引起的页面更新渲染完毕后的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 个参数 data 是 object 类型的数据，以 key: value 的形式将 data 中的 key 对应值设置成 value；&lt;/li&gt;
&lt;li&gt;第 2 个参数 callback 是回调函数，可以省略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;setData () 方法的使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中编写页面中所需的数据 message 和事件处理函数 changeText ()。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Hello World&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;changeText&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hello 微信小程序&#39;&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;changeText&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;给 view 组件绑定了 tap 事件，事件处理函数为 changeText ()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行代码，在微信开发者工具中单击前和单击后的页面效果如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240618235451427.png&#34; alt=&#34;image-20240618235451427&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;7条件渲染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7条件渲染&#34;&gt;#&lt;/a&gt; 7. 条件渲染&lt;/h1&gt;
&lt;p&gt;在微信小程序开发过程中，如果需要根据不同的判断结果显示不同的组件，可以使用条件渲染来实现。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;条件渲染通过标签的 wx:if 控制属性来完成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 wx:if=“” 来判断是否需要渲染标签对应的组件，如果变量 val 的值为 true，则渲染组件并输出；变量 val 的值为 false，则不渲染组件&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;True&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过变量 condition 的值来控制是否渲染 view 组件&lt;/p&gt;
&lt;p&gt;给标签设置了 wx:if 控制属性后，可以为后面的标签设置 wx:elif、wx:else 控制属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wx:elif 控制属性表示当前面标签的 if 条件不满足时，继续判断 elif（else if）的条件；&lt;/li&gt;
&lt;li&gt;wx:else 控制属性表示当前面的 if 条件不满足时，渲染 else 对应的组件。&lt;/li&gt;
&lt;li&gt;wx:else 控制属性也可以直接出现在 wx:if 控制属性的后面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;elif&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;#8. &amp;lt;block&amp;gt; 标签&lt;/p&gt;
&lt;p&gt;通过 &amp;lt;block&amp;gt; 标签可以创建一个容器，该标签并不是一个组件，它仅仅是一个包装元素，不会在页面中做任何渲染，只接收控制属性。&lt;/p&gt;
&lt;p&gt;&amp;lt;block&amp;gt; 标签的示例代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;view1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;view2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&amp;lt;block&amp;gt; 标签中 wx:if 控制属性的值为 true，在页面上会渲染出 &amp;lt; block &amp;gt; 组件内部的两个 view 组件&lt;/p&gt;
&lt;h1 id=&#34;9hidden属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9hidden属性&#34;&gt;#&lt;/a&gt; 9.hidden 属性&lt;/h1&gt;
&lt;p&gt;除 wx:if 控制属性外，hidden 属性也可以控制组件的显示与隐藏，条件为 true 时隐藏组件&lt;/p&gt;
&lt;p&gt;里面的内容，条件为 false 时显示组件里面的内容，示例代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hidden为true时不显示&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;hidden 与 wx:if 的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wx:if 控制属性的初始渲染条件为 false，只有条件第一次变为 true 的时候才开始渲染，hidden 属性所在的组件始终会被渲染，只是简单的控制显示与隐藏。&lt;/li&gt;
&lt;li&gt;wx:if 控制属性有更大的切换开销而 hidden 属性有更高的初次渲染开销。&lt;/li&gt;
&lt;li&gt;在需要频繁切换显示和隐藏的情境下用 hidden 更好，而如果运行时条件不太可能会改变则用 wx:if 控制属性更好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;10data-自定义属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10data-自定义属性&#34;&gt;#&lt;/a&gt; 10.data-* 自定义属性&lt;/h1&gt;
&lt;p&gt;微信小程序可以通过自定义属性来进行传参。&lt;/p&gt;
&lt;p&gt;微信小程序中的 data-* 是一个自定义属性，data-* 自定义属性实际上是由 data - 前缀加上一个自定义的属性名组成的，属性名中如果有多个单词，用连字符 “-” 连接。&lt;/p&gt;
&lt;p&gt;data-* 自定义属性的属性值表示要传参的数据。&lt;/p&gt;
&lt;p&gt;在事件处理函数中通过 target 或 currentTarget 对象的 dataset 属性可以获取数据。&lt;/p&gt;
&lt;p&gt;dataset 属性是一个对象，该对象的属性与 data-* 自定义属性相对应。&lt;/p&gt;
&lt;p&gt;通过设置 data-* 自定义属性实现参数的传递：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xiaochengxu&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-age&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;6&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  获取姓名和年龄&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;姓名：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;年龄：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件中编写页面逻辑。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;初始名字&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dataset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token literal-property property&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dataset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在微信开发者工具中，单击 “获取姓名和年龄” 前后的对比如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608182842473.png&#34; alt=&#34;image-20240608182842473&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;11模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11模块&#34;&gt;#&lt;/a&gt; 11. 模块&lt;/h1&gt;
&lt;p&gt;在微信小程序中，为了提高代码的可复用性，通常会将一些公共的代码抽离成单独的 JS 文件，作为模块使用，每个 JS 文件均为一个模块&lt;/p&gt;
&lt;p&gt;微信小程序提供了模块化开发的语法，可以使用 module.exports 语法对外暴露接口，然后在需要使用模块的地方通过 require () 函数引入模块&lt;/p&gt;
&lt;p&gt;创建和引入模块案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建模块。在项目的根目录下创建一个 utils 目录，用于保存项目中的模块，然后在该目录下创建 welcome.js 文件。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;welcome&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 module.exports 语法暴露了一个对象，作为模块使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入模块。在页面的 JS 文件中使用 require () 函数将模块引入。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; welcome &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;../../utils/welcome.js&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;onLoad&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;welcome&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;require () 函数的参数是模块的路径，并且需要使用相对路径，不能使用绝对路径，否则会报错。模块路径中，文件扩展名 “.js” 可以省略&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;12列表渲染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12列表渲染&#34;&gt;#&lt;/a&gt; 12. 列表渲染&lt;/h1&gt;
&lt;p&gt;列表渲染通过 wx:for 控制属性来实现。&lt;/p&gt;
&lt;p&gt;微信小程序进行列表渲染时，会根据列表中数据的数量渲染相应数量的内容。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;在 wx:for 控制属性所在标签的内部，可以使用 item 变量获取当前项的值，使用 index 变量获取当前项的数组索引或对象属性名。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果不想使用 item 和 index 这两个变量名，还可以通过 wx:for-item 控制属性更改 item 的变量名；通过 wx:for-index 控制属性更改 index 的变量名。&lt;/p&gt;
&lt;p&gt;wx:key 控制属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wx:for 控制属性通常搭配 wx:key 控制属性使用。&lt;/li&gt;
&lt;li&gt;wx:key 控制属性用于为每一项设置唯一标识，这样可以在数据改变后页面重新渲染时，使原有组件保持自身的状态，而不是重新创建，这样可以提高列表渲染的效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置 wx:key&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果 item 本身就是一个具有唯一性的字符串或数字，则可以将 wx:key 的值设置为 * this，*this 表示 item 本身。&lt;/li&gt;
&lt;li&gt;如果给定的数据是一个由对象作为数组元素构成的数组，那么可以将 wx:key 的值设置为对象中的一个 “值具有唯一性” 的属性的名称。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;数组的列表渲染案例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构，通过列表渲染的方式将 arr 数组渲染到页面中。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;*this&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数组中包含对象情况下的列表渲染案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.js 文件的 Page ({}) 中编写页面数据。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;梅&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;兰&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;竹&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;菊&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;id 是每条数据的唯一标识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中编写页面结构，将 list 数组中的数据在页面中显示出来。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;-----&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;=======&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;数组中包含对象情况下的列表渲染的页面效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183458412.png&#34; alt=&#34;image-20240608183458412&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 pages/index/index.wxml 文件中修改页面结构，实现通过 wx:for-item、wx:for-index 更改 item 和 index 的变量名。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;item2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;for-index&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;index2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 通过 wx:for-item 更改 item 的变量名为 item2，通过 wx:for-index 更改 index 的变量名为 index2 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更名后列表渲染的页面效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240608183658029.png&#34; alt=&#34;image-20240608183658029&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;13网络请求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13网络请求&#34;&gt;#&lt;/a&gt; 13. 网络请求&lt;/h1&gt;
&lt;p&gt;客户端与服务器进行交互时，客户端请求服务器的过程称为网络请求。&lt;/p&gt;
&lt;p&gt;例如，获取用户的头像信息，需要客户端向服务器发送请求，服务器查询到数据后把数据传递给客户端。&lt;/p&gt;
&lt;p&gt;在微信小程序中实现网络请求时，需要服务器给微信小程序提供服务器接口。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;在微信小程序中发起网络请求可以通过调用 wx.request () 方法来实现。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;wx.request () 方法的常见选项&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;开发者服务器接口地址，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;string/object/ArrayBuffer&lt;/td&gt;
&lt;td&gt;请求的参数，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;设置请求的 header, 默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;method&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;HTTP 请求方式，默认值为 GET&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dataType&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;返回的数据格式，默认值为 json&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;responseType&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;响应的数据类型，默认值为 text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：method 选项的合法值包括 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE 和 CONNECT，具体使用哪个，以服务器接口的要求为准。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每个 wx:request () 方法都是一个请求任务，可以通过 abort () 方法将其取消。&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; requestTask &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;URL地址&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;//wx.request () 的常见参数……&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消请求任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;requestTask&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;abort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 wx.request () 方法发起网络请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用 abort () 方法取消请求任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 wx.request () 方法发起一个 GET 方式的请求&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;URL地址&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 表示服务器接口地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 表示 HTTP 请求方式为 GET&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;zs&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 设置了请求参数 name&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 定义了接口调用成功的回调函数 success &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;14提示框&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14提示框&#34;&gt;#&lt;/a&gt; 14. 提示框&lt;/h1&gt;
&lt;p&gt;在微信小程序中，如果想实现点击一个按钮弹出&lt;/p&gt;
&lt;p&gt;一个提示框的效果，可以使用以下 2 种方式。&lt;/p&gt;
&lt;p&gt;① wx.showLoading () 方法&lt;/p&gt;
&lt;p&gt;wx.showLoading () 方法用于弹出加载提示框，加载提示框弹出后，不会自动关闭，需要手动调用 wx.hideLoading () 方法才能关闭提示框。&lt;/p&gt;
&lt;p&gt;wx.showLoading () 方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;提示的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mask&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示透明蒙层，防止触摸穿透，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;success&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.showLoading () 方法的使用案例&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 用于弹出加载提示框，提示内容为 “加载中”&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showLoading&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;加载中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 用于在 2 秒后关闭加载提示框&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hideLoading&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;② wx.showToast () 方法&lt;/p&gt;
&lt;p&gt;提示框 wx.showToast () 方法用于显示消息提示框，该方法的常用选项如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;提示的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;icon&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图标，默认值为 success&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;提示的停留时间，单位为毫秒，默认值为 1500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mask&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示透明蒙层，防止触摸穿透，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complete&lt;/td&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;wx.showToast () 方法的使用案例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showToast&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;icon&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;success&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置了消息提示框的内容为 “成功”，图标为 success，提示的停留时间为 2 秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;15wxs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15wxs&#34;&gt;#&lt;/a&gt; 15.WXS&lt;/h1&gt;
&lt;p&gt;WXS（WeiXin Script）是微信小程序独有的一套脚本语言，可以结合 WXML 构建出页面结构。 WXS 的典型应用场景是 “过滤器”，所谓的过滤器是指在渲染数据之前，对数据进行处理，过滤器处理的结果最终会显示在页面上。&lt;/p&gt;
&lt;p&gt;WXS 的特点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;WXS 与 JavaScript 不同；&lt;/li&gt;
&lt;li&gt;WXS 不能作为组件的事件回调；&lt;/li&gt;
&lt;li&gt;具有隔离性；&lt;/li&gt;
&lt;li&gt;在 iOS 设备上效率高。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了降低 WXS 的学习成本，WXS 在设计时借鉴了 JavaScript 的语法，但是本质上，WXS 和 JavaScript 本质上是完全不同的两种语言，在使用 WXS 时应该注意以下 3 点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;WXS 有 8 种数据类型，包括 number（数值）、string（字符串）、boolean（布尔）、object（对象）、function（函数）、array（数组）、date（日期）、regexp（正则）。&lt;/li&gt;
&lt;li&gt;WXS 不支持 let、const、解构赋值、展开运算符、箭头函数、对象属性简写等语法，WXS 支持 var 定义变量、普通 function 函数等语法。&lt;/li&gt;
&lt;li&gt;WXS 遵循 CommonJS 规范。在每个模块内部，module 变量代表当前模块，这个变量是一个对象，它的 exports 属性（即 module.exports）是对外的接口，在使用 require () 函数引用其他模块时，得到的是被引用模块中 module.exports 所指的对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;WXS 不能作为组件的事件回调 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WXS 经常与 Mustache 语法配合使用，但是在 WXS 中定义的函数不能作为组件的事件回调函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具有隔离性&lt;/p&gt;
&lt;p&gt;隔离性是指 WXS 代码的运行环境和其他 JavaScript 代码是隔离的，体现在以下两方面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 WXS 代码中不能调用页面的 JS 文件中定义的函数。&lt;/li&gt;
&lt;li&gt;在 WXS 代码中不能调用微信小程序提供的 API。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 iOS 设备上效率高&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 iOS 设备上，微信小程序内 WXS 代码的执行速度比 JavaScript 代码快 2~20 倍；在 Android 设备上，两者的运行效率无差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;16上拉触底&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16上拉触底&#34;&gt;#&lt;/a&gt; 16 上拉触底&lt;/h1&gt;
&lt;p&gt;在原生应用或者网页的交互中，经常会有上拉加载这个功能。用户在浏览列表页面时，手指在手机屏幕上进行上拉滑动操作，通过上拉加载请求数据，增加列表数据。&lt;/p&gt;
&lt;p&gt;微信小程序提供了 onReachBottom () 事件处理函数，即页面上拉触底事件处理函数，用于监听当前页面的上拉触底事件。&lt;/p&gt;
&lt;p&gt;onReachBottom () 事件处理函数的示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;onReachBottom&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; function () &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console.log(&#39;触发了上拉触底的事件&#39;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在默认情况下，触发上拉触底事件时，滚动条距离页面底部的距离为 50px，即上拉触底距离为 50px。在实际开发中，开发人员可以根据实际需求，在全局或页面的 JSON 配置文件中通过 onReachBottomDistance 属性修改上拉触底的距离。&lt;/p&gt;
&lt;p&gt;在页面的 JSON 文件中配置上拉触底的距离为 200px：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;onReachBottomDistance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;17下拉刷新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#17下拉刷新&#34;&gt;#&lt;/a&gt; 17 下拉刷新&lt;/h1&gt;
&lt;p&gt;在原生应用的交互中，经常会有下拉刷新操作，即当用户下拉页面到达顶部时，再进行下拉可以将数据重新加载。&lt;/p&gt;
&lt;p&gt;启用下拉刷新的方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局开启下拉刷新
&lt;ul&gt;
&lt;li&gt;在 app.json 文件的 window 节点中，将 enablePullDownRefresh 设置为 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局部开启下拉刷新
&lt;ul&gt;
&lt;li&gt;在页面的 JSON 文件中，将 enablePullDownRefresh 设置为 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开启下拉刷新后，当下拉操作执行时，就会触发 onPullDownRefresh () 事件处理函数。&lt;/p&gt;
&lt;p&gt;onPullDownRefresh () 事件处理函数的示例代码如下。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;触发了下拉刷新的事件&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行下拉刷新操作后，页面顶部会出现加载提示，并且页面需要延迟一段时间才会弹回去。&lt;/p&gt;
&lt;p&gt;为了优化用户体验，可以在完成下拉刷新的数据加载后，立即调用 wx.stopPullDownRefresh () 方法停止使用当前页面的下拉刷新加载效果&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stopPullDownRefresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <updated>2024-06-04T02:50:24.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/03/Educational/WeChat/WeChat_Program2/</id>
        <title>第二章：微信小程序页面制作</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/03/Educational/WeChat/WeChat_Program2/"/>
        <content type="html">&lt;p&gt;若想开发一个微信小程序，首先应学习如何进行页面制作，也就是学习如何搭建微信小程序的页面结构并实现美观的页面样式效果。为了使初学者快速掌握微信小程序的页面制作，本章将从微信小程序常用组件、页面样式等方面进行详细讲解。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;p&gt;学习目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解 WXML 的概念，能够说出 WXML 的特点、WXML 与 HTML 的区别&lt;/li&gt;
&lt;li&gt;了解 WXSS 的概念，能够说出 WXSS 的特点、WXSS 与 CSS 的区别&lt;/li&gt;
&lt;li&gt;了解组件的概念，食能够说出组件的特点及常用的组件&lt;/li&gt;
&lt;li&gt;掌握页面路径的配置方法，能够运用该方法进行页面管理&lt;/li&gt;
&lt;li&gt;掌握 view 组件的使用方法，能够灵活运用 view 组件实现页面的布局效果&lt;/li&gt;
&lt;li&gt;掌握 image 组件的使用方法，能够灵活运用 image 组件完成图片插入操作&lt;/li&gt;
&lt;li&gt;掌握 rx 单位的使用方法，能够灵活运用 rpx 单位解决屏幕适配的问题&lt;/li&gt;
&lt;li&gt;掌握页面样式的导入方法，能够灵活运用该方法导入公共样式&lt;/li&gt;
&lt;li&gt;掌握 swiper 和 swiper-item 组件的使用方法，能够灵活运用 swiper 和 swiperitem 组件完成轮播图的制作&lt;/li&gt;
&lt;li&gt;掌握 text 组件的使用方法，能够灵活运用 text 组件定义行内文本&lt;/li&gt;
&lt;li&gt;掌握 Flex 布局的使用方法，能够使用 Flex 布局的相关属性完成页面布局&lt;/li&gt;
&lt;li&gt;掌握导航栏的配置方法，能够完成导航栏标题颜色、背景颜色等页面效果的设置&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;1-wxml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-wxml&#34;&gt;#&lt;/a&gt; 1 WXML&lt;/h1&gt;
&lt;p&gt;概念：在制作微信小程序页面时，&lt;span class=&#34;red&#34;&gt;页面的结构&lt;/span&gt;可以用 WXML 来实现。WXML 是微信团队为微信小程序开发而设计的一套语言，可以结合微信小程序中的各种组件构建页面结构。&lt;/p&gt;
&lt;p&gt;WXML 与 HTML 的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTML 和 WXML 使用的标签不同。例如，HTML 经常使用 &amp;lt;div&amp;gt; 标签搭建页面结构，而 WXML 则使用 &amp;lt; view &amp;gt; 标签搭建页面结构；HTML 经常使用 &amp;lt; span &amp;gt; 标签定义行内文本 ，而 WXML 则使用 &amp;lt; text &amp;gt; 标签定义行内文本 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 提供了和 Vue.js 中模板语法类似的模板语法，例如数据绑定、列表渲染、条件渲染等，而 HTML 中没有。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML 页面可以在浏览器中预览，而 WXML 页面仅能在微信客户端和微信开发者工具中预览。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 中的单标签必须在结尾 “&amp;gt;” 前面加上 “/”，否则微信开发者工具会报语法错误，而 HTML 中允许省略单标签 “&amp;gt;” 前面的 “/”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WXML 中所使用的标签是微信小程序定义的标签，应避免使用 HTML 标签，这样才能保证页面被正确转译。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;2-wxss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-wxss&#34;&gt;#&lt;/a&gt; 2 WXSS&lt;/h1&gt;
&lt;p&gt;概念：在微信小程序的页面制作中，使用 WXML 搭建页面结构以后，也需要设置样式来美化页面。微信小程序提供了一套类似 CSS 的语言 WXSS，通过 WXSS 可以&lt;span class=&#34;red&#34;&gt;美化页面样式&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;WXSS 与 CSS 的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同的手机屏幕分辨率不同，如果用 CSS 中的 px 单位，会遇到屏幕适配的问题，需要手动进行像素单位换算。而微信小程序提供了一个新的单位 rpx，使用 rpx 单位可以很轻松地适配各种手机屏幕。&lt;/li&gt;
&lt;li&gt;在微信小程序中，项目根目录中的 app.wxss 文件作为全局样式，会作用于当前微信小程序的所有页面，而局部页面的 WXSS 样式仅对当前页面生效，CSS 则没有这样的功能。&lt;/li&gt;
&lt;li&gt;在 WXSS 中设置背景图片的时候，可以使用网络图片或者以 Base64 格式编码的图片，不能使用本地图片，例如，“background-image:url (&#39;/images/1.png&#39;); ” 是无效的，而 CSS 可以使用本地图片来设置背景图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;3-常用组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-常用组件&#34;&gt;#&lt;/a&gt; 3 常用组件&lt;/h1&gt;
&lt;p&gt;概念：微信小程序页面和普通网页都是通过标签来定义页面结构的，但是在微信小程序开发中，更习惯将&lt;span class=&#34;red&#34;&gt;这些标签称为组件&lt;/span&gt;，这些组件自带微信风格的 UI 样式和特定功能效果。微信小程序提供了丰富的组件，通过组合这些组件可以进行高效开发。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;组件&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;view&lt;/td&gt;
&lt;td&gt;视图容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;video&lt;/td&gt;
&lt;td&gt;视频&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox&lt;/td&gt;
&lt;td&gt;复选框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;button&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio&lt;/td&gt;
&lt;td&gt;单选按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;image&lt;/td&gt;
&lt;td&gt;图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td&gt;表单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;音频&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;4-页面路径配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-页面路径配置&#34;&gt;#&lt;/a&gt; 4 页面路径配置&lt;/h1&gt;
&lt;p&gt;开发一个功能完整的微信小程序时，一般需要制作多个页面。&lt;/p&gt;
&lt;p&gt;在微信小程序中可以通过 app.json 全局配置文件中的 pages 配置项来配置微信小程序的页面路径。pages 配置项是一个数组，该数组用于指定微信小程序由哪些页面组成，数组中的每一个元素都对应一个页面的路径信息。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#34;pages&#34;: [&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &#34;pages/index/index&#34;,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &#34;pages/logs/logs&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;],&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上述代码中共配置了两个页面，分别是 pages/index/index 页面和 pages/logs/logs 页面。&lt;/p&gt;
&lt;p&gt;默认情况下，pages 数组中的第一项为微信小程序的初始页面，即 pages/index/index 页面。如果想将其他页面设置为初始页面，读者可以手动调整数组中元素的顺序，将需要设为初始页面的页面路径设为第一项即可。&lt;/p&gt;
&lt;p&gt;pages/index/index 中的 pages 表示存放页面的目录，index/index 中第一个 index 表示 index 目录，第二个 index 表示文件名。 同理，pages/logs/logs 中的 pages 表示存放页面的目录，logs/logs 中第一 logs 表示 logs 目录，第二个 logs 表示文件名。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;注意：文件名不需要写后缀名，以 pages/index/index 页面为例，配置成功后，微信开发者工具会自动生成 index.wxml 文件、index.wxss 文件、index.js 文件和 index.json 文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;创建新页面的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 pages 数组中新增一项来新增页面
&lt;ul&gt;
&lt;li&gt;如果需要在微信小程序中创建一个新的页面，可以在&lt;span class=&#34;red&#34;&gt; app.json 文件的 pages 数组中增加一项新页面的信息&lt;/span&gt;，微信开发者工具会创建对应的页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通过项目资源管理器新增页面
&lt;ul&gt;
&lt;li&gt;通过在微信开发者工具的&lt;span class=&#34;red&#34;&gt;项目资源管理器的 pages 目录下右键单击鼠标，选择 “新建 Page” 来创建页面&lt;/span&gt;，微信开发者工具会自动在 app.json 文件中添加对应的路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;如果对页面文件直接进行删除操作，则不会触发代码的自动更新效果，需要手动修改 app.json 文件中的 pages 数组&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;5-view组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-view组件&#34;&gt;#&lt;/a&gt; 5 view 组件&lt;/h1&gt;
&lt;p&gt;在 HTML 中，&amp;lt;div&amp;gt; 标签可以定义文档中的分区或节，把文档分割为独立的、不同的部分，在 WXML 中，view 组件起着类似的作用。view 组件表示视图容器，常用于实现页面的布局效果。&lt;/p&gt;
&lt;p&gt;view 组件通过 &amp;lt;view&amp;gt; 标签定义，示例代码如下。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;view组件&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;view 组件提供了一些属性，用于实现特殊的效果。&lt;/p&gt;
&lt;p&gt;view 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hover-class&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定手指按下去的样式。当该属性值为 none 时，没有点击态。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-stop-propagation&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;指定是否阻止本节点的祖先节点出现点击态。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-start-time&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;手指按住后多久出现点击态，单位为毫秒。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-stay-time&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;手指松开后点击态保留时间，单位为毫秒。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;点击态是指手指在屏幕上按下时的状态&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;6-image组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-image组件&#34;&gt;#&lt;/a&gt; 6 image 组件&lt;/h1&gt;
&lt;p&gt;微信小程序提供了用于显示图片的 image 组件，并且 image 组件的功能比 HTML 中的 &amp;lt;img&amp;gt; 标签更强大，支持对图片进行剪裁和缩放。image 组件的默认宽度为 300px，默认高度为 240px。&lt;/p&gt;
&lt;p&gt;image 组件通过 &amp;lt;image&amp;gt; 标签定义，支持单标签和双标签两种写法&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 单标签写法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;图片资源地址&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 双标签写法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;image&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;图片资源地址&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;image 组件的常用属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图片资源地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mode&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;图片剪裁、缩放的模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;webp&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;默认不解析 WebP 格式，只支持网络资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lazy-load&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;图片延迟加载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show-menu-by-longpress&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;长按图片显示的菜单，菜单提供发送给朋友、收藏、保存图片、搜一搜等功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binderror&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当错误发生时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindload&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当图片载入完毕时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;图片资源地址 src 可以是本地路径或 URL 地址。如果使用本地路径，可以在项目中创建一个目录，例如 images 目录，并在该目录中放入图片，例如 test.jpg，然后通过本地路径 /images/test.jpg 即可引用图片。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;image 组件的 mode 属性用于指定图片的裁剪模式或缩放模式&lt;/p&gt;
&lt;p&gt;常用的 mode 合法值：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;模式&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;合法值&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;缩放&lt;/td&gt;
&lt;td&gt;scaleToFill&lt;/td&gt;
&lt;td&gt;不保持宽高比缩放图片，使图片的宽高完全拉伸至填满 image 元素。此合法值为 mode 属性的默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缩放&lt;/td&gt;
&lt;td&gt;aspectFit&lt;/td&gt;
&lt;td&gt;保持宽高比缩放图片，使图片的长沙能完全显示出来，即可以完整地将图片显示出来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缩放&lt;/td&gt;
&lt;td&gt;aspectFill&lt;/td&gt;
&lt;td&gt;保持宽高比缩放图片，只保证图片的短边能完全显示出来，即图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缩放&lt;/td&gt;
&lt;td&gt;widthFix&lt;/td&gt;
&lt;td&gt;宽度不变，高度自动变化，保持原图宽高比不变&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缩放&lt;/td&gt;
&lt;td&gt;heightFix&lt;/td&gt;
&lt;td&gt;高度不变，宽度自动变化，保持原图宽高比不变&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;top&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的顶部区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;bottom&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的底部区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;center&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的中间区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;left&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的左边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;right&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的右边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;top left&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的左上边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;top right&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的右上边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;bottom left&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的左下边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;裁剪&lt;/td&gt;
&lt;td&gt;bottom right&lt;/td&gt;
&lt;td&gt;不缩放图片，只显示图片的右下边区域&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;7-rpx单位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-rpx单位&#34;&gt;#&lt;/a&gt; 7 rpx 单位&lt;/h1&gt;
&lt;p&gt;rpx（Responsive Pixel，自适应像素）。&lt;/p&gt;
&lt;p&gt;rpx 单位是微信小程序独有的、用来解决屏幕适配问题的尺寸单位&lt;/p&gt;
&lt;p&gt;rpx 单位的设计思想是把所有设备的屏幕在宽度上等分为 750 份，即屏幕的总宽度为 750rpx。微信小程序在不同设备上运行的时候，会自动把 rpx 单位换算成对应的像素单位来渲染，从而实现屏幕适配。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;屏幕宽度&lt;/th&gt;
&lt;th&gt;rpx 换算 rpx（屏幕宽度 ÷ 750）&lt;/th&gt;
&lt;th&gt;px 换算 rpx（750 ÷ 屏幕宽度）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;320px&lt;/td&gt;
&lt;td&gt;1rpx ≈ 0.427px&lt;/td&gt;
&lt;td&gt;1px ≈ 2.34rpx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;375px&lt;/td&gt;
&lt;td&gt;1rpx = 0.5px&lt;/td&gt;
&lt;td&gt;1px = 2rpx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;414px&lt;/td&gt;
&lt;td&gt;1rpx = 0.552px&lt;/td&gt;
&lt;td&gt;1px ≈ 1.81rpx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;8-样式导入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-样式导入&#34;&gt;#&lt;/a&gt; 8 样式导入&lt;/h1&gt;
&lt;p&gt;在微信小程序中，多个不同的页面可能需要编写相同的样式代码，这样会造成代码冗余。为了避免代码冗余，可以将&lt;span class=&#34;red&#34;&gt;相同的样式代码抽为公共样式，放到一个单独的文件中，通过只修改公共样式实现对所有相关页面样式的修改&lt;/span&gt;，从而节约时间、方便管理。&lt;/p&gt;
&lt;p&gt;步骤 1：在微信小程序的目录下创建一个公共样式文件 page.wxss，在该文件中编写公共样式代码。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/** page.wxss **/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.name&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 5px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;步骤 2：在 pages/index/index.wxss 文件中导入 page.wxss 文件。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/** index.wxss **/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@import “/page.wxss&#34;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;添加上述代码后，即可导入 page.wxss 文件中定义的样式。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;9-swiper和swiper-item组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9-swiper和swiper-item组件&#34;&gt;#&lt;/a&gt; 9 swiper 和 swiper-item 组件&lt;/h1&gt;
&lt;p&gt;swiper 组件表示滑块视图容器，用于创建一块可以滑动的区域。&lt;/p&gt;
&lt;p&gt;swiper 组件内部需要嵌套 swiper-item 组件，swiper-item 组件表示滑块视图内容。&lt;/p&gt;
&lt;p&gt;swiper 组件的默认高度为 150px，默认宽度为 100%。swiper-item 组件的初始高度和初始宽度都为 100%。&lt;/p&gt;
&lt;p&gt;swiper 组件通过 &amp;lt;swiper&amp;gt; 标签定义，swiper-item 组件通过 &amp;lt; swiper-item &amp;gt; 标签定义&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;swiper 组件为外层容器，内层有 3 个 swiper-item 组件，表示当前滑块视图内容一共有 3 项。滑块视图内容在初始状态下只显示第 1 项，向左滑动显示第 2 项，再向右滑动可以返回第 1 项。&lt;/p&gt;
&lt;p&gt;swiper 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;indicator-dots&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示面板指示点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indicator-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;指示点颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indicator-active-color&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;当前选中的指示点颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否自动切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;current&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;当前所在滑块的 index, 默认为 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;interval&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;自动切换时间间隔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;circular&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否采用衔接滑动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 实现轮播图3秒自动无缝切换效果，同时显示面板指示点，并设置指示点颜色为黄色、当前选中指示点颜色为红色&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;indicator-dots&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;indicator-color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;yellow&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;indicator-active-color&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;autoplay&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;3000&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;circular&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lightblue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lightcoral&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lightgrey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;swiper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;10-text-组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-text-组件&#34;&gt;#&lt;/a&gt; 10 text 组件&lt;/h1&gt;
&lt;p&gt;在 HTML 中，一般通过 &amp;lt;span&amp;gt; 标签定义行内文本，而在微信小程序中，则可以通过 text 组件定义行内文本。需要注意的是，text 组件内部只能嵌套 text 组件。&lt;/p&gt;
&lt;p&gt;text 常用属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;user-select&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;文本是否可选，该属性会使文本节点显示为 inline-block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;space&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;显示连续空格，可选参数为 &lt;strong&gt;ensp&lt;/strong&gt;（中文字符空格一半大小）、&lt;strong&gt;emsp&lt;/strong&gt;（中文字符空格大小）和 &lt;strong&gt;nbsp&lt;/strong&gt;（根据字体设置的空格大小）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decode&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否解码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;text&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;user-select&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;微信小程序&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置 user-select 属性值为 true，实现长按选中文本&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;11-flex布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-flex布局&#34;&gt;#&lt;/a&gt; 11 Flex 布局&lt;/h1&gt;
&lt;p&gt;在微信小程序中可以使用 Flex 布局实现自适应页面。&lt;/p&gt;
&lt;p&gt;Flex 布局又称为弹性盒（Flexible Box）布局，它为盒子模型提供了很强的灵活性，任何一个容器都可以指定为 Flex 布局。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flex 容器：采用 Flex 布局的元素，称为 Flex 容器（简称容器）。&lt;/p&gt;
&lt;p&gt;Flex 项目：Flex 容器的所有子元素自动成为容器成员，称为 Flex 项目（简称项目）。&lt;/p&gt;
&lt;p&gt;Flex 容器内有两根轴：主轴（Main Axis）和交叉轴（Cross Axis），默认情况下主轴为水平方向，交叉轴为垂直方向，项目默认沿主轴排列。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;若想使用 Flex 布局，首先要设置父元素的 display 属性为 flex，表示将父元素设置为容器，然后就可以使用容器和项目的相关属性了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;容器常用属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;flex-direction&lt;/td&gt;
&lt;td&gt;决定主轴的方向（即项目的排列方向），默认值为 row, 即主轴为从左到右的水平方向，项目按照主轴方向排列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flex-wrap&lt;/td&gt;
&lt;td&gt;规定是否允许项目换行，默认值为 nowrap，即不换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flex-flow&lt;/td&gt;
&lt;td&gt;flex-direction 和 flex-wrap 的组合属性，默认值为 row_nowrap&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;justify-content&lt;/td&gt;
&lt;td&gt;定义了项目在主轴上的对齐方式，默认值为 flex-start, 即项目在主轴方向上，与主轴起始位置对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;align-items 空间&lt;/td&gt;
&lt;td&gt;定义项目在交叉轴上的对齐方式，默认值为 normal（等同于 stretch），即如果项目没有设置固定的大小，则会被拉伸填充满足义轴方向剩余的空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;align-content&lt;/td&gt;
&lt;td&gt;只适用多行的容器，定义项目在交叉轴上的对齐方式，默认值为 normal （等同于 stretch），即交叉轴方向剩余的空间平均分配到每一行，并且行的高度会拉伸，填满整行的空间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;项目的常用属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;order&lt;/th&gt;
&lt;th&gt;定义项目的排列顺序，按从小到大排列，默认值为 0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;flex-grow&lt;/td&gt;
&lt;td&gt;定义项目的放大比例，默认值为 0, 即如果存在剩余空间，该项目也不放大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flex-shrink&lt;/td&gt;
&lt;td&gt;定义项目的缩小比例，默认值为 1, 即如果空间不足，该项目将缩小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flex-basis&lt;/td&gt;
&lt;td&gt;定义在分配多余空间之前，项目占据的主轴空间，默认值为 auto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flex&lt;/td&gt;
&lt;td&gt;flex-grow、flex-shrink 和 flex-basis 的组合属性，默认值为 0 1 auto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;align-self&lt;/td&gt;
&lt;td&gt;允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto, 表示继承父元素的 align-items 属性，如果父元素没有设置 align-items 属性，则等同于 normal 和 stretch&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;flex-direction 属性用于设置主轴方向，通过设置主轴方向可以规定项目的排列方向，它有以下 4 个常用的可选值。&lt;/li&gt;
&lt;li&gt;row：默认值，主轴为从左到右的水平方向。&lt;/li&gt;
&lt;li&gt;row-reverse：主轴为从右到左的水平方向。&lt;/li&gt;
&lt;li&gt;column：主轴为从上到下的垂直方向。&lt;/li&gt;
&lt;li&gt;column-reverse：主轴为从下到上的垂直方向。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;flex-direction 属性的使用&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 1编写页面结构代码。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo1&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#2 编写页面样式代码。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.demo1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex-direction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; column&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;justify-content 属性用于设置项目在主轴方向上的对齐方式，能够分配项目之间及其周围多余的空间，它有以下 5 个常用的可选值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：默认值，表示项目对齐到主轴起点，项目间不留空隙。&lt;/li&gt;
&lt;li&gt;flex-end：项目对齐到主轴终点，项目间不留空隙。&lt;/li&gt;
&lt;li&gt;center：项目在主轴上居中排列，项目间不留空隙。主轴上第一个项目离主轴起点的距离等于最后一个项目离主轴终点的距离。&lt;/li&gt;
&lt;li&gt;space-between：两端对齐，两端的项目分别靠向容器的两端，其他项目之间的间隔相等。&lt;/li&gt;
&lt;li&gt;space-around：每个项目之间的距离相等，第一个项目离主轴起点和最后一个项目离终点的距离为中间项目间距的一半。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;justify-content 属性的使用&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 1编写页面结构代码。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#2编写页面样式代码。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.demo2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lightgrey&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;justify-content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; space-between&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;align-items 属性用于设置项目在交叉轴上的对齐方式，它有以下 6 个常用的可选值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;normal：默认值，等同于 stretch。&lt;/li&gt;
&lt;li&gt;stretch：未设置项目大小时将项目拉伸，填充满交叉轴方向剩余的空间。&lt;/li&gt;
&lt;li&gt;flex-start：项目顶部与交叉轴起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：项目底部与交叉轴终点对齐。&lt;/li&gt;
&lt;li&gt;center：项目在交叉轴的中间位置对齐。&lt;/li&gt;
&lt;li&gt;baseline：项目的第一行文字的基线对齐。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;12导航栏配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12导航栏配置&#34;&gt;#&lt;/a&gt; 12 导航栏配置&lt;/h1&gt;
&lt;p&gt;在微信小程序中，有时为了页面美观，需要更改导航栏的样式。此时可以通过页面配置文件或全局配置文件对导航栏的样式进行配置。&lt;/p&gt;
&lt;p&gt;导航栏的相关配置项:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;配置项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarTitleText&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;导航栏标题文字内容，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarBackgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;导航栏背景颜色，默认值为 #000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;navigationBarTextStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;导航栏标题颜色，仅支持 black 和 white, 默认值为 white&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在页面配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;以 pages/index/index.json 页面配置文件为例，通过 navigationBarTitleText 配置项设置导航栏标题为 “微信小程序”。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在全局配置文件中对导航栏进行配置&lt;/p&gt;
&lt;p&gt;在全局配置文件 app.json 中，通过 window 配置项可以对全局默认窗口进行配置，配置后会对所有页面都会生效，且优先级低于页面级配置。例如，将导航栏的相关配置项写在 app.json 文件的 window 配置项中作为全局配置使用。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;navigationBarTitleText&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;微信小程序&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr /&gt;
&lt;h1 id=&#34;13-标签栏配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-标签栏配置&#34;&gt;#&lt;/a&gt; 13 标签栏配置&lt;/h1&gt;
&lt;p&gt;通过标签栏可以很方便地在多个页面之间进行切换。在微信小程序的全局配置文件 app.json 中添加 tabBar 配置项即可实现标签栏配置。&lt;/p&gt;
&lt;p&gt;tabBar 配置项的属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;必填&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏上的文字默认颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;selectedColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏上的文字选中时的颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏的背景色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;borderStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;标签栏上边框的颜色，仅支持 black 和 white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;标签栏的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;position&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;标签栏的位置，仅支持 bottom（底部）和 top（顶部）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;custom&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;自定义标签栏&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt; 标签栏数量：微信小程序中的标签栏分为顶部标签栏和底部标签栏，标签数量一般在 2~5 个之间。&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 演示tabBar配置项的属性使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;tabBar&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;color&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ccc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#ff4c91&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;borderStyle&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;backgroundColor&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#fff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# list数组中的每个元素都是一个代表标签按钮的对象，通过配置该对象的属性可以对标签栏中的每个标签按钮进行配置。list数组中最少需要配置&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;个标签按钮，最多只能配置&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;个标签按钮。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;标签按钮的相关属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏上的文字默认颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;selectedColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏上的文字选中时的颜色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;borderStyle&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;标签栏上边框的颜色，仅支持 black 和 white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backgroundColor&lt;/td&gt;
&lt;td&gt;HexColor&lt;/td&gt;
&lt;td&gt;标签栏的背景色，仅支持十六进制颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;标签栏的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# tabBar配置项的属性使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/index/index&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/home.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/home-active.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;首页&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;pagePath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pages/list/list&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;iconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/contact.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;selectedIconPath&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;images/contact-active.png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;联系我们&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 需要注意的是，pages/index/index和pages/list/list这两个页面都必须在pages数组中配置并提前创建好对应的文件。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;标签栏的效果：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/rainyblue1001/image@main/img/image-20240603182710050.png&#34; alt=&#34;image-20240603182710050&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;14-vw-vh单位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-vw-vh单位&#34;&gt;#&lt;/a&gt; 14 vw、vh 单位&lt;/h1&gt;
&lt;p&gt;在使用 CSS 编写移动端的页面样式时，由于不同手机的屏幕宽高不同，屏幕适配会比较麻烦。针对这类型问题，通过视口单位可以有效解决。&lt;/p&gt;
&lt;p&gt;视口表示可视区域的大小，视口单位主要包括 vw（Viewport Width）和 vh（Viewport Height），在 CSS 中很常用。&lt;/p&gt;
&lt;p&gt;在微信小程序中也可以使用 vw 和 vh 单位。使用视口单位时，系统会将视口的宽度和高度分为 100 份，1vw 占用视口宽度的百分之一，1vh 占用视口高度的百分之一。vw、vh 是相对长度单位，永远以视口作为参考。例如，屏幕宽度为 375px，那么 1vw = 375px / 100 = 3.75px。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;15-video组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-video组件&#34;&gt;#&lt;/a&gt; 15 video 组件&lt;/h1&gt;
&lt;p&gt;微信小程序提供了 video 组件用来播放视频，video 组件的默认宽度为 300px，高度为 225px，可通过 WXSS 代码设置宽高。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;视频的资源地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;指定视频时长&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;controls&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示默认播放控件（播放 / 暂停按钮、播放进度、时间）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;danmu-list&lt;/td&gt;
&lt;td&gt;Object Array&lt;/td&gt;
&lt;td&gt;弹幕列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;danmu-btn&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否显示弹幕按钮，只在初始化时有效，不能动态变更&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable-danmu&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否展示弹幕，只在初始化时有效，不能动态变更&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoplay&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否自动播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否循环播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否静音播放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;poster&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 属性无效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindplay&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当开始 / 继续播放时触发 play 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindpause&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;当暂停播放时触发 pause 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;object-fit&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;当视频大小与 video 组件大小不一致时，调整视频的表现形式，可选值有：contain（包含）、fill（填充）、cover（覆盖），默认值为 contain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;initial-time&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定视频初始播放位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 视频在页面上循环播放&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;video src=&lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:3000/01.mp4&#34;&lt;/span&gt; loop=&lt;span class=&#34;token string&#34;&gt;&#34;true&#34;&lt;/span&gt;&gt;&amp;lt;/video&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# video组件的src属性用于设置要播放视频的资源地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# video组件的loop属性的属性值设置为true，表示循环播放视频&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr /&gt;
&lt;h1 id=&#34;16-表单组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16-表单组件&#34;&gt;#&lt;/a&gt; 16 表单组件&lt;/h1&gt;
&lt;p&gt;微信小程序中的表单组件与 HTML 中的表单类似。微信小程序在 HTML 基础上做了封装，并且增加了一些组件。表单组件通常用于用户信息的填写，以便于把用户填写的信息提交给服务器。&lt;/p&gt;
&lt;p&gt;常用的表单组件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td&gt;表单&lt;/td&gt;
&lt;td&gt;button&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checkbox-group&lt;/td&gt;
&lt;td&gt;多项选择器&lt;/td&gt;
&lt;td&gt;checkbox&lt;/td&gt;
&lt;td&gt;多选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;radio-group&lt;/td&gt;
&lt;td&gt;单项选择器&lt;/td&gt;
&lt;td&gt;radio&lt;/td&gt;
&lt;td&gt;单选项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;textarea&lt;/td&gt;
&lt;td&gt;多行输入框&lt;/td&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入框&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;form 组件&lt;/p&gt;
&lt;p&gt;form 组件表示表单容器，没有任何样式，需要配合其他表单组件一起使用，用于提交用户输入的信息和选择的选项。&lt;/p&gt;
&lt;p&gt;form 组件内部可以包含若干个供用户输入或选择的表单组件，允许提交的表单组件为 switch、input、 checkbox、slider、radio 和 picker 组件。表单中携带数据的组件（如输入框）必须带有 name 属性值，否则无法识别提交的内容。&lt;/p&gt;
&lt;p&gt;form 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bindsubmit&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;通过携带 form 组件中的数据触发 submit 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bindreset&lt;/td&gt;
&lt;td&gt;eventhandle&lt;/td&gt;
&lt;td&gt;表单重置时会触发 reset 事件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;button 组件&lt;/p&gt;
&lt;p&gt;button 组件表示按钮，功能比 HTML 中的 button 按钮丰富。&lt;/p&gt;
&lt;p&gt;button 组件的常用属性如下表所示。&lt;/p&gt;
&lt;p&gt;button 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;按钮的大小，可选值：default、mini, 默认值为 default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;按钮的样式类型，可选值：primary、default、warn, 默认值为 default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;plain&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;按钮是否镂空，当 plain 属性值为 true 时背景色透明，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;form-type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;form-type 属性值可设为 submit、reset, 点击分别会触发 form 组件中的 submit、reset 事件，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hover-class&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定按钮点击态效果，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# button组件的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 利用button组件的type属性改变按钮的样式，type属性的可选值有3个，分别是primary（绿色）、default（白色）、warn（红色）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;普通按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;primary&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;主色调按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;warn&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;警告按钮&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 第1个为普通按钮的样式类型，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 第2个为主色调按钮的样式类型，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 第3个为警告按钮样式类型。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;input 组件&lt;/p&gt;
&lt;p&gt;input 组件与 HTML 中的 &amp;lt;input&amp;gt; 标签作用类似，都用于接收用户的输入。在微信小程序中，input 组件增加了很多属性，使 input 组件使用起来更加简单、方便。&lt;/p&gt;
&lt;p&gt;input 组件的常用属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;输入框的初始内容，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;input 的类型，默认值为 text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;confirm-type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;设置键盘右下角按钮的文字，仅在 type=&amp;quot;text&amp;quot; 时生效，可选值：send、search、next、go、done, 默认值为 done&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否是密码类型，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;placeholder&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;输入框为空时的占位符，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;placeholder-style&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定 placeholder 的样式，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;placeholder-class&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;指定 placeholder 的样式类，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;input 组件的 type 属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;可选值&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;文本输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;数字输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;idcard&lt;/td&gt;
&lt;td&gt;身份证输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;digit&lt;/td&gt;
&lt;td&gt;带小数点的数字键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;safe-password&lt;/td&gt;
&lt;td&gt;密码安全输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nickname&lt;/td&gt;
&lt;td&gt;昵称输入键盘&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# input组件的使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;number&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 设置type属性值为text，表示在微信客户端中运行的微信小程序出现文本输入键盘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 设置type属性值为number，表示在微信客户端中运行的微信小程序出现数字输入键盘&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;checkbox 和 checkbox-group 组件&lt;/p&gt;
&lt;p&gt;checkbox 组件表示多选项目，在进行多项选择时会用到。checkbox 组件一般与 checkbox-group 组件搭配使用，checkbox-group 组件表示多项选择器，内部由多个 checkbox 组件组成。建议将不同组的 checkbox 组件嵌套在不同的 checkbox-group 组件中，从而方便管理和区分。&lt;/p&gt;
&lt;p&gt;checkbox 组件的常用属性:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;checkbox 组件标识，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checked&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当前是否选中，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;颜色，默认值为 #09BB07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# checkbox和checkbox-group组件的使用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;蛋糕&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;甜甜圈&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;巧克力&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;checkbox-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;radio 和 radio-group 组件&lt;/p&gt;
&lt;p&gt;radio 组件为单选项目，是表单中常用的组件，用于在从多个选项中选出一个，选项之间是互斥关系。radio 组件一般与 radio-group 组件搭配使用，radio-group 组件表示单项选择器，内部由多个 radio 组件组成。建议将不同组的 radio 组件分别嵌套在不同的 radio-group 组件中，从而方便管理和区分。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;radio 标识，默认值为 &amp;quot;&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;checked&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;当前是否选中，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;是否禁用，默认值为 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;颜色，默认值为 #09BB07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# radio和radio-group组件&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 通过radio和radio-group组件实现性别的单项选择。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;男&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;女&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;radio-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <updated>2024-06-03T07:03:28.000Z</updated>
    </entry>
    <entry>
        <id>http://rainyblue.cn/2024/06/02/Educational/WeChat/WeChat_Program1/</id>
        <title>第一章：小程序入门</title>
        <link rel="alternate" href="http://rainyblue.cn/2024/06/02/Educational/WeChat/WeChat_Program1/"/>
        <content type="html">&lt;p&gt;小程序是一种不需要下载安装即可使用的应用，它实现了应用 “触手可及” 的概念，用户扫一扫或搜一下即可打开应用。也体现了 “用完即走” 的理念，用户不需要关心安装和卸载的问题。&lt;/p&gt;
 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;1学习目标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1学习目标&#34;&gt;#&lt;/a&gt; 1. 学习目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;了解微信小程序，能够说出微信小程序的概念、特点、发展前景和宿主环境&lt;/li&gt;
&lt;li&gt;掌握微信小程序开发账号的注册方法，能够独立完成微信小程序开发账号的注册&lt;/li&gt;
&lt;li&gt;掌握获取微信小程序 AppID 的方法，能够从微信小程序管理后台获取 AppID&lt;/li&gt;
&lt;li&gt;掌握微信开发者工具的安装方法，能够独立完成微信开发者工具的安装&lt;/li&gt;
&lt;li&gt;掌握微信小程序项目的创建方法，能够使用微信开发者工具创建项目&lt;/li&gt;
&lt;li&gt;熟悉微信小程序的项目结构，能够解释每个文件的作用&lt;/li&gt;
&lt;li&gt;熟悉微信小程序的页面组成，能够解释 WXML、WXSS、JS 和 JSON 文件的作用&lt;/li&gt;
&lt;li&gt;熟悉微信小程序的通信模型，能够解释微信小程序中渲染层、逻辑层及第三方服务器的通信方式&lt;/li&gt;
&lt;li&gt;熟悉微信开发者工具的主界面，能够说出主界面中常用快捷按钮的功能&lt;/li&gt;
&lt;li&gt;掌握微信小程序的项目设置，能够根据需要对微信小程序进行设置&lt;/li&gt;
&lt;li&gt;了解微信小程序开发常用快捷键，能够列举 4 类常用快捷键&lt;/li&gt;
&lt;li&gt;了解项目成员，能够说出项目成员的组织结构、分工和权限&lt;/li&gt;
&lt;li&gt;掌握添加项目成员和体验成员的方法，能够在微信小程序管理后台中添加项目成员和体验成员&lt;/li&gt;
&lt;li&gt;熟悉微信小程序的版本，能够说明微信小程序的 4 种版本&lt;/li&gt;
&lt;li&gt;熟悉微信小程序发布上线的流程，能够归纳出微信小程序发布上线的步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;2章节概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2章节概述&#34;&gt;#&lt;/a&gt; 2. 章节概述&lt;/h1&gt;
&lt;p&gt;微信小程序于 2017 年 1 月 9 日正式上线，凭借其&lt;span class=&#34;red&#34;&gt;开发成本低、微信用户数量&lt;/span&gt;庞大等优势，得到了许多用户的认可，同时还为许多商家提供了商机。&lt;/p&gt;
&lt;p&gt;概念：微信小程序是一种全新的连接用户与服务的应用，它可以在微信内被便捷地获取和传播，同时具有良好的用户体验。微信小程序是运行在&lt;span class=&#34;red&#34;&gt;微信&lt;/span&gt;中的应用，是一种不需要下载即可使用的应用，用户通过微信扫一扫或者搜一搜即可打开，且每个微信小程序的体积非常小。&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无须安装，直接使用，不占用存储空间&lt;/li&gt;
&lt;li&gt;用完即走，无须卸载&lt;/li&gt;
&lt;li&gt;名称唯一：不能使用相同名称&lt;/li&gt;
&lt;li&gt;入口丰富&lt;/li&gt;
&lt;li&gt;传播能力强：微信搜索、好友分享、小程序识别码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序与原生应用、HTML5 应用的区别：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;对比项&lt;/th&gt;
&lt;th&gt;微信小程序&lt;/th&gt;
&lt;th&gt;原生应用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;下载安装&lt;/td&gt;
&lt;td&gt;无需下载和安装&lt;/td&gt;
&lt;td&gt;从 iOS 和 Android 应用商店中下载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;体积大小&lt;/td&gt;
&lt;td&gt;体积小&lt;/td&gt;
&lt;td&gt;体积大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;跨平台&lt;/td&gt;
&lt;td&gt;可以跨平台&lt;/td&gt;
&lt;td&gt;不可以跨平台&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开发成本&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;推广成本&lt;/td&gt;
&lt;td&gt;较低&lt;/td&gt;
&lt;td&gt;较高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;运行环境&lt;/td&gt;
&lt;td&gt;运行在微信上&lt;/td&gt;
&lt;td&gt;运行在浏览器上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;用户体验&lt;/td&gt;
&lt;td&gt;较流畅&lt;/td&gt;
&lt;td&gt;实际上打开一个网页，流程度略差&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;接口成本&lt;/td&gt;
&lt;td&gt;可以大量应用 API&lt;/td&gt;
&lt;td&gt;可用 API 较少&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;发展前景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生态体系：微信小程序已经形成了自己的生态体系，它连接了开发者、运营者、投资者等各领域的企业，并且接入了多个第三方服务的平台。&lt;/li&gt;
&lt;li&gt;开放能力：微信小程序不断自我完善， 为开发者开放了越来越多的接口，它可以适用于大多数的用户和场景，还可以方便开发者进行深度挖掘。同时，微信为小程序提供了越来越多的开放功能，例如微信扫码、微信支付、地理定位等，这对微信小程序的发展也会起到推动作用。&lt;/li&gt;
&lt;li&gt;用户粘性：微信小程序已经积累了大量用户，用户黏性高，使其他行业与微信用户有更好的连接，能够更好地与微信结合。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;宿主环境：&lt;/p&gt;
&lt;p&gt;宿主环境（Host Environment）是指程序运行所依赖的环境。例如，iOS 系统和 Android 系统提供了两种不同的宿主环境，微信、微博等应用都需要依赖宿主环境才能运行，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145546412.png&#34; alt=&#34;image-20240603145546412&#34; /&gt;&lt;/p&gt;
&lt;p&gt;微信小程序可以跨平台，这是因为微信小程序并不是一个直接安装在 Android 系统或 iOS 系统中的应用，而是运行在微信客户端上的应用。&lt;span class=&#34;red&#34;&gt;微信客户端给微信小程序提供的环境就是微信小程序的宿主环境&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145601465.png&#34; alt=&#34;image-20240603145601465&#34; /&gt;&lt;/p&gt;
&lt;p&gt;微信小程序的宿主环境为微信小程序提供了丰富的组件和 API（Application Program Interface，应用程序接口），具体解释如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组件：用于快速搭建页面的结构。微信小程序的组件包括视图容器、基础内容、表单、导航、媒体、地图、画布、开放能力等。&lt;/li&gt;
&lt;li&gt;API：用于让开发者方便地调用微信提供的功能，例如获取用户信息、微信登录、微信支付等。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;3微信小程序开发前准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3微信小程序开发前准备&#34;&gt;#&lt;/a&gt; 3. 微信小程序开发前准备&lt;/h1&gt;
&lt;p&gt;①注册微信小程序开发账号&lt;/p&gt;
&lt;p&gt;②获取微信小程序 AppID&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录微信小程序管理后台&lt;/li&gt;
&lt;li&gt;在左侧边栏中选择 “开发管理”&lt;/li&gt;
&lt;li&gt;选择 “开发设置”&lt;/li&gt;
&lt;li&gt;查看并复制 AppID&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在微信小程序中，AppID 又称为小程序 ID，是每个小程序的唯一标识，每个小程序账号只有一个 AppID，因此每个账号只能发布一个小程序，如果要发布多个小程序，需要注册多个小程序账号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;③安装微信开发者工具&lt;/p&gt;
&lt;p&gt;④创建微信小程序项目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在微信小程序项目的创建界面中，读者可以自定义项目名称和目录，如填写项目名称为 “HELLO”，目录为 “D:\miniprogram\hello”。关于 AppID、开发模式、后端服务和模板选择的具体解释如下：
&lt;ul&gt;
&lt;li&gt;AppID：填写 1.2.2 小节获取的 AppID 即可。如果不想使用自己的 AppID，也可以使用测试号，二者的区别是，前者能够使用的功能比后者多，例如代码的上传和发布。&lt;/li&gt;
&lt;li&gt;开发模式：有 “小程序” 和 “插件” 两种选择，由于我们要创建一个微信小程序项目，所以此处应选择 “小程序”。&lt;/li&gt;
&lt;li&gt;后端服务：有 “微信云开发” 和 “不使用云服务” 两种选择。在 “微信云开发” 中 ，开发者无须搭建服务器，即可使用云函数、云数据库、云存储以及微信云托管等完整云端能力。&lt;/li&gt;
&lt;li&gt;模板选择：微信开发者工具提供了多种模板用于快速创建微信小程序项目。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;4微信小程序开发基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4微信小程序开发基础&#34;&gt;#&lt;/a&gt; 4. 微信小程序开发基础&lt;/h1&gt;
&lt;p&gt;微信小程序项目创建完成后，微信开发者工具会自动创建微信小程序的项目结构&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145645322.png&#34; alt=&#34;image-20240603145645322&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pages：用于存放微信小程序的所有页面。&lt;/li&gt;
&lt;li&gt;eslintrc.js：用于格式化代码，使代码风格保持一致。&lt;/li&gt;
&lt;li&gt;app.js：微信小程序的入口文件，用于描述微信小程序的整体逻辑。&lt;/li&gt;
&lt;li&gt;app.json：微信小程序的全局配置文件，用于设置页面路径、窗口外观、页面表现、标签栏等。&lt;/li&gt;
&lt;li&gt;app.wxss：微信小程序的全局样式文件，文件可以为空。&lt;/li&gt;
&lt;li&gt;project.config.json：在微信开发者工具上做的任何配置都会写入这个文件中，当重新安装工具或者更换计算机工作时，只要栽入同一个项目的代码包，微信开发者工具会根据该文件自动恢复成开发微信小程序时的个性化配置。&lt;/li&gt;
&lt;li&gt;project.private.config.json：用于保存微信开发者工具的私人配置，配置的优先级高于 project.config.json。&lt;/li&gt;
&lt;li&gt;sitemap.json：用于配置微信小程序及其页面是否允许被微信索引，如果没有该文件， 则默认为所有页面都允许被索引。微信现已开放微信小程序页面的搜索，也就是说微信小程序里面的内容也能被微信搜索引擎搜索到。 当开发者允许微信小程序页面被微信索引时，微信会通过爬虫的形式，为微信小程序的页面建立索引。 当用户的搜索词条触发该索引时，微信小程序的链接地址将可能展示在搜索结果中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在微信客户端中启动微信小程序的步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把整个微信小程序的代码包下载到本地。&lt;/li&gt;
&lt;li&gt;解析 app.json 全局配置文件，通过该文件解析出微信小程序的所有页面路径。&lt;/li&gt;
&lt;li&gt;执行 app.js 入口文件，调用 App () 函数创建微信小程序的实例。&lt;/li&gt;
&lt;li&gt;渲染微信小程序的首页。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;页面组成：&lt;/p&gt;
&lt;p&gt;一个微信小程序是由一个或多个页面组成的，这些页面被存放在 pages 目录中。下面以 pages 目录下的 index 页面为例展示其组成部分，index 页面的组成部分如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145704124.png&#34; alt=&#34;image-20240603145704124&#34; /&gt;&lt;/p&gt;
&lt;p&gt;index 页面由 4 个文件组成，分别是 index.js、index.json、index.wxml 和 index.wxss&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS：类似网页制作中的 JavaScript 语言，用于实现页面逻辑和交互，文件扩展名为.js。需要注意的是，微信小程序中的 JS 不含 DOM 和 BOM，但它提供了丰富的 API，可以实现许多特殊的功能，例如微信登录、音频播放、文件上传等。&lt;/li&gt;
&lt;li&gt;JSON（JavaScript Object Notation，JavaScript 对象符号）：用于利用 JSON 语法对页面进行配置，文件扩展名为.json。&lt;/li&gt;
&lt;li&gt;WXML（WeiXin Markup Language，微信标记语言）：类似于网页制作中的 HTML 语言，用于构建页面结构，文件扩展名为.wxml。&lt;/li&gt;
&lt;li&gt;WXSS（WeiXin Style Sheets，微信样式表）：类似于网页制作中的 CSS 语言，用于设置页面样式，文件扩展名为.wxss。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信客户端在加载微信小程序页面时的步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取并解析页面中 JSON 文件的配置。&lt;/li&gt;
&lt;li&gt;加载页面的 WXML 文件、WXSS 文件和 JS 文件，实现页面渲染。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中，页面中 WXSS 文件的样式会覆盖项目根目录下的 app.wxss 文件中相同的全局样式；页面中 JS 文件的 Page () 函数会被调用，用于创建页面实例。&lt;/p&gt;
&lt;p&gt;微信小程序的通信模型&lt;/p&gt;
&lt;p&gt;微信小程序实现了渲染层、逻辑层和第三方服务器的通信：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WXML 和 WXSS 工作在渲染层，用于实现页面的渲染。&lt;/li&gt;
&lt;li&gt;JS 工作在逻辑层，用于实现页面的逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序的通信模型分为两个部分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 部分是渲染层与逻辑层之间的通信，即将逻辑层的数据渲染到页面中&lt;/li&gt;
&lt;li&gt;第 2 部分是逻辑层和第三方服务器之间的通信，即通过向第三方服务器发送请求，得到需要的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145720170.png&#34; alt=&#34;image-20240603145720170&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Native 表示微信客户端的底层，渲染层与逻辑层之间的通信和逻辑层与第三方服务器之间的通信都由微信客户端的底层进行转发。&lt;/p&gt;
&lt;h1 id=&#34;5微信开发者工具的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5微信开发者工具的使用&#34;&gt;#&lt;/a&gt; 5. 微信开发者工具的使用&lt;/h1&gt;
&lt;p&gt;菜单栏：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目：用于新建项目、导入项目、打开最近项目、查看所有项目或关闭当前项目等。&lt;/li&gt;
&lt;li&gt;文件：用于新建文件、全部保存或关闭编辑器等。&lt;/li&gt;
&lt;li&gt;编辑：用于编辑代码，查看编辑相关的操作和快捷键，对代码进行格式化。&lt;/li&gt;
&lt;li&gt;工具：用于项目的编译、刷新、清除缓存等。&lt;/li&gt;
&lt;li&gt;转到：用于切换编辑器、快速定位到行、查看问题等。&lt;/li&gt;
&lt;li&gt;选择：用于全选、光标的移动等。&lt;/li&gt;
&lt;li&gt;视图：用于微信开发者工具可视区的控制。&lt;/li&gt;
&lt;li&gt;界面：用于控制主界面中工具栏、模拟器、编辑器、目录树和调试器的显示与隐藏。&lt;/li&gt;
&lt;li&gt;设置：用于通用设置、外观设置、快捷键设置、编辑器设置、代理设置、安全设置、扩展设置和项目设置。&lt;/li&gt;
&lt;li&gt;帮助：用于工具的反馈和开发文档的查看等。&lt;/li&gt;
&lt;li&gt;微信开发者工具：用于账号切换、更换开发模式、检查更新、调试、退出等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工具栏：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;个人中心：工具栏最左侧的第 1 个按钮，显示当前登录用户的头像，单击头像后会显示用户名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模拟器、编辑器和调试器：用于控制模拟器、编辑器和调试器的显示与隐藏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可视化：用于代码的可视化编辑，开发者可以通过拖曳等方式对界面进行快速布局与修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;云开发：开发者可以使用云开发来开发微信小程序、小游戏，无须搭建服务器，即可使用云端能力。云开发能力从基础库 2.2.3 开始支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模式切换下拉菜单：用于在小程序模式和插件模式之间进行切换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译下拉菜单：用于切换编译模式，默认为普通编译，可以添加其他编译。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译：编写完微信小程序的代码后， 需要经过编译才能运行。默认情况下，直接按 Ctrl+S 快捷键保存代码文件，微信开发者工具就会自动编译运行该代码。 若想手动编译， 则单击 “编译” 按钮即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预览：单击 “预览” 按钮会生成一个二维码，使用微信扫描二维码，即可在微信中预览小程序的实际运行效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;真机调试：可以实现直接利用开发者工具，通过网络连接对手机上运行的微信小程序进行调试，帮助开发者更好地定位和查找在手机上出现的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;清缓存：用于清除模拟器缓存、编译缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传：用于将代码上传到微信小程序管理后台，可以在 “开发管理” 中查看上传的版本，将代码提交审核。需要注意的是，如果在创建项目时使用的是测试号，则不会显示 “上传” 按钮。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;版本管理：用于通过 Git 对小程序进行版本管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;详情：用于查看和修改微信小程序的基本信息、本地设置和项目配置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消息：用于显示消息通知。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模拟器：&lt;/p&gt;
&lt;p&gt;模拟器可以模拟微信小程序在微信客户端的运行效果。微信小程序的代码通过编译后可以在模拟器上直接运行。开发者可以选择不同的设备，也可以添加自定义设备来调试小程序在不同尺寸机型上的适配问题。&lt;/p&gt;
&lt;p&gt;编辑器：&lt;/p&gt;
&lt;p&gt;编辑器分为左右两栏，左栏为目录树，主要用于展示当前微信小程序项目的目录结构；右栏为代码编辑区，用于编写文件中的代码。在左栏中单击某个文件，就可以在右栏中对该文件进行编辑，也可以在左栏中通过双击打开多个文件，这些文件会在右栏中显示&lt;/p&gt;
&lt;p&gt;调试器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wxml：Wxml 面板，用于查看和调试 WXML 和 WXSS。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Console：控制台面板，用于输出调试信息，也可以直接编写代码执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sources：源代码面板，用于显示当前项目的脚本文件，在该面板中开发者看到的文件是经过处理之后的脚本文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Network：网络面板，用于记录网络请求和响应信息，根据它可以进行网络性能优化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AppData：App 数据面板，用于查看或编辑当前微信小程序运行时的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Storage：存储面板，用于查看和管理本地数据缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sensor：传感器面板，用于模拟地理位置、重力感应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security：安全面板，用于调试页面的安全和认证等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trace: 跟踪面板， 用于真机调试时跟踪调试信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序的项目设置&lt;/p&gt;
&lt;p&gt;在微信开发者工具中，可以对微信小程序的项目进行设置，主要包含以下 4 个方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本信息的设置&lt;/li&gt;
&lt;li&gt;性能分析&lt;/li&gt;
&lt;li&gt;本地设置&lt;/li&gt;
&lt;li&gt;项目配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目设置 —— 基本信息的设置&lt;/p&gt;
&lt;p&gt;在微信开发者工具中，选择菜单栏的 “设置”，然后选择 “项目设置”，将会弹出一个用于项目设置的选项卡，单击 “基本信息” 项，即可对项目的基本信息进行设置，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145752610.png&#34; alt=&#34;image-20240603145752610&#34; /&gt;&lt;/p&gt;
&lt;p&gt;项目设置 —— 性能分析&lt;/p&gt;
&lt;p&gt;单击 “性能分析”，即可查看项目的线上数据和本地情况，供开发者有针对性地进行优化，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145808181.png&#34; alt=&#34;image-20240603145808181&#34; /&gt;&lt;/p&gt;
&lt;p&gt;项目设置 —— 本地设置&lt;/p&gt;
&lt;p&gt;单击 “本地设置”，即可对项目进行本地设置，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145816962.png&#34; alt=&#34;image-20240603145816962&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;调试基础库：选择基础库的版本，用于在对应版本的微信客户端上运行。高版本的基础库无法兼容低版本的微信客户端。版本号后边的百分比表示该版本的用户占比。本书中使用的基础库的版本为 2.25.2。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 JS 编译成 ES5：选中该项后，JS 代码的语法将转换为 ES5。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传代码时样式自动补全：选中该项后，在预览、真机调试、上传时文件中的样式将自动补全，需要注意的是，勾选此项会增大代码包的体积。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传代码时自动压缩样式文件、上传代码时自动压缩脚本文件和上传代码时自动压缩 WXML 文件：选中对应选项后，在预览、真机调试、上传时文件中的样式文件、脚本文件、WXML 文件将自动压缩。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传时进行代码保护：选中该项后，微信开发者工具会尝试对项目代码进行保护。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书：正式发布的微信小程序的网络请求需要校验这些信息，在开发过程中可以选中该项，开发工具将不校验这些信息，从而有助于开发者在开发过程中更方便地完成调试工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启用自定义处理命令：选中该项后，微信开发者工具在编译前、预览前、上传前这三个时机调用开发者自定义的命令，开发者可以对代码进行一些预处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目设置 —— 项目配置&lt;/p&gt;
&lt;p&gt;单击 “项目配置”，即可查看项目的域名信息和高级配置，如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145832542.png&#34; alt=&#34;image-20240603145832542&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域名信息：用于显示项目的安全域名信息。&lt;/li&gt;
&lt;li&gt;高级配置：用于显示代码包的大小、Tabbar 的个数等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用快捷键&lt;/p&gt;
&lt;p&gt;快捷键 —— 编辑相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分类&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;项目&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+N&lt;/td&gt;
&lt;td&gt;新建项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;项目&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+W&lt;/td&gt;
&lt;td&gt;关闭当前项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+N&lt;/td&gt;
&lt;td&gt;新建文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+S&lt;/td&gt;
&lt;td&gt;保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Ctrl+W&lt;/td&gt;
&lt;td&gt;关闭当前文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+S&lt;/td&gt;
&lt;td&gt;全部保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+[&lt;/td&gt;
&lt;td&gt;代码左缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+]&lt;/td&gt;
&lt;td&gt;代码右缩进&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Alt+Shift+F&lt;/td&gt;
&lt;td&gt;格式化代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+[&lt;/td&gt;
&lt;td&gt;折叠代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码格式调整&lt;/td&gt;
&lt;td&gt;Ctr1+Shift+]&lt;/td&gt;
&lt;td&gt;展开代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt + ↑&lt;/td&gt;
&lt;td&gt;代码向上移动一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt + ↓&lt;/td&gt;
&lt;td&gt;代码向下移动一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt+Shift + ↑&lt;/td&gt;
&lt;td&gt;复制并向上粘贴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Alt+Shift + ↓&lt;/td&gt;
&lt;td&gt;复制并向下粘贴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Ctrl+C&lt;/td&gt;
&lt;td&gt;复制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代码移动、复制、粘贴&lt;/td&gt;
&lt;td&gt;Ctrl+V&lt;/td&gt;
&lt;td&gt;粘贴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;注释&lt;/td&gt;
&lt;td&gt;Ctrl+/&lt;/td&gt;
&lt;td&gt;注释或取消注释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件跳转&lt;/td&gt;
&lt;td&gt;Ctrl+P&lt;/td&gt;
&lt;td&gt;跳转到文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件跳转&lt;/td&gt;
&lt;td&gt;Ctrl+E&lt;/td&gt;
&lt;td&gt;跳转到最近文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Ctrl+End&lt;/td&gt;
&lt;td&gt;移动到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Ctrl+Home&lt;/td&gt;
&lt;td&gt;移动到文件开头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Shift+End&lt;/td&gt;
&lt;td&gt;移动到行星&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Shift+Home&lt;/td&gt;
&lt;td&gt;移动到行首&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;光标移动&lt;/td&gt;
&lt;td&gt;Ctrl+U&lt;/td&gt;
&lt;td&gt;光标回退&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+F&lt;/td&gt;
&lt;td&gt;在当前文件中查找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+H&lt;/td&gt;
&lt;td&gt;在当前文件中替换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+F&lt;/td&gt;
&lt;td&gt;全局查找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;搜索、替换&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+H&lt;/td&gt;
&lt;td&gt;全局替换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;快捷键 —— 工具相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+B&lt;/td&gt;
&lt;td&gt;编译项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+R&lt;/td&gt;
&lt;td&gt;焦点在编辑器外，编译项目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+P&lt;/td&gt;
&lt;td&gt;预览代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+U&lt;/td&gt;
&lt;td&gt;上传代码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;快捷键 —— 界面相关的快捷键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+T&lt;/td&gt;
&lt;td&gt;显示或隐藏工具栏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+D&lt;/td&gt;
&lt;td&gt;显示或隐藏模拟器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+E&lt;/td&gt;
&lt;td&gt;显示或隐藏编辑器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+M&lt;/td&gt;
&lt;td&gt;显示或隐藏目录树&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+Shift+I&lt;/td&gt;
&lt;td&gt;显示或隐藏调试器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;6微信小程序的项目成员&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6微信小程序的项目成员&#34;&gt;#&lt;/a&gt; 6. 微信小程序的项目成员&lt;/h1&gt;
&lt;p&gt;一般情况下，微信小程序中项目成员的组织结构如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145851071.png&#34; alt=&#34;image-20240603145851071&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;项目管理者负责统筹整个项目的进展和风险，把控微信小程序对外发布上线的节奏。产品组、设计组、开发组和测试组之间相互配合，协调工作，共同完成微信小程序项目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目成员：表示参与微信小程序开发、运行的成员，可登录微信小程序管理后台，包括运营者、开发者及和数据分析者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体验成员：表示参与小程序内测体验的成员，可使用体验版小程序，但不属于项目成员。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序成员管理的示意图如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://raw.githubusercontent.com/rainyblue1001/image/main/img/image-20240603145907869.png&#34; alt=&#34;image-20240603145907869&#34; /&gt;&lt;/p&gt;
&lt;p&gt;管理员可以添加或删除项目成员和体验成员，项目成员也可以添加或删除体验成员。&lt;/p&gt;
&lt;p&gt;项目成员的权限&lt;/p&gt;
&lt;p&gt;在一个微信小程序中，每个项目成员的权限各有不同，只有为每个项目成员分配了各自的权限，才能保证项目的正常进行。例如开发者有开发者权限、登录权限等，下面将介绍不同项目成员拥有的权限，具体如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;权限&lt;/th&gt;
&lt;th&gt;运营者&lt;/th&gt;
&lt;th&gt;开发者&lt;/th&gt;
&lt;th&gt;数据分析者&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;登录&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;版本发布&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据分析&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开发能力&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;修改小程序介绍&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;暂停 / 恢复服务&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设置可被搜索&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解除关联移动应用&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;解除关联公众号&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;管理体验者&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;体验者权限&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;微信支付&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小程序插件管理&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;游戏运营管理&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;推广&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;接下来对项目成员的各种权限进行解释说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;登录：可登录小程序管理后台，无须管理员确认。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;版本发布：小程序版本发布、回退。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据分析：使用小程序统计模块查看小程序数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开发能力：可使用微信开发者工具和开发版小程序进行开发；在开发模块可使用开发管理、微信开发者工具和云开发等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改小程序介绍：修改小程序在主页展示的功能介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂停 / 恢复服务：暂停或恢复小程序线上服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置可被搜索：设置小程序是否可被用户主动搜索。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解除关联移动应用：可解绑小程序已关联的移动应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解除关联公众号：可解绑小程序已关联的公众号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管理体验者：添加或删除小程序体验者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体验者权限：使用体验版小程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微信支付：使用小程序微信支付（虚拟支付）模块。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小程序插件管理：运营者可进行小程序插件开发管理、申请管理和设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;游戏运营管理：可使用小游戏管理后台的素材管理、游戏圈管理等功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推广：在推广模块使用小程序流量主、广告主等功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序的上线发布流程&lt;/p&gt;
&lt;p&gt;一个微信小程序从开发完到发布上线，一般分为以下 3 个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上传代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打开微信小程序，在微信开发者工具的工具栏中单击 “上传” 按钮，页面中弹出提示框，根据提示填写相应的信息，然后单击 “上传” 按钮，即可上传代码。&lt;/p&gt;
&lt;p&gt;登录微信小程序管理后台，在左侧边栏中单击 “版本管理”，即可进入版本管理页面，查看开发版本，即可查看刚才提交上传的版本。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;提交审核&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;单击 “提交审核” 按钮，根据页面提示信息进行操作，即可提交已上传的版本并进行审核。&lt;/p&gt;
&lt;p&gt;提交审核后在审核版本中会出现正在审核的版本，审核需要一定时间，PPT 中不再演示。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;发布&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;审核通过后审核版本中将显示 “发布” 按钮，单击该按钮，即可完成微信小程序的发布。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;7习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7习题&#34;&gt;#&lt;/a&gt; 7. 习题&lt;/h1&gt;
&lt;h2 id=&#34;一-填空题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-填空题&#34;&gt;#&lt;/a&gt; 一、 填空题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;微信小程序是运行在  &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;微信&lt;/span&gt;  之上的应用。&lt;/li&gt;
&lt;li&gt;微信小程序开发完成后需要通过 “上传” 按钮将代码上传到  &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;小程序管理后台&lt;/span&gt;  。&lt;/li&gt;
&lt;li&gt;微信小程序项目中的  &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;app.json&lt;/span&gt;  文件是全局配置文件。&lt;/li&gt;
&lt;li&gt;微信开发者工具中用于保存文件的快捷键是 &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;ctrl +s&lt;/span&gt;  。&lt;/li&gt;
&lt;li&gt;在微信小程序中，每个页面由 4 个文件组成，分别是 &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;WXML&lt;/span&gt; 文件、 &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;WXSS&lt;/span&gt; 文件、&lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;JSON&lt;/span&gt; 文件和 &lt;span class=&#34;spoiler&#34; title=&#34;你知道得太多了&#34;&gt;JS&lt;/span&gt; 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二-判断题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-判断题&#34;&gt;#&lt;/a&gt; 二、 判断题&lt;/h2&gt;
&lt;ol&gt;
&lt;li class=&#34;quiz true&#34;&gt;在微信小程序中，AppID 是每个小程序的唯一标识，每个小程序账号只有一个 AppID。&lt;/li&gt;
&lt;li class=&#34;quiz true&#34;&gt;微信小程序项目中 app.js 文件是全局样式文件。&lt;/li&gt;
&lt;li class=&#34;quiz true&#34;&gt;通常称微信客户端为微信小程序提供的环境为微信小程序的宿主环境。&lt;/li&gt;
&lt;li class=&#34;quiz true&#34;&gt;微信小程序具有无须安装、触手可及、用完即走、无须卸载等特点。&lt;/li&gt;
&lt;li class=&#34;quiz true&#34;&gt;项目成员表示参与微信小程序开发、运行的成员。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三-选择题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-选择题&#34;&gt;#&lt;/a&gt; 三、 选择题&lt;/h2&gt;
&lt;ol class=&#34;options&#34;&gt;
&lt;li class=&#34;quiz&#34;&gt;
&lt;p&gt;下列选项中，关于微信小程序说法错误的是（ ）{.gap} 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微信小程序是运行在微信之中应用&lt;/li&gt;
&lt;li&gt;微信小程序的体积非常小&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;微信小程序不可以跨平台&lt;/li&gt;
&lt;li&gt;通过 “扫一扫” 或 “搜一搜” 即可打开对应的微信小程序&lt;/li&gt;
&lt;li class=&#34;options&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz options&#34;&gt;
&lt;p&gt;下列选项中，不属于微信小程序特点的是（ ）{.gap} 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无须安装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无须卸载&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;
&lt;p&gt;体积大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;入口丰富&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz options&#34;&gt;
&lt;p&gt;下列选项中，用于在微信开发者工具中输出调试信息的面板是（ ）{.gap} 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wxml&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;
&lt;p&gt;Console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Network&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz options&#34;&gt;
&lt;p&gt;下列选项中，关于微信小程序项目目录结构说法错误的是（ ）{.gap} 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pages 目录用于存放所有微信小程序的页面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;app.wxss 文件定义了微信小程序项目的全局样式&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;
&lt;p&gt;sitemap.json 文件是微信小程序项目的全局配置文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;app.js 文件是微信小程序项目的入口文件&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz&#34;&gt;
&lt;p&gt;下列选项中，关于微信开发者工具说法错误的是（ ）{.gap} 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;工具栏 “预览” 按钮用于在微信中进行预览&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;菜单栏中 “文件” 项的主要作用是新建文件、保存文件或关闭文件等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模拟器可以模拟小程序在微信客户端的运行效果&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;
&lt;p&gt;编辑器中只能打开一个文件&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;四-简答题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-简答题&#34;&gt;#&lt;/a&gt; 四、 简答题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;请简述微信小程序的特点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信小程序具有无须安装、触手可及、用完即走、无须卸载的特点。用户在使用微信小程序时无须安装，直接使用，不占用存储空间；在使用微信小程序后，可以用完即走，无须卸载。除此之外，微信小程序还具有名称唯一、入口丰富和传播能力强等特点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请简述微信小程序项目的创建过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）首次打开微信开发者工具时，会出现一个登录界面，在登录界面中，可以使用微信扫码登录微信开发者工具，微信开发者工具将使用这个微信账号的信息进行微信小程序的开发和调试。&lt;/p&gt;
&lt;p&gt;（2）使用微信扫码登录成功后会进入微信开发者工具的项目选择界面，单击 “+” 进入微信小程序项目的创建页面。将微信小程序项目的创建页面中项目名称、目录、AppID、开发模式、后端服务和模板选择等内容填写完成后，单击 “确定” 按钮创建微信小程序项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="学习类" scheme="http://rainyblue.cn/categories/Educational/" />
        <category term="微信小程序开发" scheme="http://rainyblue.cn/categories/Educational/WeChat/" />
        <category term="微信小程序" scheme="http://rainyblue.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/" />
        <updated>2024-06-02T06:09:27.000Z</updated>
    </entry>
</feed>
